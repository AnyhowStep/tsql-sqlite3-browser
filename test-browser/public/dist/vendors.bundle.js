(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["vendors"],{

/***/ "../tsql/node_modules/type-mapping/dist/accessor-util/index.js":
/*!*********************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/accessor-util/index.js ***!
  \*********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function isAccessorDescriptor(descriptor) {
    if (descriptor == null) {
        return false;
    }
    return (descriptor.hasOwnProperty("get") &&
        descriptor.hasOwnProperty("set") &&
        descriptor.hasOwnProperty("configurable") &&
        descriptor.hasOwnProperty("enumerable") &&
        (typeof descriptor.get == "function" ||
            typeof descriptor.get == "undefined") &&
        (typeof descriptor.set == "function" ||
            typeof descriptor.set == "undefined") &&
        typeof descriptor.configurable == "boolean" &&
        typeof descriptor.enumerable == "boolean");
}
exports.isAccessorDescriptor = isAccessorDescriptor;
var BUILT_IN_PROTOTYPES = [
    Object.prototype,
    Date.prototype,
];
function isBuiltInPrototype(obj) {
    return BUILT_IN_PROTOTYPES.indexOf(obj) >= 0;
}
function getOwnAccessors(obj) {
    var arr = Object.getOwnPropertyNames(obj);
    var result = [];
    for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {
        var k = arr_1[_i];
        var descriptor = Object.getOwnPropertyDescriptor(obj, k);
        if (isAccessorDescriptor(descriptor)) {
            result.push({
                name: k,
                descriptor: descriptor,
            });
        }
    }
    return result;
}
exports.getOwnAccessors = getOwnAccessors;
function getAllAccessors(obj) {
    var result = [];
    while (!isBuiltInPrototype(obj)) {
        result.push.apply(result, getOwnAccessors(obj));
        obj = Object.getPrototypeOf(obj);
    }
    return result;
}
exports.getAllAccessors = getAllAccessors;
function getAccessor(obj, name) {
    if (isBuiltInPrototype(obj)) {
        return undefined;
    }
    var potentialResult = Object.getOwnPropertyDescriptor(obj, name);
    if (potentialResult == undefined || !isAccessorDescriptor(potentialResult)) {
        return getAccessor(Object.getPrototypeOf(obj), name);
    }
    return potentialResult;
}
exports.getAccessor = getAccessor;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/array-buffer-util/equals.js":
/*!**************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/array-buffer-util/equals.js ***!
  \**************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
//https://stackoverflow.com/questions/21553528/how-to-test-for-equality-in-arraybuffer-dataview-and-typedarray
function dataViewsAreEqual(a, b) {
    if (a.byteLength !== b.byteLength) {
        return false;
    }
    for (var i = 0; i < a.byteLength; ++i) {
        if (a.getUint8(i) !== b.getUint8(i)) {
            return false;
        }
    }
    return true;
}
/**
 * Allows you to compare,
 * + `Buffer` to `Buffer`
 * + `Uint8Array` to `Uint8Array`
 * + `Buffer` to `Uint8Array`
 * + `Uint8Array` to `Buffer`
 */
function equals(a, b) {
    return dataViewsAreEqual(new DataView(a.buffer, a.byteOffset, a.byteLength), new DataView(b.buffer, b.byteOffset, b.byteLength));
}
exports.equals = equals;
//# sourceMappingURL=equals.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/array-buffer-util/index.js":
/*!*************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/array-buffer-util/index.js ***!
  \*************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./equals */ "../tsql/node_modules/type-mapping/dist/array-buffer-util/equals.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/array-util/array-fill.js":
/*!***********************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/array-util/array-fill.js ***!
  \***********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
    Replaces all elements of `arr` with `value`
*/
function arrayFill(arr, value) {
    for (var i = 0; i < arr.length; ++i) {
        arr[i] = value;
    }
    return arr;
}
exports.arrayFill = arrayFill;
//# sourceMappingURL=array-fill.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/array-util/index.js":
/*!******************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/array-util/index.js ***!
  \******************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./array-fill */ "../tsql/node_modules/type-mapping/dist/array-util/array-fill.js"));
__export(__webpack_require__(/*! ./remove-duplicate-elements */ "../tsql/node_modules/type-mapping/dist/array-util/remove-duplicate-elements.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/array-util/remove-duplicate-elements.js":
/*!**************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/array-util/remove-duplicate-elements.js ***!
  \**************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
/**
 * Removes duplicates from `arr`.
 * Preserves the order of elements.
 *
 * A "duplicate" is an element that is `===` to another element
 * with a lower index in `arr`.
 *
 * Given the following,
 * ```ts
 * [1,2,1]
 * ```
 * The first `1` is **NOT** a duplicate.
 * The second `1` is a duplicate.
 *
 * @param arr
 */
function removeDuplicateElements(arr) {
    var result = [];
    var _loop_1 = function (element) {
        if (result.some(function (r) { return type_util_1.strictEqual(r, element); })) {
            return "continue";
        }
        result.push(element);
    };
    for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {
        var element = arr_1[_i];
        _loop_1(element);
    }
    return result;
}
exports.removeDuplicateElements = removeDuplicateElements;
//# sourceMappingURL=remove-duplicate-elements.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/bigint-util/arithmetic.js":
/*!************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/bigint-util/arithmetic.js ***!
  \************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var jsbi_1 = __webpack_require__(/*! ./jsbi */ "../tsql/node_modules/type-mapping/dist/bigint-util/jsbi.js");
function add(a, b) {
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    if (type_util_1.isBigIntNativelySupported()) {
        if (typeof a == "number") {
            if (typeof b == "number") {
                return BigInt(a) + BigInt(b);
            }
            else {
                return BigInt(a) + b;
            }
        }
        else {
            if (typeof b == "number") {
                return a + BigInt(b);
            }
            else {
                return a + b;
            }
        }
    }
    var result = jsbi_1.JSBI.add(jsbi_1.JSBI.BigInt(a.toString()), jsbi_1.JSBI.BigInt(b.toString()));
    return BigInt(result.toString());
}
exports.add = add;
function addMany(a, b) {
    var rest = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        rest[_i - 2] = arguments[_i];
    }
    var result = add(a, b);
    for (var _a = 0, rest_1 = rest; _a < rest_1.length; _a++) {
        var ele = rest_1[_a];
        result = add(result, ele);
    }
    return result;
}
exports.addMany = addMany;
function sub(a, b) {
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    if (type_util_1.isBigIntNativelySupported()) {
        if (typeof a == "number") {
            if (typeof b == "number") {
                return BigInt(a) - BigInt(b);
            }
            else {
                return BigInt(a) - b;
            }
        }
        else {
            if (typeof b == "number") {
                return a - BigInt(b);
            }
            else {
                return a - b;
            }
        }
    }
    var result = jsbi_1.JSBI.subtract(jsbi_1.JSBI.BigInt(a.toString()), jsbi_1.JSBI.BigInt(b.toString()));
    return BigInt(result.toString());
}
exports.sub = sub;
function mul(a, b) {
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    if (type_util_1.isBigIntNativelySupported()) {
        if (typeof a == "number") {
            if (typeof b == "number") {
                return BigInt(a) * BigInt(b);
            }
            else {
                return BigInt(a) * b;
            }
        }
        else {
            if (typeof b == "number") {
                return a * BigInt(b);
            }
            else {
                return a * b;
            }
        }
    }
    var result = jsbi_1.JSBI.multiply(jsbi_1.JSBI.BigInt(a.toString()), jsbi_1.JSBI.BigInt(b.toString()));
    return BigInt(result.toString());
}
exports.mul = mul;
function div(a, b) {
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    if (type_util_1.isBigIntNativelySupported()) {
        if (typeof a == "number") {
            if (typeof b == "number") {
                return BigInt(a) / BigInt(b);
            }
            else {
                return BigInt(a) / b;
            }
        }
        else {
            if (typeof b == "number") {
                return a / BigInt(b);
            }
            else {
                return a / b;
            }
        }
    }
    var result = jsbi_1.JSBI.divide(jsbi_1.JSBI.BigInt(a.toString()), jsbi_1.JSBI.BigInt(b.toString()));
    return BigInt(result.toString());
}
exports.div = div;
function mod(a, b) {
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    if (type_util_1.isBigIntNativelySupported()) {
        if (typeof a == "number") {
            if (typeof b == "number") {
                return BigInt(a) % BigInt(b);
            }
            else {
                return BigInt(a) % b;
            }
        }
        else {
            if (typeof b == "number") {
                return a % BigInt(b);
            }
            else {
                return a % b;
            }
        }
    }
    var result = jsbi_1.JSBI.remainder(jsbi_1.JSBI.BigInt(a.toString()), jsbi_1.JSBI.BigInt(b.toString()));
    return BigInt(result.toString());
}
exports.mod = mod;
//# sourceMappingURL=arithmetic.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/bigint-util/as-int-n.js":
/*!**********************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/bigint-util/as-int-n.js ***!
  \**********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var jsbi_1 = __webpack_require__(/*! ./jsbi */ "../tsql/node_modules/type-mapping/dist/bigint-util/jsbi.js");
function asIntN(n, x) {
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    return BigInt(jsbi_1.JSBI.asIntN(n, jsbi_1.JSBI.BigInt(x.toString())).toString());
}
exports.asIntN = asIntN;
//# sourceMappingURL=as-int-n.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/bigint-util/as-uint-n.js":
/*!***********************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/bigint-util/as-uint-n.js ***!
  \***********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var jsbi_1 = __webpack_require__(/*! ./jsbi */ "../tsql/node_modules/type-mapping/dist/bigint-util/jsbi.js");
function asUintN(n, x) {
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    return BigInt(jsbi_1.JSBI.asUintN(n, jsbi_1.JSBI.BigInt(x.toString())).toString());
}
exports.asUintN = asUintN;
//# sourceMappingURL=as-uint-n.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/bigint-util/bitwise-operation.js":
/*!*******************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/bigint-util/bitwise-operation.js ***!
  \*******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var jsbi_1 = __webpack_require__(/*! ./jsbi */ "../tsql/node_modules/type-mapping/dist/bigint-util/jsbi.js");
function leftShift(a, b) {
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    if (type_util_1.isBigIntNativelySupported()) {
        if (typeof a == "number") {
            if (typeof b == "number") {
                return BigInt(a) << BigInt(b);
            }
            else {
                return BigInt(a) << b;
            }
        }
        else {
            if (typeof b == "number") {
                return a << BigInt(b);
            }
            else {
                return a << b;
            }
        }
    }
    var result = jsbi_1.JSBI.leftShift(jsbi_1.JSBI.BigInt(a.toString()), jsbi_1.JSBI.BigInt(b.toString()));
    return BigInt(result.toString());
}
exports.leftShift = leftShift;
function signedRightShift(a, b) {
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    if (type_util_1.isBigIntNativelySupported()) {
        if (typeof a == "number") {
            if (typeof b == "number") {
                return BigInt(a) >> BigInt(b);
            }
            else {
                return BigInt(a) >> b;
            }
        }
        else {
            if (typeof b == "number") {
                return a >> BigInt(b);
            }
            else {
                return a >> b;
            }
        }
    }
    var result = jsbi_1.JSBI.signedRightShift(jsbi_1.JSBI.BigInt(a.toString()), jsbi_1.JSBI.BigInt(b.toString()));
    return BigInt(result.toString());
}
exports.signedRightShift = signedRightShift;
function bitwiseAnd(a, b) {
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    if (type_util_1.isBigIntNativelySupported()) {
        if (typeof a == "number") {
            if (typeof b == "number") {
                return BigInt(a) & BigInt(b);
            }
            else {
                return BigInt(a) & b;
            }
        }
        else {
            if (typeof b == "number") {
                return a & BigInt(b);
            }
            else {
                return a & b;
            }
        }
    }
    var result = jsbi_1.JSBI.bitwiseAnd(jsbi_1.JSBI.BigInt(a.toString()), jsbi_1.JSBI.BigInt(b.toString()));
    return BigInt(result.toString());
}
exports.bitwiseAnd = bitwiseAnd;
function bitwiseOr(a, b) {
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    if (type_util_1.isBigIntNativelySupported()) {
        if (typeof a == "number") {
            if (typeof b == "number") {
                return BigInt(a) | BigInt(b);
            }
            else {
                return BigInt(a) | b;
            }
        }
        else {
            if (typeof b == "number") {
                return a | BigInt(b);
            }
            else {
                return a | b;
            }
        }
    }
    var result = jsbi_1.JSBI.bitwiseOr(jsbi_1.JSBI.BigInt(a.toString()), jsbi_1.JSBI.BigInt(b.toString()));
    return BigInt(result.toString());
}
exports.bitwiseOr = bitwiseOr;
function bitwiseXor(a, b) {
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    if (type_util_1.isBigIntNativelySupported()) {
        if (typeof a == "number") {
            if (typeof b == "number") {
                return BigInt(a) ^ BigInt(b);
            }
            else {
                return BigInt(a) ^ b;
            }
        }
        else {
            if (typeof b == "number") {
                return a ^ BigInt(b);
            }
            else {
                return a ^ b;
            }
        }
    }
    var result = jsbi_1.JSBI.bitwiseXor(jsbi_1.JSBI.BigInt(a.toString()), jsbi_1.JSBI.BigInt(b.toString()));
    return BigInt(result.toString());
}
exports.bitwiseXor = bitwiseXor;
function bitwiseNot(a) {
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    if (type_util_1.isBigIntNativelySupported()) {
        if (typeof a == "number") {
            return ~BigInt(a);
        }
        else {
            return ~a;
        }
    }
    var result = jsbi_1.JSBI.bitwiseNot(jsbi_1.JSBI.BigInt(a.toString()));
    return BigInt(result.toString());
}
exports.bitwiseNot = bitwiseNot;
//# sourceMappingURL=bitwise-operation.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/bigint-util/comparison.js":
/*!************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/bigint-util/comparison.js ***!
  \************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var jsbi_1 = __webpack_require__(/*! ./jsbi */ "../tsql/node_modules/type-mapping/dist/bigint-util/jsbi.js");
/**
    Assumes BigInt.toString() is implemented correctly.

    Assummes we won't get strings like,

    + "-0000"
    + "-qwerty"
    + "123.123"
*/
function compare(a, b) {
    if (type_util_1.isBigIntNativelySupported()) {
        return ((typeof a == "number" && isNaN(a)) ?
            NaN :
            (typeof b == "number" && isNaN(b)) ?
                NaN :
                a < b ?
                    -1 :
                    a > b ?
                        1 :
                        0);
    }
    if (typeof a == "number") {
        if (typeof b == "number") {
            return a - b;
        }
        else {
            var cmp = jsbi_1.JSBI.__compareToNumber(jsbi_1.JSBI.BigInt(b.toString()), a);
            return -cmp;
        }
    }
    else {
        if (typeof b == "number") {
            var cmp = jsbi_1.JSBI.__compareToNumber(jsbi_1.JSBI.BigInt(a.toString()), b);
            return cmp;
        }
        else {
            return jsbi_1.JSBI.__compareToBigInt(jsbi_1.JSBI.BigInt(a.toString()), jsbi_1.JSBI.BigInt(b.toString()));
        }
    }
}
exports.compare = compare;
function lessThan(a, b) {
    return compare(a, b) < 0;
}
exports.lessThan = lessThan;
function greaterThan(a, b) {
    return compare(a, b) > 0;
}
exports.greaterThan = greaterThan;
function equal(a, b) {
    return compare(a, b) == 0;
}
exports.equal = equal;
function lessThanOrEqual(a, b) {
    return compare(a, b) <= 0;
}
exports.lessThanOrEqual = lessThanOrEqual;
function greaterThanOrEqual(a, b) {
    return compare(a, b) >= 0;
}
exports.greaterThanOrEqual = greaterThanOrEqual;
function subOneImpl(str) {
    if (str[0] == "-") {
        var result = addOneImpl(str.substr(1));
        return "-" + result;
    }
    if (str == "0") {
        return "-1";
    }
    var digits = str
        .split("")
        .map(function (s) { return parseInt(s); });
    for (var i = digits.length - 1; i >= 0; --i) {
        var d = digits[i];
        if (d == 0) {
            digits[i] = 9;
        }
        else {
            if (i == 0 && digits[i] == 1) {
                digits.shift();
            }
            else {
                digits[i] = d - 1;
            }
            break;
        }
    }
    if (digits.length == 0) {
        return "0";
    }
    else {
        return digits.join("");
    }
}
exports.subOneImpl = subOneImpl;
function addOneImpl(str) {
    jsbi_1.JSBI.__absoluteAddOne;
    if (str[0] == "-") {
        var result = subOneImpl(str.substr(1));
        if (result == "0") {
            return result;
        }
        else {
            return "-" + result;
        }
    }
    var digits = str
        .split("")
        .map(function (s) { return parseInt(s); });
    var carry = true;
    for (var i = digits.length - 1; i >= 0; --i) {
        var d = digits[i];
        if (d == 9) {
            digits[i] = 0;
        }
        else {
            digits[i] = d + 1;
            carry = false;
            break;
        }
    }
    if (carry) {
        digits.unshift(1);
    }
    return digits.join("");
}
exports.addOneImpl = addOneImpl;
//# sourceMappingURL=comparison.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/bigint-util/index.js":
/*!*******************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/bigint-util/index.js ***!
  \*******************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./arithmetic */ "../tsql/node_modules/type-mapping/dist/bigint-util/arithmetic.js"));
__export(__webpack_require__(/*! ./as-int-n */ "../tsql/node_modules/type-mapping/dist/bigint-util/as-int-n.js"));
__export(__webpack_require__(/*! ./as-uint-n */ "../tsql/node_modules/type-mapping/dist/bigint-util/as-uint-n.js"));
__export(__webpack_require__(/*! ./bitwise-operation */ "../tsql/node_modules/type-mapping/dist/bigint-util/bitwise-operation.js"));
__export(__webpack_require__(/*! ./comparison */ "../tsql/node_modules/type-mapping/dist/bigint-util/comparison.js"));
__export(__webpack_require__(/*! ./to-number */ "../tsql/node_modules/type-mapping/dist/bigint-util/to-number.js"));
__export(__webpack_require__(/*! ./to-string */ "../tsql/node_modules/type-mapping/dist/bigint-util/to-string.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/bigint-util/jsbi.js":
/*!******************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/bigint-util/jsbi.js ***!
  \******************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32#Polyfill
 */
function clz32(x) {
    // Let n be ToUint32(x).
    // Let p be the number of leading zero bits in
    // the 32-bit binary representation of n.
    // Return p.
    var asUint = x >>> 0;
    if (asUint === 0) {
        return 32;
    }
    return 31 - (Math.log(asUint) / Math.LN2 | 0) | 0; // the "| 0" acts like math.floor
}
/**
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul#Polyfill
 */
function imul(a, b) {
    var aHi = (a >>> 16) & 0xffff;
    var aLo = a & 0xffff;
    var bHi = (b >>> 16) & 0xffff;
    var bLo = b & 0xffff;
    // the shift by 0 fixes the sign on the high part
    // the final |0 converts the unsigned value into a signed value
    return ((aLo * bLo) + (((aHi * bLo + aLo * bHi) << 16) >>> 0) | 0);
}
if (Math.clz32 == undefined) {
    Math.clz32 = clz32;
}
if (Math.imul == undefined) {
    Math.imul = imul;
}
if (Symbol == undefined) {
    Symbol = {};
}
/**
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf
 */
/**
*** Object.appendChain(@object, @prototype)
*
* Appends the first non-native prototype of a chain to a new prototype.
* Returns @object (if it was a primitive value it will transformed into an object).
*
*** Object.appendChain(@object [, "@arg_name_1", "@arg_name_2", "@arg_name_3", "..."], "@function_body")
*** Object.appendChain(@object [, "@arg_name_1, @arg_name_2, @arg_name_3, ..."], "@function_body")
*
* Appends the first non-native prototype of a chain to the native Function.prototype object, then appends a
* new Function(["@arg"(s)], "@function_body") to that chain.
* Returns the function.
*
**/
Object.appendChain = function (oChain, oProto) {
    if (arguments.length < 2) {
        throw new TypeError('Object.appendChain - Not enough arguments');
    }
    if (typeof oProto !== 'object' && typeof oProto !== 'string') {
        throw new TypeError('second argument to Object.appendChain must be an object or a string');
    }
    var oNewProto = oProto;
    var oReturn = oChain instanceof this ? oChain : new oChain.constructor(oChain);
    var o2nd = oReturn;
    var oLast = oReturn;
    for (var o1st = this.getPrototypeOf(o2nd); o1st !== Object.prototype && o1st !== Function.prototype; o1st = this.getPrototypeOf(o2nd)) {
        o2nd = o1st;
    }
    if (oProto.constructor === String) {
        oNewProto = Function.prototype;
        oReturn = Function.apply(null, Array.prototype.slice.call(arguments, 1));
        this.setPrototypeOf(oReturn, oLast);
    }
    this.setPrototypeOf(o2nd, oNewProto);
    return oReturn;
};
// Copyright 2018 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the “License”);
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// <https://apache.org/licenses/LICENSE-2.0>.
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an “AS IS” BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * https://github.com/GoogleChromeLabs/jsbi
 */
var JSBI = /** @class */ (function (_super) {
    __extends(JSBI, _super);
    function JSBI(length, sign) {
        var _this = this;
        if (length > JSBI.__kMaxLength) {
            throw new RangeError('Maximum BigInt size exceeded');
        }
        _this = _super.call(this, length) || this;
        _this.sign = sign;
        Object.setPrototypeOf(_this, JSBI.prototype);
        return _this;
    }
    JSBI.BigInt = function (arg) {
        if (typeof arg === 'number') {
            if (arg === 0)
                return JSBI.__zero();
            if ((arg | 0) === arg) {
                if (arg < 0) {
                    return JSBI.__oneDigit(-arg, true);
                }
                return JSBI.__oneDigit(arg, false);
            }
            if (!isFinite(arg) || Math.floor(arg) !== arg) {
                throw new RangeError('The number ' + arg + ' cannot be converted to ' +
                    'BigInt because it is not an integer');
            }
            return JSBI.__fromDouble(arg);
        }
        else if (typeof arg === 'string') {
            var result = JSBI.__fromString(arg);
            if (result === null) {
                throw new SyntaxError('Cannot convert ' + arg + ' to a BigInt');
            }
            return result;
        }
        else if (typeof arg === 'boolean') {
            if (arg === true) {
                return JSBI.__oneDigit(1, false);
            }
            return JSBI.__zero();
        }
        else if (typeof arg === 'object') {
            if (arg.constructor === JSBI)
                return arg;
            var primitive = JSBI.__toPrimitive(arg);
            return JSBI.BigInt(primitive);
        }
        throw new TypeError('Cannot convert ' + arg + ' to a BigInt');
    };
    JSBI.prototype.toDebugString = function () {
        var result = ['BigInt['];
        for (var _i = 0, _a = this; _i < _a.length; _i++) {
            var digit = _a[_i];
            result.push((digit ? (digit >>> 0).toString(16) : digit) + ', ');
        }
        result.push(']');
        return result.join('');
    };
    JSBI.prototype.toString = function (radix) {
        if (radix === void 0) { radix = 10; }
        if (radix < 2 || radix > 36) {
            throw new RangeError('toString() radix argument must be between 2 and 36');
        }
        if (this.length === 0)
            return '0';
        if ((radix & (radix - 1)) === 0) {
            return JSBI.__toStringBasePowerOfTwo(this, radix);
        }
        return JSBI.__toStringGeneric(this, radix, false);
    };
    // Equivalent of "Number(my_bigint)" in the native implementation.
    JSBI.toNumber = function (x) {
        var xLength = x.length;
        if (xLength === 0)
            return 0;
        if (xLength === 1) {
            var value = x.__unsignedDigit(0);
            return x.sign ? -value : value;
        }
        var xMsd = x.__digit(xLength - 1);
        var msdLeadingZeros = Math.clz32(xMsd);
        var xBitLength = xLength * 32 - msdLeadingZeros;
        if (xBitLength > 1024)
            return x.sign ? -Infinity : Infinity;
        var exponent = xBitLength - 1;
        var currentDigit = xMsd;
        var digitIndex = xLength - 1;
        var shift = msdLeadingZeros + 1;
        var mantissaHigh = (shift === 32) ? 0 : currentDigit << shift;
        mantissaHigh >>>= 12;
        var mantissaHighBitsUnset = shift - 12;
        var mantissaLow = (shift >= 12) ? 0 : (currentDigit << (20 + shift));
        var mantissaLowBitsUnset = 20 + shift;
        if (mantissaHighBitsUnset > 0 && digitIndex > 0) {
            digitIndex--;
            currentDigit = x.__digit(digitIndex);
            mantissaHigh |= (currentDigit >>> (32 - mantissaHighBitsUnset));
            mantissaLow = currentDigit << mantissaHighBitsUnset;
            mantissaLowBitsUnset = mantissaHighBitsUnset;
        }
        if (mantissaLowBitsUnset > 0 && digitIndex > 0) {
            digitIndex--;
            currentDigit = x.__digit(digitIndex);
            mantissaLow |= (currentDigit >>> (32 - mantissaLowBitsUnset));
            mantissaLowBitsUnset -= 32;
        }
        var rounding = JSBI.__decideRounding(x, mantissaLowBitsUnset, digitIndex, currentDigit);
        if (rounding === 1 || (rounding === 0 && (mantissaLow & 1) === 1)) {
            mantissaLow = (mantissaLow + 1) >>> 0;
            if (mantissaLow === 0) {
                // Incrementing mantissaLow overflowed.
                mantissaHigh++;
                if ((mantissaHigh >>> 20) !== 0) {
                    // Incrementing mantissaHigh overflowed.
                    mantissaHigh = 0;
                    exponent++;
                    if (exponent > 1023) {
                        // Incrementing the exponent overflowed.
                        return x.sign ? -Infinity : Infinity;
                    }
                }
            }
        }
        var signBit = x.sign ? (1 << 31) : 0;
        exponent = (exponent + 0x3FF) << 20;
        JSBI.__kBitConversionInts[1] = signBit | exponent | mantissaHigh;
        JSBI.__kBitConversionInts[0] = mantissaLow;
        return JSBI.__kBitConversionDouble[0];
    };
    // Operations.
    JSBI.unaryMinus = function (x) {
        if (x.length === 0)
            return x;
        var result = x.__copy();
        result.sign = !x.sign;
        return result;
    };
    JSBI.bitwiseNot = function (x) {
        if (x.sign) {
            // ~(-x) == ~(~(x-1)) == x-1
            return JSBI.__absoluteSubOne(x).__trim();
        }
        // ~x == -x-1 == -(x+1)
        return JSBI.__absoluteAddOne(x, true);
    };
    JSBI.exponentiate = function (x, y) {
        if (y.sign) {
            throw new RangeError('Exponent must be positive');
        }
        if (y.length === 0) {
            return JSBI.__oneDigit(1, false);
        }
        if (x.length === 0)
            return x;
        if (x.length === 1 && x.__digit(0) === 1) {
            // (-1) ** even_number == 1.
            if (x.sign && (y.__digit(0) & 1) === 0) {
                return JSBI.unaryMinus(x);
            }
            // (-1) ** odd_number == -1, 1 ** anything == 1.
            return x;
        }
        // For all bases >= 2, very large exponents would lead to unrepresentable
        // results.
        if (y.length > 1)
            throw new RangeError('BigInt too big');
        var expValue = y.__unsignedDigit(0);
        if (expValue === 1)
            return x;
        if (expValue >= JSBI.__kMaxLengthBits) {
            throw new RangeError('BigInt too big');
        }
        if (x.length === 1 && x.__digit(0) === 2) {
            // Fast path for 2^n.
            var neededDigits = 1 + (expValue >>> 5);
            var sign = x.sign && ((expValue & 1) !== 0);
            var result_1 = new JSBI(neededDigits, sign);
            result_1.__initializeDigits();
            // All bits are zero. Now set the n-th bit.
            var msd = 1 << (expValue & 31);
            result_1.__setDigit(neededDigits - 1, msd);
            return result_1;
        }
        var result = null;
        var runningSquare = x;
        // This implicitly sets the result's sign correctly.
        if ((expValue & 1) !== 0)
            result = x;
        expValue >>= 1;
        for (; expValue !== 0; expValue >>= 1) {
            runningSquare = JSBI.multiply(runningSquare, runningSquare);
            if ((expValue & 1) !== 0) {
                if (result === null) {
                    result = runningSquare;
                }
                else {
                    result = JSBI.multiply(result, runningSquare);
                }
            }
        }
        if (result == null) {
            throw new Error("Could not exponentiate");
        }
        return result;
    };
    JSBI.multiply = function (x, y) {
        if (x.length === 0)
            return x;
        if (y.length === 0)
            return y;
        var resultLength = x.length + y.length;
        if (x.__clzmsd() + y.__clzmsd() >= 32) {
            resultLength--;
        }
        var result = new JSBI(resultLength, x.sign !== y.sign);
        result.__initializeDigits();
        for (var i = 0; i < x.length; i++) {
            JSBI.__multiplyAccumulate(y, x.__digit(i), result, i);
        }
        return result.__trim();
    };
    JSBI.divide = function (x, y) {
        if (y.length === 0)
            throw new RangeError('Division by zero');
        if (JSBI.__absoluteCompare(x, y) < 0)
            return JSBI.__zero();
        var resultSign = x.sign !== y.sign;
        var divisor = y.__unsignedDigit(0);
        var quotient;
        if (y.length === 1 && divisor <= 0xFFFF) {
            if (divisor === 1) {
                return resultSign === x.sign ? x : JSBI.unaryMinus(x);
            }
            quotient = JSBI.__absoluteDivSmall(x, divisor, null);
        }
        else {
            quotient = JSBI.__absoluteDivLarge(x, y, true, false);
        }
        quotient.sign = resultSign;
        return quotient.__trim();
    };
    JSBI.remainder = function (x, y) {
        if (y.length === 0)
            throw new RangeError('Division by zero');
        if (JSBI.__absoluteCompare(x, y) < 0)
            return x;
        var divisor = y.__unsignedDigit(0);
        if (y.length === 1 && divisor <= 0xFFFF) {
            if (divisor === 1)
                return JSBI.__zero();
            var remainderDigit = JSBI.__absoluteModSmall(x, divisor);
            if (remainderDigit === 0)
                return JSBI.__zero();
            return JSBI.__oneDigit(remainderDigit, x.sign);
        }
        var remainder = JSBI.__absoluteDivLarge(x, y, false, true);
        remainder.sign = x.sign;
        return remainder.__trim();
    };
    JSBI.add = function (x, y) {
        var sign = x.sign;
        if (sign === y.sign) {
            // x + y == x + y
            // -x + -y == -(x + y)
            return JSBI.__absoluteAdd(x, y, sign);
        }
        // x + -y == x - y == -(y - x)
        // -x + y == y - x == -(x - y)
        if (JSBI.__absoluteCompare(x, y) >= 0) {
            return JSBI.__absoluteSub(x, y, sign);
        }
        return JSBI.__absoluteSub(y, x, !sign);
    };
    JSBI.subtract = function (x, y) {
        var sign = x.sign;
        if (sign !== y.sign) {
            // x - (-y) == x + y
            // (-x) - y == -(x + y)
            return JSBI.__absoluteAdd(x, y, sign);
        }
        // x - y == -(y - x)
        // (-x) - (-y) == y - x == -(x - y)
        if (JSBI.__absoluteCompare(x, y) >= 0) {
            return JSBI.__absoluteSub(x, y, sign);
        }
        return JSBI.__absoluteSub(y, x, !sign);
    };
    JSBI.leftShift = function (x, y) {
        if (y.length === 0 || x.length === 0)
            return x;
        if (y.sign)
            return JSBI.__rightShiftByAbsolute(x, y);
        return JSBI.__leftShiftByAbsolute(x, y);
    };
    JSBI.signedRightShift = function (x, y) {
        if (y.length === 0 || x.length === 0)
            return x;
        if (y.sign)
            return JSBI.__leftShiftByAbsolute(x, y);
        return JSBI.__rightShiftByAbsolute(x, y);
    };
    JSBI.unsignedRightShift = function () {
        throw new TypeError('BigInts have no unsigned right shift; use >> instead');
    };
    JSBI.lessThan = function (x, y) {
        return JSBI.__compareToBigInt(x, y) < 0;
    };
    JSBI.lessThanOrEqual = function (x, y) {
        return JSBI.__compareToBigInt(x, y) <= 0;
    };
    JSBI.greaterThan = function (x, y) {
        return JSBI.__compareToBigInt(x, y) > 0;
    };
    JSBI.greaterThanOrEqual = function (x, y) {
        return JSBI.__compareToBigInt(x, y) >= 0;
    };
    JSBI.equal = function (x, y) {
        if (x.sign !== y.sign)
            return false;
        if (x.length !== y.length)
            return false;
        for (var i = 0; i < x.length; i++) {
            if (x.__digit(i) !== y.__digit(i))
                return false;
        }
        return true;
    };
    JSBI.notEqual = function (x, y) {
        return !JSBI.equal(x, y);
    };
    JSBI.bitwiseAnd = function (x, y) {
        var _a;
        if (!x.sign && !y.sign) {
            return JSBI.__absoluteAnd(x, y).__trim();
        }
        else if (x.sign && y.sign) {
            var resultLength = Math.max(x.length, y.length) + 1;
            // (-x) & (-y) == ~(x-1) & ~(y-1) == ~((x-1) | (y-1))
            // == -(((x-1) | (y-1)) + 1)
            var result = JSBI.__absoluteSubOne(x, resultLength);
            var y1 = JSBI.__absoluteSubOne(y);
            result = JSBI.__absoluteOr(result, y1, result);
            return JSBI.__absoluteAddOne(result, true, result).__trim();
        }
        // Assume that x is the positive BigInt.
        if (x.sign) {
            _a = [y, x], x = _a[0], y = _a[1];
        }
        // x & (-y) == x & ~(y-1) == x &~ (y-1)
        return JSBI.__absoluteAndNot(x, JSBI.__absoluteSubOne(y)).__trim();
    };
    JSBI.bitwiseXor = function (x, y) {
        var _a;
        if (!x.sign && !y.sign) {
            return JSBI.__absoluteXor(x, y).__trim();
        }
        else if (x.sign && y.sign) {
            // (-x) ^ (-y) == ~(x-1) ^ ~(y-1) == (x-1) ^ (y-1)
            var resultLength_1 = Math.max(x.length, y.length);
            var result_2 = JSBI.__absoluteSubOne(x, resultLength_1);
            var y1 = JSBI.__absoluteSubOne(y);
            return JSBI.__absoluteXor(result_2, y1, result_2).__trim();
        }
        var resultLength = Math.max(x.length, y.length) + 1;
        // Assume that x is the positive BigInt.
        if (x.sign) {
            _a = [y, x], x = _a[0], y = _a[1];
        }
        // x ^ (-y) == x ^ ~(y-1) == ~(x ^ (y-1)) == -((x ^ (y-1)) + 1)
        var result = JSBI.__absoluteSubOne(y, resultLength);
        result = JSBI.__absoluteXor(result, x, result);
        return JSBI.__absoluteAddOne(result, true, result).__trim();
    };
    JSBI.bitwiseOr = function (x, y) {
        var _a;
        var resultLength = Math.max(x.length, y.length);
        if (!x.sign && !y.sign) {
            return JSBI.__absoluteOr(x, y).__trim();
        }
        else if (x.sign && y.sign) {
            // (-x) | (-y) == ~(x-1) | ~(y-1) == ~((x-1) & (y-1))
            // == -(((x-1) & (y-1)) + 1)
            var result_3 = JSBI.__absoluteSubOne(x, resultLength);
            var y1 = JSBI.__absoluteSubOne(y);
            result_3 = JSBI.__absoluteAnd(result_3, y1, result_3);
            return JSBI.__absoluteAddOne(result_3, true, result_3).__trim();
        }
        // Assume that x is the positive BigInt.
        if (x.sign) {
            _a = [y, x], x = _a[0], y = _a[1];
        }
        // x | (-y) == x | ~(y-1) == ~((y-1) &~ x) == -(((y-1) ~& x) + 1)
        var result = JSBI.__absoluteSubOne(y, resultLength);
        result = JSBI.__absoluteAndNot(result, x, result);
        return JSBI.__absoluteAddOne(result, true, result).__trim();
    };
    JSBI.asIntN = function (n, x) {
        if (x.length === 0)
            return x;
        if (n === 0)
            return JSBI.__zero();
        // If {x} has less than {n} bits, return it directly.
        if (n >= JSBI.__kMaxLengthBits)
            return x;
        var neededLength = (n + 31) >>> 5;
        if (x.length < neededLength)
            return x;
        var topDigit = x.__unsignedDigit(neededLength - 1);
        var compareDigit = 1 << ((n - 1) & 31);
        if (x.length === neededLength && topDigit < compareDigit)
            return x;
        // Otherwise truncate and simulate two's complement.
        var hasBit = (topDigit & compareDigit) === compareDigit;
        if (!hasBit)
            return JSBI.__truncateToNBits(n, x);
        if (!x.sign)
            return JSBI.__truncateAndSubFromPowerOfTwo(n, x, true);
        if ((topDigit & (compareDigit - 1)) === 0) {
            for (var i = neededLength - 2; i >= 0; i--) {
                if (x.__digit(i) !== 0) {
                    return JSBI.__truncateAndSubFromPowerOfTwo(n, x, false);
                }
            }
            if (x.length === neededLength && topDigit === compareDigit)
                return x;
            return JSBI.__truncateToNBits(n, x);
        }
        return JSBI.__truncateAndSubFromPowerOfTwo(n, x, false);
    };
    JSBI.asUintN = function (n, x) {
        if (x.length === 0)
            return x;
        if (n === 0)
            return JSBI.__zero();
        // If {x} is negative, simulate two's complement representation.
        if (x.sign) {
            if (n > JSBI.__kMaxLengthBits) {
                throw new RangeError('BigInt too big');
            }
            return JSBI.__truncateAndSubFromPowerOfTwo(n, x, false);
        }
        // If {x} is positive and has up to {n} bits, return it directly.
        if (n >= JSBI.__kMaxLengthBits)
            return x;
        var neededLength = (n + 31) >>> 5;
        if (x.length < neededLength)
            return x;
        var bitsInTopDigit = n & 31;
        if (x.length == neededLength) {
            if (bitsInTopDigit === 0)
                return x;
            var topDigit = x.__digit(neededLength - 1);
            if ((topDigit >>> bitsInTopDigit) === 0)
                return x;
        }
        // Otherwise, truncate.
        return JSBI.__truncateToNBits(n, x);
    };
    // Operators.
    JSBI.ADD = function (x, y) {
        x = JSBI.__toPrimitive(x);
        y = JSBI.__toPrimitive(y);
        if (typeof x === 'string') {
            if (typeof y !== 'string')
                y = y.toString();
            return x + y;
        }
        if (typeof y === 'string') {
            return x.toString() + y;
        }
        x = JSBI.__toNumeric(x);
        y = JSBI.__toNumeric(y);
        if (JSBI.__isBigInt(x) && JSBI.__isBigInt(y)) {
            return JSBI.add(x, y);
        }
        if (typeof x === 'number' && typeof y === 'number') {
            return x + y;
        }
        throw new TypeError('Cannot mix BigInt and other types, use explicit conversions');
    };
    JSBI.LT = function (x, y) {
        return JSBI.__compare(x, y, 0);
    };
    JSBI.LE = function (x, y) {
        return JSBI.__compare(x, y, 1);
    };
    JSBI.GT = function (x, y) {
        return JSBI.__compare(x, y, 2);
    };
    JSBI.GE = function (x, y) {
        return JSBI.__compare(x, y, 3);
    };
    JSBI.EQ = function (x, y) {
        while (true) {
            if (JSBI.__isBigInt(x)) {
                if (JSBI.__isBigInt(y))
                    return JSBI.equal(x, y);
                return JSBI.EQ(y, x);
            }
            else if (typeof x === 'number') {
                if (JSBI.__isBigInt(y))
                    return JSBI.__equalToNumber(y, x);
                if (typeof y !== 'object')
                    return x == y;
                y = JSBI.__toPrimitive(y);
            }
            else if (typeof x === 'string') {
                if (JSBI.__isBigInt(y)) {
                    x = JSBI.__fromString(x);
                    if (x === null)
                        return false;
                    return JSBI.equal(x, y);
                }
                if (typeof y !== 'object')
                    return x == y;
                y = JSBI.__toPrimitive(y);
            }
            else if (typeof x === 'boolean') {
                if (JSBI.__isBigInt(y))
                    return JSBI.__equalToNumber(y, +x);
                if (typeof y !== 'object')
                    return x == y;
                y = JSBI.__toPrimitive(y);
            }
            else if (typeof x === 'symbol') {
                if (JSBI.__isBigInt(y))
                    return false;
                if (typeof y !== 'object')
                    return x == y;
                y = JSBI.__toPrimitive(y);
            }
            else if (typeof x === 'object') {
                if (typeof y === 'object' && y.constructor !== JSBI)
                    return x == y;
                x = JSBI.__toPrimitive(x);
            }
            else {
                return x == y;
            }
        }
    };
    JSBI.NE = function (x, y) {
        return !JSBI.EQ(x, y);
    };
    // Helpers.
    JSBI.__zero = function () {
        return new JSBI(0, false);
    };
    JSBI.__oneDigit = function (value, sign) {
        var result = new JSBI(1, sign);
        result.__setDigit(0, value);
        return result;
    };
    JSBI.prototype.__copy = function () {
        var result = new JSBI(this.length, this.sign);
        for (var i = 0; i < this.length; i++) {
            result[i] = this[i];
        }
        return result;
    };
    JSBI.prototype.__trim = function () {
        var newLength = this.length;
        var last = this[newLength - 1];
        while (last === 0) {
            newLength--;
            last = this[newLength - 1];
            this.pop();
        }
        if (newLength === 0)
            this.sign = false;
        return this;
    };
    JSBI.prototype.__initializeDigits = function () {
        for (var i = 0; i < this.length; i++) {
            this[i] = 0;
        }
    };
    JSBI.__decideRounding = function (x, mantissaBitsUnset, digitIndex, currentDigit) {
        if (mantissaBitsUnset > 0)
            return -1;
        var topUnconsumedBit;
        if (mantissaBitsUnset < 0) {
            topUnconsumedBit = -mantissaBitsUnset - 1;
        }
        else {
            // {currentDigit} fit the mantissa exactly; look at the next digit.
            if (digitIndex === 0)
                return -1;
            digitIndex--;
            currentDigit = x.__digit(digitIndex);
            topUnconsumedBit = 31;
        }
        // If the most significant remaining bit is 0, round down.
        var mask = 1 << topUnconsumedBit;
        if ((currentDigit & mask) === 0)
            return -1;
        // If any other remaining bit is set, round up.
        mask -= 1;
        if ((currentDigit & mask) !== 0)
            return 1;
        while (digitIndex > 0) {
            digitIndex--;
            if (x.__digit(digitIndex) !== 0)
                return 1;
        }
        return 0;
    };
    JSBI.__fromDouble = function (value) {
        var sign = value < 0;
        JSBI.__kBitConversionDouble[0] = value;
        var rawExponent = (JSBI.__kBitConversionInts[1] >>> 20) & 0x7FF;
        var exponent = rawExponent - 0x3FF;
        var digits = (exponent >>> 5) + 1;
        var result = new JSBI(digits, sign);
        var kHiddenBit = 0x00100000;
        var mantissaHigh = (JSBI.__kBitConversionInts[1] & 0xFFFFF) | kHiddenBit;
        var mantissaLow = JSBI.__kBitConversionInts[0];
        var kMantissaHighTopBit = 20;
        // 0-indexed position of most significant bit in most significant digit.
        var msdTopBit = exponent & 31;
        // Number of unused bits in the mantissa. We'll keep them shifted to the
        // left (i.e. most significant part).
        var remainingMantissaBits = 0;
        // Next digit under construction.
        var digit;
        // First, build the MSD by shifting the mantissa appropriately.
        if (msdTopBit < kMantissaHighTopBit) {
            var shift = kMantissaHighTopBit - msdTopBit;
            remainingMantissaBits = shift + 32;
            digit = mantissaHigh >>> shift;
            mantissaHigh = (mantissaHigh << (32 - shift)) |
                (mantissaLow >>> shift);
            mantissaLow = mantissaLow << (32 - shift);
        }
        else if (msdTopBit === kMantissaHighTopBit) {
            remainingMantissaBits = 32;
            digit = mantissaHigh;
            mantissaHigh = mantissaLow;
        }
        else {
            var shift = msdTopBit - kMantissaHighTopBit;
            remainingMantissaBits = 32 - shift;
            digit = (mantissaHigh << shift) | (mantissaLow >>> (32 - shift));
            mantissaHigh = mantissaLow << shift;
        }
        result.__setDigit(digits - 1, digit);
        // Then fill in the rest of the digits.
        for (var digitIndex = digits - 2; digitIndex >= 0; digitIndex--) {
            if (remainingMantissaBits > 0) {
                remainingMantissaBits -= 32;
                digit = mantissaHigh;
                mantissaHigh = mantissaLow;
            }
            else {
                digit = 0;
            }
            result.__setDigit(digitIndex, digit);
        }
        return result.__trim();
    };
    JSBI.__isWhitespace = function (c) {
        if (c <= 0x0D && c >= 0x09)
            return true;
        if (c <= 0x9F)
            return c === 0x20;
        if (c <= 0x01FFFF) {
            return c === 0xA0 || c === 0x1680;
        }
        if (c <= 0x02FFFF) {
            c &= 0x01FFFF;
            return c <= 0x0A || c === 0x28 || c === 0x29 || c === 0x2F ||
                c === 0x5F || c === 0x1000;
        }
        return c === 0xFEFF;
    };
    JSBI.__fromString = function (string, radix) {
        if (radix === void 0) { radix = 0; }
        var sign = 0;
        //This line was found in the source code but never used?
        var leadingZero = false;
        //This line makes the compiler think it was used.
        leadingZero;
        var length = string.length;
        var cursor = 0;
        if (cursor === length)
            return JSBI.__zero();
        var current = string.charCodeAt(cursor);
        // Skip whitespace.
        while (JSBI.__isWhitespace(current)) {
            if (++cursor === length)
                return JSBI.__zero();
            current = string.charCodeAt(cursor);
        }
        // Detect radix.
        if (current === 0x2B) { // '+'
            if (++cursor === length)
                return null;
            current = string.charCodeAt(cursor);
            sign = 1;
        }
        else if (current === 0x2D) { // '-'
            if (++cursor === length)
                return null;
            current = string.charCodeAt(cursor);
            sign = -1;
        }
        if (radix === 0) {
            radix = 10;
            if (current === 0x30) { // '0'
                if (++cursor === length)
                    return JSBI.__zero();
                current = string.charCodeAt(cursor);
                if (current === 0x58 || current === 0x78) { // 'X' or 'x'
                    radix = 16;
                    if (++cursor === length)
                        return null;
                    current = string.charCodeAt(cursor);
                }
                else if (current === 0x4F || current === 0x6F) { // 'O' or 'o'
                    radix = 8;
                    if (++cursor === length)
                        return null;
                    current = string.charCodeAt(cursor);
                }
                else if (current === 0x42 || current === 0x62) { // 'B' or 'b'
                    radix = 2;
                    if (++cursor === length)
                        return null;
                    current = string.charCodeAt(cursor);
                }
                else {
                    leadingZero = true;
                }
            }
        }
        else if (radix === 16) {
            if (current === 0x30) { // '0'
                // Allow "0x" prefix.
                if (++cursor === length)
                    return JSBI.__zero();
                current = string.charCodeAt(cursor);
                if (current === 0x58 || current === 0x78) { // 'X' or 'x'
                    if (++cursor === length)
                        return null;
                    current = string.charCodeAt(cursor);
                }
                else {
                    leadingZero = true;
                }
            }
        }
        // Skip leading zeros.
        while (current === 0x30) {
            leadingZero = true;
            if (++cursor === length)
                return JSBI.__zero();
            current = string.charCodeAt(cursor);
        }
        // Allocate result.
        var chars = length - cursor;
        var bitsPerChar = JSBI.__kMaxBitsPerChar[radix];
        var roundup = JSBI.__kBitsPerCharTableMultiplier - 1;
        if (chars > (1 << 30) / bitsPerChar)
            return null;
        var bitsMin = (bitsPerChar * chars + roundup) >>> JSBI.__kBitsPerCharTableShift;
        var resultLength = (bitsMin + 31) >>> 5;
        var result = new JSBI(resultLength, false);
        // Parse.
        var limDigit = radix < 10 ? radix : 10;
        var limAlpha = radix > 10 ? radix - 10 : 0;
        if ((radix & (radix - 1)) === 0) {
            // Power-of-two radix.
            bitsPerChar >>= JSBI.__kBitsPerCharTableShift;
            var parts = [];
            var partsBits = [];
            var done = false;
            do {
                var part = 0;
                var bits = 0;
                while (true) {
                    var d = void 0;
                    if (((current - 48) >>> 0) < limDigit) {
                        d = current - 48;
                    }
                    else if ((((current | 32) - 97) >>> 0) < limAlpha) {
                        d = (current | 32) - 87;
                    }
                    else {
                        done = true;
                        break;
                    }
                    bits += bitsPerChar;
                    part = (part << bitsPerChar) | d;
                    if (++cursor === length) {
                        done = true;
                        break;
                    }
                    current = string.charCodeAt(cursor);
                    if (bits + bitsPerChar > 32)
                        break;
                }
                parts.push(part);
                partsBits.push(bits);
            } while (!done);
            JSBI.__fillFromParts(result, parts, partsBits);
        }
        else {
            result.__initializeDigits();
            var done = false;
            var charsSoFar = 0;
            do {
                var part = 0;
                var multiplier = 1;
                while (true) {
                    var d = void 0;
                    if (((current - 48) >>> 0) < limDigit) {
                        d = current - 48;
                    }
                    else if ((((current | 32) - 97) >>> 0) < limAlpha) {
                        d = (current | 32) - 87;
                    }
                    else {
                        done = true;
                        break;
                    }
                    var m = multiplier * radix;
                    if (m > 0xFFFFFFFF)
                        break;
                    multiplier = m;
                    part = part * radix + d;
                    charsSoFar++;
                    if (++cursor === length) {
                        done = true;
                        break;
                    }
                    current = string.charCodeAt(cursor);
                }
                roundup = JSBI.__kBitsPerCharTableMultiplier * 32 - 1;
                var digitsSoFar = (bitsPerChar * charsSoFar + roundup) >>>
                    (JSBI.__kBitsPerCharTableShift + 5);
                result.__inplaceMultiplyAdd(multiplier, part, digitsSoFar);
            } while (!done);
        }
        while (cursor !== length) {
            if (!JSBI.__isWhitespace(current))
                return null;
            current = string.charCodeAt(cursor++);
        }
        // Get result.
        if (sign !== 0 && radix !== 10)
            return null;
        result.sign = (sign === -1);
        return result.__trim();
    };
    JSBI.__fillFromParts = function (result, parts, partsBits) {
        var digitIndex = 0;
        var digit = 0;
        var bitsInDigit = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
            var part = parts[i];
            var partBits = partsBits[i];
            digit |= (part << bitsInDigit);
            bitsInDigit += partBits;
            if (bitsInDigit === 32) {
                result.__setDigit(digitIndex++, digit);
                bitsInDigit = 0;
                digit = 0;
            }
            else if (bitsInDigit > 32) {
                result.__setDigit(digitIndex++, digit);
                bitsInDigit -= 32;
                digit = part >>> (partBits - bitsInDigit);
            }
        }
        if (digit !== 0) {
            if (digitIndex >= result.length)
                throw new Error('implementation bug');
            result.__setDigit(digitIndex++, digit);
        }
        for (; digitIndex < result.length; digitIndex++) {
            result.__setDigit(digitIndex, 0);
        }
    };
    JSBI.__toStringBasePowerOfTwo = function (x, radix) {
        var length = x.length;
        var bits = radix - 1;
        bits = ((bits >>> 1) & 0x55) + (bits & 0x55);
        bits = ((bits >>> 2) & 0x33) + (bits & 0x33);
        bits = ((bits >>> 4) & 0x0F) + (bits & 0x0F);
        var bitsPerChar = bits;
        var charMask = radix - 1;
        var msd = x.__digit(length - 1);
        var msdLeadingZeros = Math.clz32(msd);
        var bitLength = length * 32 - msdLeadingZeros;
        var charsRequired = ((bitLength + bitsPerChar - 1) / bitsPerChar) | 0;
        if (x.sign)
            charsRequired++;
        if (charsRequired > (1 << 28))
            throw new Error('string too long');
        var result = new Array(charsRequired);
        var pos = charsRequired - 1;
        var digit = 0;
        var availableBits = 0;
        for (var i = 0; i < length - 1; i++) {
            var newDigit = x.__digit(i);
            var current_1 = (digit | (newDigit << availableBits)) & charMask;
            result[pos--] = JSBI.__kConversionChars[current_1];
            var consumedBits = bitsPerChar - availableBits;
            digit = newDigit >>> consumedBits;
            availableBits = 32 - consumedBits;
            while (availableBits >= bitsPerChar) {
                result[pos--] = JSBI.__kConversionChars[digit & charMask];
                digit >>>= bitsPerChar;
                availableBits -= bitsPerChar;
            }
        }
        var current = (digit | (msd << availableBits)) & charMask;
        result[pos--] = JSBI.__kConversionChars[current];
        digit = msd >>> (bitsPerChar - availableBits);
        while (digit !== 0) {
            result[pos--] = JSBI.__kConversionChars[digit & charMask];
            digit >>>= bitsPerChar;
        }
        if (x.sign)
            result[pos--] = '-';
        if (pos !== -1)
            throw new Error('implementation bug');
        return result.join('');
    };
    JSBI.__toStringGeneric = function (x, radix, isRecursiveCall) {
        var length = x.length;
        if (length === 0)
            return '';
        if (length === 1) {
            var result = x.__unsignedDigit(0).toString(radix);
            if (isRecursiveCall === false && x.sign) {
                result = '-' + result;
            }
            return result;
        }
        var bitLength = length * 32 - Math.clz32(x.__digit(length - 1));
        var maxBitsPerChar = JSBI.__kMaxBitsPerChar[radix];
        var minBitsPerChar = maxBitsPerChar - 1;
        var charsRequired = bitLength * JSBI.__kBitsPerCharTableMultiplier;
        charsRequired += minBitsPerChar - 1;
        charsRequired = (charsRequired / minBitsPerChar) | 0;
        var secondHalfChars = (charsRequired + 1) >> 1;
        // Divide-and-conquer: split by a power of {radix} that's approximately
        // the square root of {x}, then recurse.
        var conqueror = JSBI.exponentiate(JSBI.__oneDigit(radix, false), JSBI.__oneDigit(secondHalfChars, false));
        var quotient;
        var secondHalf;
        var divisor = conqueror.__unsignedDigit(0);
        if (conqueror.length === 1 && divisor <= 0xFFFF) {
            quotient = new JSBI(x.length, false);
            quotient.__initializeDigits();
            var remainder = 0;
            for (var i = x.length * 2 - 1; i >= 0; i--) {
                var input = (remainder << 16) | x.__halfDigit(i);
                quotient.__setHalfDigit(i, (input / divisor) | 0);
                remainder = (input % divisor) | 0;
            }
            secondHalf = remainder.toString(radix);
        }
        else {
            var divisionResult = JSBI.__absoluteDivLarge(x, conqueror, true, true);
            quotient = divisionResult.quotient;
            var remainder = divisionResult.remainder.__trim();
            secondHalf = JSBI.__toStringGeneric(remainder, radix, true);
        }
        quotient.__trim();
        var firstHalf = JSBI.__toStringGeneric(quotient, radix, true);
        while (secondHalf.length < secondHalfChars) {
            secondHalf = '0' + secondHalf;
        }
        if (isRecursiveCall === false && x.sign) {
            firstHalf = '-' + firstHalf;
        }
        return firstHalf + secondHalf;
    };
    JSBI.__unequalSign = function (leftNegative) {
        return leftNegative ? -1 : 1;
    };
    JSBI.__absoluteGreater = function (bothNegative) {
        return bothNegative ? -1 : 1;
    };
    JSBI.__absoluteLess = function (bothNegative) {
        return bothNegative ? 1 : -1;
    };
    JSBI.__compareToBigInt = function (x, y) {
        var xSign = x.sign;
        if (xSign !== y.sign)
            return JSBI.__unequalSign(xSign);
        var result = JSBI.__absoluteCompare(x, y);
        if (result > 0)
            return JSBI.__absoluteGreater(xSign);
        if (result < 0)
            return JSBI.__absoluteLess(xSign);
        return 0;
    };
    JSBI.__compareToNumber = function (x, y) {
        /**
         * @todo Investigate this weird `0 === 0` construct
         */
        if (y | (0 === 0)) {
            var xSign = x.sign;
            var ySign = (y < 0);
            if (xSign !== ySign)
                return JSBI.__unequalSign(xSign);
            if (x.length === 0) {
                if (ySign)
                    throw new Error('implementation bug');
                return y === 0 ? 0 : -1;
            }
            // Any multi-digit BigInt is bigger than an int32.
            if (x.length > 1)
                return JSBI.__absoluteGreater(xSign);
            var yAbs = Math.abs(y);
            var xDigit = x.__unsignedDigit(0);
            if (xDigit > yAbs)
                return JSBI.__absoluteGreater(xSign);
            if (xDigit < yAbs)
                return JSBI.__absoluteLess(xSign);
            return 0;
        }
        return JSBI.__compareToDouble(x, y);
    };
    /**
     * @returns NaN|-1|1|0
     *
     * + NaN    : `y` was `NaN`
     * + -1     : `x < y`
     * + +1     : `x > y`
     * +  0     : `x == y`
     */
    JSBI.__compareToDouble = function (x, y) {
        if (y !== y)
            return y; // NaN.
        if (y === Infinity)
            return -1;
        if (y === -Infinity)
            return 1;
        var xSign = x.sign;
        var ySign = (y < 0);
        if (xSign !== ySign)
            return JSBI.__unequalSign(xSign);
        if (y === 0) {
            throw new Error('implementation bug: should be handled elsewhere');
        }
        if (x.length === 0)
            return -1;
        JSBI.__kBitConversionDouble[0] = y;
        var rawExponent = (JSBI.__kBitConversionInts[1] >>> 20) & 0x7FF;
        if (rawExponent === 0x7FF) {
            throw new Error('implementation bug: handled elsewhere');
        }
        var exponent = rawExponent - 0x3FF;
        if (exponent < 0) {
            // The absolute value of y is less than 1. Only 0n has an absolute
            // value smaller than that, but we've already covered that case.
            return JSBI.__absoluteGreater(xSign);
        }
        var xLength = x.length;
        var xMsd = x.__digit(xLength - 1);
        var msdLeadingZeros = Math.clz32(xMsd);
        var xBitLength = xLength * 32 - msdLeadingZeros;
        var yBitLength = exponent + 1;
        if (xBitLength < yBitLength)
            return JSBI.__absoluteLess(xSign);
        if (xBitLength > yBitLength)
            return JSBI.__absoluteGreater(xSign);
        // Same sign, same bit length. Shift mantissa to align with x and compare
        // bit for bit.
        var kHiddenBit = 0x00100000;
        var mantissaHigh = (JSBI.__kBitConversionInts[1] & 0xFFFFF) | kHiddenBit;
        var mantissaLow = JSBI.__kBitConversionInts[0];
        var kMantissaHighTopBit = 20;
        var msdTopBit = 31 - msdLeadingZeros;
        if (msdTopBit !== ((xBitLength - 1) % 31)) {
            throw new Error('implementation bug');
        }
        var compareMantissa; // Shifted chunk of mantissa.
        var remainingMantissaBits = 0;
        // First, compare most significant digit against beginning of mantissa.
        if (msdTopBit < kMantissaHighTopBit) {
            var shift = kMantissaHighTopBit - msdTopBit;
            remainingMantissaBits = shift + 32;
            compareMantissa = mantissaHigh >>> shift;
            mantissaHigh = (mantissaHigh << (32 - shift)) | (mantissaLow >>> shift);
            mantissaLow = mantissaLow << (32 - shift);
        }
        else if (msdTopBit === kMantissaHighTopBit) {
            remainingMantissaBits = 32;
            compareMantissa = mantissaHigh;
            mantissaHigh = mantissaLow;
        }
        else {
            var shift = msdTopBit - kMantissaHighTopBit;
            remainingMantissaBits = 32 - shift;
            compareMantissa =
                (mantissaHigh << shift) | (mantissaLow >>> (32 - shift));
            mantissaHigh = mantissaLow << shift;
        }
        xMsd = xMsd >>> 0;
        compareMantissa = compareMantissa >>> 0;
        if (xMsd > compareMantissa)
            return JSBI.__absoluteGreater(xSign);
        if (xMsd < compareMantissa)
            return JSBI.__absoluteLess(xSign);
        // Then, compare additional digits against remaining mantissa bits.
        for (var digitIndex = xLength - 2; digitIndex >= 0; digitIndex--) {
            if (remainingMantissaBits > 0) {
                remainingMantissaBits -= 32;
                compareMantissa = mantissaHigh >>> 0;
                mantissaHigh = mantissaLow;
                mantissaLow = 0;
            }
            else {
                compareMantissa = 0;
            }
            var digit = x.__unsignedDigit(digitIndex);
            if (digit > compareMantissa)
                return JSBI.__absoluteGreater(xSign);
            if (digit < compareMantissa)
                return JSBI.__absoluteLess(xSign);
        }
        // Integer parts are equal; check whether {y} has a fractional part.
        if (mantissaHigh !== 0 || mantissaLow !== 0) {
            if (remainingMantissaBits === 0)
                throw new Error('implementation bug');
            return JSBI.__absoluteLess(xSign);
        }
        return 0;
    };
    JSBI.__equalToNumber = function (x, y) {
        if (y | (0 === y)) {
            if (y === 0)
                return x.length === 0;
            // Any multi-digit BigInt is bigger than an int32.
            return (x.length === 1) && (x.sign === (y < 0)) &&
                (x.__unsignedDigit(0) === Math.abs(y));
        }
        return JSBI.__compareToDouble(x, y) === 0;
    };
    // Comparison operations, chosen such that "op ^ 2" reverses direction:
    // 0 - lessThan
    // 1 - lessThanOrEqual
    // 2 - greaterThan
    // 3 - greaterThanOrEqual
    JSBI.__comparisonResultToBool = function (result, op) {
        switch (op) {
            case 0: return result < 0;
            case 1: return result <= 0;
            case 2: return result > 0;
            case 3: return result >= 0;
        }
        throw new Error('unreachable');
    };
    JSBI.__compare = function (x, y, op) {
        x = JSBI.__toPrimitive(x);
        y = JSBI.__toPrimitive(y);
        if (typeof x === 'string' && typeof y === 'string') {
            switch (op) {
                case 0: return x < y;
                case 1: return x <= y;
                case 2: return x > y;
                case 3: return x >= y;
            }
        }
        if (JSBI.__isBigInt(x) && typeof y === 'string') {
            y = JSBI.__fromString(y);
            if (y === null)
                return false;
            return JSBI.__comparisonResultToBool(JSBI.__compareToBigInt(x, y), op);
        }
        if (typeof x === 'string' && JSBI.__isBigInt(y)) {
            x = JSBI.__fromString(x);
            if (x === null)
                return false;
            return JSBI.__comparisonResultToBool(JSBI.__compareToBigInt(x, y), op);
        }
        if (x == null || y == null) {
            throw new Error("x and y should not be null");
        }
        x = JSBI.__toNumeric(x);
        y = JSBI.__toNumeric(y);
        if (JSBI.__isBigInt(x)) {
            if (JSBI.__isBigInt(y)) {
                return JSBI.__comparisonResultToBool(JSBI.__compareToBigInt(x, y), op);
            }
            if (typeof y !== 'number')
                throw new Error('implementation bug');
            return JSBI.__comparisonResultToBool(JSBI.__compareToNumber(x, y), op);
        }
        if (typeof x !== 'number')
            throw new Error('implementation bug');
        if (JSBI.__isBigInt(y)) {
            // Note that "op ^ 2" reverses the op's direction.
            return JSBI.__comparisonResultToBool(JSBI.__compareToNumber(y, x), (op ^ 2));
        }
        if (typeof y !== 'number')
            throw new Error('implementation bug');
        switch (op) {
            case 0: return x < y;
            case 1: return x <= y;
            case 2: return x > y;
            case 3: return x >= y;
        }
    };
    JSBI.prototype.__clzmsd = function () {
        return Math.clz32(this[this.length - 1]);
    };
    JSBI.__absoluteAdd = function (x, y, resultSign) {
        if (x.length < y.length)
            return JSBI.__absoluteAdd(y, x, resultSign);
        if (x.length === 0)
            return x;
        if (y.length === 0)
            return x.sign === resultSign ? x : JSBI.unaryMinus(x);
        var resultLength = x.length;
        if (x.__clzmsd() === 0 || (y.length === x.length && y.__clzmsd() === 0)) {
            resultLength++;
        }
        var result = new JSBI(resultLength, resultSign);
        var carry = 0;
        var i = 0;
        for (; i < y.length; i++) {
            var yDigit = y.__digit(i);
            var xDigit = x.__digit(i);
            var rLow = (xDigit & 0xFFFF) + (yDigit & 0xFFFF) + carry;
            var rHigh = (xDigit >>> 16) + (yDigit >>> 16) + (rLow >>> 16);
            carry = rHigh >>> 16;
            result.__setDigit(i, (rLow & 0xFFFF) | (rHigh << 16));
        }
        for (; i < x.length; i++) {
            var xDigit = x.__digit(i);
            var rLow = (xDigit & 0xFFFF) + carry;
            var rHigh = (xDigit >>> 16) + (rLow >>> 16);
            carry = rHigh >>> 16;
            result.__setDigit(i, (rLow & 0xFFFF) | (rHigh << 16));
        }
        if (i < result.length) {
            result.__setDigit(i, carry);
        }
        return result.__trim();
    };
    JSBI.__absoluteSub = function (x, y, resultSign) {
        if (x.length === 0)
            return x;
        if (y.length === 0)
            return x.sign === resultSign ? x : JSBI.unaryMinus(x);
        var result = new JSBI(x.length, resultSign);
        var borrow = 0;
        var i = 0;
        for (; i < y.length; i++) {
            var xDigit = x.__digit(i);
            var yDigit = y.__digit(i);
            var rLow = (xDigit & 0xFFFF) - (yDigit & 0xFFFF) - borrow;
            borrow = (rLow >>> 16) & 1;
            var rHigh = (xDigit >>> 16) - (yDigit >>> 16) - borrow;
            borrow = (rHigh >>> 16) & 1;
            result.__setDigit(i, (rLow & 0xFFFF) | (rHigh << 16));
        }
        for (; i < x.length; i++) {
            var xDigit = x.__digit(i);
            var rLow = (xDigit & 0xFFFF) - borrow;
            borrow = (rLow >>> 16) & 1;
            var rHigh = (xDigit >>> 16) - borrow;
            borrow = (rHigh >>> 16) & 1;
            result.__setDigit(i, (rLow & 0xFFFF) | (rHigh << 16));
        }
        return result.__trim();
    };
    JSBI.__absoluteAddOne = function (x, sign, result) {
        if (result === void 0) { result = null; }
        var inputLength = x.length;
        if (result === null) {
            result = new JSBI(inputLength, sign);
        }
        else {
            result.sign = sign;
        }
        var carry = true;
        for (var i = 0; i < inputLength; i++) {
            var digit = x.__digit(i);
            var newCarry = digit === (0xFFFFFFFF | 0);
            if (carry)
                digit = (digit + 1) | 0;
            carry = newCarry;
            result.__setDigit(i, digit);
        }
        if (carry) {
            result.__setDigitGrow(inputLength, 1);
        }
        return result;
    };
    JSBI.__absoluteSubOne = function (x, resultLength) {
        var length = x.length;
        resultLength = resultLength || length;
        var result = new JSBI(resultLength, false);
        var borrow = true;
        for (var i = 0; i < length; i++) {
            var digit = x.__digit(i);
            var newBorrow = digit === 0;
            if (borrow)
                digit = (digit - 1) | 0;
            borrow = newBorrow;
            result.__setDigit(i, digit);
        }
        for (var i = length; i < resultLength; i++) {
            result.__setDigit(i, 0);
        }
        return result;
    };
    JSBI.__absoluteAnd = function (x, y, result) {
        if (result === void 0) { result = null; }
        var xLength = x.length;
        var yLength = y.length;
        var numPairs = yLength;
        if (xLength < yLength) {
            numPairs = xLength;
            var tmp = x;
            var tmpLength = xLength;
            x = y;
            xLength = yLength;
            y = tmp;
            yLength = tmpLength;
        }
        var resultLength = numPairs;
        if (result === null) {
            result = new JSBI(resultLength, false);
        }
        else {
            resultLength = result.length;
        }
        var i = 0;
        for (; i < numPairs; i++) {
            result.__setDigit(i, x.__digit(i) & y.__digit(i));
        }
        for (; i < resultLength; i++) {
            result.__setDigit(i, 0);
        }
        return result;
    };
    JSBI.__absoluteAndNot = function (x, y, result) {
        if (result === void 0) { result = null; }
        var xLength = x.length;
        var yLength = y.length;
        var numPairs = yLength;
        if (xLength < yLength) {
            numPairs = xLength;
        }
        var resultLength = xLength;
        if (result === null) {
            result = new JSBI(resultLength, false);
        }
        else {
            resultLength = result.length;
        }
        var i = 0;
        for (; i < numPairs; i++) {
            result.__setDigit(i, x.__digit(i) & ~y.__digit(i));
        }
        for (; i < xLength; i++) {
            result.__setDigit(i, x.__digit(i));
        }
        for (; i < resultLength; i++) {
            result.__setDigit(i, 0);
        }
        return result;
    };
    JSBI.__absoluteOr = function (x, y, result) {
        if (result === void 0) { result = null; }
        var xLength = x.length;
        var yLength = y.length;
        var numPairs = yLength;
        if (xLength < yLength) {
            numPairs = xLength;
            var tmp = x;
            var tmpLength = xLength;
            x = y;
            xLength = yLength;
            y = tmp;
            yLength = tmpLength;
        }
        var resultLength = xLength;
        if (result === null) {
            result = new JSBI(resultLength, false);
        }
        else {
            resultLength = result.length;
        }
        var i = 0;
        for (; i < numPairs; i++) {
            result.__setDigit(i, x.__digit(i) | y.__digit(i));
        }
        for (; i < xLength; i++) {
            result.__setDigit(i, x.__digit(i));
        }
        for (; i < resultLength; i++) {
            result.__setDigit(i, 0);
        }
        return result;
    };
    JSBI.__absoluteXor = function (x, y, result) {
        if (result === void 0) { result = null; }
        var xLength = x.length;
        var yLength = y.length;
        var numPairs = yLength;
        if (xLength < yLength) {
            numPairs = xLength;
            var tmp = x;
            var tmpLength = xLength;
            x = y;
            xLength = yLength;
            y = tmp;
            yLength = tmpLength;
        }
        var resultLength = xLength;
        if (result === null) {
            result = new JSBI(resultLength, false);
        }
        else {
            resultLength = result.length;
        }
        var i = 0;
        for (; i < numPairs; i++) {
            result.__setDigit(i, x.__digit(i) ^ y.__digit(i));
        }
        for (; i < xLength; i++) {
            result.__setDigit(i, x.__digit(i));
        }
        for (; i < resultLength; i++) {
            result.__setDigit(i, 0);
        }
        return result;
    };
    JSBI.__absoluteCompare = function (x, y) {
        var diff = x.length - y.length;
        if (diff !== 0)
            return diff;
        var i = x.length - 1;
        while (i >= 0 && x.__digit(i) === y.__digit(i))
            i--;
        if (i < 0)
            return 0;
        return x.__unsignedDigit(i) > y.__unsignedDigit(i) ? 1 : -1;
    };
    JSBI.__multiplyAccumulate = function (multiplicand, multiplier, accumulator, accumulatorIndex) {
        if (multiplier === 0)
            return;
        var m2Low = multiplier & 0xFFFF;
        var m2High = multiplier >>> 16;
        var carry = 0;
        var highLower = 0;
        var highHigher = 0;
        for (var i = 0; i < multiplicand.length; i++, accumulatorIndex++) {
            var acc = accumulator.__digit(accumulatorIndex);
            var accLow = acc & 0xFFFF;
            var accHigh = acc >>> 16;
            var m1 = multiplicand.__digit(i);
            var m1Low = m1 & 0xFFFF;
            var m1High = m1 >>> 16;
            var rLow = Math.imul(m1Low, m2Low);
            var rMid1 = Math.imul(m1Low, m2High);
            var rMid2 = Math.imul(m1High, m2Low);
            var rHigh = Math.imul(m1High, m2High);
            accLow += highLower + (rLow & 0xFFFF);
            accHigh += highHigher + carry + (accLow >>> 16) + (rLow >>> 16) +
                (rMid1 & 0xFFFF) + (rMid2 & 0xFFFF);
            carry = accHigh >>> 16;
            highLower = (rMid1 >>> 16) + (rMid2 >>> 16) + (rHigh & 0xFFFF) + carry;
            carry = highLower >>> 16;
            highLower &= 0xFFFF;
            highHigher = rHigh >>> 16;
            acc = (accLow & 0xFFFF) | (accHigh << 16);
            accumulator.__setDigit(accumulatorIndex, acc);
        }
        for (; carry !== 0 || highLower !== 0 || highHigher !== 0; accumulatorIndex++) {
            var acc = accumulator.__digit(accumulatorIndex);
            var accLow = (acc & 0xFFFF) + highLower;
            var accHigh = (acc >>> 16) + (accLow >>> 16) + highHigher + carry;
            highLower = 0;
            highHigher = 0;
            carry = accHigh >>> 16;
            acc = (accLow & 0xFFFF) | (accHigh << 16);
            accumulator.__setDigit(accumulatorIndex, acc);
        }
    };
    JSBI.__internalMultiplyAdd = function (source, factor, summand, n, result) {
        var carry = summand;
        var high = 0;
        for (var i = 0; i < n; i++) {
            var digit = source.__digit(i);
            var rx = Math.imul(digit & 0xFFFF, factor);
            var r0 = (rx & 0xFFFF) + high + carry;
            carry = r0 >>> 16;
            var ry = Math.imul(digit >>> 16, factor);
            var r16 = (ry & 0xFFFF) + (rx >>> 16) + carry;
            carry = r16 >>> 16;
            high = ry >>> 16;
            result.__setDigit(i, (r16 << 16) | (r0 & 0xFFFF));
        }
        if (result.length > n) {
            result.__setDigit(n++, carry + high);
            while (n < result.length) {
                result.__setDigit(n++, 0);
            }
        }
        else {
            if (carry + high !== 0)
                throw new Error('implementation bug');
        }
    };
    JSBI.prototype.__inplaceMultiplyAdd = function (multiplier, summand, length) {
        if (length > this.length)
            length = this.length;
        var mLow = multiplier & 0xFFFF;
        var mHigh = multiplier >>> 16;
        var carry = 0;
        var highLower = summand & 0xFFFF;
        var highHigher = summand >>> 16;
        for (var i = 0; i < length; i++) {
            var d = this.__digit(i);
            var dLow = d & 0xFFFF;
            var dHigh = d >>> 16;
            var pLow = Math.imul(dLow, mLow);
            var pMid1 = Math.imul(dLow, mHigh);
            var pMid2 = Math.imul(dHigh, mLow);
            var pHigh = Math.imul(dHigh, mHigh);
            var rLow = highLower + (pLow & 0xFFFF);
            var rHigh = highHigher + carry + (rLow >>> 16) + (pLow >>> 16) +
                (pMid1 & 0xFFFF) + (pMid2 & 0xFFFF);
            highLower = (pMid1 >>> 16) + (pMid2 >>> 16) + (pHigh & 0xFFFF) +
                (rHigh >>> 16);
            carry = highLower >>> 16;
            highLower &= 0xFFFF;
            highHigher = pHigh >>> 16;
            var result = (rLow & 0xFFFF) | (rHigh << 16);
            this.__setDigit(i, result);
        }
        if (carry !== 0 || highLower !== 0 || highHigher !== 0) {
            throw new Error('implementation bug');
        }
    };
    JSBI.__absoluteDivSmall = function (x, divisor, quotient) {
        if (quotient === null)
            quotient = new JSBI(x.length, false);
        var remainder = 0;
        for (var i = x.length * 2 - 1; i >= 0; i -= 2) {
            var input = ((remainder << 16) | x.__halfDigit(i)) >>> 0;
            var upperHalf = (input / divisor) | 0;
            remainder = (input % divisor) | 0;
            input = ((remainder << 16) | x.__halfDigit(i - 1)) >>> 0;
            var lowerHalf = (input / divisor) | 0;
            remainder = (input % divisor) | 0;
            quotient.__setDigit(i >>> 1, (upperHalf << 16) | lowerHalf);
        }
        return quotient;
    };
    JSBI.__absoluteModSmall = function (x, divisor) {
        var remainder = 0;
        for (var i = x.length * 2 - 1; i >= 0; i--) {
            var input = ((remainder << 16) | x.__halfDigit(i)) >>> 0;
            remainder = (input % divisor) | 0;
        }
        return remainder;
    };
    JSBI.__absoluteDivLarge = function (dividend, divisor, wantQuotient, wantRemainder) {
        var n = divisor.__halfDigitLength();
        var n2 = divisor.length;
        var m = dividend.__halfDigitLength() - n;
        var q = null;
        if (wantQuotient) {
            q = new JSBI((m + 2) >>> 1, false);
            q.__initializeDigits();
        }
        var qhatv = new JSBI((n + 2) >>> 1, false);
        qhatv.__initializeDigits();
        // D1.
        var shift = JSBI.__clz16(divisor.__halfDigit(n - 1));
        if (shift > 0) {
            divisor = JSBI.__specialLeftShift(divisor, shift, 0 /* add no digits*/);
        }
        var u = JSBI.__specialLeftShift(dividend, shift, 1 /* add one digit */);
        // D2.
        var vn1 = divisor.__halfDigit(n - 1);
        var halfDigitBuffer = 0;
        for (var j = m; j >= 0; j--) {
            // D3.
            var qhat = 0xFFFF;
            var ujn = u.__halfDigit(j + n);
            if (ujn !== vn1) {
                var input = ((ujn << 16) | u.__halfDigit(j + n - 1)) >>> 0;
                qhat = (input / vn1) | 0;
                var rhat = (input % vn1) | 0;
                var vn2 = divisor.__halfDigit(n - 2);
                var ujn2 = u.__halfDigit(j + n - 2);
                while ((Math.imul(qhat, vn2) >>> 0) > (((rhat << 16) | ujn2) >>> 0)) {
                    qhat--;
                    rhat += vn1;
                    if (rhat > 0xFFFF)
                        break;
                }
            }
            // D4.
            JSBI.__internalMultiplyAdd(divisor, qhat, 0, n2, qhatv);
            var c = u.__inplaceSub(qhatv, j, n + 1);
            if (c !== 0) {
                c = u.__inplaceAdd(divisor, j, n);
                u.__setHalfDigit(j + n, u.__halfDigit(j + n) + c);
                qhat--;
            }
            if (wantQuotient && q != null) {
                if (j & 1) {
                    halfDigitBuffer = qhat << 16;
                }
                else {
                    q.__setDigit(j >>> 1, halfDigitBuffer | qhat);
                }
            }
        }
        if (wantRemainder) {
            u.__inplaceRightShift(shift);
            if (wantQuotient && q != null) {
                return { quotient: q, remainder: u };
            }
            return u;
        }
        if (wantQuotient && q != null)
            return q;
        throw new Error("Either wantQuotient or wantRemainder must be set");
    };
    JSBI.__clz16 = function (value) {
        return Math.clz32(value) - 16;
    };
    // TODO: work on full digits, like __inplaceSub?
    JSBI.prototype.__inplaceAdd = function (summand, startIndex, halfDigits) {
        var carry = 0;
        for (var i = 0; i < halfDigits; i++) {
            var sum = this.__halfDigit(startIndex + i) +
                summand.__halfDigit(i) +
                carry;
            carry = sum >>> 16;
            this.__setHalfDigit(startIndex + i, sum);
        }
        return carry;
    };
    JSBI.prototype.__inplaceSub = function (subtrahend, startIndex, halfDigits) {
        var fullSteps = (halfDigits - 1) >>> 1;
        var borrow = 0;
        if (startIndex & 1) {
            // this:   [..][..][..]
            // subtr.:   [..][..]
            startIndex >>= 1;
            var current = this.__digit(startIndex);
            var r0 = current & 0xFFFF;
            var i = 0;
            for (; i < fullSteps; i++) {
                var sub_1 = subtrahend.__digit(i);
                var r16_1 = (current >>> 16) - (sub_1 & 0xFFFF) - borrow;
                borrow = (r16_1 >>> 16) & 1;
                this.__setDigit(startIndex + i, (r16_1 << 16) | (r0 & 0xFFFF));
                current = this.__digit(startIndex + i + 1);
                r0 = (current & 0xFFFF) - (sub_1 >>> 16) - borrow;
                borrow = (r0 >>> 16) & 1;
            }
            // Unrolling the last iteration gives a 5% performance benefit!
            var sub = subtrahend.__digit(i);
            var r16 = (current >>> 16) - (sub & 0xFFFF) - borrow;
            borrow = (r16 >>> 16) & 1;
            this.__setDigit(startIndex + i, (r16 << 16) | (r0 & 0xFFFF));
            var subTop = sub >>> 16;
            if (startIndex + i + 1 >= this.length) {
                throw new RangeError('out of bounds');
            }
            if ((halfDigits & 1) === 0) {
                current = this.__digit(startIndex + i + 1);
                r0 = (current & 0xFFFF) - subTop - borrow;
                borrow = (r0 >>> 16) & 1;
                this.__setDigit(startIndex + subtrahend.length, (current & 0xFFFF0000) | (r0 & 0xFFFF));
            }
        }
        else {
            startIndex >>= 1;
            var i = 0;
            for (; i < subtrahend.length - 1; i++) {
                var current_2 = this.__digit(startIndex + i);
                var sub_2 = subtrahend.__digit(i);
                var r0_1 = (current_2 & 0xFFFF) - (sub_2 & 0xFFFF) - borrow;
                borrow = (r0_1 >>> 16) & 1;
                var r16_2 = (current_2 >>> 16) - (sub_2 >>> 16) - borrow;
                borrow = (r16_2 >>> 16) & 1;
                this.__setDigit(startIndex + i, (r16_2 << 16) | (r0_1 & 0xFFFF));
            }
            var current = this.__digit(startIndex + i);
            var sub = subtrahend.__digit(i);
            var r0 = (current & 0xFFFF) - (sub & 0xFFFF) - borrow;
            borrow = (r0 >>> 16) & 1;
            var r16 = 0;
            if ((halfDigits & 1) === 0) {
                r16 = (current >>> 16) - (sub >>> 16) - borrow;
                borrow = (r16 >>> 16) & 1;
            }
            this.__setDigit(startIndex + i, (r16 << 16) | (r0 & 0xFFFF));
        }
        return borrow;
    };
    JSBI.prototype.__inplaceRightShift = function (shift) {
        if (shift === 0)
            return;
        var carry = this.__digit(0) >>> shift;
        var last = this.length - 1;
        for (var i = 0; i < last; i++) {
            var d = this.__digit(i + 1);
            this.__setDigit(i, (d << (32 - shift)) | carry);
            carry = d >>> shift;
        }
        this.__setDigit(last, carry);
    };
    JSBI.__specialLeftShift = function (x, shift, addDigit) {
        var n = x.length;
        var resultLength = n + addDigit;
        var result = new JSBI(resultLength, false);
        if (shift === 0) {
            for (var i = 0; i < n; i++)
                result.__setDigit(i, x.__digit(i));
            if (addDigit > 0)
                result.__setDigit(n, 0);
            return result;
        }
        var carry = 0;
        for (var i = 0; i < n; i++) {
            var d = x.__digit(i);
            result.__setDigit(i, (d << shift) | carry);
            carry = d >>> (32 - shift);
        }
        if (addDigit > 0) {
            result.__setDigit(n, carry);
        }
        return result;
    };
    JSBI.__leftShiftByAbsolute = function (x, y) {
        var shift = JSBI.__toShiftAmount(y);
        if (shift < 0)
            throw new RangeError('BigInt too big');
        var digitShift = shift >>> 5;
        var bitsShift = shift & 31;
        var length = x.length;
        var grow = bitsShift !== 0 &&
            (x.__digit(length - 1) >>> (32 - bitsShift)) !== 0;
        var resultLength = length + digitShift + (grow ? 1 : 0);
        var result = new JSBI(resultLength, x.sign);
        if (bitsShift === 0) {
            var i = 0;
            for (; i < digitShift; i++)
                result.__setDigit(i, 0);
            for (; i < resultLength; i++) {
                result.__setDigit(i, x.__digit(i - digitShift));
            }
        }
        else {
            var carry = 0;
            for (var i = 0; i < digitShift; i++)
                result.__setDigit(i, 0);
            for (var i = 0; i < length; i++) {
                var d = x.__digit(i);
                result.__setDigit(i + digitShift, (d << bitsShift) | carry);
                carry = d >>> (32 - bitsShift);
            }
            if (grow) {
                result.__setDigit(length + digitShift, carry);
            }
            else {
                if (carry !== 0)
                    throw new Error('implementation bug');
            }
        }
        return result.__trim();
    };
    JSBI.__rightShiftByAbsolute = function (x, y) {
        var length = x.length;
        var sign = x.sign;
        var shift = JSBI.__toShiftAmount(y);
        if (shift < 0)
            return JSBI.__rightShiftByMaximum(sign);
        var digitShift = shift >>> 5;
        var bitsShift = shift & 31;
        var resultLength = length - digitShift;
        if (resultLength <= 0)
            return JSBI.__rightShiftByMaximum(sign);
        // For negative numbers, round down if any bit was shifted out (so that
        // e.g. -5n >> 1n == -3n and not -2n). Check now whether this will happen
        // and whether itc an cause overflow into a new digit. If we allocate the
        // result large enough up front, it avoids having to do grow it later.
        var mustRoundDown = false;
        if (sign) {
            var mask = (1 << bitsShift) - 1;
            if ((x.__digit(digitShift) & mask) !== 0) {
                mustRoundDown = true;
            }
            else {
                for (var i = 0; i < digitShift; i++) {
                    if (x.__digit(i) !== 0) {
                        mustRoundDown = true;
                        break;
                    }
                }
            }
        }
        // If bitsShift is non-zero, it frees up bits, preventing overflow.
        if (mustRoundDown && bitsShift === 0) {
            // Overflow cannot happen if the most significant digit has unset bits.
            var msd = x.__digit(length - 1);
            var roundingCanOverflow = ~msd === 0;
            if (roundingCanOverflow)
                resultLength++;
        }
        var result = new JSBI(resultLength, sign);
        if (bitsShift === 0) {
            for (var i = digitShift; i < length; i++) {
                result.__setDigit(i - digitShift, x.__digit(i));
            }
        }
        else {
            var carry = x.__digit(digitShift) >>> bitsShift;
            var last = length - digitShift - 1;
            for (var i = 0; i < last; i++) {
                var d = x.__digit(i + digitShift + 1);
                result.__setDigit(i, (d << (32 - bitsShift)) | carry);
                carry = d >>> bitsShift;
            }
            result.__setDigit(last, carry);
        }
        if (mustRoundDown) {
            // Since the result is negative, rounding down means adding one to its
            // absolute value. This cannot overflow.
            result = JSBI.__absoluteAddOne(result, true, result);
        }
        return result.__trim();
    };
    JSBI.__rightShiftByMaximum = function (sign) {
        if (sign) {
            return JSBI.__oneDigit(1, true);
        }
        return JSBI.__zero();
    };
    JSBI.__toShiftAmount = function (x) {
        if (x.length > 1)
            return -1;
        var value = x.__unsignedDigit(0);
        if (value > JSBI.__kMaxLengthBits)
            return -1;
        return value;
    };
    JSBI.__toPrimitive = function (obj, hint) {
        if (hint === void 0) { hint = 'default'; }
        if (typeof obj !== 'object')
            return obj;
        if (obj.constructor === JSBI)
            return obj;
        var exoticToPrim = Symbol.toPrimitive == undefined ? undefined : obj[Symbol.toPrimitive];
        if (exoticToPrim) {
            var primitive = exoticToPrim(hint);
            if (typeof primitive !== 'object')
                return primitive;
            throw new TypeError('Cannot convert object to primitive value');
        }
        var valueOf = obj.valueOf;
        if (valueOf) {
            var primitive = valueOf.call(obj);
            if (typeof primitive !== 'object')
                return primitive;
        }
        var toString = obj.toString;
        if (toString) {
            var primitive = toString.call(obj);
            if (typeof primitive !== 'object')
                return primitive;
        }
        throw new TypeError('Cannot convert object to primitive value');
    };
    JSBI.__toNumeric = function (value) {
        if (JSBI.__isBigInt(value))
            return value;
        return +value;
    };
    JSBI.__isBigInt = function (value) {
        return typeof value === 'object' && value.constructor === JSBI;
    };
    JSBI.__truncateToNBits = function (n, x) {
        var neededDigits = (n + 31) >>> 5;
        var result = new JSBI(neededDigits, x.sign);
        var last = neededDigits - 1;
        for (var i = 0; i < last; i++) {
            result.__setDigit(i, x.__digit(i));
        }
        var msd = x.__digit(last);
        if ((n & 31) !== 0) {
            var drop = 32 - (n & 31);
            msd = (msd << drop) >>> drop;
        }
        result.__setDigit(last, msd);
        return result.__trim();
    };
    JSBI.__truncateAndSubFromPowerOfTwo = function (n, x, resultSign) {
        var neededDigits = (n + 31) >>> 5;
        var result = new JSBI(neededDigits, resultSign);
        var i = 0;
        var last = neededDigits - 1;
        var borrow = 0;
        var limit = Math.min(last, x.length);
        for (; i < limit; i++) {
            var xDigit = x.__digit(i);
            var rLow = 0 - (xDigit & 0xFFFF) - borrow;
            borrow = (rLow >>> 16) & 1;
            var rHigh = 0 - (xDigit >>> 16) - borrow;
            borrow = (rHigh >>> 16) & 1;
            result.__setDigit(i, (rLow & 0xFFFF) | (rHigh << 16));
        }
        for (; i < last; i++) {
            result.__setDigit(i, (-borrow) | 0);
        }
        var msd = last < x.length ? x.__digit(last) : 0;
        var msdBitsConsumed = n & 31;
        var resultMsd;
        if (msdBitsConsumed === 0) {
            var rLow = 0 - (msd & 0xFFFF) - borrow;
            borrow = (rLow >>> 16) & 1;
            var rHigh = 0 - (msd >>> 16) - borrow;
            resultMsd = (rLow & 0xFFFF) | (rHigh << 16);
        }
        else {
            var drop = 32 - msdBitsConsumed;
            msd = (msd << drop) >>> drop;
            var minuendMsd = 1 << (32 - drop);
            var rLow = (minuendMsd & 0xFFFF) - (msd & 0xFFFF) - borrow;
            borrow = (rLow >>> 16) & 1;
            var rHigh = (minuendMsd >>> 16) - (msd >>> 16) - borrow;
            resultMsd = (rLow & 0xFFFF) | (rHigh << 16);
            resultMsd &= (minuendMsd - 1);
        }
        result.__setDigit(last, resultMsd);
        return result.__trim();
    };
    // Digit helpers.
    JSBI.prototype.__digit = function (i) {
        return this[i];
    };
    JSBI.prototype.__unsignedDigit = function (i) {
        return this[i] >>> 0;
    };
    JSBI.prototype.__setDigit = function (i, digit) {
        this[i] = digit | 0;
    };
    JSBI.prototype.__setDigitGrow = function (i, digit) {
        this[i] = digit | 0;
    };
    JSBI.prototype.__halfDigitLength = function () {
        var len = this.length;
        if (this.__unsignedDigit(len - 1) <= 0xFFFF)
            return len * 2 - 1;
        return len * 2;
    };
    JSBI.prototype.__halfDigit = function (i) {
        return (this[i >>> 1] >>> ((i & 1) << 4)) & 0xFFFF;
    };
    JSBI.prototype.__setHalfDigit = function (i, value) {
        var digitIndex = i >>> 1;
        var previous = this.__digit(digitIndex);
        var updated = (i & 1) ? (previous & 0xFFFF) | (value << 16)
            : (previous & 0xFFFF0000) | (value & 0xFFFF);
        this.__setDigit(digitIndex, updated);
    };
    JSBI.__digitPow = function (base, exponent) {
        var result = 1;
        while (exponent > 0) {
            if (exponent & 1)
                result *= base;
            exponent >>>= 1;
            base *= base;
        }
        return result;
    };
    JSBI.__kMaxLength = 1 << 25;
    JSBI.__kMaxLengthBits = JSBI.__kMaxLength << 5;
    // Lookup table for the maximum number of bits required per character of a
    // base-N string representation of a number. To increase accuracy, the array
    // value is the actual value multiplied by 32. To generate this table:
    //
    // for (let i = 0; i <= 36; i++) {
    //   console.log(Math.ceil(Math.log2(i) * 32) + ',');
    // }
    JSBI.__kMaxBitsPerChar = [
        0, 0, 32, 51, 64, 75, 83, 90, 96,
        102, 107, 111, 115, 119, 122, 126, 128,
        131, 134, 136, 139, 141, 143, 145, 147,
        149, 151, 153, 154, 156, 158, 159, 160,
        162, 163, 165, 166,
    ];
    JSBI.__kBitsPerCharTableShift = 5;
    JSBI.__kBitsPerCharTableMultiplier = 1 << JSBI.__kBitsPerCharTableShift;
    JSBI.__kConversionChars = '0123456789abcdefghijklmnopqrstuvwxyz'.split('');
    JSBI.__kBitConversionBuffer = new ArrayBuffer(8);
    JSBI.__kBitConversionDouble = new Float64Array(JSBI.__kBitConversionBuffer);
    JSBI.__kBitConversionInts = new Int32Array(JSBI.__kBitConversionBuffer);
    return JSBI;
}(Array));
exports.JSBI = JSBI;
//# sourceMappingURL=jsbi.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/bigint-util/to-number.js":
/*!***********************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/bigint-util/to-number.js ***!
  \***********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Attempts to convert `x` into a `number`
 * without any loss in precision.
 *
 * If it is not possible, an error is thrown.
 *
 * -----
 *
 * In general, this should not happen if our `bigint` is
 * in the range,
 *
 * `[Number.MIN_SAFE_INTEGER, Number.MAX_SAFE_INTEGER]`
 *
 * Which is,
 *
 * `[-9007199254740991, 9007199254740991]`
 *
 * @param x - The `bigint` to convert to a `number`
 */
function toNumber(x) {
    var result = Number(x);
    if (x.toString() === result.toString()) {
        return result;
    }
    else {
        throw new Error("Cannot convert bigint to number without loss in precision");
    }
}
exports.toNumber = toNumber;
//# sourceMappingURL=to-number.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/bigint-util/to-string.js":
/*!***********************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/bigint-util/to-string.js ***!
  \***********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var jsbi_1 = __webpack_require__(/*! ./jsbi */ "../tsql/node_modules/type-mapping/dist/bigint-util/jsbi.js");
function toString(x, radix) {
    return jsbi_1.JSBI.BigInt(x.toString()).toString(radix);
}
exports.toString = toString;
//# sourceMappingURL=to-string.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/decorator/func.js":
/*!****************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/decorator/func.js ***!
  \****************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function func() {
    var mappers = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        mappers[_i] = arguments[_i];
    }
    var factory = function (target) {
        if (mappers.length == 0) {
            //Nothing to validate.
            return target;
        }
        var name = (typeof target.name == "string") ?
            typeof target.name :
            "[Anonymous function]";
        var result = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var max = Math.max(args.length, target.length);
            for (var i = 0; i < max; ++i) {
                var mapper = (i < mappers.length) ?
                    mappers[i] :
                    //Probably a rest parameter
                    mappers[mappers.length - 1];
                if (i < args.length) {
                    args[i] = mapper(name + "(#" + i + ")", args[i]);
                }
                else {
                    args.push(mapper(name + "(#" + i + ")", undefined));
                }
            }
            return target.apply(this, args);
        };
        return result;
    };
    return factory;
}
exports.func = func;
//# sourceMappingURL=func.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/decorator/index.js":
/*!*****************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/decorator/index.js ***!
  \*****************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./func */ "../tsql/node_modules/type-mapping/dist/decorator/func.js"));
__export(__webpack_require__(/*! ./method */ "../tsql/node_modules/type-mapping/dist/decorator/method.js"));
__export(__webpack_require__(/*! ./prop */ "../tsql/node_modules/type-mapping/dist/decorator/prop.js"));
__export(__webpack_require__(/*! ./setter */ "../tsql/node_modules/type-mapping/dist/decorator/setter.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/decorator/method.js":
/*!******************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/decorator/method.js ***!
  \******************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
function method() {
    var mappers = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        mappers[_i] = arguments[_i];
    }
    var result = function (target, propertyKey, descriptor) {
        if (mappers.length == 0) {
            //Nothing to validate.
            return;
        }
        var propertyName = (typeof propertyKey == "string") ?
            propertyKey :
            "Symbol(" + propertyKey.toString() + ")";
        var ctorName = type_util_1.getCtorName(target.constructor);
        var fullName = ctorName + "." + propertyName;
        var originalMethod = descriptor.value;
        if (!(originalMethod instanceof Function)) {
            throw new Error("Method " + fullName + " not found");
        }
        descriptor.value = (function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var max = Math.max(args.length, originalMethod.length);
            for (var i = 0; i < max; ++i) {
                var mapper = (i < mappers.length) ?
                    mappers[i] :
                    //Probably a rest parameter
                    mappers[mappers.length - 1];
                if (i < args.length) {
                    args[i] = mapper(fullName + "(#" + i + ")", args[i]);
                }
                else {
                    args.push(mapper(fullName + "(#" + i + ")", undefined));
                }
            }
            if (originalMethod != undefined) {
                return originalMethod.apply(this, args);
            }
            else {
                return undefined;
            }
        });
    };
    return result;
}
exports.method = method;
/*
class Clazz {
    @method(() => 1, () => "")
    foo (arg0 : number, arg1 : string) {
    }
    //Rest params are a bit iffy
    @method(() => 1, ...[() => ""])
    foo2 (arg0 : number, ...arg1 : string[]) {
    }

    @setter()
    get x () {
        return 5;
    }

    @setter(() => 1, () => "")
    set name (v : string) {
        console.log(v);
    }
}
type wtf = ExtractKeyWithParams<Clazz, [() => 1]>
type c_name = Clazz["name"]
const c = new Clazz();
type p = Parameters<(arg0 : number, ...args : string[]) => void>
type p0 = p[0];
type p1 = p[1];
type p2 = p[2];
type l = p["length"];
//*/ 
//# sourceMappingURL=method.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/decorator/prop.js":
/*!****************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/decorator/prop.js ***!
  \****************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var accessor_util_1 = __webpack_require__(/*! ../accessor-util */ "../tsql/node_modules/type-mapping/dist/accessor-util/index.js");
var type_util_1 = __webpack_require__(/*! ../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
function prop(f) {
    var result = function (target, propertyKey) {
        /*
            Implementation copied over from schema-decorator.
            The code isn't too well-written and kind of confusing.
        */
        var propertyName = (typeof propertyKey == "string") ?
            propertyKey :
            "Symbol(" + propertyKey.toString() + ")";
        var privateName = "____hijacked-by-type-mapping-" + propertyName;
        var ctorName = type_util_1.getCtorName(target.constructor);
        var fullName = ctorName + "." + propertyName;
        /*
            We call this `superAccessorGenerator` because
            calling `.set()` on this may trigger the base class'
            decorator that may create another accessor on the base class.

            `superSetter` below is the `.set()` of the base class,
            if it exists.

            We need to also call the base class' `.set()`
            because there may be other mappers running in the
            base class.
        */
        var superAccessorGenerator = accessor_util_1.getAccessor(target, propertyKey);
        Object.defineProperty(target, propertyKey, {
            get: function () {
                return this[privateName];
            },
            set: function (mixed) {
                //If we are here, we have the accessor defined on the class prototype,
                //but not on the instance itself.
                //We want to preserve the behaviour of Object.keys(),
                //So, we need to define the accessor on the instance.
                var superSetter = undefined;
                if (superAccessorGenerator != undefined && superAccessorGenerator.set != undefined) {
                    superAccessorGenerator.set.bind(this)(mixed);
                    var accessor = Object.getOwnPropertyDescriptor(this, propertyKey);
                    if (!accessor_util_1.isAccessorDescriptor(accessor) || accessor.set == undefined) {
                        throw new Error("Expected " + fullName + " to be an accessor and have a \"set()\" method");
                    }
                    superSetter = accessor.set.bind(this);
                }
                //Set the value on the instance first,
                //We define a property that is not enumerable,
                //So it does not show up in Object.keys().
                //We don't want this property to show up because
                //its name is `privateName`, not the "original" name.
                if (superSetter == undefined) {
                    Object.defineProperty(this, privateName, {
                        value: f(fullName, mixed),
                        writable: true,
                        enumerable: false,
                    });
                }
                else {
                    superSetter(f(fullName, mixed));
                }
                //We define the accessor that should be used from now on
                //And will be enumerable with Object.keys(instance)
                Object.defineProperty(this, propertyName, {
                    get: function () {
                        return this[privateName];
                    },
                    set: function (mixed) {
                        if (superSetter == undefined) {
                            this[privateName] = f(fullName, mixed);
                        }
                        else {
                            superSetter(f(fullName, mixed));
                        }
                    },
                    enumerable: true,
                    configurable: true,
                });
            },
            enumerable: true,
        });
    };
    return result;
}
exports.prop = prop;
/*
class Clazz {
    @prop(() => "1")
    prop0 : number = 3;
}
const c = new Clazz();
//*/ 
//# sourceMappingURL=prop.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/decorator/setter.js":
/*!******************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/decorator/setter.js ***!
  \******************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
function setter(f) {
    var result = function (target, propertyKey, descriptor) {
        var propertyName = (typeof propertyKey == "string") ?
            propertyKey :
            "Symbol(" + propertyKey.toString() + ")";
        var ctorName = type_util_1.getCtorName(target.constructor);
        var fullName = ctorName + "." + propertyName;
        var originalMethod = descriptor.set;
        descriptor.set = (function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            if (args.length == 0) {
                throw new Error("Cannot call " + fullName + ".set() with zero arguments");
            }
            for (var i = 0; i < args.length; ++i) {
                args[i] = f(fullName, args[i]);
            }
            if (originalMethod != undefined) {
                return originalMethod.apply(this, args);
            }
            else {
                return undefined;
            }
        });
    };
    return result;
}
exports.setter = setter;
/*
class Clazz {
    @setter(() => "1")
    set name (v : string) {
        console.log(v);
    }
}
//*/ 
//# sourceMappingURL=setter.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/enum-util/index.js":
/*!*****************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/enum-util/index.js ***!
  \*****************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
//Please only pass enums here
var Enum;
(function (Enum) {
})(Enum = exports.Enum || (exports.Enum = {}));
function getKeys(e) {
    return (Object.keys(e)
        .filter(function (k) {
        if (/^\d/.test(k)) {
            return false;
        }
        var v = e[k];
        return (typeof v == "string" ||
            typeof v == "number");
    }));
}
exports.getKeys = getKeys;
function getValues(e) {
    return getKeys(e).map(function (k) { return e[k]; });
}
exports.getValues = getValues;
function getEntries(e) {
    return getKeys(e).map(function (k) {
        return {
            key: k,
            value: e[k],
        };
    });
}
exports.getEntries = getEntries;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/error-code.js":
/*!************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/error-code.js ***!
  \************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function toKeyEnum() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    return arr.reduce(function (memo, k) {
        memo[k] = k;
        return memo;
    }, {});
}
/**
 * @todo More error codes
 */
exports.ErrorCode = toKeyEnum(
/**
 * + `expectedMeta.gt`
 */
"EXPECTED_GREATER_THAN", 
/**
 * + `expectedMeta.lt`
 */
"EXPECTED_LESS_THAN", 
/**
 * + `expectedMeta.gtEq`
 */
"EXPECTED_GREATER_THAN_OR_EQUAL_TO", 
/**
 * + `expectedMeta.ltEq`
 */
"EXPECTED_LESS_THAN_OR_EQUAL_TO", 
/**
 * + `expected`
 */
"EXPECTED_TYPE", 
/**
 * + `expectedMeta.min`
 * + `expectedMeta.max`
 */
"EXPECTED_LENGTH", 
/**
 * + `expectedMeta.min`
 * + `expectedMeta.max`
 */
"EXPECTED_BYTE_LENGTH", 
/**
 * + `expectedMeta.mappableValue`
 * + `expectedMeta.outputValue`
 * + `expectedMeta.entries`
 */
"EXPECTED_ENUM_KEY", 
/**
 * + `expectedMeta.mappableValue`
 * + `expectedMeta.outputValue`
 * + `expectedMeta.entries`
 */
"EXPECTED_ENUM_VALUE", 
/**
 * + `expectedMeta.mappableValue`
 * + `expectedMeta.outputValue`
 * + `expectedMeta.desiredValue`
 * + `expectedMeta.validKeys`
 */
"EXPECTED_ONE_ENUM_VALUE_OR_VALID_ENUM_KEY", 
/**
 * + `expectedMeta.maxPrecision`
 * + `expectedMeta.maxScale`
 * + `expectedMeta.curPrecision`
 * + `expectedMeta.curScale`
 */
"EXPECTED_DECIMAL_PRECISION_LESS_THAN_OR_EQUAL_TO", 
/**
 * + `expectedMeta.maxPrecision`
 * + `expectedMeta.maxScale`
 * + `expectedMeta.curPrecision`
 * + `expectedMeta.curScale`
 */
"EXPECTED_DECIMAL_SCALE_LESS_THAN_OR_EQUAL_TO");
//# sourceMappingURL=error-code.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/error-util/flatten-union-errors.js":
/*!*********************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/error-util/flatten-union-errors.js ***!
  \*********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function flattenUnionErrors(arr) {
    var result = [];
    for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {
        var err = arr_1[_i];
        if (err.unionErrors == undefined || err.unionErrors.length == 0) {
            result.push(err);
        }
        else {
            result.push.apply(result, flattenUnionErrors(err.unionErrors));
        }
    }
    return result;
}
exports.flattenUnionErrors = flattenUnionErrors;
//# sourceMappingURL=flatten-union-errors.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/error-util/indent-error-message.js":
/*!*********************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/error-util/indent-error-message.js ***!
  \*********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function indentErrorMessage(str) {
    str = str
        .split("\n")
        .map(function (str) { return "\t" + str; })
        .join("\n");
    return "(\n" + str + "\n)";
}
exports.indentErrorMessage = indentErrorMessage;
//# sourceMappingURL=indent-error-message.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/error-util/index.js":
/*!******************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/error-util/index.js ***!
  \******************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./flatten-union-errors */ "../tsql/node_modules/type-mapping/dist/error-util/flatten-union-errors.js"));
__export(__webpack_require__(/*! ./indent-error-message */ "../tsql/node_modules/type-mapping/dist/error-util/indent-error-message.js"));
__export(__webpack_require__(/*! ./is-mapping-error */ "../tsql/node_modules/type-mapping/dist/error-util/is-mapping-error.js"));
__export(__webpack_require__(/*! ./make-mapping-error */ "../tsql/node_modules/type-mapping/dist/error-util/make-mapping-error.js"));
__export(__webpack_require__(/*! ./make-normalized-union-error */ "../tsql/node_modules/type-mapping/dist/error-util/make-normalized-union-error.js"));
__export(__webpack_require__(/*! ./try-get-property-error */ "../tsql/node_modules/type-mapping/dist/error-util/try-get-property-error.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/error-util/is-mapping-error.js":
/*!*****************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/error-util/is-mapping-error.js ***!
  \*****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function isMappingErrorArray(x) {
    if (!(x instanceof Array)) {
        return false;
    }
    for (var _i = 0, x_1 = x; _i < x_1.length; _i++) {
        var i = x_1[_i];
        if (!isMappingError(i)) {
            return false;
        }
    }
    return true;
}
exports.isMappingErrorArray = isMappingErrorArray;
function isMappingError(x) {
    if (!(x instanceof Error)) {
        return false;
    }
    var mixed = x;
    if (typeof mixed.inputName != "string") {
        return false;
    }
    if (mixed.expected != undefined && typeof mixed.expected != "string") {
        return false;
    }
    if (mixed.expectedMeta != undefined && !(mixed.expectedMeta instanceof Object)) {
        return false;
    }
    if (mixed.propertyErrors != undefined &&
        !isMappingErrorArray(mixed.propertyErrors)) {
        return false;
    }
    if (mixed.unionErrors != undefined &&
        !isMappingErrorArray(mixed.unionErrors)) {
        return false;
    }
    if (mixed.intersectionErrors != undefined &&
        !isMappingErrorArray(mixed.intersectionErrors)) {
        return false;
    }
    return true;
}
exports.isMappingError = isMappingError;
//# sourceMappingURL=is-mapping-error.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/error-util/make-mapping-error.js":
/*!*******************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/error-util/make-mapping-error.js ***!
  \*******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function makeMappingError(args) {
    var err = new Error(args.message);
    Object.defineProperty(err, "inputName", {
        value: args.inputName,
        enumerable: false,
    });
    Object.defineProperty(err, "actualValue", {
        value: args.actualValue,
        enumerable: false,
    });
    Object.defineProperty(err, "expected", {
        value: args.expected,
        enumerable: false,
    });
    Object.defineProperty(err, "expectedMeta", {
        value: args.expectedMeta,
        enumerable: false,
    });
    if ("propertyErrors" in args) {
        Object.defineProperty(err, "propertyErrors", {
            value: args.propertyErrors,
            enumerable: false,
        });
    }
    if ("unionErrors" in args) {
        Object.defineProperty(err, "unionErrors", {
            value: args.unionErrors,
            enumerable: false,
        });
    }
    if ("intersectionErrors" in args) {
        Object.defineProperty(err, "intersectionErrors", {
            value: args.intersectionErrors,
            enumerable: false,
        });
    }
    if (typeof args.stack == "string") {
        Object.defineProperty(err, "stack", {
            value: args.stack,
            enumerable: false,
        });
    }
    return err;
}
exports.makeMappingError = makeMappingError;
//# sourceMappingURL=make-mapping-error.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/error-util/make-normalized-union-error.js":
/*!****************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/error-util/make-normalized-union-error.js ***!
  \****************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var flatten_union_errors_1 = __webpack_require__(/*! ./flatten-union-errors */ "../tsql/node_modules/type-mapping/dist/error-util/flatten-union-errors.js");
var array_util_1 = __webpack_require__(/*! ../array-util */ "../tsql/node_modules/type-mapping/dist/array-util/index.js");
var make_mapping_error_1 = __webpack_require__(/*! ./make-mapping-error */ "../tsql/node_modules/type-mapping/dist/error-util/make-mapping-error.js");
var type_util_1 = __webpack_require__(/*! ../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var indent_error_message_1 = __webpack_require__(/*! ./indent-error-message */ "../tsql/node_modules/type-mapping/dist/error-util/indent-error-message.js");
function everyElementHasMappableValues(arr) {
    return arr.every(function (err) { return err.expectedMeta != undefined && err.expectedMeta.mappableValues != undefined; });
}
function everyElementHasOutputValues(arr) {
    return arr.every(function (err) { return err.expectedMeta != undefined && err.expectedMeta.outputValues != undefined; });
}
function makeNormalizedUnionError(name, mixed, unionErrors) {
    unionErrors = flatten_union_errors_1.flattenUnionErrors(unionErrors);
    var rawExpectedArr = unionErrors
        .map(function (e) { return e.expected; })
        .filter(function (i) { return typeof i == "string"; });
    if (rawExpectedArr.length == unionErrors.length) {
        var expected = array_util_1.removeDuplicateElements(rawExpectedArr)
            .map(function (str) { return "(" + str + ")"; })
            .join(" or ");
        return make_mapping_error_1.makeMappingError({
            message: name + " must be " + expected + "; received " + type_util_1.toTypeStr(mixed),
            inputName: name,
            actualValue: mixed,
            expected: expected,
            expectedMeta: {
                mappableValues: (everyElementHasMappableValues(unionErrors) ?
                    unionErrors.reduce(function (memo, err) {
                        memo.push.apply(memo, err.expectedMeta.mappableValues);
                        return memo;
                    }, []) :
                    undefined),
                outputValues: (everyElementHasOutputValues(unionErrors) ?
                    unionErrors.reduce(function (memo, err) {
                        memo.push.apply(memo, err.expectedMeta.outputValues);
                        return memo;
                    }, []) :
                    undefined),
            },
            unionErrors: unionErrors,
        });
    }
    else {
        /**
         * At least one of our mappers did not throw
         * a `MappingError`
         */
        var errorMessages = array_util_1.removeDuplicateElements(unionErrors
            .map(function (e) { return indent_error_message_1.indentErrorMessage(e.message); })).map(function (str) { return "(" + str + ")"; });
        var expected = array_util_1.removeDuplicateElements(rawExpectedArr.concat(["valid value"]))
            .map(function (str) { return "(" + str + ")"; })
            .join(" or ");
        return make_mapping_error_1.makeMappingError({
            message: name + " is invalid.\n" + errorMessages.join(" or\n"),
            inputName: name,
            actualValue: mixed,
            expected: expected,
            unionErrors: unionErrors,
        });
    }
}
exports.makeNormalizedUnionError = makeNormalizedUnionError;
//# sourceMappingURL=make-normalized-union-error.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/error-util/try-get-property-error.js":
/*!***********************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/error-util/try-get-property-error.js ***!
  \***********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function tryGetPropertyError(mappingError, inputName) {
    if (mappingError.propertyErrors == undefined) {
        return undefined;
    }
    for (var _i = 0, _a = mappingError.propertyErrors; _i < _a.length; _i++) {
        var propertyError = _a[_i];
        if (propertyError.inputName == inputName) {
            return propertyError;
        }
    }
    return undefined;
}
exports.tryGetPropertyError = tryGetPropertyError;
//# sourceMappingURL=try-get-property-error.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/field-map/ctor.js":
/*!****************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/field-map/ctor.js ***!
  \****************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../mapper */ "../tsql/node_modules/type-mapping/dist/mapper/index.js");
/**
    Constructs multiple `Field<>` instances at once.
*/
function fields(map) {
    var result = {};
    for (var name in map) {
        if (!map.hasOwnProperty(name)) {
            continue;
        }
        result[name] = mapper_1.withName(map[name], name);
    }
    return result;
}
exports.fields = fields;
//# sourceMappingURL=ctor.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/field-map/index.js":
/*!*****************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/field-map/index.js ***!
  \*****************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./ctor */ "../tsql/node_modules/type-mapping/dist/field-map/ctor.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/fixed-point-util/index.js":
/*!************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/fixed-point-util/index.js ***!
  \************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./is-equal */ "../tsql/node_modules/type-mapping/dist/fixed-point-util/is-equal.js"));
__export(__webpack_require__(/*! ./try-parse */ "../tsql/node_modules/type-mapping/dist/fixed-point-util/try-parse.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/fixed-point-util/is-equal.js":
/*!***************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/fixed-point-util/is-equal.js ***!
  \***************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var BigIntUtil = __webpack_require__(/*! ../bigint-util */ "../tsql/node_modules/type-mapping/dist/bigint-util/index.js");
var ZeroEqualityAlgorithm;
(function (ZeroEqualityAlgorithm) {
    ZeroEqualityAlgorithm["NEGATIVE_AND_POSITIVE_ZERO_ARE_EQUAL"] = "NEGATIVE_AND_POSITIVE_ZERO_ARE_EQUAL";
    ZeroEqualityAlgorithm["NEGATIVE_AND_POSITIVE_ZERO_NOT_EQUAL"] = "NEGATIVE_AND_POSITIVE_ZERO_NOT_EQUAL";
})(ZeroEqualityAlgorithm = exports.ZeroEqualityAlgorithm || (exports.ZeroEqualityAlgorithm = {}));
function isEqual(a, b, zeroEqualityAlgorithm) {
    if (zeroEqualityAlgorithm == ZeroEqualityAlgorithm.NEGATIVE_AND_POSITIVE_ZERO_ARE_EQUAL &&
        a.isZero &&
        b.isZero) {
        return true;
    }
    if (a.isInteger != b.isInteger) {
        return false;
    }
    if (a.isNegative != b.isNegative) {
        return false;
    }
    if (a.isZero != b.isZero) {
        return false;
    }
    if (!BigIntUtil.equal(a.fixedPointIntegerPartLength, b.fixedPointIntegerPartLength)) {
        return false;
    }
    if (!BigIntUtil.equal(a.fixedPointFractionalPartLength, b.fixedPointFractionalPartLength)) {
        return false;
    }
    if (!BigIntUtil.equal(a.fixedPointLength, b.fixedPointLength)) {
        return false;
    }
    return (a.getFixedPointString() ==
        b.getFixedPointString());
}
exports.isEqual = isEqual;
//# sourceMappingURL=is-equal.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/fixed-point-util/try-parse.js":
/*!****************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/fixed-point-util/try-parse.js ***!
  \****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var FloatingPointUtil = __webpack_require__(/*! ../floating-point-util */ "../tsql/node_modules/type-mapping/dist/floating-point-util/index.js");
var type_util_1 = __webpack_require__(/*! ../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var BigIntUtil = __webpack_require__(/*! ../bigint-util */ "../tsql/node_modules/type-mapping/dist/bigint-util/index.js");
var string_util_1 = __webpack_require__(/*! ../string-util */ "../tsql/node_modules/type-mapping/dist/string-util/index.js");
function lazyInit(initDelegate) {
    var initialized = false;
    var value = undefined;
    return function () {
        if (!initialized) {
            value = initDelegate();
            initialized = true;
        }
        return value;
    };
}
/**
 * @todo Make `getXxx()` functions cache results
 */
function tryParse(str) {
    var parsed = FloatingPointUtil.tryParse(str);
    if (parsed == undefined) {
        return undefined;
    }
    var _a = FloatingPointUtil.toIntegerAndExponent(parsed), isNegative = _a.isNegative, integerPart = _a.integerPart, isZero = _a.isZero, exponentValue = _a.exponentValue;
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    if (isZero) {
        var fixedPointIntegerPartLength = BigInt(1);
        var fixedPointFractionalPartLength = BigInt(1);
        var fixedPointLength = BigIntUtil.addMany((isNegative ? BigInt(1) : BigInt(0)), fixedPointIntegerPartLength, BigInt(1), fixedPointFractionalPartLength);
        var getFixedPointIntegerPartString_1 = function () { return "0"; };
        var getFixedPointFractionalPartString_1 = function () { return "0"; };
        var getFixedPointString = lazyInit(function () {
            var sign = isNegative ? "-" : "";
            return (sign +
                getFixedPointIntegerPartString_1() +
                "." +
                getFixedPointFractionalPartString_1());
        });
        return {
            isInteger: true,
            isNegative: isNegative,
            isZero: isZero,
            fixedPointIntegerPartLength: fixedPointIntegerPartLength,
            fixedPointFractionalPartLength: fixedPointFractionalPartLength,
            fixedPointLength: fixedPointLength,
            getFixedPointIntegerPartString: getFixedPointIntegerPartString_1,
            getFixedPointFractionalPartString: getFixedPointFractionalPartString_1,
            getFixedPointString: getFixedPointString,
        };
    }
    if (BigIntUtil.greaterThanOrEqual(exponentValue, 0)) {
        var fixedPointIntegerPartLength = BigIntUtil.add(BigInt(integerPart.length), exponentValue);
        var fixedPointFractionalPartLength = BigInt(1);
        var fixedPointLength = BigIntUtil.addMany((isNegative ? BigInt(1) : BigInt(0)), fixedPointIntegerPartLength, BigInt(1), fixedPointFractionalPartLength);
        var getFixedPointIntegerPartString_2 = lazyInit(function () { return (integerPart + string_util_1.stringRepeat("0", BigIntUtil.toNumber(exponentValue))); });
        var getFixedPointFractionalPartString_2 = function () { return "0"; };
        var getFixedPointString = lazyInit(function () {
            var sign = isNegative ? "-" : "";
            return (sign +
                getFixedPointIntegerPartString_2() +
                "." +
                getFixedPointFractionalPartString_2());
        });
        return {
            isInteger: true,
            isNegative: isNegative,
            isZero: isZero,
            fixedPointIntegerPartLength: fixedPointIntegerPartLength,
            fixedPointFractionalPartLength: fixedPointFractionalPartLength,
            fixedPointLength: fixedPointLength,
            getFixedPointIntegerPartString: getFixedPointIntegerPartString_2,
            getFixedPointFractionalPartString: getFixedPointFractionalPartString_2,
            getFixedPointString: getFixedPointString,
        };
    }
    else {
        var fractionalOffset = BigIntUtil.mul(exponentValue, -1);
        if (BigIntUtil.lessThan(fractionalOffset, integerPart.length)) {
            var newIntegerPart_1 = integerPart.substring(0, integerPart.length - BigIntUtil.toNumber(fractionalOffset));
            var newFractionalPart_1 = integerPart.substring(integerPart.length - BigIntUtil.toNumber(fractionalOffset), integerPart.length).replace(/(0+)$/, "");
            if (newFractionalPart_1 == "") {
                newFractionalPart_1 = "0";
            }
            var fixedPointIntegerPartLength = BigInt(newIntegerPart_1.length);
            var fixedPointFractionalPartLength = BigInt(newFractionalPart_1.length);
            var fixedPointLength = BigIntUtil.addMany((isNegative ? BigInt(1) : BigInt(0)), fixedPointIntegerPartLength, BigInt(1), fixedPointFractionalPartLength);
            var getFixedPointIntegerPartString_3 = function () { return newIntegerPart_1; };
            var getFixedPointFractionalPartString_3 = function () { return newFractionalPart_1; };
            var getFixedPointString = lazyInit(function () {
                var sign = isNegative ? "-" : "";
                return (sign +
                    getFixedPointIntegerPartString_3() +
                    "." +
                    getFixedPointFractionalPartString_3());
            });
            return {
                isInteger: (newFractionalPart_1 == "0"),
                isNegative: isNegative,
                isZero: isZero,
                fixedPointIntegerPartLength: fixedPointIntegerPartLength,
                fixedPointFractionalPartLength: fixedPointFractionalPartLength,
                fixedPointLength: fixedPointLength,
                getFixedPointIntegerPartString: getFixedPointIntegerPartString_3,
                getFixedPointFractionalPartString: getFixedPointFractionalPartString_3,
                getFixedPointString: getFixedPointString,
            };
        }
        else if (BigIntUtil.equal(fractionalOffset, BigInt(integerPart.length))) {
            var newFractionalPart_2 = integerPart.replace(/(0+)$/, "");
            if (newFractionalPart_2 == "") {
                newFractionalPart_2 = "0";
            }
            var fixedPointIntegerPartLength = BigInt(1);
            var fixedPointFractionalPartLength = BigInt(newFractionalPart_2.length);
            var fixedPointLength = BigIntUtil.addMany((isNegative ? BigInt(1) : BigInt(0)), fixedPointIntegerPartLength, BigInt(1), fixedPointFractionalPartLength);
            var getFixedPointIntegerPartString_4 = function () { return ("0"); };
            var getFixedPointFractionalPartString_4 = function () { return newFractionalPart_2; };
            var getFixedPointString = lazyInit(function () {
                var sign = isNegative ? "-" : "";
                return (sign +
                    getFixedPointIntegerPartString_4() +
                    "." +
                    getFixedPointFractionalPartString_4());
            });
            return {
                isInteger: (newFractionalPart_2 == "0"),
                isNegative: isNegative,
                isZero: isZero,
                fixedPointIntegerPartLength: fixedPointIntegerPartLength,
                fixedPointFractionalPartLength: fixedPointFractionalPartLength,
                fixedPointLength: fixedPointLength,
                getFixedPointIntegerPartString: getFixedPointIntegerPartString_4,
                getFixedPointFractionalPartString: getFixedPointFractionalPartString_4,
                getFixedPointString: getFixedPointString,
            };
        }
        else {
            var leadingZeroCount_1 = BigIntUtil.sub(fractionalOffset, BigInt(integerPart.length));
            var newFractionalPart_3 = integerPart.replace(/(0+)$/, "");
            if (newFractionalPart_3 == "") {
                leadingZeroCount_1 = BigInt(0);
                newFractionalPart_3 = "0";
            }
            var fixedPointIntegerPartLength = BigInt(1);
            var fixedPointFractionalPartLength = BigIntUtil.add(leadingZeroCount_1, BigInt(newFractionalPart_3.length));
            var fixedPointLength = BigIntUtil.addMany((isNegative ? BigInt(1) : BigInt(0)), fixedPointIntegerPartLength, BigInt(1), fixedPointFractionalPartLength);
            var getFixedPointIntegerPartString_5 = function () { return ("0"); };
            var getFixedPointFractionalPartString_5 = lazyInit(function () { return (string_util_1.stringRepeat("0", BigIntUtil.toNumber(leadingZeroCount_1)) +
                newFractionalPart_3); });
            var getFixedPointString = lazyInit(function () {
                var sign = isNegative ? "-" : "";
                return (sign +
                    getFixedPointIntegerPartString_5() +
                    "." +
                    getFixedPointFractionalPartString_5());
            });
            return {
                isInteger: (newFractionalPart_3 == "0"),
                isNegative: isNegative,
                isZero: isZero,
                fixedPointIntegerPartLength: fixedPointIntegerPartLength,
                fixedPointFractionalPartLength: fixedPointFractionalPartLength,
                fixedPointLength: fixedPointLength,
                getFixedPointIntegerPartString: getFixedPointIntegerPartString_5,
                getFixedPointFractionalPartString: getFixedPointFractionalPartString_5,
                getFixedPointString: getFixedPointString,
            };
        }
    }
}
exports.tryParse = tryParse;
//# sourceMappingURL=try-parse.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/floating-point-util/index.js":
/*!***************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/floating-point-util/index.js ***!
  \***************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./to-integer-and-exponent */ "../tsql/node_modules/type-mapping/dist/floating-point-util/to-integer-and-exponent.js"));
__export(__webpack_require__(/*! ./try-parse */ "../tsql/node_modules/type-mapping/dist/floating-point-util/try-parse.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/floating-point-util/to-integer-and-exponent.js":
/*!*********************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/floating-point-util/to-integer-and-exponent.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var BigIntUtil = __webpack_require__(/*! ../bigint-util */ "../tsql/node_modules/type-mapping/dist/bigint-util/index.js");
/**
 * Converts the fractional part to an integer part,
 * by lowering the exponent
 */
function toIntegerAndExponent(arg) {
    if (arg.fractionalPart == "0") {
        return arg;
    }
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    var exponentValue = BigIntUtil.sub(arg.exponentValue, BigInt(arg.fractionalPart.length));
    var integerPart = (arg.integerPart == "0" ?
        arg.fractionalPart.replace(/^(0+)/, "") :
        arg.integerPart + arg.fractionalPart);
    return {
        isNegative: arg.isNegative,
        integerPart: integerPart,
        fractionalPart: "0",
        isZero: arg.isZero,
        exponentValue: exponentValue,
    };
}
exports.toIntegerAndExponent = toIntegerAndExponent;
//# sourceMappingURL=to-integer-and-exponent.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/floating-point-util/try-parse.js":
/*!*******************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/floating-point-util/try-parse.js ***!
  \*******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var BigIntUtil = __webpack_require__(/*! ../bigint-util */ "../tsql/node_modules/type-mapping/dist/bigint-util/index.js");
exports.floatingPointRegex = /^([-+])?([0-9]+\.?[0-9]*|[0-9]*\.?[0-9]+)([eE]([-+])?([0-9]+))?$/;
function tryParse(str) {
    var m = exports.floatingPointRegex.exec(str);
    if (m == undefined) {
        return undefined;
    }
    //-123.456e+789
    //~
    var rawCoefficientSign = m[1];
    //-123.456e+789
    // ~~~~~~~
    var rawCoefficientValue = m[2];
    //-123.456e+789
    //         ~
    var rawExponentSign = m[4];
    //-123.456e+789
    //          ~~~
    var rawExponentValue = m[5];
    var rawDecimalPlaceIndex = rawCoefficientValue.indexOf(".");
    var rawIntegerPart = (rawDecimalPlaceIndex < 0 ?
        rawCoefficientValue :
        rawCoefficientValue.substring(0, rawDecimalPlaceIndex));
    var rawFractionalPart = (rawDecimalPlaceIndex < 0 ?
        "" :
        rawCoefficientValue.substring(rawDecimalPlaceIndex + 1, rawCoefficientValue.length));
    var trimmedIntegerPart = rawIntegerPart.replace(/^(0+)/, "");
    var integerPart = (trimmedIntegerPart == "" ?
        "0" :
        trimmedIntegerPart);
    var trimmedFractionalPart = rawFractionalPart.replace(/(0+)$/, "");
    var fractionalPart = (trimmedFractionalPart == "" ?
        "0" :
        trimmedFractionalPart);
    var isZero = (integerPart == "0" && fractionalPart == "0");
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    var exponentValue = (isZero ?
        BigInt(0) :
        rawExponentValue == undefined ?
            BigInt(0) :
            BigIntUtil.mul(BigInt(rawExponentValue), BigInt((rawExponentSign === "-") ?
                -1 :
                1)));
    return {
        isNegative: (rawCoefficientSign === "-"),
        integerPart: integerPart,
        fractionalPart: fractionalPart,
        isZero: isZero,
        exponentValue: exponentValue,
    };
}
exports.tryParse = tryParse;
//# sourceMappingURL=try-parse.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/fluent-lib/field-map-ctor.js":
/*!***************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/fluent-lib/field-map-ctor.js ***!
  \***************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fluent_mapper_1 = __webpack_require__(/*! ../fluent-mapper */ "../tsql/node_modules/type-mapping/dist/fluent-mapper.js");
/**
    Constructs multiple `Field<>` instances at once,
    that are also `FluentMapper<>` instances
*/
function fields(map) {
    var result = {};
    for (var name in map) {
        if (!map.hasOwnProperty(name)) {
            continue;
        }
        result[name] = fluent_mapper_1.fluentMapper(map[name]).withName(name);
    }
    return result;
}
exports.fields = fields;
//# sourceMappingURL=field-map-ctor.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/fluent-lib/generic.js":
/*!********************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/fluent-lib/generic.js ***!
  \********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var m = __webpack_require__(/*! ../functional-lib */ "../tsql/node_modules/type-mapping/dist/functional-lib/index.js");
var fluent_mapper_1 = __webpack_require__(/*! ../fluent-mapper */ "../tsql/node_modules/type-mapping/dist/fluent-mapper.js");
function arrayLike(f) {
    return fluent_mapper_1.fluentMapper(m.arrayLike(f));
}
exports.arrayLike = arrayLike;
function arrayLikeToArray(f) {
    return fluent_mapper_1.fluentMapper(m.arrayLikeToArray(f));
}
exports.arrayLikeToArray = arrayLikeToArray;
function arrayLikeToReadOnlyArray(f) {
    return fluent_mapper_1.fluentMapper(m.arrayLikeToReadOnlyArray(f));
}
exports.arrayLikeToReadOnlyArray = arrayLikeToReadOnlyArray;
function array(f) {
    return fluent_mapper_1.fluentMapper(m.array(f));
}
exports.array = array;
function readOnlyArray(f) {
    return fluent_mapper_1.fluentMapper(m.readOnlyArray(f));
}
exports.readOnlyArray = readOnlyArray;
function castEnumFlyweight(e) {
    var src = m.castEnumFlyweight(e);
    var result = {
        toValue: {},
        toKey: {},
    };
    for (var k in src.toValue) {
        if (!src.toValue.hasOwnProperty(k)) {
            continue;
        }
        result.toValue[k] = fluent_mapper_1.fluentMapper(src.toValue[k]);
    }
    for (var k in src.toKey) {
        if (!src.toKey.hasOwnProperty(k)) {
            continue;
        }
        result.toKey[k] = fluent_mapper_1.fluentMapper(src.toKey[k]);
    }
    return result;
}
exports.castEnumFlyweight = castEnumFlyweight;
function toEnumValue(e) {
    return fluent_mapper_1.fluentMapper(m.toEnumValue(e));
}
exports.toEnumValue = toEnumValue;
function toEnumKey(e) {
    return fluent_mapper_1.fluentMapper(m.toEnumKey(e));
}
exports.toEnumKey = toEnumKey;
function toOneEnumValue(e, k) {
    return fluent_mapper_1.fluentMapper(m.toOneEnumValue(e, k));
}
exports.toOneEnumValue = toOneEnumValue;
function toOneEnumKey(e, k) {
    return fluent_mapper_1.fluentMapper(m.toOneEnumKey(e, k));
}
exports.toOneEnumKey = toOneEnumKey;
function enumKey(e) {
    return fluent_mapper_1.fluentMapper(m.enumKey(e));
}
exports.enumKey = enumKey;
function enumValue(e) {
    return fluent_mapper_1.fluentMapper(m.enumValue(e));
}
exports.enumValue = enumValue;
function unsafeLiteral() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.unsafeLiteral.apply(m, arr));
}
exports.unsafeLiteral = unsafeLiteral;
function literal(arg0) {
    var arr = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        arr[_i - 1] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.literal.apply(m, [arg0].concat(arr)));
}
exports.literal = literal;
function tupleLiteral() {
    var tuple = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        tuple[_i] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.tupleLiteral.apply(m, tuple));
}
exports.tupleLiteral = tupleLiteral;
function deriveMap(map) {
    return fluent_mapper_1.fluentMapper(m.deriveMap(map));
}
exports.deriveMap = deriveMap;
function derive(srcKey, dstKey, f) {
    return fluent_mapper_1.fluentMapper(m.derive(srcKey, dstKey, f));
}
exports.derive = derive;
function instanceOf(ctor) {
    return fluent_mapper_1.fluentMapper(m.instanceOf(ctor));
}
exports.instanceOf = instanceOf;
function objectFromArray() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.objectFromArray.apply(m, arr));
}
exports.objectFromArray = objectFromArray;
function objectFromMap(map) {
    return fluent_mapper_1.fluentMapper(m.objectFromMap(map));
}
exports.objectFromMap = objectFromMap;
exports.object = function () {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.object.apply(m, arr));
};
function partialDeriveMap(map) {
    return fluent_mapper_1.fluentMapper(m.partialDeriveMap(map));
}
exports.partialDeriveMap = partialDeriveMap;
function partialObjectFromArray() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.partialObjectFromArray.apply(m, arr));
}
exports.partialObjectFromArray = partialObjectFromArray;
function partialObjectFromMap(map) {
    return fluent_mapper_1.fluentMapper(m.partialObjectFromMap(map));
}
exports.partialObjectFromMap = partialObjectFromMap;
exports.partialObject = function () {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.partialObject.apply(m, arr));
};
function partialRenameMap(map) {
    return fluent_mapper_1.fluentMapper(m.partialRenameMap(map));
}
exports.partialRenameMap = partialRenameMap;
function renameMap(map) {
    return fluent_mapper_1.fluentMapper(m.renameMap(map));
}
exports.renameMap = renameMap;
function rename(srcKey, dstKey, f) {
    return fluent_mapper_1.fluentMapper(m.rename(srcKey, dstKey, f));
}
exports.rename = rename;
function unsafeStringIndexer(f) {
    return fluent_mapper_1.fluentMapper(m.unsafeStringIndexer(f));
}
exports.unsafeStringIndexer = unsafeStringIndexer;
function stringIndexer(f) {
    return fluent_mapper_1.fluentMapper(m.stringIndexer(f));
}
exports.stringIndexer = stringIndexer;
function cache(cached, f) {
    return fluent_mapper_1.fluentMapper(m.cache(cached, f));
}
exports.cache = cache;
function cast(srcDelegate, castDelegate, dstDelegate) {
    return fluent_mapper_1.fluentMapper(m.cast(srcDelegate, castDelegate, dstDelegate));
}
exports.cast = cast;
function unsafeDeepMerge() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.unsafeDeepMerge.apply(m, arr));
}
exports.unsafeDeepMerge = unsafeDeepMerge;
function deepMerge(f) {
    var arr = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        arr[_i - 1] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.deepMerge.apply(m, [f].concat(arr)));
}
exports.deepMerge = deepMerge;
function unsafeDiscriminatedUnion(discriminantK) {
    var arr = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        arr[_i - 1] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.unsafeDiscriminatedUnion.apply(m, [discriminantK].concat(arr)));
}
exports.unsafeDiscriminatedUnion = unsafeDiscriminatedUnion;
function discriminatedUnion(discriminantK, f) {
    var arr = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        arr[_i - 2] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.discriminatedUnion.apply(m, [discriminantK, f].concat(arr)));
}
exports.discriminatedUnion = discriminatedUnion;
function excludeLiteral(f) {
    var arr = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        arr[_i - 1] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.excludeLiteral.apply(m, [f].concat(arr)));
}
exports.excludeLiteral = excludeLiteral;
function orUndefined(f) {
    return fluent_mapper_1.fluentMapper(m.orUndefined(f));
}
exports.orUndefined = orUndefined;
function orNull(f) {
    return fluent_mapper_1.fluentMapper(m.orNull(f));
}
exports.orNull = orNull;
function orMaybe(f) {
    return fluent_mapper_1.fluentMapper(m.orMaybe(f));
}
exports.orMaybe = orMaybe;
function notUndefined(f) {
    return fluent_mapper_1.fluentMapper(m.notUndefined(f));
}
exports.notUndefined = notUndefined;
function notNull(f) {
    return fluent_mapper_1.fluentMapper(m.notNull(f));
}
exports.notNull = notNull;
function notMaybe(f) {
    return fluent_mapper_1.fluentMapper(m.notMaybe(f));
}
exports.notMaybe = notMaybe;
function optional(f) {
    return fluent_mapper_1.fluentMapper(m.optional(f));
}
exports.optional = optional;
function notOptional(f) {
    return fluent_mapper_1.fluentMapper(m.notOptional(f));
}
exports.notOptional = notOptional;
function unsafeOr() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.unsafeOr.apply(m, arr));
}
exports.unsafeOr = unsafeOr;
function or(f) {
    var arr = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        arr[_i - 1] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.or.apply(m, [f].concat(arr)));
}
exports.or = or;
exports.pipe = function () {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.reallyUnsafePipe.apply(m, arr));
};
function unsafePipe(f) {
    var arr = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        arr[_i - 1] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.unsafePipe.apply(m, [f].concat(arr)));
}
exports.unsafePipe = unsafePipe;
function reallyUnsafePipe() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.reallyUnsafePipe.apply(m, arr));
}
exports.reallyUnsafePipe = reallyUnsafePipe;
function deferred() {
    return fluent_mapper_1.fluentMapper(m.deferred());
}
exports.deferred = deferred;
//# sourceMappingURL=generic.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js":
/*!******************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/fluent-lib/index.js ***!
  \******************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path="../buffer.d.ts" />
var non_generic_1 = __webpack_require__(/*! ./non-generic */ "../tsql/node_modules/type-mapping/dist/fluent-lib/non-generic.js");
exports.null = non_generic_1.null;
/**
    Export generated with `npm run generate-fluent-lib-export`

    The export generation script is needed because of this,
    https://github.com/microsoft/TypeScript/issues/31824
*/
var non_generic_2 = __webpack_require__(/*! ./non-generic */ "../tsql/node_modules/type-mapping/dist/fluent-lib/non-generic.js");
exports.unsafeAny = non_generic_2.unsafeAny;
exports.instanceOfArray = non_generic_2.instanceOfArray;
exports.instanceOfReadOnlyArray = non_generic_2.instanceOfReadOnlyArray;
exports.implementsArrayLike = non_generic_2.implementsArrayLike;
exports.length = non_generic_2.length;
exports.bigInt = non_generic_2.bigInt;
exports.unsignedBigInt = non_generic_2.unsignedBigInt;
exports.stringToBigInt = non_generic_2.stringToBigInt;
exports.stringToUnsignedBigInt = non_generic_2.stringToUnsignedBigInt;
exports.integerToBigInt = non_generic_2.integerToBigInt;
exports.unsignedIntegerToUnsignedBigInt = non_generic_2.unsignedIntegerToUnsignedBigInt;
exports.toBigInt = non_generic_2.toBigInt;
exports.toUnsignedBigInt = non_generic_2.toUnsignedBigInt;
exports.bigIntGt = non_generic_2.bigIntGt;
exports.bigIntLt = non_generic_2.bigIntLt;
exports.bigIntGtEq = non_generic_2.bigIntGtEq;
exports.bigIntLtEq = non_generic_2.bigIntLtEq;
exports.bigIntRange = non_generic_2.bigIntRange;
exports.boolean = non_generic_2.boolean;
exports.finiteNumberToBoolean = non_generic_2.finiteNumberToBoolean;
exports.stringToBoolean = non_generic_2.stringToBoolean;
exports.finiteNumberToTrue = non_generic_2.finiteNumberToTrue;
exports.finiteNumberToFalse = non_generic_2.finiteNumberToFalse;
exports.stringToTrue = non_generic_2.stringToTrue;
exports.stringToFalse = non_generic_2.stringToFalse;
exports.toBoolean = non_generic_2.toBoolean;
exports.toTrue = non_generic_2.toTrue;
exports.toFalse = non_generic_2.toFalse;
exports.instanceOfBuffer = non_generic_2.instanceOfBuffer;
exports.bufferLength = non_generic_2.bufferLength;
exports.bufferExactLength = non_generic_2.bufferExactLength;
exports.unsafeStringToDate = non_generic_2.unsafeStringToDate;
exports.dateToString = non_generic_2.dateToString;
exports.unixTimestampSecondsToDate = non_generic_2.unixTimestampSecondsToDate;
exports.unixTimestampMillisecondsToDate = non_generic_2.unixTimestampMillisecondsToDate;
exports.dateToUnixTimestampSeconds = non_generic_2.dateToUnixTimestampSeconds;
exports.dateToUnixTimestampMilliseconds = non_generic_2.dateToUnixTimestampMilliseconds;
exports.instanceOfDate = non_generic_2.instanceOfDate;
exports.stringToJsonObject = non_generic_2.stringToJsonObject;
exports.jsonObject = non_generic_2.jsonObject;
exports.never = non_generic_2.never;
exports.nonMaybe = non_generic_2.nonMaybe;
exports.undefinedToNull = non_generic_2.undefinedToNull;
exports.emptyStringToNull = non_generic_2.emptyStringToNull;
exports.whitespaceStringToNull = non_generic_2.whitespaceStringToNull;
exports.stringToFiniteNumber = non_generic_2.stringToFiniteNumber;
exports.stringToInteger = non_generic_2.stringToInteger;
exports.stringToUnsignedInteger = non_generic_2.stringToUnsignedInteger;
exports.toFiniteNumber = non_generic_2.toFiniteNumber;
exports.toInteger = non_generic_2.toInteger;
exports.toUnsignedInteger = non_generic_2.toUnsignedInteger;
exports.gt = non_generic_2.gt;
exports.lt = non_generic_2.lt;
exports.gtEq = non_generic_2.gtEq;
exports.ltEq = non_generic_2.ltEq;
exports.range = non_generic_2.range;
exports.unsafeNumber = non_generic_2.unsafeNumber;
exports.finiteNumber = non_generic_2.finiteNumber;
exports.integer = non_generic_2.integer;
exports.unsignedInteger = non_generic_2.unsignedInteger;
exports.toEmptyObject = non_generic_2.toEmptyObject;
exports.instanceOfObject = non_generic_2.instanceOfObject;
exports.pojo = non_generic_2.pojo;
exports.runTimeRequired = non_generic_2.runTimeRequired;
exports.notRunTimeRequired = non_generic_2.notRunTimeRequired;
exports.finiteNumberToFiniteNumberString = non_generic_2.finiteNumberToFiniteNumberString;
exports.integerToIntegerString = non_generic_2.integerToIntegerString;
exports.unsignedIntegerToUnsignedIntegerString = non_generic_2.unsignedIntegerToUnsignedIntegerString;
exports.jsonObjectToJsonObjectString = non_generic_2.jsonObjectToJsonObjectString;
exports.ipAddressString = non_generic_2.ipAddressString;
exports.ipV4MappedIpV6String = non_generic_2.ipV4MappedIpV6String;
exports.ipV4OctetString = non_generic_2.ipV4OctetString;
exports.ipV4String = non_generic_2.ipV4String;
exports.ipV6SegmentString = non_generic_2.ipV6SegmentString;
exports.ipV6StringWithMaxSegmentCount = non_generic_2.ipV6StringWithMaxSegmentCount;
exports.ipV6String = non_generic_2.ipV6String;
exports.floatingPointFormatString = non_generic_2.floatingPointFormatString;
exports.integerFormatString = non_generic_2.integerFormatString;
exports.unsignedIntegerFormatString = non_generic_2.unsignedIntegerFormatString;
exports.finiteNumberString = non_generic_2.finiteNumberString;
exports.integerString = non_generic_2.integerString;
exports.unsignedIntegerString = non_generic_2.unsignedIntegerString;
exports.string = non_generic_2.string;
exports.jsonObjectString = non_generic_2.jsonObjectString;
exports.stringLength = non_generic_2.stringLength;
exports.stringExactLength = non_generic_2.stringExactLength;
exports.match = non_generic_2.match;
exports.notMatch = non_generic_2.notMatch;
exports.email = non_generic_2.email;
exports.emailAddress = non_generic_2.emailAddress;
exports.hexadecimalString = non_generic_2.hexadecimalString;
exports.toUpperCase = non_generic_2.toUpperCase;
exports.toLowerCase = non_generic_2.toLowerCase;
exports.padLeft = non_generic_2.padLeft;
exports.padRight = non_generic_2.padRight;
exports.subStringBlacklist = non_generic_2.subStringBlacklist;
exports.toTrimmed = non_generic_2.toTrimmed;
exports.byteLength = non_generic_2.byteLength;
exports.instanceOfUint8Array = non_generic_2.instanceOfUint8Array;
exports.uint8ArrayLength = non_generic_2.uint8ArrayLength;
exports.uint8ArrayExactLength = non_generic_2.uint8ArrayExactLength;
exports.nullToUndefined = non_generic_2.nullToUndefined;
exports.emptyStringToUndefined = non_generic_2.emptyStringToUndefined;
exports.whitespaceStringToUndefined = non_generic_2.whitespaceStringToUndefined;
exports.undefined = non_generic_2.undefined;
exports.unknown = non_generic_2.unknown;
__export(__webpack_require__(/*! ./generic */ "../tsql/node_modules/type-mapping/dist/fluent-lib/generic.js"));
__export(__webpack_require__(/*! ./field-map-ctor */ "../tsql/node_modules/type-mapping/dist/fluent-lib/field-map-ctor.js"));
var ArrayBufferUtil = __webpack_require__(/*! ../array-buffer-util */ "../tsql/node_modules/type-mapping/dist/array-buffer-util/index.js");
exports.ArrayBufferUtil = ArrayBufferUtil;
var EnumUtil = __webpack_require__(/*! ../enum-util */ "../tsql/node_modules/type-mapping/dist/enum-util/index.js");
exports.EnumUtil = EnumUtil;
var BigIntUtil = __webpack_require__(/*! ../bigint-util */ "../tsql/node_modules/type-mapping/dist/bigint-util/index.js");
exports.BigIntUtil = BigIntUtil;
var FixedPointUtil = __webpack_require__(/*! ../fixed-point-util */ "../tsql/node_modules/type-mapping/dist/fixed-point-util/index.js");
exports.FixedPointUtil = FixedPointUtil;
var FloatingPointUtil = __webpack_require__(/*! ../floating-point-util */ "../tsql/node_modules/type-mapping/dist/floating-point-util/index.js");
exports.FloatingPointUtil = FloatingPointUtil;
__export(__webpack_require__(/*! ../decorator */ "../tsql/node_modules/type-mapping/dist/decorator/index.js"));
var ErrorUtil = __webpack_require__(/*! ../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
exports.ErrorUtil = ErrorUtil;
var jsonApi = __webpack_require__(/*! ../json-api-lib */ "../tsql/node_modules/type-mapping/dist/json-api-lib/index.js");
exports.jsonApi = jsonApi;
__export(__webpack_require__(/*! ../mapper */ "../tsql/node_modules/type-mapping/dist/mapper/index.js"));
var mysql = __webpack_require__(/*! ../mysql-lib */ "../tsql/node_modules/type-mapping/dist/mysql-lib/index.js");
exports.mysql = mysql;
var TypeUtil = __webpack_require__(/*! ../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
exports.TypeUtil = TypeUtil;
__export(__webpack_require__(/*! ../error-code */ "../tsql/node_modules/type-mapping/dist/error-code.js"));
__export(__webpack_require__(/*! ../fluent-mapper */ "../tsql/node_modules/type-mapping/dist/fluent-mapper.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/fluent-lib/non-generic.js":
/*!************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/fluent-lib/non-generic.js ***!
  \************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var m = __webpack_require__(/*! ../functional-lib */ "../tsql/node_modules/type-mapping/dist/functional-lib/index.js");
var fluent_mapper_1 = __webpack_require__(/*! ../fluent-mapper */ "../tsql/node_modules/type-mapping/dist/fluent-mapper.js");
function omit(obj) {
    var keys = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        keys[_i - 1] = arguments[_i];
    }
    var result = __assign({}, obj);
    for (var _a = 0, keys_1 = keys; _a < keys_1.length; _a++) {
        var k = keys_1[_a];
        delete result[k];
    }
    return result;
}
function toFluentExport(obj) {
    var result = {};
    var _loop_1 = function (k) {
        if (!obj.hasOwnProperty(k)) {
            return "continue";
        }
        result[k] = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return fluent_mapper_1.fluentMapper(obj[k].apply(obj, args));
        };
    };
    for (var k in obj) {
        _loop_1(k);
    }
    return result;
}
//No need for omit<>() because `fluent-lib/index.ts`
//overwrites the generic functions with the ones
//in `fluent-lib/generic.ts`
var fluentExport = toFluentExport(omit(m, 
//Well, we need to omit this one because
//it doesn't return a SafeMapper<>
"castEnumFlyweight"));
module.exports = fluentExport;
//# sourceMappingURL=non-generic.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/fluent-mapper.js":
/*!***************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/fluent-mapper.js ***!
  \***************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ./mapper */ "../tsql/node_modules/type-mapping/dist/mapper/index.js");
var functional_lib_1 = __webpack_require__(/*! ./functional-lib */ "../tsql/node_modules/type-mapping/dist/functional-lib/index.js");
var type_util_1 = __webpack_require__(/*! ./type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
function fluentMapper(f) {
    var result = function (name, mixed) {
        return f(name, mixed);
    };
    result.__optional = mapper_1.getOptionalFlagOrFalse(f);
    //== mapper/debug ==
    result._debugIsExpectedInput = function (_x) {
    };
    result._debugIsHandledInput = function (_x) {
    };
    result._debugIsMappableInput = function (_x) {
    };
    result._debugIsOutput = function (_x) {
    };
    //== mapper/operation ==
    result.map = function (name, mixed) {
        return mapper_1.map(f, name, mixed);
    };
    result.mapExpected = function (name, mixed) {
        return mapper_1.mapExpected(f, name, mixed);
    };
    result.mapMappable = function (name, mixed) {
        return mapper_1.mapMappable(f, name, mixed);
    };
    result.mapHandled = function (name, mixed) {
        return mapper_1.mapHandled(f, name, mixed);
    };
    result.tryMap = function (name, mixed) {
        return mapper_1.tryMap(f, name, mixed);
    };
    result.tryMapExpected = function (name, mixed) {
        return mapper_1.tryMapExpected(f, name, mixed);
    };
    result.tryMapMappable = function (name, mixed) {
        return mapper_1.tryMapMappable(f, name, mixed);
    };
    result.tryMapHandled = function (name, mixed) {
        return mapper_1.tryMapHandled(f, name, mixed);
    };
    result.expectMappableInput = function () {
        return fluentMapper(mapper_1.expectMappableInput(f));
    };
    result.withExpectedInput = function () {
        return fluentMapper(mapper_1.withExpectedInput(f)());
    };
    result.withMapper = function (newMapper) {
        return fluentMapper(mapper_1.withMapper(f, newMapper));
    };
    result.withName = function (name) {
        return fluentMapper(mapper_1.withName(f, name));
    };
    //== array ==
    result.array = function () {
        return fluentMapper(functional_lib_1.array(f));
    };
    result.readOnlyArray = function () {
        return fluentMapper(functional_lib_1.readOnlyArray(f));
    };
    result.arrayLikeToArray = function () {
        return fluentMapper(functional_lib_1.arrayLikeToArray(f));
    };
    result.arrayLikeToReadOnlyArray = function () {
        return fluentMapper(functional_lib_1.arrayLikeToReadOnlyArray(f));
    };
    //== array-like ==
    result.arrayLike = function () {
        return fluentMapper(functional_lib_1.arrayLike(f));
    };
    // == object
    result.derive = function (srcKey, dstKey) {
        return fluentMapper(functional_lib_1.derive(srcKey, dstKey, f));
    };
    result.rename = function (srcKey, dstKey) {
        return fluentMapper(functional_lib_1.rename(srcKey, dstKey, f));
    };
    result.unsafeStringIndexer = function () {
        return fluentMapper(functional_lib_1.unsafeStringIndexer(f));
    };
    result.stringIndexer = function () {
        return fluentMapper(functional_lib_1.stringIndexer(f));
    };
    //== operator ==
    result.cast = function (castDelegate, dstDelegate) {
        return fluentMapper(functional_lib_1.cast(f, castDelegate, dstDelegate));
    };
    result.deepMerge = function () {
        var arr = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            arr[_i] = arguments[_i];
        }
        var result = functional_lib_1.deepMerge.apply(void 0, [f].concat(arr));
        return fluentMapper(result);
    };
    result.excludeLiteral = function () {
        var arr = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            arr[_i] = arguments[_i];
        }
        return fluentMapper(functional_lib_1.excludeLiteral.apply(void 0, [f].concat(arr)));
    };
    result.orUndefined = function () {
        return fluentMapper(functional_lib_1.orUndefined(f));
    };
    result.orNull = function () {
        return fluentMapper(functional_lib_1.orNull(f));
    };
    result.orMaybe = function () {
        return fluentMapper(functional_lib_1.orMaybe(f));
    };
    result.notUndefined = function () {
        return fluentMapper(functional_lib_1.notUndefined(f));
    };
    result.notNull = function () {
        return fluentMapper(functional_lib_1.notNull(f));
    };
    result.notMaybe = function () {
        return fluentMapper(functional_lib_1.notMaybe(f));
    };
    result.optional = function () {
        return fluentMapper(functional_lib_1.optional(f));
    };
    result.notOptional = function () {
        return fluentMapper(functional_lib_1.notOptional(f));
    };
    result.or = function () {
        var arr = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            arr[_i] = arguments[_i];
        }
        return fluentMapper(functional_lib_1.or.apply(void 0, [f].concat(arr)));
    };
    result.pipe = (function () {
        var arr = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            arr[_i] = arguments[_i];
        }
        return fluentMapper(functional_lib_1.unsafePipe.apply(void 0, [f].concat(arr)));
    });
    result.unsafePipe = function () {
        var arr = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            arr[_i] = arguments[_i];
        }
        return fluentMapper(functional_lib_1.unsafePipe.apply(void 0, [f].concat(arr)));
    };
    //== type ==
    result.setImplementation = function (impl) {
        f.setImplementation(impl);
    };
    //const rt : FluentMapper<AnySafeMapper> = result;
    return type_util_1.setFunctionName(result, mapper_1.getNameOrEmptyString(f));
}
exports.fluentMapper = fluentMapper;
/*
import {stringToUnsignedInteger, inclusiveRange} from "./functional-lib";
const n = stringToUnsignedInteger();
const x = fluentMapper(n);
x.__optional
x.__expectedInput
x.__mappableInput
const y = x
    .pipe(
        inclusiveRange({
            min : 3.141,
            max : 6.282,
        })
    )
    .derive("x", "y");
const opt = x.optional()
    .withName("qwerty");
//const x2 = x.withExpectedInput<any>();
//*/ 
//# sourceMappingURL=fluent-mapper.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/any/index.js":
/*!**************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/any/index.js ***!
  \**************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./unsafe-any */ "../tsql/node_modules/type-mapping/dist/functional-lib/any/unsafe-any.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/any/unsafe-any.js":
/*!*******************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/any/unsafe-any.js ***!
  \*******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Prefer to use `unknown()` instead.
 */
function unsafeAny() {
    return function (_name, mixed) {
        return mixed;
    };
}
exports.unsafeAny = unsafeAny;
//# sourceMappingURL=unsafe-any.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/array-like/array-like.js":
/*!**************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/array-like/array-like.js ***!
  \**************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "../tsql/node_modules/type-mapping/dist/mapper/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var implements_array_like_1 = __webpack_require__(/*! ./implements-array-like */ "../tsql/node_modules/type-mapping/dist/functional-lib/array-like/implements-array-like.js");
var string_util_1 = __webpack_require__(/*! ../../string-util */ "../tsql/node_modules/type-mapping/dist/string-util/index.js");
function copyArrayLike(arr) {
    var result = [];
    for (var i = 0; i < arr.length; ++i) {
        result.push(arr[i]);
    }
    return result;
}
function arrayLike(f) {
    return mapper_1.copyRunTimeModifier(f, operator_1.pipe(implements_array_like_1.implementsArrayLike(), function (name, mixed) {
        var result = mixed;
        var isCopy = false;
        for (var i = 0; i < mixed.length; ++i) {
            /**
             * For now, fail quick for array-likes.
             *
             * @todo Should we accumulate errors like in `objectFromMap()`?
             * The array-like might be too large. How large is too large?
             * Should we accumulate the first `n` errors before throwing?
             */
            var cur = f("" + name + string_util_1.toPropertyAccess(i), mixed[i]);
            //We do not mind === here.
            //If either is a BigInt polyfill, we are okay with the copy.
            if (cur === mixed[i]) {
                continue;
            }
            if (!isCopy) {
                result = copyArrayLike(result);
                isCopy = true;
            }
            result[i] = cur;
        }
        return result;
    }));
}
exports.arrayLike = arrayLike;
//# sourceMappingURL=array-like.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/array-like/implements-array-like.js":
/*!*************************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/array-like/implements-array-like.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var length_1 = __webpack_require__(/*! ./length */ "../tsql/node_modules/type-mapping/dist/functional-lib/array-like/length.js");
/**
    With this, a `string` will pass the check.

    ```ts
    const x : ArrayLike<string> = "test";
    console.log(x[0]);
    ```
*/
function implementsArrayLike() {
    return length_1.length({});
}
exports.implementsArrayLike = implementsArrayLike;
//# sourceMappingURL=implements-array-like.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/array-like/index.js":
/*!*********************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/array-like/index.js ***!
  \*********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./array-like */ "../tsql/node_modules/type-mapping/dist/functional-lib/array-like/array-like.js"));
__export(__webpack_require__(/*! ./implements-array-like */ "../tsql/node_modules/type-mapping/dist/functional-lib/array-like/implements-array-like.js"));
__export(__webpack_require__(/*! ./length */ "../tsql/node_modules/type-mapping/dist/functional-lib/array-like/length.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/array-like/length.js":
/*!**********************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/array-like/length.js ***!
  \**********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var object_1 = __webpack_require__(/*! ../object */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/index.js");
var number_1 = __webpack_require__(/*! ../number */ "../tsql/node_modules/type-mapping/dist/functional-lib/number/index.js");
var mapper_1 = __webpack_require__(/*! ../../mapper */ "../tsql/node_modules/type-mapping/dist/mapper/index.js");
var string_1 = __webpack_require__(/*! ../string */ "../tsql/node_modules/type-mapping/dist/functional-lib/string/index.js");
var operator_2 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var string_util_1 = __webpack_require__(/*! ../../string-util */ "../tsql/node_modules/type-mapping/dist/string-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
var error_code_1 = __webpack_require__(/*! ../../error-code */ "../tsql/node_modules/type-mapping/dist/error-code.js");
function length(args) {
    var lengthDelegate = operator_1.pipe(number_1.unsignedInteger(), number_1.range({
        gtEq: args.min,
        ltEq: args.max,
    }));
    var expected = ((args.min == undefined) ?
        ((args.max == undefined) ?
            "value with \"length\" property" :
            "value of length less than, or equal to " + args.max.toString()) :
        ((args.max == undefined) ?
            "value of length greater than, or equal to " + args.min.toString() :
            (args.min == args.max) ?
                "value of length " + args.min.toString() :
                "value of length between " + args.min.toString() + " and " + args.max.toString()));
    return operator_1.pipe(operator_2.or(object_1.instanceOfObject(), string_1.string()), function (name, mixed) {
        var lengthResult = mapper_1.tryMapHandled(lengthDelegate, "" + name + string_util_1.toPropertyAccess("length"), mixed.length);
        if (lengthResult.success) {
            return mixed;
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must be " + expected,
                inputName: name,
                actualValue: mixed,
                expected: expected,
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_LENGTH,
                    min: args.min,
                    max: args.max,
                },
                propertyErrors: [
                    lengthResult.mappingError,
                ],
            });
        }
    });
}
exports.length = length;
//# sourceMappingURL=length.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/array/array.js":
/*!****************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/array/array.js ***!
  \****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "../tsql/node_modules/type-mapping/dist/mapper/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var instance_of_array_1 = __webpack_require__(/*! ./instance-of-array */ "../tsql/node_modules/type-mapping/dist/functional-lib/array/instance-of-array.js");
var string_util_1 = __webpack_require__(/*! ../../string-util */ "../tsql/node_modules/type-mapping/dist/string-util/index.js");
function array(f) {
    return mapper_1.copyRunTimeModifier(f, operator_1.pipe(instance_of_array_1.instanceOfArray(), function (name, mixed) {
        var result = mixed;
        var isCopy = false;
        for (var i = 0; i < mixed.length; ++i) {
            /**
             * For now, fail quick for arrays.
             *
             * @todo Should we accumulate errors like in `objectFromMap()`?
             * The array might be too large. How large is too large?
             * Should we accumulate the first `n` errors before throwing?
             */
            var cur = f("" + name + string_util_1.toPropertyAccess(i), mixed[i]);
            //We do not mind === here.
            //If either is a BigInt polyfill, we are okay with the copy.
            if (cur === mixed[i]) {
                continue;
            }
            if (!isCopy) {
                result = result.slice();
                isCopy = true;
            }
            result[i] = cur;
        }
        return result;
    }));
}
exports.array = array;
function readOnlyArray(f) {
    return array(f);
}
exports.readOnlyArray = readOnlyArray;
//# sourceMappingURL=array.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/array/cast/array-like-to-array.js":
/*!***********************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/array/cast/array-like-to-array.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var operator_1 = __webpack_require__(/*! ../../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var array_like_1 = __webpack_require__(/*! ../../array-like */ "../tsql/node_modules/type-mapping/dist/functional-lib/array-like/index.js");
function arrayLikeToArray(f) {
    return operator_1.pipe(array_like_1.arrayLike(f), (function (_name, arrayLike) {
        if (arrayLike instanceof Array) {
            return arrayLike;
        }
        var result = [];
        for (var i = 0; i < arrayLike.length; ++i) {
            result.push(arrayLike[i]);
        }
        return result;
    }));
}
exports.arrayLikeToArray = arrayLikeToArray;
function arrayLikeToReadOnlyArray(f) {
    return arrayLikeToArray(f);
}
exports.arrayLikeToReadOnlyArray = arrayLikeToReadOnlyArray;
//# sourceMappingURL=array-like-to-array.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/array/cast/index.js":
/*!*********************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/array/cast/index.js ***!
  \*********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./array-like-to-array */ "../tsql/node_modules/type-mapping/dist/functional-lib/array/cast/array-like-to-array.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/array/index.js":
/*!****************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/array/index.js ***!
  \****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./cast */ "../tsql/node_modules/type-mapping/dist/functional-lib/array/cast/index.js"));
__export(__webpack_require__(/*! ./array */ "../tsql/node_modules/type-mapping/dist/functional-lib/array/array.js"));
__export(__webpack_require__(/*! ./instance-of-array */ "../tsql/node_modules/type-mapping/dist/functional-lib/array/instance-of-array.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/array/instance-of-array.js":
/*!****************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/array/instance-of-array.js ***!
  \****************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
var error_code_1 = __webpack_require__(/*! ../../error-code */ "../tsql/node_modules/type-mapping/dist/error-code.js");
function instanceOfArray() {
    return function (name, mixed) {
        if (!(mixed instanceof Array)) {
            throw error_util_1.makeMappingError({
                message: name + " must be instance of Array; received " + type_util_1.toTypeStr(mixed),
                inputName: name,
                actualValue: mixed,
                expected: "array",
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_TYPE,
                },
            });
        }
        return mixed;
    };
}
exports.instanceOfArray = instanceOfArray;
function instanceOfReadOnlyArray() {
    return instanceOfArray();
}
exports.instanceOfReadOnlyArray = instanceOfReadOnlyArray;
//# sourceMappingURL=instance-of-array.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/bigint/bigint.js":
/*!******************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/bigint/bigint.js ***!
  \******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var comparison_1 = __webpack_require__(/*! ./comparison */ "../tsql/node_modules/type-mapping/dist/functional-lib/bigint/comparison.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
var error_code_1 = __webpack_require__(/*! ../../error-code */ "../tsql/node_modules/type-mapping/dist/error-code.js");
function bigInt() {
    return function (name, mixed) {
        if (type_util_1.isBigInt(mixed)) {
            return mixed;
        }
        throw error_util_1.makeMappingError({
            message: name + " must be bigint; received " + type_util_1.toTypeStr(mixed),
            inputName: name,
            actualValue: mixed,
            expected: "bigint",
            expectedMeta: {
                errorCode: error_code_1.ErrorCode.EXPECTED_TYPE,
            },
        });
    };
}
exports.bigInt = bigInt;
/**
    bigint >= 0
*/
function unsignedBigInt() {
    var bigIntFactory = type_util_1.getBigIntFactoryFunctionOrError();
    return operator_1.pipe(bigInt(), comparison_1.bigIntGtEq(bigIntFactory(0)));
}
exports.unsignedBigInt = unsignedBigInt;
//# sourceMappingURL=bigint.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/bigint/cast.js":
/*!****************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/bigint/cast.js ***!
  \****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var string_1 = __webpack_require__(/*! ../string */ "../tsql/node_modules/type-mapping/dist/functional-lib/string/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var bigint_1 = __webpack_require__(/*! ./bigint */ "../tsql/node_modules/type-mapping/dist/functional-lib/bigint/bigint.js");
var type_util_1 = __webpack_require__(/*! ../../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var number_1 = __webpack_require__(/*! ../number */ "../tsql/node_modules/type-mapping/dist/functional-lib/number/index.js");
/**
    Uses `integerFormatString()` and `BigInt()` internally.
*/
function stringToBigInt() {
    var bigIntFactory = type_util_1.getBigIntFactoryFunctionOrError();
    return operator_1.cast(string_1.integerFormatString(), bigIntFactory, bigint_1.bigInt());
}
exports.stringToBigInt = stringToBigInt;
/**
    Uses `unsignedIntegerFormatString()` and `BigInt()` internally.
*/
function stringToUnsignedBigInt() {
    var bigIntFactory = type_util_1.getBigIntFactoryFunctionOrError();
    return operator_1.cast(string_1.unsignedIntegerFormatString(), bigIntFactory, bigint_1.unsignedBigInt());
}
exports.stringToUnsignedBigInt = stringToUnsignedBigInt;
function integerToBigInt() {
    var bigIntFactory = type_util_1.getBigIntFactoryFunctionOrError();
    return operator_1.cast(number_1.integer(), bigIntFactory, bigint_1.bigInt());
}
exports.integerToBigInt = integerToBigInt;
function unsignedIntegerToUnsignedBigInt() {
    var bigIntFactory = type_util_1.getBigIntFactoryFunctionOrError();
    return operator_1.cast(number_1.unsignedInteger(), bigIntFactory, bigint_1.unsignedBigInt());
}
exports.unsignedIntegerToUnsignedBigInt = unsignedIntegerToUnsignedBigInt;
/**
    Uses `integerFormatString()` and `BigInt()` internally.
*/
function toBigInt() {
    var bigIntFactory = type_util_1.getBigIntFactoryFunctionOrError();
    return operator_1.cast(operator_1.or(string_1.integerFormatString(), number_1.integer()), bigIntFactory, bigint_1.bigInt());
}
exports.toBigInt = toBigInt;
/**
    Uses `unsignedIntegerFormatString()` and `BigInt()` internally.
*/
function toUnsignedBigInt() {
    var bigIntFactory = type_util_1.getBigIntFactoryFunctionOrError();
    return operator_1.cast(operator_1.or(string_1.unsignedIntegerFormatString(), number_1.unsignedInteger()), bigIntFactory, bigint_1.unsignedBigInt());
}
exports.toUnsignedBigInt = toUnsignedBigInt;
//# sourceMappingURL=cast.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/bigint/comparison.js":
/*!**********************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/bigint/comparison.js ***!
  \**********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var bigint_1 = __webpack_require__(/*! ./bigint */ "../tsql/node_modules/type-mapping/dist/functional-lib/bigint/bigint.js");
var literal_1 = __webpack_require__(/*! ../literal */ "../tsql/node_modules/type-mapping/dist/functional-lib/literal/index.js");
var type_util_1 = __webpack_require__(/*! ../../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var bigint_util_1 = __webpack_require__(/*! ../../bigint-util */ "../tsql/node_modules/type-mapping/dist/bigint-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
var error_code_1 = __webpack_require__(/*! ../../error-code */ "../tsql/node_modules/type-mapping/dist/error-code.js");
function bigIntGt(x) {
    return operator_1.pipe(bigint_1.bigInt(), function (name, num) {
        if (bigint_util_1.greaterThan(num, x)) {
            return num;
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must be greater than " + type_util_1.toLiteralStr(x),
                inputName: name,
                actualValue: num,
                expected: "greater than " + type_util_1.toLiteralStr(x),
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_GREATER_THAN,
                    gt: x,
                },
            });
        }
    });
}
exports.bigIntGt = bigIntGt;
function bigIntLt(x) {
    return operator_1.pipe(bigint_1.bigInt(), function (name, num) {
        if (bigint_util_1.lessThan(num, x)) {
            return num;
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must be less than " + type_util_1.toLiteralStr(x),
                inputName: name,
                actualValue: num,
                expected: "less than " + type_util_1.toLiteralStr(x),
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_LESS_THAN,
                    lt: x,
                },
            });
        }
    });
}
exports.bigIntLt = bigIntLt;
function bigIntGtEq(x) {
    return operator_1.pipe(bigint_1.bigInt(), function (name, num) {
        if (bigint_util_1.greaterThanOrEqual(num, x)) {
            return num;
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must be greater than, or equal to " + type_util_1.toLiteralStr(x),
                inputName: name,
                actualValue: num,
                expected: "greater than, or equal to " + type_util_1.toLiteralStr(x),
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_GREATER_THAN_OR_EQUAL_TO,
                    gtEq: x,
                },
            });
        }
    });
}
exports.bigIntGtEq = bigIntGtEq;
function bigIntLtEq(x) {
    return operator_1.pipe(bigint_1.bigInt(), function (name, num) {
        if (bigint_util_1.lessThanOrEqual(num, x)) {
            return num;
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must be less than, or equal to " + type_util_1.toLiteralStr(x),
                inputName: name,
                actualValue: num,
                expected: "less than, or equal to " + type_util_1.toLiteralStr(x),
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_LESS_THAN_OR_EQUAL_TO,
                    ltEq: x,
                },
            });
        }
    });
}
exports.bigIntLtEq = bigIntLtEq;
function bigIntRange(args) {
    var min = ((type_util_1.isBigInt(args.gt)) ?
        ((type_util_1.isBigInt(args.gtEq)) ?
            ((bigint_util_1.greaterThanOrEqual(args.gt, args.gtEq)) ?
                {
                    f: bigIntGt(args.gt),
                    inclusive: false,
                    value: args.gt,
                } :
                {
                    f: bigIntGtEq(args.gtEq),
                    inclusive: true,
                    value: args.gtEq,
                }) :
            {
                f: bigIntGt(args.gt),
                inclusive: false,
                value: args.gt,
            }) :
        ((type_util_1.isBigInt(args.gtEq)) ?
            {
                f: bigIntGtEq(args.gtEq),
                inclusive: true,
                value: args.gtEq,
            } :
            undefined));
    var max = ((type_util_1.isBigInt(args.lt)) ?
        ((type_util_1.isBigInt(args.ltEq)) ?
            ((bigint_util_1.lessThanOrEqual(args.lt, args.ltEq)) ?
                {
                    f: bigIntLt(args.lt),
                    inclusive: false,
                    value: args.lt,
                } :
                {
                    f: bigIntLtEq(args.ltEq),
                    inclusive: true,
                    value: args.ltEq,
                }) :
            {
                f: bigIntLt(args.lt),
                inclusive: false,
                value: args.lt,
            }) :
        ((type_util_1.isBigInt(args.ltEq)) ?
            {
                f: bigIntLtEq(args.ltEq),
                inclusive: true,
                value: args.ltEq,
            } :
            undefined));
    if (min == undefined) {
        if (max == undefined) {
            return bigint_1.bigInt();
        }
        else {
            return max.f;
        }
    }
    else {
        if (max == undefined) {
            return min.f;
        }
        else {
            if (bigint_util_1.greaterThan(min.value, max.value)) {
                throw new Error("Min value cannot be greater than max value");
            }
            else if (bigint_util_1.equal(min.value, max.value)) {
                if (min.inclusive && max.inclusive) {
                    return literal_1.literal(min.value);
                }
                else {
                    throw new Error("Min value cannot be equal to max value unless using gtEq and ltEq");
                }
            }
            else {
                if (bigint_util_1.addOneImpl(min.value.toString()) == max.value.toString() &&
                    !min.inclusive &&
                    !max.inclusive) {
                    throw new Error("There is no bigint 'x' where: " + min.value.toString() + " < x < " + max.value.toString());
                }
                return operator_1.pipe(min.f, max.f);
            }
        }
    }
}
exports.bigIntRange = bigIntRange;
//# sourceMappingURL=comparison.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/bigint/index.js":
/*!*****************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/bigint/index.js ***!
  \*****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./bigint */ "../tsql/node_modules/type-mapping/dist/functional-lib/bigint/bigint.js"));
__export(__webpack_require__(/*! ./cast */ "../tsql/node_modules/type-mapping/dist/functional-lib/bigint/cast.js"));
__export(__webpack_require__(/*! ./comparison */ "../tsql/node_modules/type-mapping/dist/functional-lib/bigint/comparison.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/boolean/boolean.js":
/*!********************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/boolean/boolean.js ***!
  \********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
var error_code_1 = __webpack_require__(/*! ../../error-code */ "../tsql/node_modules/type-mapping/dist/error-code.js");
function boolean() {
    return function (name, mixed) {
        if (typeof mixed != "boolean") {
            throw error_util_1.makeMappingError({
                message: name + " must be boolean; received " + type_util_1.toTypeStr(mixed),
                inputName: name,
                actualValue: mixed,
                expected: "boolean",
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_TYPE,
                },
            });
        }
        return mixed;
    };
}
exports.boolean = boolean;
//# sourceMappingURL=boolean.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/boolean/cast.js":
/*!*****************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/boolean/cast.js ***!
  \*****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var number_1 = __webpack_require__(/*! ../number */ "../tsql/node_modules/type-mapping/dist/functional-lib/number/index.js");
var boolean_1 = __webpack_require__(/*! ./boolean */ "../tsql/node_modules/type-mapping/dist/functional-lib/boolean/boolean.js");
var string_1 = __webpack_require__(/*! ../string */ "../tsql/node_modules/type-mapping/dist/functional-lib/string/index.js");
var operator_2 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var literal_1 = __webpack_require__(/*! ../literal */ "../tsql/node_modules/type-mapping/dist/functional-lib/literal/index.js");
/**
    + Zero is false
    + All other finite number values are true
*/
function finiteNumberToBoolean() {
    return operator_1.cast(number_1.finiteNumber(), function (num) { return (num != 0); }, boolean_1.boolean());
}
exports.finiteNumberToBoolean = finiteNumberToBoolean;
/**
    + `"1"` is true
    + `/^true$/i` is true
    + All other string values are false

    TODO Is this a good convention?
*/
function stringToBoolean() {
    return operator_1.cast(string_1.string(), function (str) { return (str == "1" || str.toLowerCase() == "true"); }, boolean_1.boolean());
}
exports.stringToBoolean = stringToBoolean;
/**
    + Zero is false
    + All other finite number values are true
*/
function finiteNumberToTrue() {
    return operator_2.pipe(finiteNumberToBoolean(), literal_1.literal(true));
}
exports.finiteNumberToTrue = finiteNumberToTrue;
/**
    + Zero is false
    + All other finite number values are true
*/
function finiteNumberToFalse() {
    return operator_2.pipe(finiteNumberToBoolean(), literal_1.literal(false));
}
exports.finiteNumberToFalse = finiteNumberToFalse;
/**
    + `"1"` is true
    + `/^true$/i` is true
    + All other string values are false

    TODO Is this a good convention?
*/
function stringToTrue() {
    return operator_2.pipe(stringToBoolean(), literal_1.literal(true));
}
exports.stringToTrue = stringToTrue;
/**
    + `"1"` is true
    + `/^true$/i` is true
    + All other string values are false

    TODO Is this a good convention?
*/
function stringToFalse() {
    return operator_2.pipe(stringToBoolean(), literal_1.literal(false));
}
exports.stringToFalse = stringToFalse;
/**
    Uses `stringToBoolean()` and `finiteNumberToBoolean()` internally
*/
function toBoolean() {
    return operator_1.or(stringToBoolean(), finiteNumberToBoolean());
}
exports.toBoolean = toBoolean;
/**
    Uses `stringToTrue()` and `finiteNumberToTrue()` internally
*/
function toTrue() {
    return operator_1.or(stringToTrue(), finiteNumberToTrue());
}
exports.toTrue = toTrue;
/**
    Uses `stringToFalse()` and `finiteNumberToFalse()` internally
*/
function toFalse() {
    return operator_1.or(stringToFalse(), finiteNumberToFalse());
}
exports.toFalse = toFalse;
//# sourceMappingURL=cast.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/boolean/index.js":
/*!******************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/boolean/index.js ***!
  \******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./boolean */ "../tsql/node_modules/type-mapping/dist/functional-lib/boolean/boolean.js"));
__export(__webpack_require__(/*! ./cast */ "../tsql/node_modules/type-mapping/dist/functional-lib/boolean/cast.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/buffer/buffer.js":
/*!******************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/buffer/buffer.js ***!
  \******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var uint_8_array_1 = __webpack_require__(/*! ../uint-8-array */ "../tsql/node_modules/type-mapping/dist/functional-lib/uint-8-array/index.js");
var buffer_ctor_1 = __webpack_require__(/*! ../../type-util/buffer-ctor */ "../tsql/node_modules/type-mapping/dist/type-util/buffer-ctor.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
var error_code_1 = __webpack_require__(/*! ../../error-code */ "../tsql/node_modules/type-mapping/dist/error-code.js");
function instanceOfBuffer() {
    return function (name, mixed) {
        if (!buffer_ctor_1.isInstanceOfBuffer(mixed)) {
            throw error_util_1.makeMappingError({
                message: name + " must be instance of Buffer; received " + type_util_1.toTypeStr(mixed),
                inputName: name,
                actualValue: mixed,
                expected: "Buffer",
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_TYPE,
                },
            });
        }
        return mixed;
    };
}
exports.instanceOfBuffer = instanceOfBuffer;
function bufferLength(args) {
    return operator_1.pipe(uint_8_array_1.byteLength(args), instanceOfBuffer());
}
exports.bufferLength = bufferLength;
function bufferExactLength(length) {
    return bufferLength({
        min: length,
        max: length,
    });
}
exports.bufferExactLength = bufferExactLength;
//# sourceMappingURL=buffer.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/buffer/index.js":
/*!*****************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/buffer/index.js ***!
  \*****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./buffer */ "../tsql/node_modules/type-mapping/dist/functional-lib/buffer/buffer.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/date/cast.js":
/*!**************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/date/cast.js ***!
  \**************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var string_1 = __webpack_require__(/*! ../string */ "../tsql/node_modules/type-mapping/dist/functional-lib/string/index.js");
var instance_of_date_1 = __webpack_require__(/*! ./instance-of-date */ "../tsql/node_modules/type-mapping/dist/functional-lib/date/instance-of-date.js");
var number_1 = __webpack_require__(/*! ../number */ "../tsql/node_modules/type-mapping/dist/functional-lib/number/index.js");
/**
    Unsafe because it just uses `new Date(str)`
    to convert to a `Date`.

    This may have surprising results.
    ```ts
    new Date("1").getTime() === 978325200000
    ```
*/
function unsafeStringToDate() {
    return operator_1.cast(string_1.string(), function (str) { return new Date(str); }, instance_of_date_1.instanceOfDate());
}
exports.unsafeStringToDate = unsafeStringToDate;
/**
    Feel free to specify your own `Date` parsing function,
    using any JS Date library you want.

    It is safe for `dateParser` to throw `Error`s.

    Do not use `Date.parse(str)` or `new Date(str)`
    as implementations vary wildly.

    If you wish to use either of those,
    use `unsafeStringToDate()` instead.
*/
function dateToString(dateParser) {
    return operator_1.cast(string_1.string(), function (str) { return dateParser(str); }, instance_of_date_1.instanceOfDate());
}
exports.dateToString = dateToString;
/**
 * Convert the number of seconds since the Unix Epoch to a `Date`.
 *
 * The Unix Epoch is January 1st, 1970 at UTC.
 */
function unixTimestampSecondsToDate() {
    return operator_1.cast(number_1.integer(), 
    //Multiply by 1000 because `Date` ctor expects
    //milliseconds since Unix Epoch
    function (num) { return new Date(num * 1000); }, instance_of_date_1.instanceOfDate());
}
exports.unixTimestampSecondsToDate = unixTimestampSecondsToDate;
/**
 * Convert the number of milliseconds since the Unix Epoch to a `Date`.
 *
 * The Unix Epoch is January 1st, 1970 at UTC.
 */
function unixTimestampMillisecondsToDate() {
    return operator_1.cast(number_1.integer(), function (num) { return new Date(num); }, instance_of_date_1.instanceOfDate());
}
exports.unixTimestampMillisecondsToDate = unixTimestampMillisecondsToDate;
/**
 * Convert a `Date` to the number of seconds since the Unix Epoch.
 *
 * The Unix Epoch is January 1st, 1970 at UTC.
 */
function dateToUnixTimestampSeconds() {
    return operator_1.cast(instance_of_date_1.instanceOfDate(), function (d) { return Math.floor(d.getTime() / 1000); }, number_1.integer());
}
exports.dateToUnixTimestampSeconds = dateToUnixTimestampSeconds;
/**
 * Convert a `Date` to the number of milliseconds since the Unix Epoch.
 *
 * The Unix Epoch is January 1st, 1970 at UTC.
 */
function dateToUnixTimestampMilliseconds() {
    return operator_1.cast(instance_of_date_1.instanceOfDate(), function (d) { return d.getTime(); }, number_1.integer());
}
exports.dateToUnixTimestampMilliseconds = dateToUnixTimestampMilliseconds;
//# sourceMappingURL=cast.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/date/index.js":
/*!***************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/date/index.js ***!
  \***************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./cast */ "../tsql/node_modules/type-mapping/dist/functional-lib/date/cast.js"));
__export(__webpack_require__(/*! ./instance-of-date */ "../tsql/node_modules/type-mapping/dist/functional-lib/date/instance-of-date.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/date/instance-of-date.js":
/*!**************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/date/instance-of-date.js ***!
  \**************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var number_1 = __webpack_require__(/*! ../number */ "../tsql/node_modules/type-mapping/dist/functional-lib/number/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
var error_code_1 = __webpack_require__(/*! ../../error-code */ "../tsql/node_modules/type-mapping/dist/error-code.js");
/**
 * Must be a valid date.
 *
 * `mixed.getTime()` must be a finite number.
 */
function instanceOfDate() {
    var unixTimestampMsDelegate = number_1.finiteNumber();
    return function (name, mixed) {
        if (!(mixed instanceof Date)) {
            throw error_util_1.makeMappingError({
                message: name + " must be instance of Date; received " + type_util_1.toTypeStr(mixed),
                inputName: name,
                actualValue: mixed,
                expected: "Date",
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_TYPE,
                },
            });
        }
        var unixTimestampMs = mixed.getTime();
        unixTimestampMsDelegate(name + ".getTime()", unixTimestampMs);
        return mixed;
    };
}
exports.instanceOfDate = instanceOfDate;
//# sourceMappingURL=instance-of-date.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/enum/cast-enum-flyweight.js":
/*!*****************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/enum/cast-enum-flyweight.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var enum_util_1 = __webpack_require__(/*! ../../enum-util */ "../tsql/node_modules/type-mapping/dist/enum-util/index.js");
var cast_1 = __webpack_require__(/*! ./cast */ "../tsql/node_modules/type-mapping/dist/functional-lib/enum/cast.js");
function castEnumFlyweight(e) {
    var keys = enum_util_1.getKeys(e);
    var result = {
        toValue: keys.reduce(function (memo, k) {
            memo[k] = cast_1.toOneEnumValue(e, k);
            return memo;
        }, cast_1.toEnumValue(e)),
        toKey: keys.reduce(function (memo, k) {
            memo[k] = cast_1.toOneEnumKey(e, k);
            return memo;
        }, cast_1.toEnumKey(e)),
    };
    return result;
}
exports.castEnumFlyweight = castEnumFlyweight;
//# sourceMappingURL=cast-enum-flyweight.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/enum/cast.js":
/*!**************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/enum/cast.js ***!
  \**************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var enum_util_1 = __webpack_require__(/*! ../../enum-util */ "../tsql/node_modules/type-mapping/dist/enum-util/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var mapper_1 = __webpack_require__(/*! ../../mapper */ "../tsql/node_modules/type-mapping/dist/mapper/index.js");
var literal_1 = __webpack_require__(/*! ../literal */ "../tsql/node_modules/type-mapping/dist/functional-lib/literal/index.js");
var type_util_1 = __webpack_require__(/*! ../../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
var error_code_1 = __webpack_require__(/*! ../../error-code */ "../tsql/node_modules/type-mapping/dist/error-code.js");
function toEnumValue(e) {
    var entries = enum_util_1.getEntries(e);
    var expected = entries.map(function (e) { return type_util_1.toLiteralStr(e.key); }).join("|");
    //https://github.com/microsoft/TypeScript/issues/31602
    //Discovered string and conditional types also give problems
    return mapper_1.mapper(operator_1.or(literal_1.unsafeLiteral.apply(void 0, entries.map(function (e) { return e.value; })), 
    //Not a value, so maybe a key?
    function (name, mixed) {
        for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
            var entry = entries_1[_i];
            if (mixed === entry.key) {
                return entry.value;
            }
        }
        throw error_util_1.makeMappingError({
            message: name + " must be " + expected + "; received " + type_util_1.toTypeStr(mixed),
            inputName: name,
            actualValue: mixed,
            expected: expected,
            expectedMeta: {
                errorCode: error_code_1.ErrorCode.EXPECTED_ENUM_KEY,
                mappableValues: entries.map(function (entry) { return entry.key; }),
                outputValues: entries.map(function (entry) { return entry.value; }),
                entries: entries.slice(),
            },
        });
    }));
}
exports.toEnumValue = toEnumValue;
function toEnumKey(e) {
    var entries = enum_util_1.getEntries(e);
    var expected = entries.map(function (e) { return type_util_1.toLiteralStr(e.value); }).join("|");
    //https://github.com/microsoft/TypeScript/issues/31602
    //Discovered string and conditional types also give problems
    return mapper_1.mapper(operator_1.or(literal_1.unsafeLiteral.apply(void 0, entries.map(function (e) { return e.key; })), 
    //Not a key, so maybe a value?
    function (name, mixed) {
        for (var _i = 0, entries_2 = entries; _i < entries_2.length; _i++) {
            var entry = entries_2[_i];
            if (mixed === entry.value) {
                return entry.key;
            }
        }
        throw error_util_1.makeMappingError({
            message: name + " must be " + expected + "; received " + type_util_1.toTypeStr(mixed),
            inputName: name,
            actualValue: mixed,
            expected: expected,
            expectedMeta: {
                errorCode: error_code_1.ErrorCode.EXPECTED_ENUM_VALUE,
                mappableValues: entries.map(function (entry) { return entry.value; }),
                outputValues: entries.map(function (entry) { return entry.key; }),
                entries: entries.slice(),
            },
        });
    }));
}
exports.toEnumKey = toEnumKey;
function toOneEnumValue(e, k) {
    var desiredValue = e[k];
    var entries = enum_util_1.getEntries(e);
    var validKeys = entries
        .filter(function (entry) { return (entry.value === desiredValue &&
        entry.key !== desiredValue); })
        .map(function (entry) { return entry.key; });
    var expected = (type_util_1.toLiteralOrTypeUnionStr([
        desiredValue
    ].concat(validKeys)));
    return mapper_1.mapper(function (name, mixed) {
        if (mixed === desiredValue) {
            return desiredValue;
        }
        for (var _i = 0, validKeys_1 = validKeys; _i < validKeys_1.length; _i++) {
            var validKey = validKeys_1[_i];
            if (mixed === validKey) {
                return desiredValue;
            }
        }
        throw error_util_1.makeMappingError({
            message: name + " must be " + expected + "; received " + type_util_1.toTypeStr(mixed),
            inputName: name,
            actualValue: mixed,
            expected: expected,
            expectedMeta: {
                errorCode: error_code_1.ErrorCode.EXPECTED_ONE_ENUM_VALUE_OR_VALID_ENUM_KEY,
                mappableValues: [desiredValue].concat(validKeys),
                outputValues: [desiredValue],
                desiredValue: desiredValue,
                validKeys: validKeys.slice(),
            },
        });
    });
}
exports.toOneEnumValue = toOneEnumValue;
function toOneEnumKey(e, k) {
    var validValue = e[k];
    var entries = enum_util_1.getEntries(e);
    var validKeys = entries
        .filter(function (e) { return (e.value === validValue &&
        e.key !== validValue &&
        e.key !== k); })
        .map(function (e) { return e.key; });
    var expected = (type_util_1.toLiteralOrTypeUnionStr([
        k
    ].concat(validKeys, [
        validValue,
    ])));
    return mapper_1.mapper(function (name, mixed) {
        if (mixed === k) {
            return k;
        }
        for (var _i = 0, validKeys_2 = validKeys; _i < validKeys_2.length; _i++) {
            var validKey = validKeys_2[_i];
            if (mixed === validKey) {
                return k;
            }
        }
        if (mixed === validValue) {
            return k;
        }
        throw error_util_1.makeMappingError({
            message: name + " must be " + expected + "; received " + type_util_1.toTypeStr(mixed),
            inputName: name,
            actualValue: mixed,
            expected: expected,
            expectedMeta: {
                mappableValues: [k].concat(validKeys, [validValue]),
                outputValues: [k],
                desiredKey: k,
                validKeys: validKeys.slice(),
                validValue: validValue,
            },
        });
    });
}
exports.toOneEnumKey = toOneEnumKey;
//# sourceMappingURL=cast.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/enum/enum.js":
/*!**************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/enum/enum.js ***!
  \**************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var enum_util_1 = __webpack_require__(/*! ../../enum-util */ "../tsql/node_modules/type-mapping/dist/enum-util/index.js");
var literal_1 = __webpack_require__(/*! ../literal */ "../tsql/node_modules/type-mapping/dist/functional-lib/literal/index.js");
function enumKey(e) {
    return literal_1.unsafeLiteral.apply(void 0, enum_util_1.getKeys(e));
}
exports.enumKey = enumKey;
function enumValue(e) {
    return literal_1.unsafeLiteral.apply(void 0, enum_util_1.getValues(e));
}
exports.enumValue = enumValue;
//# sourceMappingURL=enum.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/enum/index.js":
/*!***************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/enum/index.js ***!
  \***************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./cast-enum-flyweight */ "../tsql/node_modules/type-mapping/dist/functional-lib/enum/cast-enum-flyweight.js"));
__export(__webpack_require__(/*! ./cast */ "../tsql/node_modules/type-mapping/dist/functional-lib/enum/cast.js"));
__export(__webpack_require__(/*! ./enum */ "../tsql/node_modules/type-mapping/dist/functional-lib/enum/enum.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/index.js":
/*!**********************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/index.js ***!
  \**********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./any */ "../tsql/node_modules/type-mapping/dist/functional-lib/any/index.js"));
__export(__webpack_require__(/*! ./array */ "../tsql/node_modules/type-mapping/dist/functional-lib/array/index.js"));
__export(__webpack_require__(/*! ./array-like */ "../tsql/node_modules/type-mapping/dist/functional-lib/array-like/index.js"));
__export(__webpack_require__(/*! ./bigint */ "../tsql/node_modules/type-mapping/dist/functional-lib/bigint/index.js"));
__export(__webpack_require__(/*! ./boolean */ "../tsql/node_modules/type-mapping/dist/functional-lib/boolean/index.js"));
__export(__webpack_require__(/*! ./buffer */ "../tsql/node_modules/type-mapping/dist/functional-lib/buffer/index.js"));
__export(__webpack_require__(/*! ./date */ "../tsql/node_modules/type-mapping/dist/functional-lib/date/index.js"));
__export(__webpack_require__(/*! ./enum */ "../tsql/node_modules/type-mapping/dist/functional-lib/enum/index.js"));
__export(__webpack_require__(/*! ./json-object */ "../tsql/node_modules/type-mapping/dist/functional-lib/json-object/index.js"));
__export(__webpack_require__(/*! ./literal */ "../tsql/node_modules/type-mapping/dist/functional-lib/literal/index.js"));
__export(__webpack_require__(/*! ./never */ "../tsql/node_modules/type-mapping/dist/functional-lib/never/index.js"));
__export(__webpack_require__(/*! ./non-maybe */ "../tsql/node_modules/type-mapping/dist/functional-lib/non-maybe/index.js"));
__export(__webpack_require__(/*! ./null */ "../tsql/node_modules/type-mapping/dist/functional-lib/null/index.js"));
__export(__webpack_require__(/*! ./number */ "../tsql/node_modules/type-mapping/dist/functional-lib/number/index.js"));
__export(__webpack_require__(/*! ./object */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/index.js"));
__export(__webpack_require__(/*! ./operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js"));
__export(__webpack_require__(/*! ./string */ "../tsql/node_modules/type-mapping/dist/functional-lib/string/index.js"));
__export(__webpack_require__(/*! ./type */ "../tsql/node_modules/type-mapping/dist/functional-lib/type/index.js"));
__export(__webpack_require__(/*! ./uint-8-array */ "../tsql/node_modules/type-mapping/dist/functional-lib/uint-8-array/index.js"));
__export(__webpack_require__(/*! ./undefined */ "../tsql/node_modules/type-mapping/dist/functional-lib/undefined/index.js"));
__export(__webpack_require__(/*! ./unknown */ "../tsql/node_modules/type-mapping/dist/functional-lib/unknown/index.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/json-object/cast.js":
/*!*********************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/json-object/cast.js ***!
  \*********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
/**
    Calls `JSON.parse()` once, may call `JSON.stringify()` zero or one times.
*/
function stringToJsonObject() {
    return function (name, mixed) {
        if (typeof mixed != "string") {
            try {
                var str = JSON.stringify(mixed);
                if (typeof str == "string" && str[0] == "{") {
                    if (type_util_1.isBigIntNativelySupported() || !type_util_1.isBigInt(mixed)) {
                        return JSON.parse(str);
                    }
                }
                throw error_util_1.makeMappingError({
                    message: name + " must be JSON Object; received " + type_util_1.toTypeStr(mixed),
                    inputName: name,
                    actualValue: mixed,
                    expected: "JSON Object",
                });
            }
            catch (err) {
                throw error_util_1.makeMappingError({
                    message: name + " must be JSON Object; " + err.message,
                    inputName: name,
                    actualValue: mixed,
                    expected: "JSON Object",
                });
            }
        }
        if (!/^\s*\{/.test(mixed)) {
            throw error_util_1.makeMappingError({
                message: name + " must be JSON Object string",
                inputName: name,
                actualValue: mixed,
                expected: "JSON Object string",
            });
        }
        try {
            return JSON.parse(mixed);
        }
        catch (err) {
            throw error_util_1.makeMappingError({
                message: name + " must be valid JSON Object string; " + err.message,
                inputName: name,
                actualValue: mixed,
                expected: "valid JSON Object string",
            });
        }
    };
}
exports.stringToJsonObject = stringToJsonObject;
//# sourceMappingURL=cast.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/json-object/index.js":
/*!**********************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/json-object/index.js ***!
  \**********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./cast */ "../tsql/node_modules/type-mapping/dist/functional-lib/json-object/cast.js"));
__export(__webpack_require__(/*! ./json-object */ "../tsql/node_modules/type-mapping/dist/functional-lib/json-object/json-object.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/json-object/json-object.js":
/*!****************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/json-object/json-object.js ***!
  \****************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
/**
    Calls `JSON.stringify()` and `JSON.parse()` once.

    Always returns a new object.
*/
function jsonObject() {
    return function (name, mixed) {
        try {
            var str = JSON.stringify(mixed);
            if (typeof str == "string" && str[0] == "{") {
                if (type_util_1.isBigIntNativelySupported() || !type_util_1.isBigInt(mixed)) {
                    return JSON.parse(str);
                }
            }
            throw error_util_1.makeMappingError({
                message: name + " must be JSON Object; received " + type_util_1.toTypeStr(mixed),
                inputName: name,
                actualValue: mixed,
                expected: "JSON Object",
            });
        }
        catch (err) {
            throw error_util_1.makeMappingError({
                message: name + " must be JSON Object; " + err.message,
                inputName: name,
                actualValue: mixed,
                expected: "JSON Object",
            });
        }
    };
}
exports.jsonObject = jsonObject;
//# sourceMappingURL=json-object.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/literal/index.js":
/*!******************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/literal/index.js ***!
  \******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./literal */ "../tsql/node_modules/type-mapping/dist/functional-lib/literal/literal.js"));
__export(__webpack_require__(/*! ./tuple-literal */ "../tsql/node_modules/type-mapping/dist/functional-lib/literal/tuple-literal.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/literal/literal.js":
/*!********************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/literal/literal.js ***!
  \********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
/**
 * Returns a mapper that validates if the input is an element of `arr`
 *
 * This function throws an error if `arr.length == 0`
 *
 * @param arr
 *  @see {@link LiteralType}
 */
function unsafeLiteral() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    if (arr.length == 0) {
        throw new Error("Cannot map zero literals");
    }
    var expected = type_util_1.toLiteralUnionStr(arr);
    return function (name, mixed) {
        for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {
            var item = arr_1[_i];
            if (type_util_1.strictEqual(mixed, item)) {
                return mixed;
            }
        }
        throw error_util_1.makeMappingError({
            message: name + " must be " + expected + "; received " + type_util_1.toTypeStr(mixed),
            inputName: name,
            actualValue: mixed,
            expected: expected,
            expectedMeta: {
                mappableValues: arr.slice(),
                outputValues: arr.slice(),
            },
        });
    };
}
exports.unsafeLiteral = unsafeLiteral;
/**
 * Returns a mapper that validates if the input is one of the arguments
 *
 * @param arg0
 * @param arr
 *  @see {@link LiteralType}
 */
function literal(arg0) {
    var arr = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        arr[_i - 1] = arguments[_i];
    }
    return unsafeLiteral.apply(void 0, [arg0].concat(arr));
}
exports.literal = literal;
//# sourceMappingURL=literal.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/literal/tuple-literal.js":
/*!**************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/literal/tuple-literal.js ***!
  \**************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var array_1 = __webpack_require__(/*! ../array */ "../tsql/node_modules/type-mapping/dist/functional-lib/array/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
var array_like_1 = __webpack_require__(/*! ../array-like */ "../tsql/node_modules/type-mapping/dist/functional-lib/array-like/index.js");
var string_util_1 = __webpack_require__(/*! ../../string-util */ "../tsql/node_modules/type-mapping/dist/string-util/index.js");
/**
 * Returns a mapper that checks if incoming data matches the tuple `TupleT`.
 *
 * ```ts
 * tupleLiteral("a", "b")("x", ["a", "b"]);       //OK!
 * tupleLiteral("a", "b")("x", ["a", "b", "c"]);  //Error
 * tupleLiteral("a", "b")("x", ["a"]);            //Error
 * tupleLiteral("a", "b")("x", ["b", "a"]);       //Error
 * ```
 *
 * @param tuple The tuple incoming data must equal to
 */
function tupleLiteral() {
    var tuple = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        tuple[_i] = arguments[_i];
    }
    var lengthDelegate = array_like_1.length({
        min: tuple.length,
        max: tuple.length,
    });
    return operator_1.pipe(array_1.instanceOfArray(), function (name, mixed) {
        lengthDelegate(name, mixed);
        for (var i = 0; i < tuple.length; ++i) {
            if (!type_util_1.strictEqual(mixed[i], tuple[i])) {
                throw error_util_1.makeMappingError({
                    message: "" + name + string_util_1.toPropertyAccess(i) + " must be " + type_util_1.toLiteralStr(tuple[i]) + "; received " + type_util_1.toTypeStr(mixed[i]),
                    inputName: "" + name + string_util_1.toPropertyAccess(i),
                    actualValue: mixed[i],
                    expected: type_util_1.toLiteralStr(tuple[i]),
                    expectedMeta: {
                        mappableValues: [
                            tuple.slice()
                        ],
                        outputValues: [
                            tuple.slice()
                        ],
                    },
                });
            }
        }
        return mixed;
    });
}
exports.tupleLiteral = tupleLiteral;
//# sourceMappingURL=tuple-literal.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/never/index.js":
/*!****************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/never/index.js ***!
  \****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./never */ "../tsql/node_modules/type-mapping/dist/functional-lib/never/never.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/never/never.js":
/*!****************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/never/never.js ***!
  \****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
/**
 * Use this if something is never supposed to have a value.
 * Not even `undefined`.
 *
 * For example, `never[]` can be,
 * ```ts
 * const arrayOfNever = array(never());
 * ```
 *
 * The only value that will satisfy this mapper is the empty array.
 */
function never() {
    return function (name, mixed) {
        throw error_util_1.makeMappingError({
            message: name + " must be never",
            inputName: name,
            actualValue: mixed,
            expected: "never",
        });
    };
}
exports.never = never;
//# sourceMappingURL=never.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/non-maybe/index.js":
/*!********************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/non-maybe/index.js ***!
  \********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./non-maybe */ "../tsql/node_modules/type-mapping/dist/functional-lib/non-maybe/non-maybe.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/non-maybe/non-maybe.js":
/*!************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/non-maybe/non-maybe.js ***!
  \************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var any_1 = __webpack_require__(/*! ../any */ "../tsql/node_modules/type-mapping/dist/functional-lib/any/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
function nonMaybe() {
    return operator_1.notMaybe(any_1.unsafeAny());
}
exports.nonMaybe = nonMaybe;
//# sourceMappingURL=non-maybe.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/null/cast.js":
/*!**************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/null/cast.js ***!
  \**************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var literal_1 = __webpack_require__(/*! ../literal */ "../tsql/node_modules/type-mapping/dist/functional-lib/literal/index.js");
var null_1 = __webpack_require__(/*! ./null */ "../tsql/node_modules/type-mapping/dist/functional-lib/null/null.js");
var string_1 = __webpack_require__(/*! ../string */ "../tsql/node_modules/type-mapping/dist/functional-lib/string/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
function undefinedToNull() {
    return function (name, mixed) {
        //We do not mind === here.
        if (mixed === undefined || mixed === null) {
            return null;
        }
        throw error_util_1.makeMappingError({
            message: name + " must be null|undefined; received " + type_util_1.toTypeStr(mixed),
            inputName: name,
            actualValue: mixed,
            expected: "null|undefined",
            expectedMeta: {
                mappableValues: [null, undefined],
                outputValues: [null],
            },
        });
    };
}
exports.undefinedToNull = undefinedToNull;
function emptyStringToNull() {
    return operator_1.cast(literal_1.literal(""), function () { return null; }, null_1.null());
}
exports.emptyStringToNull = emptyStringToNull;
/**
    An empty string, or a string of only whitespace
*/
function whitespaceStringToNull() {
    return operator_1.cast(string_1.match(/^\s*$/, function (name) {
        return {
            message: name + " must be a whitespace string",
            expected: "whitespace string",
        };
    }), function () { return null; }, null_1.null());
}
exports.whitespaceStringToNull = whitespaceStringToNull;
//# sourceMappingURL=cast.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/null/index.js":
/*!***************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/null/index.js ***!
  \***************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./cast */ "../tsql/node_modules/type-mapping/dist/functional-lib/null/cast.js"));
__export(__webpack_require__(/*! ./null */ "../tsql/node_modules/type-mapping/dist/functional-lib/null/null.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/null/null.js":
/*!**************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/null/null.js ***!
  \**************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
function nil() {
    return function (name, mixed) {
        //We do not mind === here.
        if (mixed === null) {
            return mixed;
        }
        throw error_util_1.makeMappingError({
            message: name + " must be null; received " + type_util_1.toTypeStr(mixed),
            inputName: name,
            actualValue: mixed,
            expected: "null",
            expectedMeta: {
                mappableValues: [null],
                outputValues: [null],
            }
        });
    };
}
exports.null = nil;
//# sourceMappingURL=null.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/number/cast.js":
/*!****************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/number/cast.js ***!
  \****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var string_1 = __webpack_require__(/*! ../string */ "../tsql/node_modules/type-mapping/dist/functional-lib/string/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var number_1 = __webpack_require__(/*! ./number */ "../tsql/node_modules/type-mapping/dist/functional-lib/number/number.js");
var bigint_1 = __webpack_require__(/*! ../bigint/bigint */ "../tsql/node_modules/type-mapping/dist/functional-lib/bigint/bigint.js");
/**
    Uses `floatingPointFormatString()` and `parseFloat()` internally.

    ```ts
    const s = "999999999999999999999999999"
    //Output is "1e+27" due to loss in precision
    stringToFiniteNumber("", s).toString()
    ```
*/
function stringToFiniteNumber() {
    return operator_1.cast(string_1.floatingPointFormatString(), parseFloat, number_1.finiteNumber());
}
exports.stringToFiniteNumber = stringToFiniteNumber;
/**
    Uses `integerFormatString()` and `parseFloat()` internally.

    ```ts
    const s = "999999999999999999999999999"
    //Output is "1e+27" due to loss in precision
    stringToInteger("", s).toString()
    ```
*/
function stringToInteger() {
    return operator_1.cast(string_1.integerFormatString(), parseFloat, number_1.integer());
}
exports.stringToInteger = stringToInteger;
/**
    Uses `unsignedIntegerFormatString()` and `parseFloat()` internally.

    ```ts
    const s = "999999999999999999999999999"
    //Output is "1e+27" due to loss in precision
    stringToUnsignedInteger("", s).toString()
    ```
*/
function stringToUnsignedInteger() {
    return operator_1.cast(string_1.unsignedIntegerFormatString(), parseFloat, number_1.unsignedInteger());
}
exports.stringToUnsignedInteger = stringToUnsignedInteger;
/**
    Uses `floatingPointFormatString()` and `parseFloat()` internally.

    ```ts
    const s = "999999999999999999999999999"
    //Output is "1e+27" due to loss in precision
    toFiniteNumber("", s).toString()
    ```

    -----

    ```ts
    const b = BigInt("999999999999999999999999999")
    //Output is "1e+27" due to loss in precision
    toFiniteNumber("", b).toString()
    ```
*/
function toFiniteNumber() {
    return operator_1.cast(operator_1.or(string_1.floatingPointFormatString(), operator_1.pipe(bigint_1.bigInt(), function (_name, b) {
        return b.toString();
    })), parseFloat, number_1.finiteNumber());
}
exports.toFiniteNumber = toFiniteNumber;
/**
    Uses `floatingPointFormatString()` and `parseFloat()` internally.

    ```ts
    const s = "999999999999999999999999999"
    //Output is "1e+27" due to loss in precision
    toUnsafeNumber("", s).toString()
    ```

    -----

    ```ts
    const b = BigInt("999999999999999999999999999")
    //Output is "1e+27" due to loss in precision
    toUnsafeNumber("", b).toString()
    ```
*/
function toUnsafeNumber() {
    return operator_1.cast(operator_1.or(string_1.floatingPointFormatString(), operator_1.pipe(bigint_1.bigInt(), function (_name, b) {
        return b.toString();
    })), parseFloat, number_1.unsafeNumber());
}
exports.toUnsafeNumber = toUnsafeNumber;
/**
    Uses `integerFormatString()` and `parseFloat()` internally.

    ```ts
    const s = "999999999999999999999999999"
    //Output is "1e+27" due to loss in precision
    toInteger("", s).toString()
    ```

    -----

    ```ts
    const b = BigInt("999999999999999999999999999")
    //Output is "1e+27" due to loss in precision
    toInteger("", b).toString()
    ```
*/
function toInteger() {
    return operator_1.cast(operator_1.or(string_1.integerFormatString(), operator_1.pipe(bigint_1.bigInt(), function (_name, b) {
        return b.toString();
    })), parseFloat, number_1.integer());
}
exports.toInteger = toInteger;
/**
    Uses `unsignedIntegerFormatString()` and `parseFloat()` internally.

    ```ts
    const s = "999999999999999999999999999"
    //Output is "1e+27" due to loss in precision
    toUnsignedInteger("", s).toString()
    ```

    -----

    ```ts
    const b = BigInt("999999999999999999999999999")
    //Output is "1e+27" due to loss in precision
    toUnsignedInteger("", b).toString()
    ```
*/
function toUnsignedInteger() {
    return operator_1.cast(operator_1.or(string_1.unsignedIntegerFormatString(), operator_1.pipe(bigint_1.bigInt(), function (_name, b) {
        return b.toString();
    })), parseFloat, number_1.unsignedInteger());
}
exports.toUnsignedInteger = toUnsignedInteger;
//# sourceMappingURL=cast.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/number/comparison.js":
/*!**********************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/number/comparison.js ***!
  \**********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var number_1 = __webpack_require__(/*! ./number */ "../tsql/node_modules/type-mapping/dist/functional-lib/number/number.js");
var literal_1 = __webpack_require__(/*! ../literal */ "../tsql/node_modules/type-mapping/dist/functional-lib/literal/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
var error_code_1 = __webpack_require__(/*! ../../error-code */ "../tsql/node_modules/type-mapping/dist/error-code.js");
function gt(x) {
    return operator_1.pipe(number_1.finiteNumber(), function (name, num) {
        if (num > x) {
            return num;
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must be greater than " + x,
                inputName: name,
                actualValue: num,
                expected: "greater than " + x,
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_GREATER_THAN,
                    gt: x,
                },
            });
        }
    });
}
exports.gt = gt;
function lt(x) {
    return operator_1.pipe(number_1.finiteNumber(), function (name, num) {
        if (num < x) {
            return num;
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must be less than " + x,
                inputName: name,
                actualValue: num,
                expected: "less than " + x,
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_LESS_THAN,
                    lt: x,
                },
            });
        }
    });
}
exports.lt = lt;
function gtEq(x) {
    return operator_1.pipe(number_1.finiteNumber(), function (name, num) {
        if (num >= x) {
            return num;
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must be greater than, or equal to " + x,
                inputName: name,
                actualValue: num,
                expected: "greater than, or equal to " + x,
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_GREATER_THAN_OR_EQUAL_TO,
                    gtEq: x,
                },
            });
        }
    });
}
exports.gtEq = gtEq;
function ltEq(x) {
    return operator_1.pipe(number_1.finiteNumber(), function (name, num) {
        if (num <= x) {
            return num;
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must be less than, or equal to " + x,
                inputName: name,
                actualValue: num,
                expected: "less than, or equal to " + x,
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_LESS_THAN_OR_EQUAL_TO,
                    ltEq: x,
                },
            });
        }
    });
}
exports.ltEq = ltEq;
function range(args) {
    var min = ((typeof args.gt == "number") ?
        ((typeof args.gtEq == "number") ?
            ((args.gt >= args.gtEq) ?
                {
                    f: gt(args.gt),
                    inclusive: false,
                    value: args.gt,
                } :
                {
                    f: gtEq(args.gtEq),
                    inclusive: true,
                    value: args.gtEq,
                }) :
            {
                f: gt(args.gt),
                inclusive: false,
                value: args.gt,
            }) :
        ((typeof args.gtEq == "number") ?
            {
                f: gtEq(args.gtEq),
                inclusive: true,
                value: args.gtEq,
            } :
            undefined));
    var max = ((typeof args.lt == "number") ?
        ((typeof args.ltEq == "number") ?
            ((args.lt <= args.ltEq) ?
                {
                    f: lt(args.lt),
                    inclusive: false,
                    value: args.lt,
                } :
                {
                    f: ltEq(args.ltEq),
                    inclusive: true,
                    value: args.ltEq,
                }) :
            {
                f: lt(args.lt),
                inclusive: false,
                value: args.lt,
            }) :
        ((typeof args.ltEq == "number") ?
            {
                f: ltEq(args.ltEq),
                inclusive: true,
                value: args.ltEq,
            } :
            undefined));
    if (min == undefined) {
        if (max == undefined) {
            return number_1.finiteNumber();
        }
        else {
            return max.f;
        }
    }
    else {
        if (max == undefined) {
            return min.f;
        }
        else {
            if (min.value > max.value) {
                throw new Error("Min value cannot be greater than max value");
            }
            else if (min.value == max.value) {
                if (min.inclusive && max.inclusive) {
                    return literal_1.literal(min.value);
                }
                else {
                    throw new Error("Min value cannot be equal to max value unless using gtEq and ltEq");
                }
            }
            else {
                return operator_1.pipe(min.f, max.f);
            }
        }
    }
}
exports.range = range;
//# sourceMappingURL=comparison.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/number/index.js":
/*!*****************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/number/index.js ***!
  \*****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./cast */ "../tsql/node_modules/type-mapping/dist/functional-lib/number/cast.js"));
__export(__webpack_require__(/*! ./comparison */ "../tsql/node_modules/type-mapping/dist/functional-lib/number/comparison.js"));
__export(__webpack_require__(/*! ./number */ "../tsql/node_modules/type-mapping/dist/functional-lib/number/number.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/number/number.js":
/*!******************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/number/number.js ***!
  \******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var comparison_1 = __webpack_require__(/*! ./comparison */ "../tsql/node_modules/type-mapping/dist/functional-lib/number/comparison.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
var error_code_1 = __webpack_require__(/*! ../../error-code */ "../tsql/node_modules/type-mapping/dist/error-code.js");
//Unsafe because it allows NaN and +/-Infinity
function unsafeNumber() {
    return function (name, mixed) {
        if (typeof mixed != "number") {
            throw error_util_1.makeMappingError({
                message: name + " must be number; received " + type_util_1.toTypeStr(mixed),
                inputName: name,
                actualValue: mixed,
                expected: "number",
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_TYPE,
                },
            });
        }
        return mixed;
    };
}
exports.unsafeNumber = unsafeNumber;
function finiteNumber() {
    return operator_1.pipe(unsafeNumber(), function (name, num) {
        if (isNaN(num)) {
            throw error_util_1.makeMappingError({
                message: name + " must be finite number; received NaN",
                inputName: name,
                actualValue: num,
                expected: "finite number",
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_TYPE,
                },
            });
        }
        if (!isFinite(num)) {
            throw error_util_1.makeMappingError({
                message: name + " must be finite number; received " + num,
                inputName: name,
                actualValue: num,
                expected: "finite number",
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_TYPE,
                },
            });
        }
        return num;
    });
}
exports.finiteNumber = finiteNumber;
function integer() {
    return operator_1.pipe(finiteNumber(), function (name, num) {
        if (Math.floor(num) !== num) {
            throw error_util_1.makeMappingError({
                message: name + " must be integer; received double",
                inputName: name,
                actualValue: num,
                expected: "integer",
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_TYPE,
                },
            });
        }
        return num;
    });
}
exports.integer = integer;
/**
    An unsigned integer is an integer >= 0
*/
function unsignedInteger() {
    return operator_1.pipe(integer(), comparison_1.gtEq(0));
}
exports.unsignedInteger = unsignedInteger;
//# sourceMappingURL=number.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/object/derive-map.js":
/*!**********************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/object/derive-map.js ***!
  \**********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "../tsql/node_modules/type-mapping/dist/mapper/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var derive_1 = __webpack_require__(/*! ./derive */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/derive.js");
var to_empty_object_1 = __webpack_require__(/*! ./to-empty-object */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/to-empty-object.js");
function deriveMap(map) {
    var arr = [];
    for (var k in map) {
        if (!map.hasOwnProperty(k)) {
            continue;
        }
        var f = map[k];
        arr.push(derive_1.derive(k, mapper_1.getNameOrEmptyString(f), f));
    }
    if (arr.length == 0) {
        return to_empty_object_1.toEmptyObject();
    }
    return operator_1.unsafeDeepMerge.apply(void 0, arr);
}
exports.deriveMap = deriveMap;
/*
import {string} from "../string";
import {withName, withExpectedInput} from "../../mapper";
import {unsignedInteger, stringToFiniteNumber} from "../number";
import {optional} from "../operator";

const m = renameMap({
    x : withName(string(), "y"),
    x2 : withName(unsignedInteger(), "y"),
    a : withExpectedInput(withName(stringToFiniteNumber(), "b"))<string>(),
    a2 : withExpectedInput(withName(stringToFiniteNumber(), "b2"))<string|number>(),
    a3 : withExpectedInput(withName(stringToFiniteNumber(), "b2"))<number>(),
    o : withExpectedInput(withName(optional(stringToFiniteNumber()), "_o"))<number>(),
});
m.__expectedInput
m.__mappableInput

const x = optional(withExpectedInput(withName(stringToFiniteNumber(), "_o"))<number>());

const m2 = renameMap({
    x : withName(string(), "y" as string),
    x2 : withName(unsignedInteger(), "y" as string),
    a : withExpectedInput(withName(stringToFiniteNumber(), "b"))<string>(),
    a2 : withExpectedInput(withName(stringToFiniteNumber(), "b2"))<string|number>(),
    a3 : withExpectedInput(withName(stringToFiniteNumber(), "b2"))<number>(),
    o : withExpectedInput(withName(optional(stringToFiniteNumber()), "_o"))<number>(),
    c2 : withExpectedInput(withName(stringToFiniteNumber(), "c2"))<string|number>(),
    c3 : withExpectedInput(withName(string(), "c2"))<string>(),
});
//*/ 
//# sourceMappingURL=derive-map.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/object/derive.js":
/*!******************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/object/derive.js ***!
  \******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "../tsql/node_modules/type-mapping/dist/mapper/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var instance_of_object_1 = __webpack_require__(/*! ./instance-of-object */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/instance-of-object.js");
var string_util_1 = __webpack_require__(/*! ../../string-util */ "../tsql/node_modules/type-mapping/dist/string-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
function derive(srcKey, dstKey, f) {
    /**
        Must property be explicitly set?

                        | `orUndefined` | `optional` | `runTimeRequired()`
        compile-time    | -no-effect-   | optional   | required
        run-time        | optional      | optional   | required
    */
    var runTimeRequired = mapper_1.getRunTimeRequiredFlagOrFalse(f);
    var result = operator_1.pipe(instance_of_object_1.instanceOfObject(), function (name, mixed) {
        var _a;
        if (!Object.prototype.hasOwnProperty.call(mixed, srcKey)) {
            if (runTimeRequired) {
                var expected = "object with explicitly set property " + JSON.stringify(srcKey);
                throw error_util_1.makeMappingError({
                    message: name + " must be " + expected,
                    inputName: name,
                    actualValue: mixed,
                    expected: expected,
                    expectedMeta: {
                        srcKey: srcKey,
                        dstKey: dstKey,
                    },
                    propertyErrors: [
                        error_util_1.makeMappingError({
                            message: "" + name + string_util_1.toPropertyAccess(srcKey) + " must be explicitly set",
                            inputName: "" + name + string_util_1.toPropertyAccess(srcKey),
                            actualValue: undefined,
                            expected: "explicitly set",
                        }),
                    ],
                });
            }
        }
        var dstResult = mapper_1.tryMapHandled(f, "" + name + string_util_1.toPropertyAccess(srcKey), mixed[srcKey]);
        if (dstResult.success) {
            var obj = (_a = {},
                _a[dstKey] = dstResult.value,
                _a);
            return obj;
        }
        if (dstResult.mappingError.expected == undefined) {
            throw error_util_1.makeMappingError({
                message: name + " must be valid object. " + dstResult.mappingError.message,
                inputName: name,
                actualValue: mixed,
                expected: "valid object",
                expectedMeta: {
                    srcKey: srcKey,
                    dstKey: dstKey,
                },
                propertyErrors: [
                    dstResult.mappingError,
                ],
            });
        }
        else {
            var expected = "object with " + dstResult.mappingError.expected + " property " + JSON.stringify(srcKey);
            throw error_util_1.makeMappingError({
                message: name + " must be " + expected,
                inputName: name,
                actualValue: mixed,
                expected: expected,
                expectedMeta: {
                    srcKey: srcKey,
                    dstKey: dstKey,
                },
                propertyErrors: [
                    dstResult.mappingError,
                ],
            });
        }
    });
    return mapper_1.copyRunTimeModifier(f, result);
}
exports.derive = derive;
/*
const a = unsignedInteger();
const b = optional(unsignedInteger());
const c = string();
const d = optional(string());

declare const _0 : typeof a;
declare const _1 : typeof b;
declare const _2 : typeof c;
declare const _3 : typeof d;

declare const _01 : (typeof a) | (typeof b);
declare const _02 : (typeof a) | (typeof c);
declare const _03 : (typeof a) | (typeof d);

declare const _12 : (typeof b) | (typeof c);
declare const _13 : (typeof b) | (typeof d);

declare const _23 : (typeof c) | (typeof d);

const __0 = derive("x", "y", _0);
const __1 = derive("x", "y", _1);
const __2 = derive("x", "y", _2);
const __3 = derive("x", "y", _3);

const __01 = derive("x", "y", _01);
const __02 = derive("x", "y", _02);
const __03 = derive("x", "y", _03);

const __12 = derive("x", "y", _12);
const __13 = derive("x", "y", _13);

const __23 = derive("x", "y", _23);
*/ 
//# sourceMappingURL=derive.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/object/index.js":
/*!*****************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/object/index.js ***!
  \*****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./derive-map */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/derive-map.js"));
__export(__webpack_require__(/*! ./derive */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/derive.js"));
__export(__webpack_require__(/*! ./to-empty-object */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/to-empty-object.js"));
__export(__webpack_require__(/*! ./instance-of-object */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/instance-of-object.js"));
__export(__webpack_require__(/*! ./instance-of */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/instance-of.js"));
__export(__webpack_require__(/*! ./object-from-array */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/object-from-array.js"));
__export(__webpack_require__(/*! ./object-from-map */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/object-from-map.js"));
__export(__webpack_require__(/*! ./object */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/object.js"));
__export(__webpack_require__(/*! ./partial-derive-map */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/partial-derive-map.js"));
__export(__webpack_require__(/*! ./partial-object-from-array */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/partial-object-from-array.js"));
__export(__webpack_require__(/*! ./partial-object-from-map */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/partial-object-from-map.js"));
__export(__webpack_require__(/*! ./partial-object */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/partial-object.js"));
__export(__webpack_require__(/*! ./partial-rename-map */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/partial-rename-map.js"));
__export(__webpack_require__(/*! ./pojo */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/pojo.js"));
__export(__webpack_require__(/*! ./rename-map */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/rename-map.js"));
__export(__webpack_require__(/*! ./rename */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/rename.js"));
__export(__webpack_require__(/*! ./string-indexer */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/string-indexer.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/object/instance-of-object.js":
/*!******************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/object/instance-of-object.js ***!
  \******************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
/**
    If you pass in a bigint object created by
    a polyfill, it will be rejected,
    even though it is technically an instance of `Object`.
*/
function instanceOfObject() {
    return function (name, mixed) {
        if (type_util_1.isInstanceOf(mixed, Object)) {
            return mixed;
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must be instance of Object; received " + type_util_1.toTypeStr(mixed),
                inputName: name,
                actualValue: mixed,
                expected: "Object",
            });
        }
    };
}
exports.instanceOfObject = instanceOfObject;
//# sourceMappingURL=instance-of-object.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/object/instance-of.js":
/*!***********************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/object/instance-of.js ***!
  \***********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
/**
    If you pass in a bigint object created by
    a polyfill, it will never pass any `instanceof` checks,
    even though the polyfill could be done with an object.
*/
function instanceOf(ctor) {
    if (!type_util_1.allowsInstanceOf(ctor)) {
        throw new Error("instanceof check not allowed on " + type_util_1.getCtorName(ctor));
    }
    var ctorName = type_util_1.getCtorName(ctor);
    return function (name, mixed) {
        if (type_util_1.isInstanceOf(mixed, ctor)) {
            return mixed;
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must be instance of " + ctorName + "; received " + type_util_1.toTypeStr(mixed),
                inputName: name,
                actualValue: mixed,
                expected: ctorName,
                expectedMeta: {
                    ctor: ctor,
                },
            });
        }
    };
}
exports.instanceOf = instanceOf;
//# sourceMappingURL=instance-of.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/object/object-from-array.js":
/*!*****************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/object/object-from-array.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "../tsql/node_modules/type-mapping/dist/mapper/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var object_from_map_1 = __webpack_require__(/*! ./object-from-map */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/object-from-map.js");
var to_empty_object_1 = __webpack_require__(/*! ./to-empty-object */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/to-empty-object.js");
/**
    This,
    ```ts
    objectFromArray(
        withName(unsignedInteger(), "foo"),
        withName(string(), "foo")
    );
    ```

    Is the same as,
    ```ts
    objectFromArray(
        withName(or(
            unsignedInteger(),
            string()
        ), "foo")
    );
    ```
*/
function objectFromArray() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    if (arr.length == 0) {
        return to_empty_object_1.toEmptyObject();
    }
    var groupedByName = {};
    for (var _a = 0, arr_1 = arr; _a < arr_1.length; _a++) {
        var f = arr_1[_a];
        var name = mapper_1.getNameOrEmptyString(f);
        var mappers = groupedByName[name];
        if (mappers == undefined) {
            mappers = [];
            groupedByName[name] = mappers;
        }
        mappers.push(f);
    }
    var map = {};
    for (var k in groupedByName) {
        var mappers = groupedByName[k];
        if (mappers == undefined) {
            continue;
        }
        map[k] = (mappers.length == 1) ?
            mappers[0] : operator_1.unsafeOr.apply(void 0, mappers);
    }
    return object_from_map_1.objectFromMap(map);
}
exports.objectFromArray = objectFromArray;
//# sourceMappingURL=object-from-array.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/object/object-from-map.js":
/*!***************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/object/object-from-map.js ***!
  \***************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "../tsql/node_modules/type-mapping/dist/mapper/index.js");
var instance_of_object_1 = __webpack_require__(/*! ./instance-of-object */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/instance-of-object.js");
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var to_empty_object_1 = __webpack_require__(/*! ./to-empty-object */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/to-empty-object.js");
var string_util_1 = __webpack_require__(/*! ../../string-util */ "../tsql/node_modules/type-mapping/dist/string-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
/**
    Always returns a new object.

    If the input contains additional fields not part
    of the map, they will not be in the new object.
*/
function objectFromMap(map) {
    var keys = Object.keys(map);
    if (keys.length == 0) {
        return to_empty_object_1.toEmptyObject();
    }
    var runTimeRequiredDict = {};
    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
        var k = keys_1[_i];
        runTimeRequiredDict[k] = mapper_1.getRunTimeRequiredFlagOrFalse(map[k]);
    }
    return mapper_1.mapper(operator_1.pipe(instance_of_object_1.instanceOfObject(), function (name, mixed) {
        var propertyErrors = [];
        var result = {};
        for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {
            var k = keys_2[_i];
            if (Object.prototype.hasOwnProperty.call(mixed, k) || runTimeRequiredDict[k] === false) {
                var propertyResult = mapper_1.tryMapHandled(map[k], "" + name + string_util_1.toPropertyAccess(k), mixed[k]);
                if (propertyResult.success) {
                    result[k] = propertyResult.value;
                }
                else {
                    propertyErrors.push(propertyResult.mappingError);
                }
            }
            else {
                propertyErrors.push(error_util_1.makeMappingError({
                    message: "" + name + string_util_1.toPropertyAccess(k) + " must be explicitly set",
                    inputName: "" + name + string_util_1.toPropertyAccess(k),
                    actualValue: undefined,
                    expected: "explicitly set",
                }));
            }
        }
        if (propertyErrors.length == 0) {
            return result;
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must be valid object",
                inputName: name,
                actualValue: mixed,
                expected: "valid object",
                propertyErrors: propertyErrors,
            });
        }
    }));
}
exports.objectFromMap = objectFromMap;
/*
import {optional, orUndefined} from "../operator";
import {unsignedInteger} from "../number";

const m = objectFromMap({
    shouldBeOptional : optional(unsignedInteger()),
    shouldNotBeOptional : orUndefined(unsignedInteger())
});
m.__expectedInput
m.__mappableInput


declare const map2 : {

    [name : string] : SafeMapper<number>|SafeMapper<boolean>
};
const m2 = objectFromMap(map2);
m2.__expectedInput
m2.__mappableInput


declare const map3 : {
    k : SafeMapper<number>|SafeMapper<boolean>,
    l : SafeMapper<number>,
};
const m3 = objectFromMap(map3);
m3.__expectedInput
m3.__mappableInput
//*/ 
//# sourceMappingURL=object-from-map.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/object/object.js":
/*!******************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/object/object.js ***!
  \******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var object_from_map_1 = __webpack_require__(/*! ./object-from-map */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/object-from-map.js");
var object_from_array_1 = __webpack_require__(/*! ./object-from-array */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/object-from-array.js");
function object() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    if (arr.length == 1 && !(arr[0] instanceof Function)) {
        return object_from_map_1.objectFromMap(arr[0]);
    }
    else {
        return object_from_array_1.objectFromArray.apply(void 0, arr);
    }
}
exports.object = object;
//# sourceMappingURL=object.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/object/partial-derive-map.js":
/*!******************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/object/partial-derive-map.js ***!
  \******************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "../tsql/node_modules/type-mapping/dist/mapper/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var derive_1 = __webpack_require__(/*! ./derive */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/derive.js");
var to_empty_object_1 = __webpack_require__(/*! ./to-empty-object */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/to-empty-object.js");
function partialDeriveMap(map) {
    var arr = [];
    for (var k in map) {
        if (!map.hasOwnProperty(k)) {
            continue;
        }
        var f = map[k];
        arr.push(derive_1.derive(k, mapper_1.getNameOrEmptyString(f), operator_1.optional(f)));
    }
    if (arr.length == 0) {
        return to_empty_object_1.toEmptyObject();
    }
    return operator_1.unsafeDeepMerge.apply(void 0, arr);
}
exports.partialDeriveMap = partialDeriveMap;
//# sourceMappingURL=partial-derive-map.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/object/partial-object-from-array.js":
/*!*************************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/object/partial-object-from-array.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "../tsql/node_modules/type-mapping/dist/mapper/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var to_empty_object_1 = __webpack_require__(/*! ./to-empty-object */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/to-empty-object.js");
var partial_object_from_map_1 = __webpack_require__(/*! ./partial-object-from-map */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/partial-object-from-map.js");
/**
    This,
    ```ts
    objectFromArray(
        withName(unsignedInteger(), "foo"),
        withName(string(), "foo")
    );
    ```

    Is the same as,
    ```ts
    objectFromArray(
        withName(or(
            unsignedInteger(),
            string()
        ), "foo")
    );
    ```
*/
function partialObjectFromArray() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    if (arr.length == 0) {
        return to_empty_object_1.toEmptyObject();
    }
    var groupedByName = {};
    for (var _a = 0, arr_1 = arr; _a < arr_1.length; _a++) {
        var f = arr_1[_a];
        var name = mapper_1.getNameOrEmptyString(f);
        var mappers = groupedByName[name];
        if (mappers == undefined) {
            mappers = [];
            groupedByName[name] = mappers;
        }
        mappers.push(f);
    }
    var map = {};
    for (var k in groupedByName) {
        var mappers = groupedByName[k];
        if (mappers == undefined) {
            continue;
        }
        map[k] = (mappers.length == 1) ?
            mappers[0] : operator_1.unsafeOr.apply(void 0, mappers);
    }
    return partial_object_from_map_1.partialObjectFromMap(map);
}
exports.partialObjectFromArray = partialObjectFromArray;
//# sourceMappingURL=partial-object-from-array.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/object/partial-object-from-map.js":
/*!***********************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/object/partial-object-from-map.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "../tsql/node_modules/type-mapping/dist/mapper/index.js");
var instance_of_object_1 = __webpack_require__(/*! ./instance-of-object */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/instance-of-object.js");
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var to_empty_object_1 = __webpack_require__(/*! ./to-empty-object */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/to-empty-object.js");
/**
    Always returns a new object.

    If the input contains additional fields not part
    of the map, they will not be in the new object.

    -----

    All input fields are optional.
    All output fields may be undefined.
*/
function partialObjectFromMap(map) {
    var keys = Object.keys(map);
    if (keys.length == 0) {
        return to_empty_object_1.toEmptyObject();
    }
    var partialMap = {};
    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
        var k = keys_1[_i];
        partialMap[k] = operator_1.optional(map[k]);
    }
    return mapper_1.mapper(operator_1.pipe(instance_of_object_1.instanceOfObject(), function (name, mixed) {
        var result = {};
        for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {
            var k = keys_2[_i];
            result[k] = partialMap[k](name + "." + k, mixed[k]);
        }
        return result;
    }));
}
exports.partialObjectFromMap = partialObjectFromMap;
//# sourceMappingURL=partial-object-from-map.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/object/partial-object.js":
/*!**************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/object/partial-object.js ***!
  \**************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var partial_object_from_map_1 = __webpack_require__(/*! ./partial-object-from-map */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/partial-object-from-map.js");
var partial_object_from_array_1 = __webpack_require__(/*! ./partial-object-from-array */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/partial-object-from-array.js");
function partialObject() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    if (arr.length == 1 && !(arr[0] instanceof Function)) {
        return partial_object_from_map_1.partialObjectFromMap(arr[0]);
    }
    else {
        return partial_object_from_array_1.partialObjectFromArray.apply(void 0, arr);
    }
}
exports.partialObject = partialObject;
//# sourceMappingURL=partial-object.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/object/partial-rename-map.js":
/*!******************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/object/partial-rename-map.js ***!
  \******************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "../tsql/node_modules/type-mapping/dist/mapper/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var rename_1 = __webpack_require__(/*! ./rename */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/rename.js");
var to_empty_object_1 = __webpack_require__(/*! ./to-empty-object */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/to-empty-object.js");
function partialRenameMap(map) {
    var arr = [];
    for (var k in map) {
        if (!map.hasOwnProperty(k)) {
            continue;
        }
        var f = map[k];
        arr.push(rename_1.rename(k, mapper_1.getNameOrEmptyString(f), operator_1.optional(f)));
    }
    if (arr.length == 0) {
        return to_empty_object_1.toEmptyObject();
    }
    return operator_1.unsafeDeepMerge.apply(void 0, arr);
}
exports.partialRenameMap = partialRenameMap;
//# sourceMappingURL=partial-rename-map.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/object/pojo.js":
/*!****************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/object/pojo.js ***!
  \****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
/**
 * Abbreviation for "Plain old JavasScript object".
 *
 * Meaning, an Object that isn't,
 *
 * + Date
 * + Array
 * + Function
 * + An instance of some other class
 */
function pojo() {
    return function (name, mixed) {
        if (!type_util_1.isPojo(mixed)) {
            throw error_util_1.makeMappingError({
                message: name + " must be plain old JavaScript object; received " + type_util_1.toTypeStr(mixed),
                inputName: name,
                actualValue: mixed,
                expected: "plain old JavaScript object",
            });
        }
        return mixed;
    };
}
exports.pojo = pojo;
//# sourceMappingURL=pojo.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/object/rename-map.js":
/*!**********************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/object/rename-map.js ***!
  \**********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "../tsql/node_modules/type-mapping/dist/mapper/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var rename_1 = __webpack_require__(/*! ./rename */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/rename.js");
var to_empty_object_1 = __webpack_require__(/*! ./to-empty-object */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/to-empty-object.js");
function renameMap(map) {
    var arr = [];
    for (var k in map) {
        if (!map.hasOwnProperty(k)) {
            continue;
        }
        var f = map[k];
        arr.push(rename_1.rename(k, mapper_1.getNameOrEmptyString(f), f));
    }
    if (arr.length == 0) {
        return to_empty_object_1.toEmptyObject();
    }
    return operator_1.unsafeDeepMerge.apply(void 0, arr);
}
exports.renameMap = renameMap;
//# sourceMappingURL=rename-map.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/object/rename.js":
/*!******************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/object/rename.js ***!
  \******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "../tsql/node_modules/type-mapping/dist/mapper/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var instance_of_object_1 = __webpack_require__(/*! ./instance-of-object */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/instance-of-object.js");
var string_util_1 = __webpack_require__(/*! ../../string-util */ "../tsql/node_modules/type-mapping/dist/string-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
function rename(srcKey, dstKey, f) {
    var runTimeRequired = mapper_1.getRunTimeRequiredFlagOrFalse(f);
    var result = operator_1.pipe(instance_of_object_1.instanceOfObject(), function (name, mixed) {
        var _a;
        var unsafeKey = "";
        var unsafeName = "";
        var unsafeValue = undefined;
        if (Object.prototype.hasOwnProperty.call(mixed, dstKey)) {
            unsafeKey = dstKey;
            unsafeName = "" + name + string_util_1.toPropertyAccess(dstKey);
            unsafeValue = mixed[dstKey];
        }
        else if (Object.prototype.hasOwnProperty.call(mixed, srcKey)) {
            unsafeKey = srcKey;
            unsafeName = "" + name + string_util_1.toPropertyAccess(srcKey);
            unsafeValue = mixed[srcKey];
        }
        else if (runTimeRequired) {
            var expected = "object with explicitly set property " + JSON.stringify(dstKey);
            throw error_util_1.makeMappingError({
                message: name + " must be " + expected,
                inputName: name,
                actualValue: mixed,
                expected: expected,
                expectedMeta: {
                    srcKey: srcKey,
                    dstKey: dstKey,
                },
                propertyErrors: [
                    error_util_1.makeMappingError({
                        message: "" + name + string_util_1.toPropertyAccess(dstKey) + " must be explicitly set",
                        inputName: "" + name + string_util_1.toPropertyAccess(dstKey),
                        actualValue: undefined,
                        expected: "explicitly set",
                    }),
                ],
            });
        }
        else {
            unsafeKey = dstKey;
            unsafeName = "" + name + string_util_1.toPropertyAccess(dstKey);
            unsafeValue = undefined;
        }
        var dstResult = mapper_1.tryMapHandled(f, unsafeName, unsafeValue);
        if (dstResult.success) {
            var obj = (_a = {},
                _a[dstKey] = dstResult.value,
                _a);
            return obj;
        }
        if (dstResult.mappingError.expected == undefined) {
            throw error_util_1.makeMappingError({
                message: name + " must be valid object. " + dstResult.mappingError.message,
                inputName: name,
                actualValue: mixed,
                expected: "valid object",
                expectedMeta: {
                    srcKey: srcKey,
                    dstKey: dstKey,
                },
                propertyErrors: [
                    dstResult.mappingError,
                ],
            });
        }
        else {
            var expected = "object with " + dstResult.mappingError.expected + " property " + JSON.stringify(unsafeKey);
            throw error_util_1.makeMappingError({
                message: name + " must be " + expected,
                inputName: name,
                actualValue: mixed,
                expected: expected,
                expectedMeta: {
                    srcKey: srcKey,
                    dstKey: dstKey,
                },
                propertyErrors: [
                    dstResult.mappingError,
                ],
            });
        }
    });
    return mapper_1.copyRunTimeModifier(f, result);
}
exports.rename = rename;
/*
const a = unsignedInteger();
const b = optional(unsignedInteger());
const c = string();
const d = optional(string());

declare const _0 : typeof a;
declare const _1 : typeof b;
declare const _2 : typeof c;
declare const _3 : typeof d;

declare const _01 : (typeof a) | (typeof b);
declare const _02 : (typeof a) | (typeof c);
declare const _03 : (typeof a) | (typeof d);

declare const _12 : (typeof b) | (typeof c);
declare const _13 : (typeof b) | (typeof d);

declare const _23 : (typeof c) | (typeof d);

const __0 = rename("x", "y", _0);
const __1 = rename("x", "y", _1);
const __2 = rename("x", "y", _2);
const __3 = rename("x", "y", _3);

const __01 = rename("x", "y", _01);
const __02 = rename("x", "y", _02);
const __03 = rename("x", "y", _03);

const __12 = rename("x", "y", _12);
const __13 = rename("x", "y", _13);

const __23 = rename("x", "y", _23);
*/ 
//# sourceMappingURL=rename.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/object/string-indexer.js":
/*!**************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/object/string-indexer.js ***!
  \**************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "../tsql/node_modules/type-mapping/dist/mapper/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var instance_of_object_1 = __webpack_require__(/*! ./instance-of-object */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/instance-of-object.js");
var string_util_1 = __webpack_require__(/*! ../../string-util */ "../tsql/node_modules/type-mapping/dist/string-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
function unsafeStringIndexer(f) {
    var result = operator_1.pipe(instance_of_object_1.instanceOfObject(), function (name, obj) {
        var propertyErrors = [];
        var result = {};
        for (var k in obj) {
            if (!Object.prototype.hasOwnProperty.call(obj, k)) {
                continue;
            }
            var propertyResult = mapper_1.tryMapHandled(f, "" + name + string_util_1.toPropertyAccess(k), obj[k]);
            if (propertyResult.success) {
                result[k] = propertyResult.value;
            }
            else {
                propertyErrors.push(propertyResult.mappingError);
            }
        }
        if (propertyErrors.length == 0) {
            return result;
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must be valid object",
                inputName: name,
                actualValue: obj,
                expected: "valid object",
                propertyErrors: propertyErrors,
            });
        }
    });
    return mapper_1.copyRunTimeModifier(f, result);
}
exports.unsafeStringIndexer = unsafeStringIndexer;
function stringIndexer(f) {
    var fOrUndefined = operator_1.orUndefined(f);
    var result = operator_1.pipe(instance_of_object_1.instanceOfObject(), function (name, obj) {
        var propertyErrors = [];
        var result = {};
        for (var k in obj) {
            if (!Object.prototype.hasOwnProperty.call(obj, k)) {
                continue;
            }
            var propertyResult = mapper_1.tryMapHandled(fOrUndefined, "" + name + string_util_1.toPropertyAccess(k), obj[k]);
            if (propertyResult.success) {
                result[k] = propertyResult.value;
            }
            else {
                propertyErrors.push(propertyResult.mappingError);
            }
        }
        if (propertyErrors.length == 0) {
            return result;
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must be valid object",
                inputName: name,
                actualValue: obj,
                expected: "valid object",
                propertyErrors: propertyErrors,
            });
        }
    });
    return mapper_1.copyRunTimeModifier(f, result);
}
exports.stringIndexer = stringIndexer;
//# sourceMappingURL=string-indexer.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/object/to-empty-object.js":
/*!***************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/object/to-empty-object.js ***!
  \***************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
    Always returns a new empty object.
    Basically, converts *everything* into an empty object.
*/
function toEmptyObject() {
    return function () {
        return {};
    };
}
exports.toEmptyObject = toEmptyObject;
//# sourceMappingURL=to-empty-object.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/cache.js":
/*!*******************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/operator/cache.js ***!
  \*******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var operation_1 = __webpack_require__(/*! ../../mapper/operation */ "../tsql/node_modules/type-mapping/dist/mapper/operation/index.js");
function cache(cached, f) {
    var result = operation_1.copyRunTimeModifier(f, function (name, mixed) {
        return f(name, mixed, cached);
    });
    //https://github.com/microsoft/TypeScript/issues/31602
    return result;
}
exports.cache = cache;
//# sourceMappingURL=cache.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/cast.js":
/*!******************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/operator/cast.js ***!
  \******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "../tsql/node_modules/type-mapping/dist/mapper/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
function cast(srcMapper, castDelegate, dstMapper) {
    var result = mapper_1.copyRunTimeModifier(srcMapper, function (name, mixed) {
        var alreadyDstResult = mapper_1.tryMapHandled(dstMapper, name, mixed);
        if (alreadyDstResult.success) {
            //If this works, we are already the desired data type
            return alreadyDstResult.value;
        }
        var cannotCastPrefix = (alreadyDstResult.mappingError.expected == undefined) ?
            "Cannot cast " + name + ";" :
            "Cannot cast " + name + " to " + alreadyDstResult.mappingError.expected + ";";
        //Failed. We need to cast.
        var mapSrcResult = mapper_1.tryMapHandled(srcMapper, name, mixed);
        if (!mapSrcResult.success) {
            throw error_util_1.makeMappingError({
                message: cannotCastPrefix + " " + mapSrcResult.mappingError.message,
                inputName: name,
                actualValue: mixed,
                expected: (mapSrcResult.mappingError.expected == alreadyDstResult.mappingError.expected ?
                    mapSrcResult.mappingError.expected :
                    "(" + alreadyDstResult.mappingError.expected + ") or (" + mapSrcResult.mappingError.expected + ")"),
                expectedMeta: {
                    mappableValues: ((alreadyDstResult.mappingError.expectedMeta == undefined ||
                        alreadyDstResult.mappingError.expectedMeta.mappableValues == undefined ||
                        mapSrcResult.mappingError.expectedMeta == undefined ||
                        mapSrcResult.mappingError.expectedMeta.mappableValues == undefined) ?
                        undefined : alreadyDstResult.mappingError.expectedMeta.mappableValues.concat(mapSrcResult.mappingError.expectedMeta.mappableValues)),
                    outputValues: ((alreadyDstResult.mappingError.expectedMeta == undefined ||
                        alreadyDstResult.mappingError.expectedMeta.outputValues == undefined) ?
                        undefined : alreadyDstResult.mappingError.expectedMeta.outputValues.slice()),
                },
                unionErrors: [
                    alreadyDstResult.mappingError,
                    mapSrcResult.mappingError,
                ],
            });
        }
        var dst = undefined;
        try {
            dst = castDelegate(mapSrcResult.value);
        }
        catch (castErr) {
            /**
             * In general, this should never happen.
             * If we're here, that means the `castDelegate` or `srcMapper` isn't working right.
             */
            throw error_util_1.makeMappingError({
                message: cannotCastPrefix + " " + castErr.message,
                inputName: name,
                actualValue: mapSrcResult.value,
                /**
                 * Since it seems like the `castDelegate` or `srcMapper` isn't working right,
                 * we should only expect whatever the `dstMapper` expects.
                 */
                expected: alreadyDstResult.mappingError.expected,
                stack: castErr.stack,
            });
        }
        var mapDstResult = mapper_1.tryMapHandled(dstMapper, name, dst);
        if (mapDstResult.success) {
            return mapDstResult.value;
        }
        else {
            /**
             * In general, this should never happen.
             * If we're here, that means the `castDelegate` or `srcMapper` isn't working right.
             */
            throw error_util_1.makeMappingError({
                message: cannotCastPrefix + " " + mapDstResult.mappingError.message,
                inputName: name,
                actualValue: dst,
                /**
                 * Since it seems like the `castDelegate` or `srcMapper` isn't working right,
                 * we should only expect whatever the `dstMapper` expects.
                 */
                expected: mapDstResult.mappingError.expected,
                unionErrors: [
                    alreadyDstResult.mappingError,
                    mapDstResult.mappingError,
                ],
            });
        }
    });
    return result;
}
exports.cast = cast;
//# sourceMappingURL=cast.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/deep-merge.js":
/*!************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/operator/deep-merge.js ***!
  \************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "../tsql/node_modules/type-mapping/dist/mapper/index.js");
var TypeUtil = __webpack_require__(/*! ../../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
var array_util_1 = __webpack_require__(/*! ../../array-util */ "../tsql/node_modules/type-mapping/dist/array-util/index.js");
var string_util_1 = __webpack_require__(/*! ../../string-util */ "../tsql/node_modules/type-mapping/dist/string-util/index.js");
function unsafeDeepMerge() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    if (arr.length == 0) {
        throw new Error("Cannot deep merge zero mappers");
    }
    if (arr.length == 1) {
        return arr[0];
    }
    var mapper = function (name, mixed) {
        var intersectionErrors = [];
        var values = [];
        for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {
            var f = arr_1[_i];
            var elementResult = mapper_1.tryMapHandled(f, name, mixed);
            if (elementResult.success) {
                values.push(elementResult.value);
            }
            else {
                intersectionErrors.push(elementResult.mappingError);
            }
        }
        if (intersectionErrors.length == 1) {
            throw intersectionErrors[0];
        }
        if (intersectionErrors.length > 1) {
            var errorMessages = array_util_1.removeDuplicateElements(intersectionErrors
                .map(function (e) { return error_util_1.indentErrorMessage(e.message); }));
            var expectedElements = array_util_1.removeDuplicateElements(intersectionErrors
                .map(function (e) { return e.expected; })
                .filter(function (i) { return typeof i == "string"; }));
            throw error_util_1.makeMappingError({
                message: name + " is invalid.\n+ " + errorMessages.join("\n+ "),
                inputName: name,
                actualValue: mixed,
                expected: ((expectedElements.length == 0) ?
                    undefined :
                    (expectedElements.length == 1) ?
                        expectedElements[0] :
                        expectedElements
                            .map(function (str) { return "(" + str + ")"; })
                            .join(" and ")),
                intersectionErrors: intersectionErrors,
            });
        }
        var deepMergeResult = TypeUtil.tryDeepMerge.apply(TypeUtil, values);
        if (deepMergeResult.success) {
            return deepMergeResult.value;
        }
        else {
            /**
             * In general, this should not happen.
             * If we are here, our mappers may be doing something suspicious.
             */
            /**
             * If `path.length == 0`,
             * then it's a top-level value that failed to merge
             */
            if (deepMergeResult.path == undefined) {
                console.log(deepMergeResult);
            }
            if (deepMergeResult.path.length == 0) {
                throw error_util_1.makeMappingError({
                    message: name + " is invalid; " + deepMergeResult.message,
                    inputName: name,
                    actualValue: deepMergeResult.actualValue,
                    expected: deepMergeResult.expected,
                });
            }
            else {
                throw error_util_1.makeMappingError({
                    message: name + " is invalid; " + deepMergeResult.message,
                    inputName: name,
                    actualValue: deepMergeResult.bRoot,
                    expected: deepMergeResult.path.reduceRight(function (memo, part) {
                        return "{ " + JSON.stringify(part) + " : " + memo + " }";
                    }, deepMergeResult.expected),
                    propertyErrors: [
                        error_util_1.makeMappingError({
                            message: deepMergeResult.message,
                            inputName: deepMergeResult.path.reduce(function (memo, part) {
                                return memo + string_util_1.toPropertyAccess(part);
                            }, name),
                            actualValue: deepMergeResult.actualValue,
                            expected: deepMergeResult.expected,
                        }),
                    ],
                });
            }
        }
    };
    return mapper_1.copyRunTimeModifier(arr[0], mapper);
}
exports.unsafeDeepMerge = unsafeDeepMerge;
function deepMerge(f) {
    var arr = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        arr[_i - 1] = arguments[_i];
    }
    return unsafeDeepMerge.apply(void 0, [f].concat(arr));
}
exports.deepMerge = deepMerge;
/*
import {length} from "../array-like";
import {string} from "../string";
const dm = deepMerge(
    (null as unknown as (() => { x : "test" }) & ExpectedInput<{ foo : string }> & MappableInput<{ foo? : string|Buffer }>),
    () : { x : 1 } => (null as any),
    () : { y : true } => (null as any),
    () : { y? : true } => (null as any),
    (null as unknown as (() => { z : Date }) & MappableInput<{ foo? : Buffer }>),
);
dm("", "").y

//*
const dm2 = deepMerge(
    (null as unknown as (() => number) & ExpectedInput<{ foo : string }> & MappableInput<string>),
    (null as unknown as (() => string) & MappableInput<number>),
);
const dm3 = deepMerge(
    (null as unknown as (() => number) & ExpectedInput<{ foo : string }> & MappableInput<{ foo? : string|Buffer }>),
    (null as unknown as (() => string)),
    (null as unknown as (() => { x : "test" }) & ExpectedInput<{ foo : string }> & MappableInput<{ foo? : string|Buffer }>),
);

const dm4 = deepMerge(
    length({
        min : 1
    }),
    string()
)
//*/ 
//# sourceMappingURL=deep-merge.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/discriminated-union.js":
/*!*********************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/operator/discriminated-union.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "../tsql/node_modules/type-mapping/dist/mapper/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var string_util_1 = __webpack_require__(/*! ../../string-util */ "../tsql/node_modules/type-mapping/dist/string-util/index.js");
function unsafeDiscriminatedUnion(discriminantK) {
    var arr = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        arr[_i - 1] = arguments[_i];
    }
    if (arr.length == 0) {
        throw new Error("Cannot call unsafeDiscriminatedUnion() on zero mappers");
    }
    var orDelegate = operator_1.unsafeOr.apply(void 0, arr);
    var result = function (name, mixed) {
        var mapResult = mapper_1.tryMapHandled(orDelegate, name, mixed);
        if (mapResult.success) {
            return mapResult.value;
        }
        else {
            var unionErrors = mapResult.mappingError.unionErrors;
            if (unionErrors == undefined) {
                throw mapResult.mappingError;
            }
            var discriminantInputName_1 = "" + name + string_util_1.toPropertyAccess(discriminantK);
            var discriminantErrors = unionErrors
                .map(function (unionError) {
                return error_util_1.tryGetPropertyError(unionError, discriminantInputName_1);
            })
                .filter(function (propertyError) {
                return propertyError != undefined;
            });
            if (discriminantErrors.length != unionErrors.length) {
                var nonDiscriminantErrors = unionErrors
                    .map(function (unionError) {
                    return (error_util_1.tryGetPropertyError(unionError, discriminantInputName_1) == undefined) ?
                        //This error is not because of the discriminant
                        unionError :
                        undefined;
                })
                    .filter(function (unionError) {
                    return unionError != undefined;
                });
                throw error_util_1.makeNormalizedUnionError(name, mixed, nonDiscriminantErrors);
            }
            var expectedDiscriminators = discriminantErrors.map(function (err) { return err.expected; }).join("|");
            throw error_util_1.makeMappingError({
                message: name + " must be object with " + expectedDiscriminators + " property " + JSON.stringify(discriminantK),
                inputName: name,
                actualValue: mixed,
                expected: "object with " + expectedDiscriminators + " property " + JSON.stringify(discriminantK),
                expectedMeta: undefined,
                propertyErrors: [
                    error_util_1.makeNormalizedUnionError(discriminantInputName_1, (mixed == undefined ?
                        undefined :
                        mixed[discriminantK]), discriminantErrors),
                ],
            });
        }
    };
    return result;
}
exports.unsafeDiscriminatedUnion = unsafeDiscriminatedUnion;
function discriminatedUnion(discriminantK, f) {
    var arr = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        arr[_i - 2] = arguments[_i];
    }
    return unsafeDiscriminatedUnion.apply(void 0, [discriminantK,
        f].concat(arr));
}
exports.discriminatedUnion = discriminatedUnion;
//# sourceMappingURL=discriminated-union.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/exclude-literal.js":
/*!*****************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/operator/exclude-literal.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "../tsql/node_modules/type-mapping/dist/mapper/index.js");
var type_util_1 = __webpack_require__(/*! ../../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
var array_util_1 = __webpack_require__(/*! ../../array-util */ "../tsql/node_modules/type-mapping/dist/array-util/index.js");
function excludeLiteral(f) {
    var arr = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        arr[_i - 1] = arguments[_i];
    }
    var literalStrArr = arr.map(function (value) { return type_util_1.toLiteralStr(value); });
    return mapper_1.copyRunTimeModifier(f, function (name, mixed) {
        var mapResult = mapper_1.tryMapHandled(f, name, mixed);
        if (mapResult.success) {
            var value = mapResult.value;
            for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {
                var item = arr_1[_i];
                if (type_util_1.strictEqual(value, item)) {
                    throw error_util_1.makeMappingError({
                        message: name + " must not be " + type_util_1.toLiteralUnionStr(arr) + "; received " + type_util_1.toLiteralStr(item),
                        inputName: name,
                        actualValue: value,
                        expected: "not " + type_util_1.toLiteralUnionStr(arr),
                    });
                }
            }
            return value;
        }
        var rawUnionErrors = mapResult.mappingError.unionErrors;
        if (rawUnionErrors == undefined) {
            throw mapResult.mappingError;
        }
        var unionErrors = rawUnionErrors.filter(function (err) { return (err.expected != undefined &&
            literalStrArr.indexOf(err.expected) < 0); });
        var rawExpectedArr = unionErrors
            .map(function (e) { return e.expected; })
            .filter(function (s) { return s != undefined; });
        if (rawExpectedArr.length != unionErrors.length) {
            throw mapResult.mappingError;
        }
        /**
         * @todo Add checks for zero-length errors elsewhere in the code base, too
         */
        if (rawExpectedArr.length == 0) {
            throw error_util_1.makeMappingError({
                message: name + " must be never; received " + type_util_1.toTypeStr(mixed),
                inputName: name,
                actualValue: mixed,
                expected: "never",
                unionErrors: unionErrors,
            });
        }
        else if (rawExpectedArr.length == 1) {
            var expected = rawExpectedArr[0];
            throw error_util_1.makeMappingError({
                message: name + " must be " + expected + "; received " + type_util_1.toTypeStr(mixed),
                inputName: name,
                actualValue: mixed,
                expected: expected,
                expectedMeta: {
                    mappableValues: ((mapResult.mappingError.expectedMeta == undefined ||
                        mapResult.mappingError.expectedMeta.mappableValues == undefined) ?
                        undefined :
                        mapResult.mappingError.expectedMeta.mappableValues.filter(function (mappableValue) { return !arr.some(function (i) { return type_util_1.strictEqual(i, mappableValue); }); })),
                    outputValues: ((mapResult.mappingError.expectedMeta == undefined ||
                        mapResult.mappingError.expectedMeta.outputValues == undefined) ?
                        undefined :
                        mapResult.mappingError.expectedMeta.outputValues.filter(function (outputValue) { return !arr.some(function (i) { return type_util_1.strictEqual(i, outputValue); }); })),
                },
            });
        }
        else {
            var expected = array_util_1.removeDuplicateElements(rawExpectedArr)
                .map(function (str) { return "(" + str + ")"; })
                .join(" or ");
            throw error_util_1.makeMappingError({
                message: name + " must be " + expected + "; received " + type_util_1.toTypeStr(mixed),
                inputName: name,
                actualValue: mixed,
                expected: expected,
                expectedMeta: {
                    mappableValues: ((mapResult.mappingError.expectedMeta == undefined ||
                        mapResult.mappingError.expectedMeta.mappableValues == undefined) ?
                        undefined :
                        mapResult.mappingError.expectedMeta.mappableValues.filter(function (mappableValue) { return !arr.some(function (i) { return type_util_1.strictEqual(i, mappableValue); }); })),
                    outputValues: ((mapResult.mappingError.expectedMeta == undefined ||
                        mapResult.mappingError.expectedMeta.outputValues == undefined) ?
                        undefined :
                        mapResult.mappingError.expectedMeta.outputValues.filter(function (outputValue) { return !arr.some(function (i) { return type_util_1.strictEqual(i, outputValue); }); })),
                },
                unionErrors: unionErrors,
            });
        }
    });
}
exports.excludeLiteral = excludeLiteral;
//# sourceMappingURL=exclude-literal.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js":
/*!*******************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js ***!
  \*******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./cache */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/cache.js"));
__export(__webpack_require__(/*! ./cast */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/cast.js"));
__export(__webpack_require__(/*! ./deep-merge */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/deep-merge.js"));
__export(__webpack_require__(/*! ./discriminated-union */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/discriminated-union.js"));
__export(__webpack_require__(/*! ./exclude-literal */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/exclude-literal.js"));
__export(__webpack_require__(/*! ./missing-value */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/missing-value.js"));
__export(__webpack_require__(/*! ./or */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/or.js"));
__export(__webpack_require__(/*! ./pipe */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/pipe.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/missing-value.js":
/*!***************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/operator/missing-value.js ***!
  \***************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "../tsql/node_modules/type-mapping/dist/mapper/index.js");
var or_1 = __webpack_require__(/*! ./or */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/or.js");
var literal_1 = __webpack_require__(/*! ../literal */ "../tsql/node_modules/type-mapping/dist/functional-lib/literal/index.js");
var exclude_literal_1 = __webpack_require__(/*! ./exclude-literal */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/exclude-literal.js");
function orUndefined(f) {
    return or_1.or(f, literal_1.literal(undefined));
}
exports.orUndefined = orUndefined;
function orNull(f) {
    return or_1.or(f, literal_1.literal(null));
}
exports.orNull = orNull;
function orMaybe(f) {
    return or_1.or(f, literal_1.literal(undefined), literal_1.literal(null));
}
exports.orMaybe = orMaybe;
function notUndefined(f) {
    return exclude_literal_1.excludeLiteral(f, undefined);
}
exports.notUndefined = notUndefined;
function notNull(f) {
    return exclude_literal_1.excludeLiteral(f, null);
}
exports.notNull = notNull;
function notMaybe(assert) {
    return exclude_literal_1.excludeLiteral(assert, undefined, null);
}
exports.notMaybe = notMaybe;
function optional(f) {
    var g = orUndefined(f);
    g.__optional = true;
    g.__runTimeRequired = false;
    return g;
}
exports.optional = optional;
;
function notOptional(f) {
    var g = notUndefined(f);
    g.__optional = false;
    return g;
}
exports.notOptional = notOptional;
;
function runTimeRequired(f) {
    var g = function (name, mixed) {
        return f(name, mixed);
    };
    g.__runTimeRequired = true;
    g.__optional = false;
    return mapper_1.copyName(f, g);
}
exports.runTimeRequired = runTimeRequired;
;
function notRunTimeRequired(f) {
    var g = function (name, mixed) {
        return f(name, mixed);
    };
    g.__runTimeRequired = false;
    return mapper_1.copyName(f, mapper_1.copyOptional(f, g));
}
exports.notRunTimeRequired = notRunTimeRequired;
;
//# sourceMappingURL=missing-value.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/or.js":
/*!****************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/operator/or.js ***!
  \****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "../tsql/node_modules/type-mapping/dist/mapper/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
function unsafeOr() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    if (arr.length == 0) {
        throw new Error("Cannot call unsafeOr() on zero mappers");
    }
    return mapper_1.copyRunTimeModifier(arr[0], function (name, mixed) {
        var unionErrors = [];
        for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {
            var d = arr_1[_i];
            var elementResult = mapper_1.tryMapHandled(d, name, mixed);
            if (elementResult.success) {
                return elementResult.value;
            }
            else {
                unionErrors.push(elementResult.mappingError);
            }
        }
        throw error_util_1.makeNormalizedUnionError(name, mixed, unionErrors);
    });
}
exports.unsafeOr = unsafeOr;
function or(f) {
    var arr = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        arr[_i - 1] = arguments[_i];
    }
    return unsafeOr.apply(void 0, [f].concat(arr));
}
exports.or = or;
/*
or(
    (null as unknown as ((() => 1) & ExpectedInput<number>)),
    (null as unknown as ((() => 2) & ExpectedInput<string>)),
    (null as unknown as ((() => 3) & ExpectedInput<boolean>))
).__accepts
*/ 
//# sourceMappingURL=or.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/pipe.js":
/*!******************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/operator/pipe.js ***!
  \******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "../tsql/node_modules/type-mapping/dist/mapper/index.js");
function pipeImpl() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    if (arr.length == 0) {
        throw new Error("Cannot pipe zero mappers");
    }
    return mapper_1.copyRunTimeModifier(arr[0], function (name, mixed) {
        for (var i = 0; i < arr.length; ++i) {
            var d = arr[i];
            var elementResult = mapper_1.tryMapHandled(d, name, mixed);
            if (elementResult.success) {
                mixed = elementResult.value;
            }
            else {
                throw elementResult.mappingError;
            }
        }
        return mixed;
    });
}
//Not the best...
//export function pipe<ArrT extends AnyMapper[]> (...arr : ArrT) : SafeMapper<unknown>;
function pipe() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    return pipeImpl.apply(void 0, arr);
}
exports.pipe = pipe;
function unsafePipe(f) {
    var arr = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        arr[_i - 1] = arguments[_i];
    }
    return pipeImpl.apply(void 0, [f].concat(arr));
}
exports.unsafePipe = unsafePipe;
function reallyUnsafePipe() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    return pipeImpl.apply(void 0, arr);
}
exports.reallyUnsafePipe = reallyUnsafePipe;
//# sourceMappingURL=pipe.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/string/cast.js":
/*!****************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/string/cast.js ***!
  \****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var number_1 = __webpack_require__(/*! ../number */ "../tsql/node_modules/type-mapping/dist/functional-lib/number/index.js");
var number_string_1 = __webpack_require__(/*! ./number-string */ "../tsql/node_modules/type-mapping/dist/functional-lib/string/number-string.js");
var type_util_1 = __webpack_require__(/*! ../../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
function finiteNumberToFiniteNumberString() {
    return operator_1.cast(number_1.finiteNumber(), function (num) { return num.toString(); }, number_string_1.finiteNumberString());
}
exports.finiteNumberToFiniteNumberString = finiteNumberToFiniteNumberString;
function integerToIntegerString() {
    return operator_1.cast(number_1.integer(), function (num) { return num.toString(); }, number_string_1.integerString());
}
exports.integerToIntegerString = integerToIntegerString;
function unsignedIntegerToUnsignedIntegerString() {
    return operator_1.cast(number_1.unsignedInteger(), function (num) { return num.toString(); }, number_string_1.unsignedIntegerString());
}
exports.unsignedIntegerToUnsignedIntegerString = unsignedIntegerToUnsignedIntegerString;
/**
    Calls either `JSON.stringify()` or `JSON.parse()` once.
*/
function jsonObjectToJsonObjectString() {
    return function (name, mixed) {
        if (typeof mixed == "string") {
            if (!/^\s*\{/.test(mixed)) {
                throw error_util_1.makeMappingError({
                    message: name + " must be JSON Object string",
                    inputName: name,
                    actualValue: mixed,
                    expected: "JSON Object string",
                });
            }
            try {
                JSON.parse(mixed);
            }
            catch (err) {
                throw error_util_1.makeMappingError({
                    message: name + " must be valid JSON Object string; " + err.message,
                    inputName: name,
                    actualValue: mixed,
                    expected: "valid JSON Object string",
                });
            }
            return mixed;
        }
        try {
            var str = JSON.stringify(mixed);
            if (typeof str == "string" && str[0] == "{") {
                if (type_util_1.isBigIntNativelySupported() || !type_util_1.isBigInt(mixed)) {
                    return str;
                }
            }
            throw error_util_1.makeMappingError({
                message: name + " must be JSON Object; received " + type_util_1.toTypeStr(mixed),
                inputName: name,
                actualValue: mixed,
                expected: "JSON Object",
            });
        }
        catch (err) {
            throw error_util_1.makeMappingError({
                message: name + " must be JSON Object; " + err.message,
                inputName: name,
                actualValue: mixed,
                expected: "JSON Object",
            });
        }
    };
}
exports.jsonObjectToJsonObjectString = jsonObjectToJsonObjectString;
//# sourceMappingURL=cast.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/string/index.js":
/*!*****************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/string/index.js ***!
  \*****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./cast */ "../tsql/node_modules/type-mapping/dist/functional-lib/string/cast.js"));
__export(__webpack_require__(/*! ./ip-address */ "../tsql/node_modules/type-mapping/dist/functional-lib/string/ip-address.js"));
__export(__webpack_require__(/*! ./ip-v4-mapped-ip-v6 */ "../tsql/node_modules/type-mapping/dist/functional-lib/string/ip-v4-mapped-ip-v6.js"));
__export(__webpack_require__(/*! ./ip-v4 */ "../tsql/node_modules/type-mapping/dist/functional-lib/string/ip-v4.js"));
__export(__webpack_require__(/*! ./ip-v6 */ "../tsql/node_modules/type-mapping/dist/functional-lib/string/ip-v6.js"));
__export(__webpack_require__(/*! ./number-string */ "../tsql/node_modules/type-mapping/dist/functional-lib/string/number-string.js"));
__export(__webpack_require__(/*! ./string */ "../tsql/node_modules/type-mapping/dist/functional-lib/string/string.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/string/ip-address.js":
/*!**********************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/string/ip-address.js ***!
  \**********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var ip_v4_1 = __webpack_require__(/*! ./ip-v4 */ "../tsql/node_modules/type-mapping/dist/functional-lib/string/ip-v4.js");
var ip_v6_1 = __webpack_require__(/*! ./ip-v6 */ "../tsql/node_modules/type-mapping/dist/functional-lib/string/ip-v6.js");
var ip_v4_mapped_ip_v6_1 = __webpack_require__(/*! ./ip-v4-mapped-ip-v6 */ "../tsql/node_modules/type-mapping/dist/functional-lib/string/ip-v4-mapped-ip-v6.js");
function ipAddressString() {
    return operator_1.or(ip_v4_1.ipV4String(), ip_v6_1.ipV6String(), ip_v4_mapped_ip_v6_1.ipV4MappedIpV6String());
}
exports.ipAddressString = ipAddressString;
//# sourceMappingURL=ip-address.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/string/ip-v4-mapped-ip-v6.js":
/*!******************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/string/ip-v4-mapped-ip-v6.js ***!
  \******************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var string_1 = __webpack_require__(/*! ./string */ "../tsql/node_modules/type-mapping/dist/functional-lib/string/string.js");
var ip_v4_1 = __webpack_require__(/*! ./ip-v4 */ "../tsql/node_modules/type-mapping/dist/functional-lib/string/ip-v4.js");
var ip_v6_1 = __webpack_require__(/*! ./ip-v6 */ "../tsql/node_modules/type-mapping/dist/functional-lib/string/ip-v6.js");
var string_util_1 = __webpack_require__(/*! ../../string-util */ "../tsql/node_modules/type-mapping/dist/string-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
function ipV4MappedIpV6String() {
    var ipV4StringDelegate = ip_v4_1.ipV4String();
    var ipV6PartDelegate = ip_v6_1.ipV6StringWithMaxSegmentCount(6);
    return operator_1.pipe(string_1.string(), function (name, str) {
        var ipV4Start = str.lastIndexOf(":");
        if (ipV4Start < 0) {
            throw error_util_1.makeMappingError({
                message: "Expected " + name + " to have ':' symbol",
                inputName: name,
                actualValue: str,
                expected: "IPv4-mapped IPv6 string with ':' symbol",
            });
        }
        var rawIpV4 = str.substr(ipV4Start + 1);
        //Must have [1, 6] segments
        //Note : If input ends with "::", rawIpV6 becomes ":"
        var rawIpV6 = str.substr(0, ipV4Start);
        if (rawIpV6.length == 0) {
            throw error_util_1.makeMappingError({
                message: "Expected " + name + " to have one to six IPv6 segments; found zero",
                inputName: name,
                actualValue: str,
                expected: "IPv4-mapped IPv6 string with one to six IPv6 segments",
            });
        }
        var rawIpV6EndsWithDoubleColon = string_util_1.stringEndsWith(rawIpV6, ":");
        var ipV4 = ipV4StringDelegate(name + ".IPv4Part", rawIpV4);
        var ipV6 = ipV6PartDelegate(name + ".IPv6Part", rawIpV6EndsWithDoubleColon ?
            rawIpV6 + ":" :
            rawIpV6);
        if (string_util_1.stringEndsWith(ipV6, "::")) {
            return ipV6 + ipV4;
        }
        else if (string_util_1.stringEndsWith(ipV6, ":")) {
            return ipV6 + ipV4;
        }
        else {
            return ipV6 + ":" + ipV4;
        }
    });
}
exports.ipV4MappedIpV6String = ipV4MappedIpV6String;
//# sourceMappingURL=ip-v4-mapped-ip-v6.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/string/ip-v4.js":
/*!*****************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/string/ip-v4.js ***!
  \*****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var number_1 = __webpack_require__(/*! ../number */ "../tsql/node_modules/type-mapping/dist/functional-lib/number/index.js");
var string_1 = __webpack_require__(/*! ./string */ "../tsql/node_modules/type-mapping/dist/functional-lib/string/string.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
/**
    https://en.wikipedia.org/wiki/Dot-decimal_notation

    An octet is 8-bits.
    In decimal, an octet can represent [0, 255].

    IPv4 strings are made of four octets (written in decimal),
    each separated by a period.

    Examples:

    127.0.0.1
    255.255.255.0
    255.255.255.255
*/
function ipV4OctetString() {
    return operator_1.pipe(number_1.stringToUnsignedInteger(), number_1.ltEq(255), function (_name, octet) {
        return octet.toString();
    });
}
exports.ipV4OctetString = ipV4OctetString;
function ipV4String() {
    var octetDelegate = ipV4OctetString();
    return operator_1.pipe(string_1.string(), function (name, str) {
        var rawOctets = str
            .replace(/\s+/g, "")
            .split(".");
        if (rawOctets.length != 4) {
            throw error_util_1.makeMappingError({
                message: name + " must have four octets; found " + rawOctets.length,
                inputName: name,
                actualValue: str,
                expected: "four IPv4 octets",
            });
        }
        return rawOctets
            .map(function (rawOctet, i) { return octetDelegate(name + ".octet" + i, rawOctet); })
            .join(".");
    });
}
exports.ipV4String = ipV4String;
//# sourceMappingURL=ip-v4.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/string/ip-v6.js":
/*!*****************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/string/ip-v6.js ***!
  \*****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var string_1 = __webpack_require__(/*! ./string */ "../tsql/node_modules/type-mapping/dist/functional-lib/string/string.js");
var array_util_1 = __webpack_require__(/*! ../../array-util */ "../tsql/node_modules/type-mapping/dist/array-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
/**
    == INPUT ==
    https://tools.ietf.org/html/rfc4291#section-2.2

    Each IPv6 segment is any hexadecimal value between
    0 and ffff.

    Each segment is one to four hexadecimal digits.

    == OUTPUT ==
    https://tools.ietf.org/html/rfc5952#section-4.1
    Leading zeros MUST be suppressed.  For example, 2001:0db8::0001 is
    not acceptable and must be represented as 2001:db8::1.  A single 16-
    bit 0000 field MUST be represented as 0.

    https://tools.ietf.org/html/rfc5952#section-4.3

    The characters "a", "b", "c", "d", "e", and "f" in an IPv6 address
    MUST be represented in lowercase.
*/
function ipV6SegmentString() {
    return operator_1.pipe(string_1.stringLength({
        min: 1,
        max: 4,
    }), string_1.hexadecimalString(), function (_name, str) {
        if (/^0+$/.test(str)) {
            return "0";
        }
        return str.toLowerCase()
            .replace(/^0+/, "");
    });
}
exports.ipV6SegmentString = ipV6SegmentString;
function consecutiveZeroCount(segments, start) {
    var count = 0;
    while (segments[start] == "0") {
        ++count;
        ++start;
    }
    return count;
}
function largestConsecutiveZeroCount(segments) {
    var largestStart = 0;
    var largestCount = 0;
    var curStart = 0;
    while (curStart < segments.length) {
        var curCount = consecutiveZeroCount(segments, curStart);
        if (curCount > largestCount) {
            largestStart = curStart;
            largestCount = curCount;
        }
        ++curStart;
    }
    return {
        start: largestStart,
        count: largestCount,
        before: segments.slice(0, largestStart),
        after: segments.slice(largestStart + largestCount),
    };
}
/**
    https://tools.ietf.org/html/rfc5952#section-4.2.1

    The use of the symbol "::" MUST be used to its maximum capability.
    For example, 2001:db8:0:0:0:0:2:1 must be shortened to 2001:db8::2:1.
    Likewise, 2001:db8::0:1 is not acceptable, because the symbol "::"
    could have been used to produce a shorter representation 2001:db8::1.

    https://tools.ietf.org/html/rfc5952#section-4.2.2

    The symbol "::" MUST NOT be used to shorten just one 16-bit 0 field.
    For example, the representation 2001:db8:0:1:1:1:1:1 is correct, but
    2001:db8::1:1:1:1:1 is not correct.

    https://tools.ietf.org/html/rfc5952#section-4.2.3

    When there is an alternative choice in the placement of a "::", the
    longest run of consecutive 16-bit 0 fields MUST be shortened (i.e.,
    the sequence with three consecutive zero fields is shortened in 2001:
    0:0:1:0:0:0:1).  When the length of the consecutive 16-bit 0 fields
    are equal (i.e., 2001:db8:0:0:1:0:0:1), the first sequence of zero
    bits MUST be shortened.  For example, 2001:db8::1:0:0:1 is correct
    representation.
*/
function toIpV6CanonicalString(segments) {
    var result = largestConsecutiveZeroCount(segments);
    if (result.count <= 1) {
        return segments.join(":");
    }
    else {
        return (result.before.join(":") +
            "::" +
            result.after.join(":"));
    }
}
function ipV6StringWithMaxSegmentCount(maxSegmentCount) {
    var ipV6SegmentStringDelegate = ipV6SegmentString();
    return operator_1.pipe(string_1.string(), function (name, str) {
        var consecutiveNonZero = str
            .replace(/\s+/g, "")
            .split("::");
        if (consecutiveNonZero.length == 1) {
            //All non-zeroes
            var rawSegments = consecutiveNonZero[0].split(":");
            if (rawSegments.length != maxSegmentCount) {
                throw error_util_1.makeMappingError({
                    message: name + " must have " + maxSegmentCount + " segments; found " + rawSegments.length,
                    inputName: name,
                    actualValue: str,
                    expected: maxSegmentCount + " IPv6 segments",
                });
            }
            var segments = rawSegments
                .map(function (rawSegment, i) { return ipV6SegmentStringDelegate(name + " segment" + i, rawSegment); });
            return toIpV6CanonicalString(segments);
        }
        else if (consecutiveNonZero.length == 2) {
            //E.g. ffff:ffff::ffff:ffff:ffff
            var rawSegmentsA = consecutiveNonZero[0].split(":").filter(function (s) { return s != ""; });
            var rawSegmentsB = consecutiveNonZero[1].split(":").filter(function (s) { return s != ""; });
            var rawSegmentCount = rawSegmentsA.length + rawSegmentsB.length;
            if (rawSegmentCount >= maxSegmentCount) {
                throw error_util_1.makeMappingError({
                    message: name + " must have up to " + (maxSegmentCount - 1) + " segments when '::' symbol is used; found " + rawSegmentCount,
                    inputName: name,
                    actualValue: str,
                    expected: "up to " + (maxSegmentCount - 1) + " IPv6 segments",
                });
            }
            var segmentsA = rawSegmentsA
                .map(function (rawSegment, i) { return ipV6SegmentStringDelegate(name + " segment" + i, rawSegment); });
            var segmentBStart_1 = maxSegmentCount - rawSegmentsB.length;
            var segmentsB = rawSegmentsB
                .map(function (rawSegment, i) { return ipV6SegmentStringDelegate(name + " segment" + (segmentBStart_1 + i), rawSegment); });
            var zeroes = array_util_1.arrayFill(Array(maxSegmentCount - rawSegmentCount), "0");
            return toIpV6CanonicalString(segmentsA
                .concat(zeroes)
                .concat(segmentsB));
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must have zero or one '::' symbol; found " + (consecutiveNonZero.length - 1) + " uses",
                inputName: name,
                actualValue: str,
                expected: "IPv6 string with zero or one '::' symbol",
            });
        }
    });
}
exports.ipV6StringWithMaxSegmentCount = ipV6StringWithMaxSegmentCount;
function ipV6String() {
    return ipV6StringWithMaxSegmentCount(8);
}
exports.ipV6String = ipV6String;
//# sourceMappingURL=ip-v6.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/string/number-string.js":
/*!*************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/string/number-string.js ***!
  \*************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var number_1 = __webpack_require__(/*! ../number */ "../tsql/node_modules/type-mapping/dist/functional-lib/number/index.js");
var string_1 = __webpack_require__(/*! ./string */ "../tsql/node_modules/type-mapping/dist/functional-lib/string/string.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
var FixedPointUtil = __webpack_require__(/*! ../../fixed-point-util */ "../tsql/node_modules/type-mapping/dist/fixed-point-util/index.js");
var FloatingPointUtil = __webpack_require__(/*! ../../floating-point-util */ "../tsql/node_modules/type-mapping/dist/floating-point-util/index.js");
/**
    Just because a string is in floating point format does not mean
    it is a finite number.

    ```ts
    const nines_80 = "99999999999999999999999999999999999999999999999999999999999999999999999999999999";
    const nines_320 = nines_80.repeat(4);
    //This will pass, 320 nines in a row is a valid floating point format
    floatingPointFormatString()("", nines_320);
    //Infinity
    parseFloat(nines_320);
    ```

    + This mapper will trim strings before checking.
*/
function floatingPointFormatString() {
    return operator_1.pipe(string_1.toTrimmed(), string_1.match(FloatingPointUtil.floatingPointRegex, function (name) {
        return {
            message: name + " must be valid floating point format string",
            expected: "valid floating point format string",
        };
    }));
}
exports.floatingPointFormatString = floatingPointFormatString;
/**
    Just because a string is in integer format does not mean
    it is a finite number.

    ```ts
    const nines_80 = "99999999999999999999999999999999999999999999999999999999999999999999999999999999";
    const nines_320 = nines_80.repeat(4);
    //This will pass, 320 nines in a row is a valid integer format
    integerFormatString()("", nines_320);
    //Infinity
    parseFloat(nines_320);
    ```

    + This mapper will trim strings before checking.
    + This mapper allows scientific notation.
*/
function integerFormatString() {
    return operator_1.pipe(string_1.toTrimmed(), function (name, str) {
        var parsed = FixedPointUtil.tryParse(str);
        if (parsed == undefined || !parsed.isInteger) {
            throw error_util_1.makeMappingError({
                message: name + " must be a valid integer format string",
                inputName: name,
                actualValue: str,
                expected: "valid integer format string",
            });
        }
        return str;
    });
}
exports.integerFormatString = integerFormatString;
/**
    Just because a string is in unsigned number format does not mean
    it is a finite number.

    ```ts
    const nines_80 = "99999999999999999999999999999999999999999999999999999999999999999999999999999999";
    const nines_320 = nines_80.repeat(4);
    //This will pass, 320 nines in a row is a valid unsigned number format
    unsignedIntegerFormatString()("", nines_320);
    //Infinity
    parseFloat(nines_320);
    ```

    + This mapper will trim strings before checking.
    + This mapper allows scientific notation.
*/
function unsignedIntegerFormatString() {
    return operator_1.pipe(string_1.toTrimmed(), function (name, str) {
        var parsed = FixedPointUtil.tryParse(str);
        if (parsed == undefined || !parsed.isInteger || parsed.isNegative) {
            throw error_util_1.makeMappingError({
                message: name + " must be a valid unsigned integer format string",
                inputName: name,
                actualValue: str,
                expected: "valid unsigned integer format string",
            });
        }
        return str;
    });
}
exports.unsignedIntegerFormatString = unsignedIntegerFormatString;
/**
    Uses `floatingPointFormatString()` and `parseFloat()` internally.

    ```ts
    //Output is 10000000000000000 due to loss in precision
    finiteNumberString()("", "9999999999999999");
    ```
*/
function finiteNumberString() {
    var finiteNumberDelegate = number_1.finiteNumber();
    return operator_1.pipe(floatingPointFormatString(), function (name, str) {
        return finiteNumberDelegate("parseFloat(" + name + ")", parseFloat(str)).toString();
    });
}
exports.finiteNumberString = finiteNumberString;
/**
    Uses `integerFormatString()` and `parseFloat()` internally.

    ```ts
    //Output is 10000000000000000 due to loss in precision
    integerString()("", "9999999999999999");
    ```
*/
function integerString() {
    var integerDelegate = number_1.integer();
    return operator_1.pipe(integerFormatString(), function (name, str) {
        return integerDelegate("parseFloat(" + name + ")", parseFloat(str)).toString();
    });
}
exports.integerString = integerString;
/**
    Uses `unsignedIntegerString()` and `parseFloat()` internally.

    ```ts
    //Output is 10000000000000000 due to loss in precision
    integerString()("", "9999999999999999");
    ```
*/
function unsignedIntegerString() {
    var unsignedIntegerDelegate = number_1.unsignedInteger();
    return operator_1.pipe(unsignedIntegerFormatString(), function (name, str) {
        return unsignedIntegerDelegate("parseFloat(" + name + ")", parseFloat(str)).toString();
    });
}
exports.unsignedIntegerString = unsignedIntegerString;
//# sourceMappingURL=number-string.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/string/string.js":
/*!******************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/string/string.js ***!
  \******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var array_like_1 = __webpack_require__(/*! ../array-like */ "../tsql/node_modules/type-mapping/dist/functional-lib/array-like/index.js");
var string_util_1 = __webpack_require__(/*! ../../string-util */ "../tsql/node_modules/type-mapping/dist/string-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
function string() {
    return function (name, mixed) {
        if (typeof mixed != "string") {
            throw error_util_1.makeMappingError({
                message: name + " must be string; received " + type_util_1.toTypeStr(mixed),
                inputName: name,
                actualValue: mixed,
                expected: "string",
            });
        }
        return mixed;
    };
}
exports.string = string;
/**
    Calls `JSON.parse()` once.
*/
function jsonObjectString() {
    return operator_1.pipe(string(), function (name, str) {
        if (!/^\s*\{/.test(str)) {
            throw error_util_1.makeMappingError({
                message: name + " must be JSON Object string",
                inputName: name,
                actualValue: str,
                expected: "JSON Object string",
            });
        }
        try {
            JSON.parse(str);
        }
        catch (err) {
            throw error_util_1.makeMappingError({
                message: name + " must be valid JSON Object string; " + err.message,
                inputName: name,
                actualValue: str,
                expected: "valid JSON Object string",
            });
        }
        return str;
    });
}
exports.jsonObjectString = jsonObjectString;
function stringLength(args) {
    return operator_1.pipe(string(), array_like_1.length(args));
}
exports.stringLength = stringLength;
function stringExactLength(length) {
    return stringLength({
        min: length,
        max: length,
    });
}
exports.stringExactLength = stringExactLength;
function match(regex, errorDelegate) {
    return operator_1.pipe(string(), function (name, mixed) {
        if (regex.test(mixed)) {
            return mixed;
        }
        else {
            if (errorDelegate == undefined) {
                throw error_util_1.makeMappingError({
                    message: name + " must match " + regex.toString(),
                    inputName: name,
                    actualValue: mixed,
                    expected: regex.toString(),
                });
            }
            else {
                var errResult = errorDelegate(name);
                if (typeof errResult == "string") {
                    throw error_util_1.makeMappingError({
                        message: errResult,
                        inputName: name,
                        actualValue: mixed,
                        expected: regex.toString(),
                    });
                }
                else {
                    throw error_util_1.makeMappingError({
                        message: errResult.message,
                        inputName: name,
                        actualValue: mixed,
                        expected: errResult.expected,
                    });
                }
            }
        }
    });
}
exports.match = match;
function notMatch(regex, errorDelegate) {
    return operator_1.pipe(string(), function (name, mixed) {
        if (regex.test(mixed)) {
            if (errorDelegate == undefined) {
                throw error_util_1.makeMappingError({
                    message: name + " must not match " + regex.toString(),
                    inputName: name,
                    actualValue: mixed,
                    expected: "not " + regex.toString(),
                });
            }
            else {
                var errResult = errorDelegate(name);
                if (typeof errResult == "string") {
                    throw error_util_1.makeMappingError({
                        message: errResult,
                        inputName: name,
                        actualValue: mixed,
                        expected: "not " + regex.toString(),
                    });
                }
                else {
                    throw error_util_1.makeMappingError({
                        message: errResult.message,
                        inputName: name,
                        actualValue: mixed,
                        expected: errResult.expected,
                    });
                }
            }
        }
        else {
            return mixed;
        }
    });
}
exports.notMatch = notMatch;
/**
 *
 * Alias for `emailAddress()`
 *  @see {@link emailAddress}
 *
 * @deprecated
 */
function email() {
    return emailAddress();
}
exports.email = email;
/**
 * Runs the regex `/^.+@.+$/` on the string.
 * Doesn't exactly follow a standard.
 *
 * You may roll your own email address validator,
 * but it's better to just send a confirmation
 * email to check the email address is valid.
 */
function emailAddress() {
    return match(/^.+@.+$/, function (name) {
        return {
            message: name + " must be an email address",
            expected: "email address",
        };
    });
}
exports.emailAddress = emailAddress;
/**
 * + Allows empty string.
 * + Allows digits 0-9.
 * + Allows uppercase A-F.
 * + Allows lowercase a-f.
 */
function hexadecimalString() {
    return match(/^[a-fA-F0-9]*$/, function (name) {
        return {
            message: name + " must be a hexadecimal string",
            expected: "hexadecimal string",
        };
    });
}
exports.hexadecimalString = hexadecimalString;
function toUpperCase() {
    return operator_1.pipe(string(), function (_name, str) {
        return str.toUpperCase();
    });
}
exports.toUpperCase = toUpperCase;
function toLowerCase() {
    return operator_1.pipe(string(), function (_name, str) {
        return str.toLowerCase();
    });
}
exports.toLowerCase = toLowerCase;
//The `char` must be a single character or an error is thrown
function padLeft(minLength, char) {
    if (char.length != 1) {
        throw new Error("\"char\" must be one character; received " + char);
    }
    return operator_1.pipe(string(), function (_name, str) {
        if (str.length >= minLength) {
            return str;
        }
        return string_util_1.stringRepeat(char, minLength - str.length) + str;
    });
}
exports.padLeft = padLeft;
//The `char` must be a single character or an error is thrown
function padRight(minLength, char) {
    if (char.length != 1) {
        throw new Error("\"char\" must be one character; received " + char);
    }
    return operator_1.pipe(string(), function (_name, str) {
        if (str.length >= minLength) {
            return str;
        }
        return str + string_util_1.stringRepeat(char, minLength - str.length);
    });
}
exports.padRight = padRight;
function subStringBlacklist(blacklist, configuration) {
    if (configuration === void 0) { configuration = {}; }
    //We do not mind === here.
    var caseInsensitive = (configuration.caseInsensitive === true);
    if (caseInsensitive) {
        blacklist = blacklist.map(function (subString) { return subString.toLowerCase(); });
    }
    var blacklistStr = blacklist.map(function (s) { return type_util_1.toLiteralStr(s); }).join(", ");
    var expected = "not " + blacklistStr;
    return operator_1.pipe(string(), function (name, original) {
        var str = caseInsensitive ?
            original.toLowerCase() :
            original;
        var found = [];
        for (var _i = 0, blacklist_1 = blacklist; _i < blacklist_1.length; _i++) {
            var subString = blacklist_1[_i];
            if (str.indexOf(subString) >= 0) {
                found.push(subString);
            }
        }
        if (found.length == 0) {
            return original;
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must not contain the following: " + blacklistStr + "; found " + found.map(function (s) { return type_util_1.toLiteralStr(s); }).join(", "),
                inputName: name,
                actualValue: original,
                expected: expected,
            });
        }
    });
}
exports.subStringBlacklist = subStringBlacklist;
function toTrimmed() {
    return operator_1.pipe(string(), function (_name, str) {
        return str.trim();
    });
}
exports.toTrimmed = toTrimmed;
//# sourceMappingURL=string.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/type/deferred.js":
/*!******************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/type/deferred.js ***!
  \******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
;
function deferred() {
    var implementation = undefined;
    var result = function (name, mixed) {
        if (implementation == undefined) {
            throw error_util_1.makeMappingError({
                message: "Cannot check " + name + "; no implementation given for deferred mapper",
                inputName: name,
                actualValue: mixed,
                expected: "implementation for deferred mapper",
            });
        }
        else {
            return implementation(name, mixed);
        }
    };
    result.setImplementation = function (impl) {
        implementation = impl;
    };
    return result;
}
exports.deferred = deferred;
//# sourceMappingURL=deferred.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/type/index.js":
/*!***************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/type/index.js ***!
  \***************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./deferred */ "../tsql/node_modules/type-mapping/dist/functional-lib/type/deferred.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/uint-8-array/byte-length.js":
/*!*****************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/uint-8-array/byte-length.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var object_1 = __webpack_require__(/*! ../object */ "../tsql/node_modules/type-mapping/dist/functional-lib/object/index.js");
var number_1 = __webpack_require__(/*! ../number */ "../tsql/node_modules/type-mapping/dist/functional-lib/number/index.js");
var mapper_1 = __webpack_require__(/*! ../../mapper */ "../tsql/node_modules/type-mapping/dist/mapper/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
var error_code_1 = __webpack_require__(/*! ../../error-code */ "../tsql/node_modules/type-mapping/dist/error-code.js");
function byteLength(args) {
    var byteLengthDelegate = operator_1.pipe(number_1.unsignedInteger(), number_1.range({
        gtEq: args.min,
        ltEq: args.max,
    }));
    var expected = ((args.min == undefined) ?
        ((args.max == undefined) ?
            "value with \"byteLength\" property" :
            "value of byteLength less than, or equal to " + args.max.toString()) :
        ((args.max == undefined) ?
            "value of byteLength greater than, or equal to " + args.min.toString() :
            (args.min == args.max) ?
                "value of byteLength " + args.min.toString() :
                "value of byteLength between " + args.min.toString() + " and " + args.max.toString()));
    return operator_1.pipe(object_1.instanceOfObject(), function (name, mixed) {
        var byteLengthResult = mapper_1.tryMapHandled(byteLengthDelegate, name + ".byteLength", mixed.byteLength);
        if (byteLengthResult.success) {
            return mixed;
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must be " + expected,
                inputName: name,
                actualValue: mixed,
                expected: expected,
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_BYTE_LENGTH,
                    min: args.min,
                    max: args.max,
                },
                propertyErrors: [
                    byteLengthResult.mappingError,
                ],
            });
        }
    });
}
exports.byteLength = byteLength;
//# sourceMappingURL=byte-length.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/uint-8-array/index.js":
/*!***********************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/uint-8-array/index.js ***!
  \***********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./byte-length */ "../tsql/node_modules/type-mapping/dist/functional-lib/uint-8-array/byte-length.js"));
__export(__webpack_require__(/*! ./uint-8-array */ "../tsql/node_modules/type-mapping/dist/functional-lib/uint-8-array/uint-8-array.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/uint-8-array/uint-8-array.js":
/*!******************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/uint-8-array/uint-8-array.js ***!
  \******************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var byte_length_1 = __webpack_require__(/*! ./byte-length */ "../tsql/node_modules/type-mapping/dist/functional-lib/uint-8-array/byte-length.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
var error_code_1 = __webpack_require__(/*! ../../error-code */ "../tsql/node_modules/type-mapping/dist/error-code.js");
function instanceOfUint8Array() {
    return function (name, mixed) {
        if (!(mixed instanceof Uint8Array)) {
            throw error_util_1.makeMappingError({
                message: name + " must be instance of Uint8Array; received " + type_util_1.toTypeStr(mixed),
                inputName: name,
                actualValue: mixed,
                expected: "Uint8Array",
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_TYPE,
                },
            });
        }
        return mixed;
    };
}
exports.instanceOfUint8Array = instanceOfUint8Array;
function uint8ArrayLength(args) {
    return operator_1.pipe(byte_length_1.byteLength(args), instanceOfUint8Array());
}
exports.uint8ArrayLength = uint8ArrayLength;
function uint8ArrayExactLength(length) {
    return uint8ArrayLength({
        min: length,
        max: length,
    });
}
exports.uint8ArrayExactLength = uint8ArrayExactLength;
//# sourceMappingURL=uint-8-array.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/undefined/cast.js":
/*!*******************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/undefined/cast.js ***!
  \*******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "../tsql/node_modules/type-mapping/dist/functional-lib/operator/index.js");
var literal_1 = __webpack_require__(/*! ../literal */ "../tsql/node_modules/type-mapping/dist/functional-lib/literal/index.js");
var undefined_1 = __webpack_require__(/*! ./undefined */ "../tsql/node_modules/type-mapping/dist/functional-lib/undefined/undefined.js");
var string_1 = __webpack_require__(/*! ../string */ "../tsql/node_modules/type-mapping/dist/functional-lib/string/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
function nullToUndefined() {
    return function (name, mixed) {
        //We do not mind === here.
        if (mixed === undefined || mixed === null) {
            return undefined;
        }
        throw error_util_1.makeMappingError({
            message: name + " must be null|undefined; received " + type_util_1.toTypeStr(mixed),
            inputName: name,
            actualValue: mixed,
            expected: "null|undefined",
            expectedMeta: {
                mappableValues: [null, undefined],
                outputValues: [undefined],
            },
        });
    };
}
exports.nullToUndefined = nullToUndefined;
function emptyStringToUndefined() {
    return operator_1.cast(literal_1.literal(""), function () { return undefined; }, undefined_1.undefined());
}
exports.emptyStringToUndefined = emptyStringToUndefined;
/**
    An empty string, or a string of only whitespace
*/
function whitespaceStringToUndefined() {
    return operator_1.cast(string_1.match(/^\s*$/, function (name) {
        return {
            message: name + " must be a whitespace string",
            expected: "whitespace string",
        };
    }), function () { return undefined; }, undefined_1.undefined());
}
exports.whitespaceStringToUndefined = whitespaceStringToUndefined;
//# sourceMappingURL=cast.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/undefined/index.js":
/*!********************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/undefined/index.js ***!
  \********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./cast */ "../tsql/node_modules/type-mapping/dist/functional-lib/undefined/cast.js"));
__export(__webpack_require__(/*! ./undefined */ "../tsql/node_modules/type-mapping/dist/functional-lib/undefined/undefined.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/undefined/undefined.js":
/*!************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/undefined/undefined.js ***!
  \************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
function undef() {
    return function (name, mixed) {
        //We do not mind === here.
        if (mixed === undefined) {
            return mixed;
        }
        throw error_util_1.makeMappingError({
            message: name + " must be undefined; received " + type_util_1.toTypeStr(mixed),
            inputName: name,
            actualValue: mixed,
            expected: "undefined",
            expectedMeta: {
                mappableValues: [undefined],
                outputValues: [undefined],
            },
        });
    };
}
exports.undefined = undef;
//# sourceMappingURL=undefined.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/unknown/index.js":
/*!******************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/unknown/index.js ***!
  \******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./unknown */ "../tsql/node_modules/type-mapping/dist/functional-lib/unknown/unknown.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/functional-lib/unknown/unknown.js":
/*!********************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/functional-lib/unknown/unknown.js ***!
  \********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function unknown() {
    return function (_name, mixed) {
        return mixed;
    };
}
exports.unknown = unknown;
//# sourceMappingURL=unknown.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/index.js":
/*!*******************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/index.js ***!
  \*******************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path="buffer.d.ts" />
var ArrayBufferUtil = __webpack_require__(/*! ./array-buffer-util */ "../tsql/node_modules/type-mapping/dist/array-buffer-util/index.js");
exports.ArrayBufferUtil = ArrayBufferUtil;
var EnumUtil = __webpack_require__(/*! ./enum-util */ "../tsql/node_modules/type-mapping/dist/enum-util/index.js");
exports.EnumUtil = EnumUtil;
var BigIntUtil = __webpack_require__(/*! ./bigint-util */ "../tsql/node_modules/type-mapping/dist/bigint-util/index.js");
exports.BigIntUtil = BigIntUtil;
var FixedPointUtil = __webpack_require__(/*! ./fixed-point-util */ "../tsql/node_modules/type-mapping/dist/fixed-point-util/index.js");
exports.FixedPointUtil = FixedPointUtil;
var FloatingPointUtil = __webpack_require__(/*! ./floating-point-util */ "../tsql/node_modules/type-mapping/dist/floating-point-util/index.js");
exports.FloatingPointUtil = FloatingPointUtil;
__export(__webpack_require__(/*! ./decorator */ "../tsql/node_modules/type-mapping/dist/decorator/index.js"));
var ErrorUtil = __webpack_require__(/*! ./error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
exports.ErrorUtil = ErrorUtil;
__export(__webpack_require__(/*! ./field-map */ "../tsql/node_modules/type-mapping/dist/field-map/index.js"));
__export(__webpack_require__(/*! ./functional-lib */ "../tsql/node_modules/type-mapping/dist/functional-lib/index.js"));
var jsonApi = __webpack_require__(/*! ./json-api-lib */ "../tsql/node_modules/type-mapping/dist/json-api-lib/index.js");
exports.jsonApi = jsonApi;
__export(__webpack_require__(/*! ./mapper */ "../tsql/node_modules/type-mapping/dist/mapper/index.js"));
var mysql = __webpack_require__(/*! ./mysql-lib */ "../tsql/node_modules/type-mapping/dist/mysql-lib/index.js");
exports.mysql = mysql;
var TypeUtil = __webpack_require__(/*! ./type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
exports.TypeUtil = TypeUtil;
__export(__webpack_require__(/*! ./error-code */ "../tsql/node_modules/type-mapping/dist/error-code.js"));
__export(__webpack_require__(/*! ./fluent-mapper */ "../tsql/node_modules/type-mapping/dist/fluent-mapper.js"));
/**
 * Convenience function.
 * Will create a native `bigint` (if natively supported),
 * or create a polyfilled `bigint` (if polyfilled).
 */
function BigInt(x) {
    return TypeUtil.getBigIntFactoryFunctionOrError()(x);
}
exports.BigInt = BigInt;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/json-api-lib/attribute-collection.js":
/*!***********************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/json-api-lib/attribute-collection.js ***!
  \***********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../fluent-lib */ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js");
/**
 * Must be a plain-old-JavaScript-object in this implementation
 *
 * -----
 *
 * https://jsonapi.org/format/1.0/#document-resource-object-attributes
 *
 * The value of the `attributes` key **MUST** be an object (an “attributes object”).
 * Members of the attributes object (“attributes”) represent information about the resource object in which it’s defined.
 *
 * Attributes may contain any valid JSON value.
 *
 * Complex data structures involving JSON objects and arrays are allowed as attribute values.
 * However, any object that constitutes or is contained in an attribute **MUST NOT**
 * contain a `relationships` or `links` member, as those members are reserved by this specification for future use.
 *
 * Although has-one foreign keys (e.g. `author_id`) are often stored internally alongside other
 * information to be represented in a resource object, these keys **SHOULD NOT** appear as attributes.
 *
 * -----
 *
 * https://jsonapi.org/format/1.0/#document-resource-object-fields
 *
 * A resource object’s attributes and its relationships are collectively called its “fields”.
 *
 * Fields for a resource object **MUST** share a common namespace with each other and with `type` and `id`.
 * In other words, a resource can not have an attribute and relationship with the same name,
 * nor can it have an attribute or relationship named `type` or `id`.
 *
 * -----
 *
 * https://jsonapi.org/format/1.0/#document-member-names
 *
 * All member names used in a JSON:API document **MUST** be treated as
 * case sensitive by clients and servers, and they **MUST** meet all of the following conditions:
 *
 * + Member names **MUST** contain at least one character.
 * + Member names **MUST** contain only the allowed characters listed below.
 * + Member names **MUST** start and end with a “globally allowed character”, as defined below.
 *
 * To enable an easy mapping of member names to URLs,
 * it is **RECOMMENDED** that member names use only non-reserved,
 * URL safe characters specified in [RFC 3986](http://tools.ietf.org/html/rfc3986#page-13).
 *
 * ### Allowed Characters
 *
 * The following “globally allowed characters” **MAY** be used anywhere in a member name:
 *
 * + U+0061 to U+007A, “a-z”
 * + U+0041 to U+005A, “A-Z”
 * + U+0030 to U+0039, “0-9”
 * + U+0080 and above (non-ASCII Unicode characters; not recommended, not URL safe)
 *
 * Additionally, the following characters are allowed in member names, except as the first or last character:
 *
 * + U+002D HYPHEN-MINUS, “-“
 * + U+005F LOW LINE, “_”
 * + U+0020 SPACE, “ “ (not recommended, not URL safe)
 *
 *
 * ### Reserved Characters
 *
 * The following characters **MUST NOT** be used in member names:
 *
 * + U+002B PLUS SIGN, “+” (used for ordering)
 * + U+002C COMMA, “,” (used as a separator between relationship paths)
 * + U+002E PERIOD, “.” (used as a separator within relationship paths)
 * + U+005B LEFT SQUARE BRACKET, “[” (used in sparse fieldsets)
 * + U+005D RIGHT SQUARE BRACKET, “]” (used in sparse fieldsets)
 * + U+0021 EXCLAMATION MARK, “!”
 * + U+0022 QUOTATION MARK, ‘”’
 * + U+0023 NUMBER SIGN, “#”
 * + U+0024 DOLLAR SIGN, “$”
 * + U+0025 PERCENT SIGN, “%”
 * + U+0026 AMPERSAND, “&”
 * + U+0027 APOSTROPHE, “’”
 * + U+0028 LEFT PARENTHESIS, “(“
 * + U+0029 RIGHT PARENTHESIS, “)”
 * + U+002A ASTERISK, “*”
 * + U+002F SOLIDUS, “/”
 * + U+003A COLON, “:”
 * + U+003B SEMICOLON, “;”
 * + U+003C LESS-THAN SIGN, “<”
 * + U+003D EQUALS SIGN, “=”
 * + U+003E GREATER-THAN SIGN, “>”
 * + U+003F QUESTION MARK, “?”
 * + U+0040 COMMERCIAL AT, “@”
 * + U+005C REVERSE SOLIDUS, “\”
 * + U+005E CIRCUMFLEX ACCENT, “^”
 * + U+0060 GRAVE ACCENT, “`”
 * + U+007B LEFT CURLY BRACKET, “{“
 * + U+007C VERTICAL LINE, “|”
 * + U+007D RIGHT CURLY BRACKET, “}”
 * + U+007E TILDE, “~”
 * + U+007F DELETE
 * + U+0000 to U+001F (C0 Controls)
 *
 *  @see {@link pojo}
 *  @see {@link AttributeCollection}
 *
 * -----
 *
 * The JSON:API spec outlines many restrictions on field names of an `AttributeCollection`.
 *
 * However, we do not implement any of them at the moment.
 *
 * @todo Implement restrictions on field names?
 *
 */
exports.attributeCollection = fLib.pojo;
//# sourceMappingURL=attribute-collection.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/json-api-lib/client-resource.js":
/*!******************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/json-api-lib/client-resource.js ***!
  \******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../fluent-lib */ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js");
var attribute_collection_1 = __webpack_require__(/*! ./attribute-collection */ "../tsql/node_modules/type-mapping/dist/json-api-lib/attribute-collection.js");
var relationship_1 = __webpack_require__(/*! ./relationship */ "../tsql/node_modules/type-mapping/dist/json-api-lib/relationship.js");
var link_collection_1 = __webpack_require__(/*! ./link-collection */ "../tsql/node_modules/type-mapping/dist/json-api-lib/link-collection.js");
var meta_1 = __webpack_require__(/*! ./meta */ "../tsql/node_modules/type-mapping/dist/json-api-lib/meta.js");
/**
 * https://jsonapi.org/format/1.0/#document-resource-objects
 *
 * “Resource objects” appear in a JSON:API document to represent resources.
 *
 * A resource object **MUST** contain at least the following top-level members:
 *
 * + `id`
 * + `type`
 *
 * Exception: The `id` member is not required when the resource object originates
 * at the client and represents a new resource to be created on the server.
 *
 * In addition, a resource object **MAY** contain any of these top-level members:
 *
 * + `attributes`: an attributes object representing some of the resource’s data.
 * + `relationships`: a relationships object describing relationships between the resource and other JSON:API resources.
 * + `links`: a links object containing links related to the resource.
 * + `meta`: a meta object containing non-standard meta-information about a resource that can not be
 *   represented as an attribute or relationship.
 *
 *  @see {@link attributeCollection}
 *  @see {@link relationship}
 *  @see {@link linkCollection}
 *  @see {@link meta}
 *  @see {@link ClientResource}
 *  @see {@link ExpectedInputClientResource}
 */
exports.clientResource = function () { return fLib.object({
    id: fLib.string().orNull().optional(),
    type: fLib.string(),
    attributes: attribute_collection_1.attributeCollection().orNull().optional(),
    relationships: relationship_1.relationship().orNull().optional(),
    links: link_collection_1.linkCollection().orNull().optional(),
    meta: meta_1.meta().orNull().optional(),
}); };
//# sourceMappingURL=client-resource.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/json-api-lib/document/__document-constraint-impl.js":
/*!**************************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/json-api-lib/document/__document-constraint-impl.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../../fluent-lib */ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js");
/**
 * Implements the constraints outlined in https://jsonapi.org/format/1.0/#document-top-level
 *
 *  @see {@link serverDocument}
 *  @see {@link clientDocument}
 *  @see {@link __DocumentConstraintImplMapper}
 *  @see {@link __DocumentConstraintImpl}
 */
function __documentConstraintImpl(args) {
    if (args.data == undefined) {
        if (args.meta == undefined) {
            return fLib.object({
                data: fLib.null().optional(),
                included: fLib.null().optional(),
                errors: fLib.array(args.errorObject),
                meta: fLib.null().optional(),
            });
        }
        else {
            return fLib.or(fLib.object({
                data: fLib.null().optional(),
                included: fLib.null().optional(),
                errors: fLib.array(args.errorObject),
                meta: fLib.null().optional(),
            }), fLib.object({
                data: fLib.null().optional(),
                included: fLib.null().optional(),
                errors: fLib.null().optional(),
                meta: args.meta,
            }));
        }
    }
    else if (args.meta == undefined) {
        return fLib.or(fLib.object({
            data: fLib.null().optional(),
            included: fLib.null().optional(),
            errors: fLib.array(args.errorObject),
            meta: fLib.null().optional(),
        }), fLib.object({
            data: args.data,
            included: fLib.array(args.resource).orNull().optional(),
            errors: fLib.null().optional(),
            meta: fLib.null().optional(),
        }));
    }
    else {
        return fLib.or(fLib.object({
            data: fLib.null().optional(),
            included: fLib.null().optional(),
            errors: fLib.array(args.errorObject),
            meta: fLib.null().optional(),
        }), fLib.object({
            data: args.data,
            included: fLib.array(args.resource).orNull().optional(),
            errors: fLib.null().optional(),
            meta: args.meta,
        }));
    }
}
exports.__documentConstraintImpl = __documentConstraintImpl;
//# sourceMappingURL=__document-constraint-impl.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/json-api-lib/document/client-document.js":
/*!***************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/json-api-lib/document/client-document.js ***!
  \***************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var __document_constraint_impl_1 = __webpack_require__(/*! ./__document-constraint-impl */ "../tsql/node_modules/type-mapping/dist/json-api-lib/document/__document-constraint-impl.js");
var json_api_1 = __webpack_require__(/*! ../json-api */ "../tsql/node_modules/type-mapping/dist/json-api-lib/json-api.js");
var link_collection_1 = __webpack_require__(/*! ../link-collection */ "../tsql/node_modules/type-mapping/dist/json-api-lib/link-collection.js");
var error_object_1 = __webpack_require__(/*! ../error-object */ "../tsql/node_modules/type-mapping/dist/json-api-lib/error-object.js");
var client_resource_1 = __webpack_require__(/*! ../client-resource */ "../tsql/node_modules/type-mapping/dist/json-api-lib/client-resource.js");
var fLib = __webpack_require__(/*! ../../fluent-lib */ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js");
/**
 * In this implementation, you have to specify one of the following,
 *
 * + `data`
 * + `meta`
 * + both `data` and `meta`
 *
 * If both `data` and `meta` are specified, all documents without `errors` must also contain both.
 *
 * -----
 *
 * https://jsonapi.org/format/1.0/#document-top-level
 *
 * JSON object **MUST** be at the root of every JSON:API request and response containing data.
 * This object defines a document’s “top level”.
 *
 * A document **MUST** contain at least one of the following top-level members:
 *
 * + `data`: the document’s “primary data”
 * + `errors`: an array of error objects
 * + `meta`: a meta object that contains non-standard meta-information.
 *
 * The members `data` and `errors` **MUST NOT** coexist in the same document.
 *
 * A document **MAY** contain any of these top-level members:
 *
 * + `jsonapi`: an object describing the client’s implementation
 * + `links`: a links object related to the primary data.
 * + `included`: an array of resource objects that are related to the primary data and/or each other (“included resources”).
 *
 * If a document does not contain a top-level `data` key, the `included` member **MUST NOT** be present either.
 *
 * The top-level links object **MAY** contain the following members:
 *
 * + `self`: the link that generated the current response document.
 * + `related`: a related resource link when the primary data represents a resource relationship.
 * + pagination links for the primary data.
 *
 * The document’s “primary data” is a representation of the resource or collection of resources targeted by a request.
 *
 * Primary data **MUST** be either:
 *
 * + a single resource object, a single resource identifier object,
 *   or `null`, for requests that target single resources
 * + an array of resource objects, an array of resource identifier objects,
 *   or an empty array (`[]`), for requests that target resource collections
 *
 * A logical collection of resources **MUST** be represented as an array, even if it only contains one item or is empty.
 *
 * @param args - The data, or meta mappers (or both)
 *
 *  @see {@link ClientDocumentMapper}
 *  @see {@link ClientDocument}
 *  @see {@link ExpectedInputClientDocument}
 *  @see {@link MappableInputClientDocument}
 */
function clientDocument(args) {
    var clientDocumentBase = {
        errorObject: error_object_1.errorObject(),
        resource: client_resource_1.clientResource(),
    };
    var impl = __document_constraint_impl_1.__documentConstraintImpl(__assign({}, args, clientDocumentBase));
    var base = fLib.object({
        jsonapi: json_api_1.jsonApi().orNull().optional(),
        links: link_collection_1.linkCollection().orNull().optional(),
    });
    return fLib.deepMerge(impl, base);
}
exports.clientDocument = clientDocument;
//# sourceMappingURL=client-document.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/json-api-lib/document/index.js":
/*!*****************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/json-api-lib/document/index.js ***!
  \*****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./__document-constraint-impl */ "../tsql/node_modules/type-mapping/dist/json-api-lib/document/__document-constraint-impl.js"));
__export(__webpack_require__(/*! ./client-document */ "../tsql/node_modules/type-mapping/dist/json-api-lib/document/client-document.js"));
__export(__webpack_require__(/*! ./server-document */ "../tsql/node_modules/type-mapping/dist/json-api-lib/document/server-document.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/json-api-lib/document/server-document.js":
/*!***************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/json-api-lib/document/server-document.js ***!
  \***************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var __document_constraint_impl_1 = __webpack_require__(/*! ./__document-constraint-impl */ "../tsql/node_modules/type-mapping/dist/json-api-lib/document/__document-constraint-impl.js");
var json_api_1 = __webpack_require__(/*! ../json-api */ "../tsql/node_modules/type-mapping/dist/json-api-lib/json-api.js");
var link_collection_1 = __webpack_require__(/*! ../link-collection */ "../tsql/node_modules/type-mapping/dist/json-api-lib/link-collection.js");
var error_object_1 = __webpack_require__(/*! ../error-object */ "../tsql/node_modules/type-mapping/dist/json-api-lib/error-object.js");
var server_resource_1 = __webpack_require__(/*! ../server-resource */ "../tsql/node_modules/type-mapping/dist/json-api-lib/server-resource.js");
var fLib = __webpack_require__(/*! ../../fluent-lib */ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js");
/**
 * In this implementation, you have to specify one of the following,
 *
 * + `data`
 * + `meta`
 * + both `data` and `meta`
 *
 * If both `data` and `meta` are specified, all documents without `errors` must also contain both.
 *
 * -----
 *
 * https://jsonapi.org/format/1.0/#document-top-level
 *
 * JSON object **MUST** be at the root of every JSON:API request and response containing data.
 * This object defines a document’s “top level”.
 *
 * A document **MUST** contain at least one of the following top-level members:
 *
 * + `data`: the document’s “primary data”
 * + `errors`: an array of error objects
 * + `meta`: a meta object that contains non-standard meta-information.
 *
 * The members `data` and `errors` **MUST NOT** coexist in the same document.
 *
 * A document **MAY** contain any of these top-level members:
 *
 * + `jsonapi`: an object describing the server’s implementation
 * + `links`: a links object related to the primary data.
 * + `included`: an array of resource objects that are related to the primary data and/or each other (“included resources”).
 *
 * If a document does not contain a top-level `data` key, the `included` member **MUST NOT** be present either.
 *
 * The top-level links object **MAY** contain the following members:
 *
 * + `self`: the link that generated the current response document.
 * + `related`: a related resource link when the primary data represents a resource relationship.
 * + pagination links for the primary data.
 *
 * The document’s “primary data” is a representation of the resource or collection of resources targeted by a request.
 *
 * Primary data **MUST** be either:
 *
 * + a single resource object, a single resource identifier object,
 *   or `null`, for requests that target single resources
 * + an array of resource objects, an array of resource identifier objects,
 *   or an empty array (`[]`), for requests that target resource collections
 *
 * A logical collection of resources **MUST** be represented as an array, even if it only contains one item or is empty.
 *
 * @param args - The data, or meta mappers (or both)
 *
 *  @see {@link ServerDocumentMapper}
 *  @see {@link ServerDocument}
 *  @see {@link ExpectedInputServerDocument}
 *  @see {@link MappableInputServerDocument}
 */
function serverDocument(args) {
    var serverDocumentBase = {
        errorObject: error_object_1.errorObject(),
        resource: server_resource_1.serverResource(),
    };
    var impl = __document_constraint_impl_1.__documentConstraintImpl(__assign({}, args, serverDocumentBase));
    var base = fLib.object({
        jsonapi: json_api_1.jsonApi().orNull().optional(),
        links: link_collection_1.linkCollection().orNull().optional(),
    });
    return fLib.deepMerge(impl, base);
}
exports.serverDocument = serverDocument;
//# sourceMappingURL=server-document.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/json-api-lib/error-link-collection.js":
/*!************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/json-api-lib/error-link-collection.js ***!
  \************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../fluent-lib */ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js");
var link_collection_1 = __webpack_require__(/*! ./link-collection */ "../tsql/node_modules/type-mapping/dist/json-api-lib/link-collection.js");
var link_1 = __webpack_require__(/*! ./link */ "../tsql/node_modules/type-mapping/dist/json-api-lib/link.js");
/**
 * https://jsonapi.org/format/1.0/#error-objects
 *
 * Error objects provide additional information about problems encountered while performing an operation.
 * Error objects **MUST** be returned as an array keyed by `errors` in the top level of a JSON:API document.
 *
 * An error object **MAY** have the following members:
 *
 * + `links`: a links object containing the following members:
 *   + `about`: a link that leads to further details about this particular occurrence of the problem.
 *
 *  @see {@link errorObject}
 *  @see {@link link}
 *  @see {@link ErrorLinkCollection}
 *  @see {@link ExpectedInputErrorLinkCollection}
 */
exports.errorLinkCollection = function () { return fLib.deepMerge(link_collection_1.linkCollection(), fLib.object({
    about: link_1.link()
})); };
//# sourceMappingURL=error-link-collection.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/json-api-lib/error-object.js":
/*!***************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/json-api-lib/error-object.js ***!
  \***************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../fluent-lib */ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js");
var error_link_collection_1 = __webpack_require__(/*! ./error-link-collection */ "../tsql/node_modules/type-mapping/dist/json-api-lib/error-link-collection.js");
var error_source_1 = __webpack_require__(/*! ./error-source */ "../tsql/node_modules/type-mapping/dist/json-api-lib/error-source.js");
var meta_1 = __webpack_require__(/*! ./meta */ "../tsql/node_modules/type-mapping/dist/json-api-lib/meta.js");
/**
 * https://jsonapi.org/format/1.0/#error-objects
 *
 * Error objects provide additional information about problems encountered while performing an operation.
 * Error objects **MUST** be returned as an array keyed by `errors` in the top level of a JSON:API document.
 *
 * An error object **MAY** have the following members:
 *
 * + `id`: a unique identifier for this particular occurrence of the problem.
 * + `links`: a links object containing the following members:
 *   + `about`: a link that leads to further details about this particular occurrence of the problem.
 * + `status`: the HTTP status code applicable to this problem, expressed as a string value.
 * + `code`: an application-specific error code, expressed as a string value.
 * + `title`: a short, human-readable summary of the problem that **SHOULD NOT**
 *   change from occurrence to occurrence of the problem, except for purposes of localization.
 * + `detail`: a human-readable explanation specific to this occurrence of the problem.
 *   Like `title`, this field’s value can be localized.
 * + `source`: an object containing references to the source of the error,
 *   optionally including any of the following members:
 *   + `pointer`: a JSON Pointer [RFC6901](https://tools.ietf.org/html/rfc6901) to the associated entity in the request document
 *     [e.g. "/data" for a primary data object, or "/data/attributes/title" for a specific attribute].
 *   + `parameter`: a string indicating which URI query parameter caused the error.
 * + `meta`: a meta object containing non-standard meta-information about the error.
 *
 *  @see {@link errorLinkCollection}
 *  @see {@link errorSource}
 *  @see {@link meta}
 *  @see {@link ErrorObject}
 *  @see {@link ExpectedInputErrorObject}
 */
exports.errorObject = function () { return fLib.object({
    id: fLib.string().orNull().optional(),
    links: error_link_collection_1.errorLinkCollection().orNull().optional(),
    status: fLib.string().orNull().optional(),
    code: fLib.string().orNull().optional(),
    title: fLib.string().orNull().optional(),
    detail: fLib.string().orNull().optional(),
    source: error_source_1.errorSource().orNull().optional(),
    meta: meta_1.meta().orNull().optional(),
}); };
//# sourceMappingURL=error-object.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/json-api-lib/error-source.js":
/*!***************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/json-api-lib/error-source.js ***!
  \***************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../fluent-lib */ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js");
/**
 * https://jsonapi.org/format/1.0/#error-objects
 *
 * Error objects provide additional information about problems encountered while performing an operation.
 * Error objects **MUST** be returned as an array keyed by `errors` in the top level of a JSON:API document.
 *
 * An error object **MAY** have the following members:
 *
 * + `source`: an object containing references to the source of the error,
 *   optionally including any of the following members:
 *   + `pointer`: a JSON Pointer [RFC6901](https://tools.ietf.org/html/rfc6901) to the associated entity in the request document
 *     [e.g. "/data" for a primary data object, or "/data/attributes/title" for a specific attribute].
 *   + `parameter`: a string indicating which URI query parameter caused the error.
 *
 *  @see {@link errorObject}
 *  @see {@link ErrorSource}
 *  @see {@link ExpectedInputErrorSource}
 */
exports.errorSource = function () { return fLib.object({
    pointer: fLib.string().orNull().optional(),
    parameter: fLib.string().orNull().optional(),
}); };
//# sourceMappingURL=error-source.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/json-api-lib/index.js":
/*!********************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/json-api-lib/index.js ***!
  \********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./document */ "../tsql/node_modules/type-mapping/dist/json-api-lib/document/index.js"));
__export(__webpack_require__(/*! ./non-error-document */ "../tsql/node_modules/type-mapping/dist/json-api-lib/non-error-document/index.js"));
__export(__webpack_require__(/*! ./attribute-collection */ "../tsql/node_modules/type-mapping/dist/json-api-lib/attribute-collection.js"));
__export(__webpack_require__(/*! ./client-resource */ "../tsql/node_modules/type-mapping/dist/json-api-lib/client-resource.js"));
__export(__webpack_require__(/*! ./error-link-collection */ "../tsql/node_modules/type-mapping/dist/json-api-lib/error-link-collection.js"));
__export(__webpack_require__(/*! ./error-object */ "../tsql/node_modules/type-mapping/dist/json-api-lib/error-object.js"));
__export(__webpack_require__(/*! ./error-source */ "../tsql/node_modules/type-mapping/dist/json-api-lib/error-source.js"));
__export(__webpack_require__(/*! ./json-api */ "../tsql/node_modules/type-mapping/dist/json-api-lib/json-api.js"));
__export(__webpack_require__(/*! ./link-collection */ "../tsql/node_modules/type-mapping/dist/json-api-lib/link-collection.js"));
__export(__webpack_require__(/*! ./link */ "../tsql/node_modules/type-mapping/dist/json-api-lib/link.js"));
__export(__webpack_require__(/*! ./meta */ "../tsql/node_modules/type-mapping/dist/json-api-lib/meta.js"));
__export(__webpack_require__(/*! ./partial-relationship */ "../tsql/node_modules/type-mapping/dist/json-api-lib/partial-relationship.js"));
__export(__webpack_require__(/*! ./relationship */ "../tsql/node_modules/type-mapping/dist/json-api-lib/relationship.js"));
__export(__webpack_require__(/*! ./resource-identifier */ "../tsql/node_modules/type-mapping/dist/json-api-lib/resource-identifier.js"));
__export(__webpack_require__(/*! ./resource-linkage */ "../tsql/node_modules/type-mapping/dist/json-api-lib/resource-linkage.js"));
__export(__webpack_require__(/*! ./server-resource */ "../tsql/node_modules/type-mapping/dist/json-api-lib/server-resource.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/json-api-lib/json-api.js":
/*!***********************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/json-api-lib/json-api.js ***!
  \***********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../fluent-lib */ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js");
var meta_1 = __webpack_require__(/*! ./meta */ "../tsql/node_modules/type-mapping/dist/json-api-lib/meta.js");
/**
 * https://jsonapi.org/format/1.0/#document-jsonapi-object
 *
 * A JSON:API document **MAY** include information about its implementation
 * under a top level `jsonapi` member. If present, the value of the `jsonapi`
 * member **MUST** be an object (a “jsonapi object”).
 *
 * The jsonapi object **MAY** contain a `version` member whose value
 * is a string indicating the highest JSON API version supported.
 * This object **MAY** also contain a `meta` member,
 * whose value is a meta object that contains non-standard meta-information.
 *
 * ```ts
 * {
 *   "jsonapi": {
 *     "version": "1.0"
 *   }
 * }
 * ```
 *
 * If the `version` member is not present,
 * clients should assume the server implements at least version 1.0 of the specification.
 *
 * > Note: Because JSON:API is committed to making additive changes only,
 * > the version string primarily indicates which new features a server may support.
 *
 *  @see {@link meta}
 *  @see {@link JsonApi}
 *  @see {@link ExpectedInputJsonApi}
 */
exports.jsonApi = function () { return fLib.object({
    version: fLib.literal("1.0").orNull().optional(),
    meta: meta_1.meta().orNull().optional(),
}); };
//# sourceMappingURL=json-api.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/json-api-lib/link-collection.js":
/*!******************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/json-api-lib/link-collection.js ***!
  \******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../fluent-lib */ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js");
var link_1 = __webpack_require__(/*! ./link */ "../tsql/node_modules/type-mapping/dist/json-api-lib/link.js");
/**
 * https://jsonapi.org/format/1.0/#document-links
 *
 * Where specified, a `links` member can be used to represent links.
 * The value of each `links` member **MUST** be an object (a “links object”).
 *
 * Each member of a links object is a “link”.
 *
 * -----
 *
 * https://jsonapi.org/format/1.0/#document-top-level
 *
 * The top-level links object **MAY** contain the following members:
 *
 * + `self`: the link that generated the current response document.
 * + `related`: a related resource link when the primary data represents a resource relationship.
 * + pagination links for the primary data.
 *
 * -----
 *
 * https://jsonapi.org/format/1.0/#fetching-pagination
 *
 * A server **MAY** choose to limit the number of resources returned in a
 * response to a subset (“page”) of the whole set available.
 *
 * A server **MAY** provide links to traverse a paginated data set (“pagination links”).
 *
 * Pagination links **MUST** appear in the links object that corresponds to a collection.
 * To paginate the primary data, supply pagination links in the top-level `links` object.
 * To paginate an included collection returned in a compound document,
 * supply pagination links in the corresponding links object.
 *
 * The following keys **MUST** be used for pagination links:
 *
 * + `first`: the first page of data
 * + `last`: the last page of data
 * + `prev`: the previous page of data
 * + `next`: the next page of data
 *
 * Keys **MUST** either be omitted or have a `null` value to indicate that a particular link is unavailable.
 *
 * Concepts of order, as expressed in the naming of pagination links,
 * **MUST** remain consistent with JSON:API’s sorting rules.
 *
 * The `page` query parameter is reserved for pagination.
 * Servers and clients **SHOULD** use this key for pagination operations.
 *
 * -----
 *
 *  @see {@link link}
 *  @see {@link LinkCollection}
 *  @see {@link ExpectedInputLinkCollection}
 */
exports.linkCollection = function () { return fLib.stringIndexer(link_1.link().orNull()); };
//# sourceMappingURL=link-collection.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/json-api-lib/link.js":
/*!*******************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/json-api-lib/link.js ***!
  \*******************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../fluent-lib */ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js");
var metaLib = __webpack_require__(/*! ./meta */ "../tsql/node_modules/type-mapping/dist/json-api-lib/meta.js");
/**
 * http://jsonapi.org/format/1.0/#document-links
 *
 * A link MUST be represented as either:
 *
 * + a string containing the link’s URL.
 * + an object (“link object”) which can contain the following members:
 *     + `href`: a string containing the link’s URL.
 *     + `meta`: a meta object containing non-standard meta-information about the link.
 *
 * The following self link is simply a URL:
 *
 * ```ts
 * "links": {
 *     "self": "http://example.com/posts"
 * }
 * ```
 *
 * The following related link includes a URL as well as meta-information about a related resource collection:
 *
 * ```ts
 * "links": {
 *     "related": {
 *         "href": "http://example.com/articles/1/comments",
 *         "meta": {
 *             "count": 10
 *         }
 *     }
 * }
 * ```
 *
 *  @see {@link meta}
 *  @see {@link LinkObject}
 *  @see {@link ExpectedInputLinkObject}
 */
exports.linkObject = function () { return fLib.object({
    /** a string containing the link’s URL. */
    href: fLib.string(),
    /** a meta object containing non-standard meta-information about the link. */
    meta: metaLib.meta().orNull().optional(),
}); };
/**
 * Some description
 *
 * http://jsonapi.org/format/1.0/#document-links
 *
 * A link MUST be represented as either:
 *
 * + a string containing the link’s URL.
 * + an object (“link object”) which can contain the following members:
 *   + `href`: a string containing the link’s URL.
 *   + `meta`: a meta object containing non-standard meta-information about the link.
 *
 * The following self link is simply a URL:
 *
 * ```ts
 * "links": {
 *     "self": "http://example.com/posts"
 * }
 * ```
 *
 * The following related link includes a URL as well as meta-information about a related resource collection:
 *
 * ```ts
 * "links": {
 *     "related": {
 *         "href": "http://example.com/articles/1/comments",
 *         "meta": {
 *             "count": 10
 *         }
 *     }
 * }
 * ```
 *
 *  @see {@link meta}
 *  @see {@link linkObject}
 *  @see {@link Link}
 *  @see {@link ExpectedInputLink}
 */
exports.link = function () { return fLib.or(fLib.string(), exports.linkObject()); };
//# sourceMappingURL=link.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/json-api-lib/meta.js":
/*!*******************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/json-api-lib/meta.js ***!
  \*******************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../fluent-lib */ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js");
;
/**
 * Must be a plain-old-JavaScript-object in this implementation
 *
 * https://jsonapi.org/format/1.0/#document-meta
 *
 * Where specified, a `meta` member can be used to include non-standard meta-information.
 * The value of each `meta` member **MUST** be an object (a “meta object”).
 *
 * Any members **MAY** be specified within `meta` objects.
 *
 * For example:
 *
 * ```ts
 * {
 *     "meta": {
 *         "copyright": "Copyright 2015 Example Corp.",
 *         "authors": [
 *             "Yehuda Katz",
 *             "Steve Klabnik",
 *             "Dan Gebhardt",
 *             "Tyler Kellen"
 *         ]
 *     },
 *     "data": {
 *         // ...
 *     }
 * }
 * ```
 *
 *  @see {@link pojo}
 *
 */
exports.meta = fLib.pojo;
//# sourceMappingURL=meta.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/json-api-lib/non-error-document/__non-error-document-constraint-impl.js":
/*!**********************************************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/json-api-lib/non-error-document/__non-error-document-constraint-impl.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../../fluent-lib */ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js");
/**
 * Implements the constraints outlined in https://jsonapi.org/format/1.0/#document-top-level
 *
 *  @see {@link serverDocument}
 *  @see {@link clientDocument}
 *  @see {@link __DocumentConstraintImplMapper}
 *  @see {@link __DocumentConstraintImpl}
 */
function __nonErrorDocumentConstraintImpl(args) {
    if (args.data == undefined) {
        if (args.meta == undefined) {
            throw new Error("No data and meta mapper specified");
        }
        else {
            return fLib.object({
                data: fLib.null().optional(),
                included: fLib.null().optional(),
                errors: fLib.null().optional(),
                meta: args.meta,
            });
        }
    }
    else if (args.meta == undefined) {
        return fLib.object({
            data: args.data,
            included: fLib.array(args.resource).orNull().optional(),
            errors: fLib.null().optional(),
            meta: fLib.null().optional(),
        });
    }
    else {
        return fLib.object({
            data: args.data,
            included: fLib.array(args.resource).orNull().optional(),
            errors: fLib.null().optional(),
            meta: args.meta,
        });
    }
}
exports.__nonErrorDocumentConstraintImpl = __nonErrorDocumentConstraintImpl;
//# sourceMappingURL=__non-error-document-constraint-impl.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/json-api-lib/non-error-document/index.js":
/*!***************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/json-api-lib/non-error-document/index.js ***!
  \***************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./__non-error-document-constraint-impl */ "../tsql/node_modules/type-mapping/dist/json-api-lib/non-error-document/__non-error-document-constraint-impl.js"));
__export(__webpack_require__(/*! ./non-error-client-document */ "../tsql/node_modules/type-mapping/dist/json-api-lib/non-error-document/non-error-client-document.js"));
__export(__webpack_require__(/*! ./non-error-server-document */ "../tsql/node_modules/type-mapping/dist/json-api-lib/non-error-document/non-error-server-document.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/json-api-lib/non-error-document/non-error-client-document.js":
/*!***********************************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/json-api-lib/non-error-document/non-error-client-document.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var __non_error_document_constraint_impl_1 = __webpack_require__(/*! ./__non-error-document-constraint-impl */ "../tsql/node_modules/type-mapping/dist/json-api-lib/non-error-document/__non-error-document-constraint-impl.js");
var json_api_1 = __webpack_require__(/*! ../json-api */ "../tsql/node_modules/type-mapping/dist/json-api-lib/json-api.js");
var link_collection_1 = __webpack_require__(/*! ../link-collection */ "../tsql/node_modules/type-mapping/dist/json-api-lib/link-collection.js");
var client_resource_1 = __webpack_require__(/*! ../client-resource */ "../tsql/node_modules/type-mapping/dist/json-api-lib/client-resource.js");
var fLib = __webpack_require__(/*! ../../fluent-lib */ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js");
/**
 * In this implementation, you have to specify one of the following,
 *
 * + `data`
 * + `meta`
 * + both `data` and `meta`
 *
 * If both `data` and `meta` are specified, all documents without `errors` must also contain both.
 *
 * -----
 *
 * https://jsonapi.org/format/1.0/#document-top-level
 *
 * JSON object **MUST** be at the root of every JSON:API request and response containing data.
 * This object defines a document’s “top level”.
 *
 * A document **MUST** contain at least one of the following top-level members:
 *
 * + `data`: the document’s “primary data”
 * + `errors`: an array of error objects
 * + `meta`: a meta object that contains non-standard meta-information.
 *
 * The members `data` and `errors` **MUST NOT** coexist in the same document.
 *
 * A document **MAY** contain any of these top-level members:
 *
 * + `jsonapi`: an object describing the client’s implementation
 * + `links`: a links object related to the primary data.
 * + `included`: an array of resource objects that are related to the primary data and/or each other (“included resources”).
 *
 * If a document does not contain a top-level `data` key, the `included` member **MUST NOT** be present either.
 *
 * The top-level links object **MAY** contain the following members:
 *
 * + `self`: the link that generated the current response document.
 * + `related`: a related resource link when the primary data represents a resource relationship.
 * + pagination links for the primary data.
 *
 * The document’s “primary data” is a representation of the resource or collection of resources targeted by a request.
 *
 * Primary data **MUST** be either:
 *
 * + a single resource object, a single resource identifier object,
 *   or `null`, for requests that target single resources
 * + an array of resource objects, an array of resource identifier objects,
 *   or an empty array (`[]`), for requests that target resource collections
 *
 * A logical collection of resources **MUST** be represented as an array, even if it only contains one item or is empty.
 *
 * @param args - The data, or meta mappers (or both)
 *
 *  @see {@link ClientDocumentMapper}
 *  @see {@link ClientDocument}
 *  @see {@link ExpectedInputClientDocument}
 *  @see {@link MappableInputClientDocument}
 */
function nonErrorClientDocument(args) {
    var clientDocumentBase = {
        resource: client_resource_1.clientResource(),
    };
    var impl = __non_error_document_constraint_impl_1.__nonErrorDocumentConstraintImpl(__assign({}, args, clientDocumentBase));
    var base = fLib.object({
        jsonapi: json_api_1.jsonApi().orNull().optional(),
        links: link_collection_1.linkCollection().orNull().optional(),
    });
    return fLib.deepMerge(impl, base);
}
exports.nonErrorClientDocument = nonErrorClientDocument;
//# sourceMappingURL=non-error-client-document.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/json-api-lib/non-error-document/non-error-server-document.js":
/*!***********************************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/json-api-lib/non-error-document/non-error-server-document.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var __non_error_document_constraint_impl_1 = __webpack_require__(/*! ./__non-error-document-constraint-impl */ "../tsql/node_modules/type-mapping/dist/json-api-lib/non-error-document/__non-error-document-constraint-impl.js");
var json_api_1 = __webpack_require__(/*! ../json-api */ "../tsql/node_modules/type-mapping/dist/json-api-lib/json-api.js");
var link_collection_1 = __webpack_require__(/*! ../link-collection */ "../tsql/node_modules/type-mapping/dist/json-api-lib/link-collection.js");
var server_resource_1 = __webpack_require__(/*! ../server-resource */ "../tsql/node_modules/type-mapping/dist/json-api-lib/server-resource.js");
var fLib = __webpack_require__(/*! ../../fluent-lib */ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js");
/**
 * In this implementation, you have to specify one of the following,
 *
 * + `data`
 * + `meta`
 * + both `data` and `meta`
 *
 * If both `data` and `meta` are specified, all documents without `errors` must also contain both.
 *
 * -----
 *
 * https://jsonapi.org/format/1.0/#document-top-level
 *
 * JSON object **MUST** be at the root of every JSON:API request and response containing data.
 * This object defines a document’s “top level”.
 *
 * A document **MUST** contain at least one of the following top-level members:
 *
 * + `data`: the document’s “primary data”
 * + `errors`: an array of error objects
 * + `meta`: a meta object that contains non-standard meta-information.
 *
 * The members `data` and `errors` **MUST NOT** coexist in the same document.
 *
 * A document **MAY** contain any of these top-level members:
 *
 * + `jsonapi`: an object describing the server’s implementation
 * + `links`: a links object related to the primary data.
 * + `included`: an array of resource objects that are related to the primary data and/or each other (“included resources”).
 *
 * If a document does not contain a top-level `data` key, the `included` member **MUST NOT** be present either.
 *
 * The top-level links object **MAY** contain the following members:
 *
 * + `self`: the link that generated the current response document.
 * + `related`: a related resource link when the primary data represents a resource relationship.
 * + pagination links for the primary data.
 *
 * The document’s “primary data” is a representation of the resource or collection of resources targeted by a request.
 *
 * Primary data **MUST** be either:
 *
 * + a single resource object, a single resource identifier object,
 *   or `null`, for requests that target single resources
 * + an array of resource objects, an array of resource identifier objects,
 *   or an empty array (`[]`), for requests that target resource collections
 *
 * A logical collection of resources **MUST** be represented as an array, even if it only contains one item or is empty.
 *
 * @param args - The data, or meta mappers (or both)
 *
 *  @see {@link ServerDocumentMapper}
 *  @see {@link ServerDocument}
 *  @see {@link ExpectedInputServerDocument}
 *  @see {@link MappableInputServerDocument}
 */
function nonErrorServerDocument(args) {
    var serverDocumentBase = {
        resource: server_resource_1.serverResource(),
    };
    var impl = __non_error_document_constraint_impl_1.__nonErrorDocumentConstraintImpl(__assign({}, args, serverDocumentBase));
    var base = fLib.object({
        jsonapi: json_api_1.jsonApi().orNull().optional(),
        links: link_collection_1.linkCollection().orNull().optional(),
    });
    return fLib.deepMerge(impl, base);
}
exports.nonErrorServerDocument = nonErrorServerDocument;
//# sourceMappingURL=non-error-server-document.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/json-api-lib/partial-relationship.js":
/*!***********************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/json-api-lib/partial-relationship.js ***!
  \***********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../fluent-lib */ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js");
var link_collection_1 = __webpack_require__(/*! ./link-collection */ "../tsql/node_modules/type-mapping/dist/json-api-lib/link-collection.js");
var resource_linkage_1 = __webpack_require__(/*! ./resource-linkage */ "../tsql/node_modules/type-mapping/dist/json-api-lib/resource-linkage.js");
var meta_1 = __webpack_require__(/*! ./meta */ "../tsql/node_modules/type-mapping/dist/json-api-lib/meta.js");
/**
 * This is just a "partial" relationship because it does not
 * enforce the "at-least-one constraint"
 *
 * -----
 *
 *  @see {@link relationship}
 *  @see {@link linkCollection}
 *  @see {@link resourceLinkage}
 *  @see {@link meta}
 *  @see {@link PartialRelationship}
 *  @see {@link ExpectedInputPartialRelationship}
 */
exports.partialRelationship = function () { return fLib.object({
    links: link_collection_1.linkCollection().orNull().optional(),
    data: resource_linkage_1.resourceLinkage().orNull().optional(),
    meta: meta_1.meta().orNull().optional(),
}); };
//# sourceMappingURL=partial-relationship.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/json-api-lib/relationship.js":
/*!***************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/json-api-lib/relationship.js ***!
  \***************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../fluent-lib */ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js");
var partial_relationship_1 = __webpack_require__(/*! ./partial-relationship */ "../tsql/node_modules/type-mapping/dist/json-api-lib/partial-relationship.js");
var link_collection_1 = __webpack_require__(/*! ./link-collection */ "../tsql/node_modules/type-mapping/dist/json-api-lib/link-collection.js");
var resource_linkage_1 = __webpack_require__(/*! ./resource-linkage */ "../tsql/node_modules/type-mapping/dist/json-api-lib/resource-linkage.js");
var meta_1 = __webpack_require__(/*! ./meta */ "../tsql/node_modules/type-mapping/dist/json-api-lib/meta.js");
/**
 * https://jsonapi.org/format/1.0/#document-resource-object-relationships
 *
 * The value of the `relationships` key **MUST** be an object (a “relationships object”).
 * Members of the relationships object (“relationships”) represent references from the resource object
 * in which it’s defined to other resource objects.
 *
 * Relationships may be to-one or to-many.
 *
 * A “relationship object” **MUST** contain at least one of the following:
 *
 * + `links`: a links object containing at least one of the following:
 *   + `self`: a link for the relationship itself (a “relationship link”).
 *     This link allows the client to directly manipulate the relationship.
 *     For example, removing an `author` through an `article`’s relationship URL would disconnect
 *     the person from the `article` without deleting the `people` resource itself.
 *     When fetched successfully, this link returns the linkage for the related resources as its primary data.
 *     (See Fetching Relationships.)
 *   + `related`: a related resource link
 * + `data`: resource linkage
 * + `meta`: a meta object that contains non-standard meta-information about the relationship.
 *
 * A relationship object that represents a to-many relationship **MAY** also contain pagination links
 * under the `links` member, as described below.
 * Any pagination links in a relationship object **MUST** paginate the relationship data, not the related resources.
 *
 *  @see {@link partialRelationship}
 *  @see {@link Relationship}
 *  @see {@link ExpectedInputRelationship}
 */
exports.relationship = function () { return fLib.deepMerge(partial_relationship_1.partialRelationship(), fLib.or(fLib.object({ links: link_collection_1.linkCollection() }), fLib.object({ data: resource_linkage_1.resourceLinkage() }), fLib.object({ meta: meta_1.meta() }))); };
//# sourceMappingURL=relationship.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/json-api-lib/resource-identifier.js":
/*!**********************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/json-api-lib/resource-identifier.js ***!
  \**********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../fluent-lib */ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js");
var meta_1 = __webpack_require__(/*! ./meta */ "../tsql/node_modules/type-mapping/dist/json-api-lib/meta.js");
/**
 * https://jsonapi.org/format/1.0/#document-resource-identifier-objects
 *
 * A “resource identifier object” is an object that identifies an individual resource.
 *
 * A “resource identifier object” **MUST** contain `type` and `id` members.
 *
 * A “resource identifier object” **MAY** also include a `meta` member,
 * whose value is a meta object that contains non-standard meta-information.
 *
 *  @see {@link meta}
 *  @see {@link ResourceIdentifier}
 *  @see {@link ExpectedInputResourceIdentifier}
 */
exports.resourceIdentifier = function () { return fLib.object({
    type: fLib.string(),
    id: fLib.string(),
    meta: meta_1.meta().orNull().optional(),
}); };
//# sourceMappingURL=resource-identifier.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/json-api-lib/resource-linkage.js":
/*!*******************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/json-api-lib/resource-linkage.js ***!
  \*******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../fluent-lib */ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js");
var resource_identifier_1 = __webpack_require__(/*! ./resource-identifier */ "../tsql/node_modules/type-mapping/dist/json-api-lib/resource-identifier.js");
/**
 * https://jsonapi.org/format/1.0/#document-resource-object-linkage
 *
 * Resource linkage in a compound document allows a client to link together
 * all of the included resource objects without having to `GET` any URLs via links.
 *
 * Resource linkage **MUST** be represented as one of the following:
 *
 * + `null` for empty to-one relationships.
 * + an empty array (`[]`) for empty to-many relationships.
 * + a single resource identifier object for non-empty to-one relationships.
 * + an array of resource identifier objects for non-empty to-many relationships.
 *
 * > Note: The spec does not impart meaning to order of resource identifier objects in linkage arrays of
 * > to-many relationships, although implementations may do that.
 * > Arrays of resource identifier objects may represent ordered or unordered relationships,
 * > and both types can be mixed in one response object.
 *
 *  @see {@link resourceIdentifier}
 */
exports.resourceLinkage = function () { return fLib.or(resource_identifier_1.resourceIdentifier(), fLib.array(resource_identifier_1.resourceIdentifier())); };
//# sourceMappingURL=resource-linkage.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/json-api-lib/server-resource.js":
/*!******************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/json-api-lib/server-resource.js ***!
  \******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../fluent-lib */ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js");
var client_resource_1 = __webpack_require__(/*! ./client-resource */ "../tsql/node_modules/type-mapping/dist/json-api-lib/client-resource.js");
/**
 *  @see {@link clientResource}
 *  @see {@link ServerResource}
 *  @see {@link ExpectedInputServerResource}
 */
exports.serverResource = function () { return fLib.deepMerge(client_resource_1.clientResource(), fLib.object({
    id: fLib.string(),
})); };
//# sourceMappingURL=server-resource.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mapper/ctor.js":
/*!*************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mapper/ctor.js ***!
  \*************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
    The `ExpectedInput<>` and `MappableInput<>` parts
    of a `Mapper<>` are arbitrary metadata.

    However, they make returning `Mapper<>` functions
    with those parts difficult.

    This helper function makes it easier.

    Does not return a wrapper.

    -----

    TODO Handle `name`?
*/
function mapper(f) {
    return f;
}
exports.mapper = mapper;
//# sourceMappingURL=ctor.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mapper/debug/_debug-is-expected-input.js":
/*!***************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mapper/debug/_debug-is-expected-input.js ***!
  \***************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function _debugIsExpectedInput(_f, _x) {
}
exports._debugIsExpectedInput = _debugIsExpectedInput;
/*
import {unknown, optional} from "../../functional-lib";
import {withExpectedInput} from "../operation";
_debugIsExpectedInput(
    withExpectedInput(optional(unknown()))<number>(),
    {x : 2} as unknown
);
//*/ 
//# sourceMappingURL=_debug-is-expected-input.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mapper/debug/_debug-is-handled-input.js":
/*!**************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mapper/debug/_debug-is-handled-input.js ***!
  \**************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function _debugIsHandledInput(_f, _x) {
}
exports._debugIsHandledInput = _debugIsHandledInput;
//# sourceMappingURL=_debug-is-handled-input.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mapper/debug/_debug-is-mappable-input.js":
/*!***************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mapper/debug/_debug-is-mappable-input.js ***!
  \***************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function _debugIsMappableInput(_f, _x) {
}
exports._debugIsMappableInput = _debugIsMappableInput;
//# sourceMappingURL=_debug-is-mappable-input.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mapper/debug/_debug-is-output.js":
/*!*******************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mapper/debug/_debug-is-output.js ***!
  \*******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function _debugIsOutput(_f, _x) {
}
exports._debugIsOutput = _debugIsOutput;
//# sourceMappingURL=_debug-is-output.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mapper/debug/index.js":
/*!********************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mapper/debug/index.js ***!
  \********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./_debug-is-expected-input */ "../tsql/node_modules/type-mapping/dist/mapper/debug/_debug-is-expected-input.js"));
__export(__webpack_require__(/*! ./_debug-is-handled-input */ "../tsql/node_modules/type-mapping/dist/mapper/debug/_debug-is-handled-input.js"));
__export(__webpack_require__(/*! ./_debug-is-mappable-input */ "../tsql/node_modules/type-mapping/dist/mapper/debug/_debug-is-mappable-input.js"));
__export(__webpack_require__(/*! ./_debug-is-output */ "../tsql/node_modules/type-mapping/dist/mapper/debug/_debug-is-output.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mapper/index.js":
/*!**************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mapper/index.js ***!
  \**************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./debug */ "../tsql/node_modules/type-mapping/dist/mapper/debug/index.js"));
__export(__webpack_require__(/*! ./operation */ "../tsql/node_modules/type-mapping/dist/mapper/operation/index.js"));
__export(__webpack_require__(/*! ./predicate */ "../tsql/node_modules/type-mapping/dist/mapper/predicate/index.js"));
__export(__webpack_require__(/*! ./query */ "../tsql/node_modules/type-mapping/dist/mapper/query/index.js"));
__export(__webpack_require__(/*! ./ctor */ "../tsql/node_modules/type-mapping/dist/mapper/ctor.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mapper/operation/copy-run-time-modifier.js":
/*!*****************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mapper/operation/copy-run-time-modifier.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var query_1 = __webpack_require__(/*! ../query */ "../tsql/node_modules/type-mapping/dist/mapper/query/index.js");
/**
    Modifies `dst` by setting `name`, `__optional`, `__runTimeRequired`.
    You should not need to call this, in general.
*/
function copyRunTimeModifier(src, dst) {
    type_util_1.setFunctionName(dst, query_1.getNameOrEmptyString(src));
    dst.__optional = query_1.getOptionalFlagOrFalse(src);
    dst.__runTimeRequired = query_1.getRunTimeRequiredFlagOrFalse(src);
    return dst;
}
exports.copyRunTimeModifier = copyRunTimeModifier;
/**
    Modifies `dst` by setting `name`.
    You should not need to call this, in general.
*/
function copyName(src, dst) {
    type_util_1.setFunctionName(dst, query_1.getNameOrEmptyString(src));
    return dst;
}
exports.copyName = copyName;
/**
    Modifies `dst` by setting `__optional`.
    You should not need to call this, in general.
*/
function copyOptional(src, dst) {
    dst.__optional = query_1.getOptionalFlagOrFalse(src);
    return dst;
}
exports.copyOptional = copyOptional;
/**
    Modifies `dst` by setting `__runTimeRequired`.
    You should not need to call this, in general.
*/
function copyRunTimeRequired(src, dst) {
    dst.__runTimeRequired = query_1.getRunTimeRequiredFlagOrFalse(src);
    return dst;
}
exports.copyRunTimeRequired = copyRunTimeRequired;
//# sourceMappingURL=copy-run-time-modifier.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mapper/operation/expect-mappable-input.js":
/*!****************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mapper/operation/expect-mappable-input.js ***!
  \****************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
    Makes the `ExpectedInput<>` of a `Mapper<>` the same as its
    `MappableInput<>`.

    Returns the same `Mapper<>`, DOES NOT create a new function.

    TODO Decide if it should return a wrapper.
*/
function expectMappableInput(f) {
    return f;
}
exports.expectMappableInput = expectMappableInput;
;
//# sourceMappingURL=expect-mappable-input.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mapper/operation/index.js":
/*!************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mapper/operation/index.js ***!
  \************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./copy-run-time-modifier */ "../tsql/node_modules/type-mapping/dist/mapper/operation/copy-run-time-modifier.js"));
__export(__webpack_require__(/*! ./expect-mappable-input */ "../tsql/node_modules/type-mapping/dist/mapper/operation/expect-mappable-input.js"));
__export(__webpack_require__(/*! ./map */ "../tsql/node_modules/type-mapping/dist/mapper/operation/map.js"));
__export(__webpack_require__(/*! ./try-map */ "../tsql/node_modules/type-mapping/dist/mapper/operation/try-map.js"));
__export(__webpack_require__(/*! ./with-expected-input */ "../tsql/node_modules/type-mapping/dist/mapper/operation/with-expected-input.js"));
__export(__webpack_require__(/*! ./with-mapper */ "../tsql/node_modules/type-mapping/dist/mapper/operation/with-mapper.js"));
__export(__webpack_require__(/*! ./with-name */ "../tsql/node_modules/type-mapping/dist/mapper/operation/with-name.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mapper/operation/map.js":
/*!**********************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mapper/operation/map.js ***!
  \**********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
    Alias of `mapExpected<>()`
*/
function map(f, name, mixed) {
    return f(name, mixed);
}
exports.map = map;
;
function mapExpected(f, name, mixed) {
    return f(name, mixed);
}
exports.mapExpected = mapExpected;
;
function mapMappable(f, name, mixed) {
    return f(name, mixed);
}
exports.mapMappable = mapMappable;
;
/**
    You can just call `f(name, mixed)` directly.
    This is only provided for completeness.
*/
function mapHandled(f, name, mixed) {
    return f(name, mixed);
}
exports.mapHandled = mapHandled;
;
//# sourceMappingURL=map.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mapper/operation/try-map.js":
/*!**************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mapper/operation/try-map.js ***!
  \**************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
function tryMapImpl(f, name, mixed) {
    try {
        return {
            success: true,
            value: f(name, mixed),
        };
    }
    catch (err) {
        if (error_util_1.isMappingError(err)) {
            return {
                success: false,
                err: err,
                mappingError: err,
            };
        }
        else {
            return {
                success: false,
                err: err,
                mappingError: error_util_1.makeMappingError({
                    message: err.message,
                    inputName: name,
                    actualValue: mixed,
                    expected: undefined,
                    stack: err.stack,
                }),
            };
        }
    }
}
/**
    Alias of `tryMapExpected<>()`
*/
function tryMap(f, name, mixed) {
    return tryMapImpl(f, name, mixed);
}
exports.tryMap = tryMap;
;
function tryMapExpected(f, name, mixed) {
    return tryMapImpl(f, name, mixed);
}
exports.tryMapExpected = tryMapExpected;
;
function tryMapMappable(f, name, mixed) {
    return tryMapImpl(f, name, mixed);
}
exports.tryMapMappable = tryMapMappable;
;
function tryMapHandled(f, name, mixed) {
    return tryMapImpl(f, name, mixed);
}
exports.tryMapHandled = tryMapHandled;
;
//# sourceMappingURL=try-map.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mapper/operation/with-expected-input.js":
/*!**************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mapper/operation/with-expected-input.js ***!
  \**************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
    Lets you modify the `ExpectedInput<>` of a `Mapper<>`.

    Returns the same `Mapper<>`, DOES NOT create a new function.

    TODO Decide if it should return a wrapper.

    -----

    ### Use Case

    Give a `Mapper<>` with the following properties,

    + `MappableInput<> = string|number`
    + `ExpectedInput<> = string`

    If we wish to change the `ExpectedInput<>` to `number`,
    we do the following,

    ```ts
    const otherMapper = withExpectedInput(mapper)<number>();
    ```
*/
function withExpectedInput(f) {
    return function () {
        return f;
    };
}
exports.withExpectedInput = withExpectedInput;
;
//# sourceMappingURL=with-expected-input.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mapper/operation/with-mapper.js":
/*!******************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mapper/operation/with-mapper.js ***!
  \******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var query_1 = __webpack_require__(/*! ../query */ "../tsql/node_modules/type-mapping/dist/mapper/query/index.js");
var with_name_1 = __webpack_require__(/*! ./with-name */ "../tsql/node_modules/type-mapping/dist/mapper/operation/with-name.js");
function withMapper(f, newMapper) {
    return with_name_1.withName(newMapper, query_1.getNameOrEmptyString(f));
}
exports.withMapper = withMapper;
//# sourceMappingURL=with-mapper.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mapper/operation/with-name.js":
/*!****************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mapper/operation/with-name.js ***!
  \****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var copy_run_time_modifier_1 = __webpack_require__(/*! ./copy-run-time-modifier */ "../tsql/node_modules/type-mapping/dist/mapper/operation/copy-run-time-modifier.js");
/**
    Lets you modify the `Name<>` of a `Mapper<>`.

    Returns a new `Mapper<>`.
*/
function withName(f, name) {
    var result = function (name, mixed) {
        return f(name, mixed);
    };
    return copy_run_time_modifier_1.copyRunTimeRequired(f, copy_run_time_modifier_1.copyOptional(f, type_util_1.setFunctionName(result, name)));
}
exports.withName = withName;
;
//# sourceMappingURL=with-name.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mapper/predicate/array.js":
/*!************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mapper/predicate/array.js ***!
  \************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function isEmptyArrayMappable(f) {
    try {
        f("", []);
        return true;
    }
    catch (_err) {
        return false;
    }
}
exports.isEmptyArrayMappable = isEmptyArrayMappable;
function canOutputEmptyArray(f) {
    try {
        /*
            Using idempotent property.

            (f(blah) === []) implies (f([]) === [])
        */
        var output = f("", []);
        return ((output instanceof Array) &&
            (output.length == 0));
    }
    catch (_err) {
        return false;
    }
}
exports.canOutputEmptyArray = canOutputEmptyArray;
//# sourceMappingURL=array.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mapper/predicate/index.js":
/*!************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mapper/predicate/index.js ***!
  \************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./array */ "../tsql/node_modules/type-mapping/dist/mapper/predicate/array.js"));
__export(__webpack_require__(/*! ./is-optional */ "../tsql/node_modules/type-mapping/dist/mapper/predicate/is-optional.js"));
__export(__webpack_require__(/*! ./missing-value */ "../tsql/node_modules/type-mapping/dist/mapper/predicate/missing-value.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mapper/predicate/is-optional.js":
/*!******************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mapper/predicate/is-optional.js ***!
  \******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var query_1 = __webpack_require__(/*! ../query */ "../tsql/node_modules/type-mapping/dist/mapper/query/index.js");
var missing_value_1 = __webpack_require__(/*! ./missing-value */ "../tsql/node_modules/type-mapping/dist/mapper/predicate/missing-value.js");
//TODO Consider renaming to `isMappableInputOptional()`
function isOptional(f) {
    if (typeof f != "function") {
        return false;
    }
    if (!query_1.getOptionalFlagOrFalse(f)) {
        return false;
    }
    if (!missing_value_1.isUndefinedMappable(f)) {
        return false;
    }
    return true;
}
exports.isOptional = isOptional;
//# sourceMappingURL=is-optional.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mapper/predicate/missing-value.js":
/*!********************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mapper/predicate/missing-value.js ***!
  \********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function isUndefinedMappable(f) {
    try {
        f("", undefined);
        return true;
    }
    catch (_err) {
        return false;
    }
}
exports.isUndefinedMappable = isUndefinedMappable;
function isNullMappable(f) {
    try {
        f("", null);
        return true;
    }
    catch (_err) {
        return false;
    }
}
exports.isNullMappable = isNullMappable;
function isMaybeMappable(f) {
    try {
        f("", null);
        f("", undefined);
        return true;
    }
    catch (_err) {
        return false;
    }
}
exports.isMaybeMappable = isMaybeMappable;
function canOutputUndefined(f) {
    try {
        /*
            Using idempotent property.

            (f(blah) === undefined) implies (f(undefined) === undefined)
        */
        return (f("", undefined) === undefined);
    }
    catch (_err) {
        return false;
    }
}
exports.canOutputUndefined = canOutputUndefined;
function canOutputNull(f) {
    try {
        /*
            Using idempotent property.

            (f(blah) === null) implies (f(null) === null)
        */
        return (f("", null) === null);
    }
    catch (_err) {
        return false;
    }
}
exports.canOutputNull = canOutputNull;
function canOutputMaybe(f) {
    try {
        /*
            Using idempotent property.

            (f(blah) === null) implies (f(null) === null)
            (f(blah) === undefined) implies (f(null) === undefined)
        */
        return ((f("", null) === null) &&
            (f("", undefined) === undefined));
    }
    catch (_err) {
        return false;
    }
}
exports.canOutputMaybe = canOutputMaybe;
//# sourceMappingURL=missing-value.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mapper/query/index.js":
/*!********************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mapper/query/index.js ***!
  \********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./name-of */ "../tsql/node_modules/type-mapping/dist/mapper/query/name-of.js"));
__export(__webpack_require__(/*! ./optional-flag-of */ "../tsql/node_modules/type-mapping/dist/mapper/query/optional-flag-of.js"));
__export(__webpack_require__(/*! ./run-time-required-flag-of */ "../tsql/node_modules/type-mapping/dist/mapper/query/run-time-required-flag-of.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mapper/query/name-of.js":
/*!**********************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mapper/query/name-of.js ***!
  \**********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function getNameOrEmptyString(f) {
    if (typeof f != "function") {
        return "";
    }
    var result = f.__name;
    return ((typeof result == "string") ?
        result :
        "");
}
exports.getNameOrEmptyString = getNameOrEmptyString;
//# sourceMappingURL=name-of.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mapper/query/optional-flag-of.js":
/*!*******************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mapper/query/optional-flag-of.js ***!
  \*******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function getOptionalFlagOrFalse(f) {
    var result = f.__optional;
    return (result === true);
}
exports.getOptionalFlagOrFalse = getOptionalFlagOrFalse;
//# sourceMappingURL=optional-flag-of.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mapper/query/run-time-required-flag-of.js":
/*!****************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mapper/query/run-time-required-flag-of.js ***!
  \****************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function getRunTimeRequiredFlagOrFalse(f) {
    var result = f.__runTimeRequired;
    return (result === true);
}
exports.getRunTimeRequiredFlagOrFalse = getRunTimeRequiredFlagOrFalse;
//# sourceMappingURL=run-time-required-flag-of.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mysql-lib/binary/index.js":
/*!************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mysql-lib/binary/index.js ***!
  \************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fluent_lib_1 = __webpack_require__(/*! ../../fluent-lib */ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js");
function bufferDelegate(dataTypeStr, maxLength) {
    var result = function (a, b) {
        if (a == undefined) {
            return fluent_lib_1.bufferLength({
                max: maxLength,
            });
        }
        else if (b == undefined) {
            a = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({
                gtEq: 1,
                ltEq: maxLength,
            }))(dataTypeStr + ".desiredLengthMax", a);
            return fluent_lib_1.bufferLength({
                max: a,
            });
        }
        else {
            a = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({
                gtEq: 0,
                ltEq: maxLength,
            }))(dataTypeStr + ".desiredLengthMin", a);
            b = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({
                gtEq: 1,
                ltEq: maxLength,
            }))(dataTypeStr + ".desiredLengthMax", b);
            if (a > b) {
                throw new Error(dataTypeStr + " minLength must be <= maxLength");
            }
            return fluent_lib_1.bufferLength({
                min: a,
                max: b,
            });
        }
    };
    result.maxLength = maxLength;
    return result;
}
exports.binary = bufferDelegate("BINARY", 255);
exports.varBinary = bufferDelegate("VARBINARY", 65535);
exports.tinyBlob = bufferDelegate("TINYBLOB", 255);
exports.blob = bufferDelegate("BLOB", 65535);
exports.mediumBlob = bufferDelegate("MEDIUMBLOB", 16777215);
exports.longBlob = bufferDelegate("LONGBLOB", 4294967295);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mysql-lib/boolean/index.js":
/*!*************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mysql-lib/boolean/index.js ***!
  \*************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../../fluent-lib */ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js");
var TypeUtil = __webpack_require__(/*! ../../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
/**
    Converts some values to `boolean`.

    The values `0|1|"0"|"1"` were chosen because
    these values are most likely to show up from
    a MySQL driver to represent a `boolean`

    The values `"false"|"true"` were chosen because
    these values will show up in query strings.
*/
function boolean() {
    var BigInt = TypeUtil.getBigIntFactoryFunctionOrError();
    return fLib.or(fLib.boolean(), fLib.literal("0", "1", 0, 1, "false", "true", BigInt(0), BigInt(1)).pipe(function (name, v) {
        switch (v) {
            case "0": return false;
            case "1": return true;
            case 0: return false;
            case 1: return true;
            case "false": return false;
            case "true": return true;
            default: {
                var str = String(v);
                if (str == "0") {
                    return false;
                }
                else if (str == "1") {
                    return true;
                }
                //Shouldn't happen
                throw new Error("Expected " + name + " to be one of '0'|'1'|0|1|'false'|'true'|'0n'|'1n'");
            }
        }
    })).withExpectedInput();
}
exports.boolean = boolean;
/**
    Converts some values to `true`.

    The values `1|"1"` were chosen because
    these values are most likely to show up from
    a MySQL driver to represent a `boolean`

    The values `"true"` was chosen because
    it will show up in query strings.
*/
function toTrue() {
    var BigInt = TypeUtil.getBigIntFactoryFunctionOrError();
    return fLib.or(fLib.literal(true), fLib.literal("1", 1, "true", BigInt(1)).pipe(function (name, v) {
        switch (v) {
            case "1": return true;
            case 1: return true;
            case "true": return true;
            default: {
                var str = String(v);
                if (str == "1") {
                    return true;
                }
                //Shouldn't happen
                throw new Error("Expected " + name + " to be one of '1'|1|'true'");
            }
        }
    })).withExpectedInput();
}
exports.true = toTrue;
/**
    Converts some values to `false`.

    The values `0|"0"` were chosen because
    these values are most likely to show up from
    a MySQL driver to represent a `boolean`

    The values `"false"` was chosen because
    it will show up in query strings.
*/
function toFalse() {
    var BigInt = TypeUtil.getBigIntFactoryFunctionOrError();
    return fLib.or(fLib.literal(false), fLib.literal("0", 0, "false", BigInt(0)).pipe(function (name, v) {
        switch (v) {
            case "0": return false;
            case 0: return false;
            case "false": return false;
            default: {
                var str = String(v);
                if (str == "0") {
                    return false;
                }
                //Shouldn't happen
                throw new Error("Expected " + name + " to be one of '0'|0|'false'");
            }
        }
    })).withExpectedInput();
}
exports.false = toFalse;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mysql-lib/char/index.js":
/*!**********************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mysql-lib/char/index.js ***!
  \**********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fluent_lib_1 = __webpack_require__(/*! ../../fluent-lib */ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js");
function stringDelegate(dataTypeStr, maxLength) {
    var result = function (a, b) {
        if (a == undefined) {
            return fluent_lib_1.stringLength({
                max: maxLength,
            });
        }
        else if (b == undefined) {
            a = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({
                gtEq: 1,
                ltEq: maxLength,
            }))(dataTypeStr + ".desiredLengthMax", a);
            return fluent_lib_1.stringLength({
                max: a,
            });
        }
        else {
            a = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({
                gtEq: 0,
                ltEq: maxLength,
            }))(dataTypeStr + ".desiredLengthMin", a);
            b = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({
                gtEq: 1,
                ltEq: maxLength,
            }))(dataTypeStr + ".desiredLengthMax", b);
            if (a > b) {
                throw new Error(dataTypeStr + " minLength must be <= maxLength");
            }
            return fluent_lib_1.stringLength({
                min: a,
                max: b,
            });
        }
    };
    result.maxLength = maxLength;
    return result;
}
exports.char = stringDelegate("CHAR", 255);
exports.varChar = stringDelegate("VARCHAR", 65535);
exports.tinyText = stringDelegate("TINYTEXT", 255);
exports.text = stringDelegate("TEXT", 65535);
exports.mediumText = stringDelegate("MEDIUMTEXT", 16777215);
exports.longText = stringDelegate("LONGTEXT", 4294967295);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mysql-lib/date-time/index.js":
/*!***************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mysql-lib/date-time/index.js ***!
  \***************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fluent_lib_1 = __webpack_require__(/*! ../../fluent-lib */ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js");
var DateTimeUtil = __webpack_require__(/*! ./util */ "../tsql/node_modules/type-mapping/dist/mysql-lib/date-time/util.js");
exports.DateTimeUtil = DateTimeUtil;
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
function dateTime(fractionalSecondPrecision) {
    if (fractionalSecondPrecision === void 0) { fractionalSecondPrecision = 0; }
    return fluent_lib_1.or(fluent_lib_1.string().pipe(function (name, str) {
        try {
            return DateTimeUtil.fromSqlUtc(str, fractionalSecondPrecision);
        }
        catch (err) {
            throw error_util_1.makeMappingError({
                message: name + " must be DATETIME(" + fractionalSecondPrecision + "); " + err.message,
                inputName: name,
                actualValue: str,
                expected: "DATETIME(" + fractionalSecondPrecision + ")",
            });
        }
    }), 
    //To work with JSON serialization
    fluent_lib_1.or(
    //Hopefully, it is a JSON date string
    fluent_lib_1.string(), 
    /*
        We turn the Date object into its JSON representation
        because the Date object may have a millisecond part
        when we do not allow it.

        For example,
        new Date().toJSON() //2019-01-01T00:00:00.123Z

        The above is not assignable to DATETIME(0)
        But is assignable to DATETIME(3)

        -----

        new Date().toJSON() //2019-01-01T00:00:00.120Z

        The above is not assignable to DATETIME(0)
        But is assignable to DATETIME(2) or DATETIME(3)
    */
    fluent_lib_1.instanceOfDate().pipe(function (_name, d) { return d.toJSON(); })).pipe(fluent_lib_1.match(/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d{1,3})?Z$/, function (name) {
        return {
            message: name + " must be in the format YYYY-MM-DDTHH:mm:ss.sssZ",
            expected: "YYYY-MM-DDTHH:mm:ss.sssZ",
        };
    }), function (name, str) {
        try {
            str = str.replace("T", " ").replace("Z", "");
            return DateTimeUtil.fromSqlUtc(str, fractionalSecondPrecision);
        }
        catch (err) {
            throw error_util_1.makeMappingError({
                message: name + " must be DATETIME(" + fractionalSecondPrecision + "); " + err.message,
                inputName: name,
                actualValue: str,
                expected: "DATETIME(" + fractionalSecondPrecision + ")",
            });
        }
    })).withExpectedInput();
}
exports.dateTime = dateTime;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mysql-lib/date-time/util.js":
/*!**************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mysql-lib/date-time/util.js ***!
  \**************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var string_util_1 = __webpack_require__(/*! ../../string-util */ "../tsql/node_modules/type-mapping/dist/string-util/index.js");
//Uses UTC
//Truncates if fractionSecondPrecision is too small.
function toSqlUtc(d, fractionalSecondPrecision /*|4|5|6*/) {
    if (!isFinite(d.getTime())) {
        throw new Error("Invalid date passed");
    }
    var year = string_util_1.zeroPad(d.getUTCFullYear(), 4);
    //getUTCMonth() returns [0, 11]
    //We want [1, 12]
    var month = string_util_1.zeroPad(d.getUTCMonth() + 1, 2);
    var day = string_util_1.zeroPad(d.getUTCDate(), 2);
    var hour = string_util_1.zeroPad(d.getUTCHours(), 2);
    var minute = string_util_1.zeroPad(d.getUTCMinutes(), 2);
    var second = string_util_1.zeroPad(d.getUTCSeconds(), 2);
    if (fractionalSecondPrecision == 0) {
        /*
            https://dev.mysql.com/doc/refman/8.0/en/date-and-time-literals.html

            The TIMESTAMP syntax produces a DATETIME value in MySQL
            because DATETIME has a range that more closely corresponds
            to the standard SQL TIMESTAMP type,
            which has a year range from 0001 to 9999.

            (The MySQL TIMESTAMP year range is 1970 to 2038.)
        */
        return [
            "(TIMESTAMP ",
            year + "-" + month + "-" + day + " " + hour + ":" + minute + ":" + second,
            ")"
        ].join("");
    }
    else {
        var ms = string_util_1.zeroPad(d.getUTCMilliseconds(), fractionalSecondPrecision).substr(0, fractionalSecondPrecision);
        /*
            https://dev.mysql.com/doc/refman/8.0/en/date-and-time-literals.html

            The TIMESTAMP syntax produces a DATETIME value in MySQL
            because DATETIME has a range that more closely corresponds
            to the standard SQL TIMESTAMP type,
            which has a year range from 0001 to 9999.

            (The MySQL TIMESTAMP year range is 1970 to 2038.)
        */
        return [
            "(TIMESTAMP ",
            year + "-" + month + "-" + day + " " + hour + ":" + minute + ":" + second + "." + ms,
            ")"
        ].join("");
    }
}
exports.toSqlUtc = toSqlUtc;
//Month is zero-based
//Day is one-based
function isValidDate(year, month, day) {
    /**
     * `year` might be [0, 99].
     * This causes the year to be [1900, 1999]. Not what we want.
     *
     * So, we use `.setFullYear()` below, to set the proper year.
     */
    var d = new Date(year, month, day);
    d.setFullYear(year);
    if (d.getFullYear() === year && d.getMonth() === month && d.getDate() === day) {
        return true;
    }
    return false;
}
var mySqlDateTimeRegex = /^(\d{4})-(\d{2})-(\d{2})( (\d{2}):(\d{2}):(\d{2})(\.(\d{1,6}))?)?$/;
//Assumes UTC
function fromSqlUtc(sql, fractionalSecondPrecision /*|4|5|6*/) {
    var match = mySqlDateTimeRegex.exec(sql);
    if (match == undefined) {
        throw new Error("Invalid MySQL DATETIME string");
    }
    var year = parseInt(match[1]);
    //1-based
    var month = parseInt(match[2]);
    //1-based
    var dayOfMonth = parseInt(match[3]);
    if (!isValidDate(year, month - 1, dayOfMonth)) {
        throw new Error("Invalid MySQL DATETIME string; month or day does not exist for given year");
    }
    var hour = (match[5] == undefined) ?
        0 :
        parseInt(match[5]);
    if (hour > 23) {
        throw new Error("Hour must be [0, 23]");
    }
    var minute = (match[6] == undefined) ?
        0 :
        parseInt(match[6]);
    if (minute > 59) {
        throw new Error("Minute must be [0, 59]");
    }
    var second = (match[7] == undefined) ?
        0 :
        parseInt(match[7]);
    if (second > 59) {
        throw new Error("Second must be [0, 59]");
    }
    var microsecondPart = (match[9] == undefined) ?
        0 :
        parseInt(string_util_1.trailingZeroPad(match[9], 6));
    if (microsecondPart > 999999) {
        throw new Error("Microsecond must be [0, 999999]");
    }
    var millisecond = Math.floor(microsecondPart / 1000);
    var microsecond = microsecondPart % 1000;
    /*
        With DATETIME(0),
        We have per-second precision.
        microsecondPart can only be zero.

        With DATETIME(1),
        We have 100ms precision, 100,000microsecond precision.
        6-1 = 5
        10^5 = 100,000
        By using %(modulo) 100,000, we ensure microsecondPart
        is a multiple of the precision we support.

        With DATETIME(2),
        We have 10ms precision, 10,000microsecond precision.
        6-2 = 4
        10^4 = 10,000
        By using %(modulo) 10,000, we ensure microsecondPart
        is a multiple of the precision we support.

        ...
        With DATETIME(6),
        We have 1microsecond precision.
        6-6 = 0
        10^0 = 1
        Any integer modulo one is zero.
    */
    if (microsecondPart % Math.pow(10, 6 - fractionalSecondPrecision) != 0) {
        throw new Error("Expected DATETIME(" + fractionalSecondPrecision + "), received DATETIME(" + match[9].length + ")");
    }
    /*if (
        match[9] != undefined &&
        match[9].length > fractionalSecondPrecision
    ) {
        throw new Error(`Expected DATETIME(${fractionalSecondPrecision}), received DATETIME(${match[9].length})`);
    }*/
    //TODO-FEATURE Microsecond support
    //JS Date just doesn't support microseconds
    //BEGIN TEMPORARY NON-SUPPORT FOR MICROSECOND
    if (microsecond != 0) {
        throw new Error("Microsecond support for DATETIME is not supported yet");
    }
    //END TEMPORARY NON-SUPPORT FOR MICROSECOND
    var utcMillisecondTimestamp = Date.UTC(year, 
    //Date.UTC() expects [0, 11]
    month - 1, dayOfMonth, hour, minute, second, millisecond);
    var result = new Date(utcMillisecondTimestamp);
    /**
     * `year` might be [0, 99].
     * This causes the year to be [1900, 1999]. Not what we want.
     *
     * So, we use `.setUTCFullYear()` below, to set the proper year.
     */
    result.setUTCFullYear(year);
    return result;
}
exports.fromSqlUtc = fromSqlUtc;
//# sourceMappingURL=util.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mysql-lib/decimal/index.js":
/*!*************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mysql-lib/decimal/index.js ***!
  \*************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var functional_lib_1 = __webpack_require__(/*! ../../functional-lib */ "../tsql/node_modules/type-mapping/dist/functional-lib/index.js");
var fluent_lib_1 = __webpack_require__(/*! ../../fluent-lib */ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js");
var type_util_1 = __webpack_require__(/*! ../../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var FixedPointUtil = __webpack_require__(/*! ../../fixed-point-util */ "../tsql/node_modules/type-mapping/dist/fixed-point-util/index.js");
var BigIntUtil = __webpack_require__(/*! ../../bigint-util */ "../tsql/node_modules/type-mapping/dist/bigint-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
var error_code_1 = __webpack_require__(/*! ../../error-code */ "../tsql/node_modules/type-mapping/dist/error-code.js");
/**
 *
 * For now, returns a string.
 * Converting to a number risks losing precision.
 *
 * @deprecated
 */
function decimalDeprecated() {
    return fluent_lib_1.pipe(functional_lib_1.or(functional_lib_1.string(), functional_lib_1.finiteNumber(), functional_lib_1.bigInt()), function (_name, mixed) {
        return mixed.toString();
    }, functional_lib_1.floatingPointFormatString());
}
exports.decimalDeprecated = decimalDeprecated;
function assertValidDecimalPrecisionAndScale(
/**
 * + Min precision is `1`, even though MySQL allows min precision `0`.
 *   Precision `0` is not very meaningful, anyway, right?
 */
precision, 
/**
 * + The min scale is `0`.
 * + `scale` must be <= `precision`.
 */
scale) {
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    var precisionMapper = fluent_lib_1.pipe(functional_lib_1.toBigInt(), functional_lib_1.bigIntGtEq(BigInt(1)));
    precision = precisionMapper("precision", precision);
    var scaleMapper = fluent_lib_1.pipe(functional_lib_1.toBigInt(), functional_lib_1.bigIntGtEq(BigInt(0)), functional_lib_1.bigIntLtEq(precision));
    scale = scaleMapper("scale", scale);
    return {
        precision: precision,
        scale: scale,
    };
}
function decimal(precision, scale) {
    if (precision == undefined) {
        return decimalDeprecated();
    }
    var _a = assertValidDecimalPrecisionAndScale(precision, scale), maxPrecision = _a.precision, maxScale = _a.scale;
    var expected = "DECIMAL(" + maxPrecision + ", " + maxScale + ")";
    return fluent_lib_1.pipe(functional_lib_1.or(functional_lib_1.string(), functional_lib_1.finiteNumber(), functional_lib_1.bigInt()), function (_name, mixed) {
        return mixed.toString();
    }, function (name, str) {
        var parsed = FixedPointUtil.tryParse(str);
        if (parsed == undefined) {
            throw error_util_1.makeMappingError({
                message: name + " must be " + expected,
                inputName: name,
                actualValue: str,
                expected: expected,
            });
        }
        var curScale = (parsed.getFixedPointFractionalPartString() == "0" ?
            0 :
            parsed.getFixedPointFractionalPartString().length);
        var curPrecision = (curScale +
            (parsed.getFixedPointIntegerPartString() == "0" ?
                0 :
                parsed.getFixedPointIntegerPartString().length));
        if (BigIntUtil.greaterThan(curPrecision, maxPrecision)) {
            throw error_util_1.makeMappingError({
                message: name + " must have precision less than, or equal to " + maxPrecision,
                inputName: name,
                actualValue: parsed.getFixedPointString(),
                expected: expected,
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_DECIMAL_PRECISION_LESS_THAN_OR_EQUAL_TO,
                    maxPrecision: maxPrecision,
                    maxScale: maxScale,
                    curPrecision: curPrecision,
                    curScale: curScale,
                },
            });
        }
        if (BigIntUtil.greaterThan(curScale, maxScale)) {
            throw error_util_1.makeMappingError({
                message: name + " must have scale less than, or equal to " + maxScale,
                inputName: name,
                actualValue: parsed.getFixedPointString(),
                expected: expected,
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_DECIMAL_SCALE_LESS_THAN_OR_EQUAL_TO,
                    maxPrecision: maxPrecision,
                    maxScale: maxScale,
                    curPrecision: curPrecision,
                    curScale: curScale,
                },
            });
        }
        return parsed.getFixedPointString();
    });
}
exports.decimal = decimal;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mysql-lib/double/index.js":
/*!************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mysql-lib/double/index.js ***!
  \************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fluent_lib_1 = __webpack_require__(/*! ../../fluent-lib */ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js");
/**
    TS `number` type is actually a `double` type
*/
function double() {
    return fluent_lib_1.toFiniteNumber();
}
exports.double = double;
/**
    Alias for DOUBLE for now.
    JS doesn't have `float` type.

    This means that it is possible
    to send a value to MySQL and
    lose precision.
*/
function float() {
    return double();
}
exports.float = float;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mysql-lib/enum/case-sensitive-enum.js":
/*!************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mysql-lib/enum/case-sensitive-enum.js ***!
  \************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fluent_lib_1 = __webpack_require__(/*! ../../fluent-lib */ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js");
/**
    TODO Handle case-insensitive enum collations

    -----

    https://dev.mysql.com/doc/refman/5.5/en/enum.html

    When retrieved, values stored into an ENUM column are displayed using the lettercase
    that was used in the column definition.

    Note that ENUM columns can be assigned a character set and collation.

    For binary or case-sensitive collations,
    lettercase is taken into account when assigning values to the column.
*/
function unsafeCaseSensitiveEnum() {
    var elements = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        elements[_i] = arguments[_i];
    }
    if (elements.length > 65535) {
        throw new Error("ENUM type can only have up to 65,535 elements");
    }
    return fluent_lib_1.unsafeLiteral.apply(void 0, elements);
}
exports.unsafeCaseSensitiveEnum = unsafeCaseSensitiveEnum;
/**
    TODO Handle case-insensitive enum collations

    -----

    https://dev.mysql.com/doc/refman/5.5/en/enum.html

    When retrieved, values stored into an ENUM column are displayed using the lettercase
    that was used in the column definition.

    Note that ENUM columns can be assigned a character set and collation.

    For binary or case-sensitive collations,
    lettercase is taken into account when assigning values to the column.
*/
function caseSensitiveEnum(element0) {
    var elements = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        elements[_i - 1] = arguments[_i];
    }
    return unsafeCaseSensitiveEnum.apply(void 0, [element0].concat(elements));
}
exports.caseSensitiveEnum = caseSensitiveEnum;
//# sourceMappingURL=case-sensitive-enum.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mysql-lib/enum/case-sensitive-set.js":
/*!***********************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mysql-lib/enum/case-sensitive-set.js ***!
  \***********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fluent_lib_1 = __webpack_require__(/*! ../../fluent-lib */ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "../tsql/node_modules/type-mapping/dist/error-util/index.js");
var type_util_1 = __webpack_require__(/*! ../../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
/**
    TODO Handle case-insensitive set collations

    -----

    https://dev.mysql.com/doc/refman/5.5/en/set.html

    When retrieved, values stored in a SET column are displayed using the lettercase
    that was used in the column definition.

    Note that SET columns can be assigned a character set and collation.

    For binary or case-sensitive collations,
    lettercase is taken into account when assigning values to the column.
*/
function caseSenstiveSet() {
    var elements = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        elements[_i] = arguments[_i];
    }
    if (elements.length > 64) {
        throw new Error("SET type can only have up to 64 elements");
    }
    fluent_lib_1.array(fluent_lib_1.notMatch(/\,/, function (name) { return name + " must not have comma"; }))("elements", elements);
    var expected = "SET(" + elements.map(function (e) { return type_util_1.toLiteralOrTypeStr(e); }).join(",") + ")";
    return fluent_lib_1.string().pipe(function (name, raw) {
        var arr = raw.split(",");
        for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {
            var e = arr_1[_i];
            if (elements.indexOf(e) < 0) {
                throw error_util_1.makeMappingError({
                    message: name + " has unknown set element; " + e,
                    inputName: name,
                    actualValue: e,
                    expected: expected,
                });
            }
        }
        return raw;
    });
}
exports.caseSenstiveSet = caseSenstiveSet;
//# sourceMappingURL=case-sensitive-set.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mysql-lib/enum/enum-value.js":
/*!***************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mysql-lib/enum/enum-value.js ***!
  \***************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fluent_mapper_1 = __webpack_require__(/*! ../../fluent-mapper */ "../tsql/node_modules/type-mapping/dist/fluent-mapper.js");
var fLib = __webpack_require__(/*! ../../functional-lib */ "../tsql/node_modules/type-mapping/dist/functional-lib/index.js");
function enumValue(e) {
    var result = fLib.or(fLib.enumValue(e), fLib.pipe(fLib.stringToFiniteNumber(), fLib.enumValue(e)));
    return fluent_mapper_1.fluentMapper(result);
}
exports.enumValue = enumValue;
//# sourceMappingURL=enum-value.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mysql-lib/enum/index.js":
/*!**********************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mysql-lib/enum/index.js ***!
  \**********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./case-sensitive-enum */ "../tsql/node_modules/type-mapping/dist/mysql-lib/enum/case-sensitive-enum.js"));
__export(__webpack_require__(/*! ./case-sensitive-set */ "../tsql/node_modules/type-mapping/dist/mysql-lib/enum/case-sensitive-set.js"));
__export(__webpack_require__(/*! ./enum-value */ "../tsql/node_modules/type-mapping/dist/mysql-lib/enum/enum-value.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mysql-lib/index.js":
/*!*****************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mysql-lib/index.js ***!
  \*****************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./binary */ "../tsql/node_modules/type-mapping/dist/mysql-lib/binary/index.js"));
__export(__webpack_require__(/*! ./boolean */ "../tsql/node_modules/type-mapping/dist/mysql-lib/boolean/index.js"));
__export(__webpack_require__(/*! ./char */ "../tsql/node_modules/type-mapping/dist/mysql-lib/char/index.js"));
__export(__webpack_require__(/*! ./date-time */ "../tsql/node_modules/type-mapping/dist/mysql-lib/date-time/index.js"));
__export(__webpack_require__(/*! ./decimal */ "../tsql/node_modules/type-mapping/dist/mysql-lib/decimal/index.js"));
__export(__webpack_require__(/*! ./double */ "../tsql/node_modules/type-mapping/dist/mysql-lib/double/index.js"));
__export(__webpack_require__(/*! ./enum */ "../tsql/node_modules/type-mapping/dist/mysql-lib/enum/index.js"));
__export(__webpack_require__(/*! ./int */ "../tsql/node_modules/type-mapping/dist/mysql-lib/int/index.js"));
__export(__webpack_require__(/*! ./json */ "../tsql/node_modules/type-mapping/dist/mysql-lib/json/index.js"));
__export(__webpack_require__(/*! ./uint-8-array-binary */ "../tsql/node_modules/type-mapping/dist/mysql-lib/uint-8-array-binary/index.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mysql-lib/int/bigint.js":
/*!**********************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mysql-lib/int/bigint.js ***!
  \**********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
var fLib = __webpack_require__(/*! ../../fluent-lib */ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js");
/**
    Does not restrict the min and max value
*/
function unsafeBigInt() {
    return fLib.toBigInt();
}
exports.unsafeBigInt = unsafeBigInt;
/**
    Only allows,
    [-9,223,372,036,854,775,808, 9,223,372,036,854,775,807]
*/
function bigIntSigned() {
    var bigIntFactory = type_util_1.getBigIntFactoryFunctionOrError();
    return unsafeBigInt().pipe(fLib.bigIntRange({
        gtEq: bigIntFactory("-9223372036854775808"),
        ltEq: bigIntFactory("9223372036854775807"),
    }));
}
exports.bigIntSigned = bigIntSigned;
/**
    Only allows,
    [0, 18,446,744,073,709,551,615]
*/
function bigIntUnsigned() {
    var bigIntFactory = type_util_1.getBigIntFactoryFunctionOrError();
    return unsafeBigInt().pipe(fLib.bigIntRange({
        gtEq: bigIntFactory("0"),
        ltEq: bigIntFactory("18446744073709551615"),
    }));
}
exports.bigIntUnsigned = bigIntUnsigned;
//# sourceMappingURL=bigint.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mysql-lib/int/index.js":
/*!*********************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mysql-lib/int/index.js ***!
  \*********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./bigint */ "../tsql/node_modules/type-mapping/dist/mysql-lib/int/bigint.js"));
__export(__webpack_require__(/*! ./int */ "../tsql/node_modules/type-mapping/dist/mysql-lib/int/int.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mysql-lib/int/int.js":
/*!*******************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mysql-lib/int/int.js ***!
  \*******************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../../fluent-lib */ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js");
var functional_lib_1 = __webpack_require__(/*! ../../functional-lib */ "../tsql/node_modules/type-mapping/dist/functional-lib/index.js");
var type_util_1 = __webpack_require__(/*! ../../type-util */ "../tsql/node_modules/type-mapping/dist/type-util/index.js");
/**
    Uses `integerFormatString()` and `BigInt()` internally.
*/
function unsafeInt() {
    return fLib.toBigInt();
}
exports.unsafeInt = unsafeInt;
function intDelegate(min, max) {
    var bigIntFactory = type_util_1.getBigIntFactoryFunctionOrError();
    return unsafeInt().pipe(functional_lib_1.bigIntRange({
        gtEq: bigIntFactory(min),
        ltEq: bigIntFactory(max),
    }));
}
/**
    [-128, 127]
*/
function tinyIntSigned() {
    return intDelegate(-128, 127);
}
exports.tinyIntSigned = tinyIntSigned;
/**
    [-32,768, 32,767]
*/
function smallIntSigned() {
    return intDelegate(-32768, 32767);
}
exports.smallIntSigned = smallIntSigned;
/**
    [-8,388,608, 8,388,607]
*/
function mediumIntSigned() {
    return intDelegate(-8388608, 8388607);
}
exports.mediumIntSigned = mediumIntSigned;
/**
    [-2,147,483,648, 2,147,483,647]
*/
function intSigned() {
    return intDelegate(-2147483648, 2147483647);
}
exports.intSigned = intSigned;
/**
    [0, 255]
*/
function tinyIntUnsigned() {
    return intDelegate(0, 255);
}
exports.tinyIntUnsigned = tinyIntUnsigned;
/**
    [0, 65535]
*/
function smallIntUnsigned() {
    return intDelegate(0, 65535);
}
exports.smallIntUnsigned = smallIntUnsigned;
/**
    [0, 16777215]
*/
function mediumIntUnsigned() {
    return intDelegate(0, 16777215);
}
exports.mediumIntUnsigned = mediumIntUnsigned;
/**
    [0, 4294967295]
*/
function intUnsigned() {
    return intDelegate(0, 4294967295);
}
exports.intUnsigned = intUnsigned;
//# sourceMappingURL=int.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mysql-lib/json/index.js":
/*!**********************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mysql-lib/json/index.js ***!
  \**********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fluent_lib_1 = __webpack_require__(/*! ../../fluent-lib */ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js");
var functional_lib_1 = __webpack_require__(/*! ../../functional-lib */ "../tsql/node_modules/type-mapping/dist/functional-lib/index.js");
function jsonDelegate(dataTypeStr, maxLength, defaultDesiredLengthMax) {
    if (maxLength < defaultDesiredLengthMax) {
        throw new Error("maxLength must be >= defaultDesiredLengthMax");
    }
    var result = function (a, b) {
        if (a == undefined) {
            return fluent_lib_1.stringLength({
                max: defaultDesiredLengthMax,
            }).pipe(functional_lib_1.jsonObjectString());
        }
        else if (b == undefined) {
            a = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({
                gtEq: 1,
                ltEq: maxLength,
            }))(dataTypeStr + ".desiredLengthMax", a);
            return fluent_lib_1.stringLength({
                max: a,
            }).pipe(functional_lib_1.jsonObjectString());
        }
        else {
            a = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({
                gtEq: 0,
                ltEq: maxLength,
            }))(dataTypeStr + ".desiredLengthMin", a);
            b = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({
                gtEq: 1,
                ltEq: maxLength,
            }))(dataTypeStr + ".desiredLengthMax", b);
            if (a > b) {
                throw new Error(dataTypeStr + " minLength must be <= maxLength");
            }
            return fluent_lib_1.stringLength({
                min: a,
                max: b,
            }).pipe(functional_lib_1.jsonObjectString());
        }
    };
    result.maxLength = maxLength;
    return result;
}
/**
 * The space required to store a `JSON` document is roughly
 * the same as for `LONGBLOB` or `LONGTEXT`.
 *
 * In addition, MySQL imposes a limit on the size of any `JSON`
 * document stored in a `JSON` column such that it cannot be any
 * larger than the value of `max_allowed_packet`.
 *
 * The default for `max_allowed_packet` is `4194304`, 4MB.
 *
 * The maximum is `1073741824`, 1GB.
 *
 * The value should be a multiple of `1024`;
 * nonmultiples are rounded down to the nearest multiple.
 *
 * -----
 *
 * I set the default to 1MB arbitrarily.
*/
exports.json = jsonDelegate("JSON", 4294967295, 1048576);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/mysql-lib/uint-8-array-binary/index.js":
/*!*************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/mysql-lib/uint-8-array-binary/index.js ***!
  \*************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fluent_lib_1 = __webpack_require__(/*! ../../fluent-lib */ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js");
function uint8ArrayDelegate(dataTypeStr, maxLength) {
    var result = function (a, b) {
        if (a == undefined) {
            return fluent_lib_1.uint8ArrayLength({
                max: maxLength,
            });
        }
        else if (b == undefined) {
            a = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({
                gtEq: 1,
                ltEq: maxLength,
            }))(dataTypeStr + ".desiredLengthMax", a);
            return fluent_lib_1.uint8ArrayLength({
                max: a,
            });
        }
        else {
            a = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({
                gtEq: 0,
                ltEq: maxLength,
            }))(dataTypeStr + ".desiredLengthMin", a);
            b = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({
                gtEq: 1,
                ltEq: maxLength,
            }))(dataTypeStr + ".desiredLengthMax", b);
            if (a > b) {
                throw new Error(dataTypeStr + " minLength must be <= maxLength");
            }
            return fluent_lib_1.uint8ArrayLength({
                min: a,
                max: b,
            });
        }
    };
    result.maxLength = maxLength;
    return result;
}
exports.uint8ArrayBinary = uint8ArrayDelegate("BINARY", 255);
exports.uint8ArrayVarBinary = uint8ArrayDelegate("VARBINARY", 65535);
exports.uint8ArrayTinyBlob = uint8ArrayDelegate("TINYBLOB", 255);
exports.uint8ArrayBlob = uint8ArrayDelegate("BLOB", 65535);
exports.uint8ArrayMediumBlob = uint8ArrayDelegate("MEDIUMBLOB", 16777215);
exports.uint8ArrayLongBlob = uint8ArrayDelegate("LONGBLOB", 4294967295);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/string-util/index.js":
/*!*******************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/string-util/index.js ***!
  \*******************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./string-ends-with */ "../tsql/node_modules/type-mapping/dist/string-util/string-ends-with.js"));
__export(__webpack_require__(/*! ./string-repeat */ "../tsql/node_modules/type-mapping/dist/string-util/string-repeat.js"));
__export(__webpack_require__(/*! ./to-property-access */ "../tsql/node_modules/type-mapping/dist/string-util/to-property-access.js"));
__export(__webpack_require__(/*! ./zero-pad */ "../tsql/node_modules/type-mapping/dist/string-util/zero-pad.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/string-util/string-ends-with.js":
/*!******************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/string-util/string-ends-with.js ***!
  \******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function stringEndsWith(str, suffix) {
    if (str.length < suffix.length) {
        return false;
    }
    if (str.length == suffix.length) {
        return (str == suffix);
    }
    for (var i = 0; i < suffix.length; ++i) {
        var suffixChar = suffix[suffix.length - i - 1];
        var strChar = str[str.length - i - 1];
        if (suffixChar != strChar) {
            return false;
        }
    }
    return true;
}
exports.stringEndsWith = stringEndsWith;
//# sourceMappingURL=string-ends-with.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/string-util/string-repeat.js":
/*!***************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/string-util/string-repeat.js ***!
  \***************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function stringRepeat(str, count) {
    var result = "";
    for (var i = 0; i < count; ++i) {
        result += str;
    }
    return result;
}
exports.stringRepeat = stringRepeat;
//# sourceMappingURL=string-repeat.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/string-util/to-property-access.js":
/*!********************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/string-util/to-property-access.js ***!
  \********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function toPropertyAccess(name) {
    if (typeof name == "number") {
        return "[" + name + "]";
    }
    if (/\s|\.|\-/.test(name)) {
        return "[" + JSON.stringify(name) + "]";
    }
    if (/^\d+$/.test(name)) {
        return "[" + name + "]";
    }
    if (/^\d+/.test(name)) {
        return "[" + JSON.stringify(name) + "]";
    }
    return "." + name;
}
exports.toPropertyAccess = toPropertyAccess;
//# sourceMappingURL=to-property-access.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/string-util/zero-pad.js":
/*!**********************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/string-util/zero-pad.js ***!
  \**********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var string_repeat_1 = __webpack_require__(/*! ./string-repeat */ "../tsql/node_modules/type-mapping/dist/string-util/string-repeat.js");
/*
    zeroPad(1, 4)     === "0001"
    zeroPad(34, 4)    === "0034"
    zeroPad(678, 4)   === "0678"
    zeroPad(1337, 4)  === "1337"
    zeroPad(92678, 4) === "92678"
*/
function zeroPad(num, length) {
    var str = num.toString();
    if (str.length < length) {
        return string_repeat_1.stringRepeat("0", length - str.length) + str;
    }
    else {
        return str;
    }
}
exports.zeroPad = zeroPad;
function trailingZeroPad(num, length) {
    var str = num.toString();
    if (str.length < length) {
        return str + string_repeat_1.stringRepeat("0", length - str.length);
    }
    else {
        return str;
    }
}
exports.trailingZeroPad = trailingZeroPad;
//# sourceMappingURL=zero-pad.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/type-util/allows-instance-of.js":
/*!******************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/type-util/allows-instance-of.js ***!
  \******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function allowsInstanceOf(ctor) {
    try {
        ({} instanceof ctor);
        return true;
    }
    catch (e) {
        return false;
    }
}
exports.allowsInstanceOf = allowsInstanceOf;
//# sourceMappingURL=allows-instance-of.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/type-util/buffer-ctor.js":
/*!***********************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/type-util/buffer-ctor.js ***!
  \***********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(Buffer) {
Object.defineProperty(exports, "__esModule", { value: true });
function tryFindBufferCtor() {
    try {
        return Buffer;
    }
    catch (_err) {
        return undefined;
    }
}
var cachedBufferCtor = "uninitialized";
function tryGetBufferCtor() {
    if (cachedBufferCtor == "uninitialized") {
        cachedBufferCtor = tryFindBufferCtor();
    }
    return cachedBufferCtor;
}
exports.tryGetBufferCtor = tryGetBufferCtor;
function isInstanceOfBuffer(mixed) {
    var ctor = tryFindBufferCtor();
    if (ctor == undefined) {
        return false;
    }
    return (mixed instanceof ctor);
}
exports.isInstanceOfBuffer = isInstanceOfBuffer;
//# sourceMappingURL=buffer-ctor.js.map
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../sqlite3-browser/node_modules/buffer/index.js */ "./node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/type-util/deep-merge.js":
/*!**********************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/type-util/deep-merge.js ***!
  \**********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var to_type_str_1 = __webpack_require__(/*! ./to-type-str */ "../tsql/node_modules/type-mapping/dist/type-util/to-type-str.js");
var strict_equal_1 = __webpack_require__(/*! ./strict-equal */ "../tsql/node_modules/type-mapping/dist/type-util/strict-equal.js");
var is_primitive_1 = __webpack_require__(/*! ./is-primitive */ "../tsql/node_modules/type-mapping/dist/type-util/is-primitive.js");
function deepMergeImpl(a, b) {
    if (strict_equal_1.strictEqual(a, b)) {
        return a;
    }
    if (is_primitive_1.isPrimitive(a) || is_primitive_1.isPrimitive(b)) {
        throw new Error("Cannot merge " + to_type_str_1.toTypeStr(a) + " and " + to_type_str_1.toTypeStr(b) + "; they are not equal");
    }
    //We should have object types now.
    if ((typeof a == "function") || (typeof b == "function")) {
        throw new Error("Cannot merge " + to_type_str_1.toTypeStr(a) + " and " + to_type_str_1.toTypeStr(b) + "; they are not equal");
    }
    if ((a instanceof Date) || (b instanceof Date)) {
        if (!(a instanceof Date)) {
            throw new Error("Cannot merge " + to_type_str_1.toTypeStr(a) + " with Date");
        }
        if (!(b instanceof Date)) {
            throw new Error("Cannot merge Date with " + to_type_str_1.toTypeStr(b));
        }
        if (a.getTime() === b.getTime()) {
            return a;
        }
        else {
            throw new Error("Cannot merge dates; they must have the same value");
        }
    }
    if ((a instanceof Array) || (b instanceof Array)) {
        if (!(a instanceof Array)) {
            throw new Error("Cannot merge " + to_type_str_1.toTypeStr(a) + " with array");
        }
        if (!(b instanceof Array)) {
            throw new Error("Cannot merge array with " + to_type_str_1.toTypeStr(b));
        }
        if (a.length != b.length) {
            throw new Error("Cannot merge arrays of different lengths");
        }
        var newArray = [];
        for (var i = 0; i < a.length; ++i) {
            newArray.push(deepMergeImpl(a[i], b[i]));
        }
        return newArray;
    }
    var aKeys = Object.keys(a);
    var bKeys = Object.keys(b);
    var mergedKeys = {};
    var result = {};
    for (var _i = 0, aKeys_1 = aKeys; _i < aKeys_1.length; _i++) {
        var key = aKeys_1[_i];
        //We can skip a.hasOwnProperty() because Object.keys() ignores parent prototype
        if (mergedKeys[key] === true) {
            continue;
        }
        mergedKeys[key] = true;
        //We do not call `b.hasOwnProperty()` directly
        //because if `b = Object.create(null)`,
        //an `Error` will be thrown
        if (Object.prototype.hasOwnProperty.call(b, key)) {
            result[key] = deepMergeImpl(a[key], b[key]);
        }
        else {
            result[key] = a[key];
        }
    }
    for (var _a = 0, bKeys_1 = bKeys; _a < bKeys_1.length; _a++) {
        var key = bKeys_1[_a];
        //We can skip b.hasOwnProperty() because Object.keys() ignores parent prototype
        if (mergedKeys[key] === true) {
            continue;
        }
        mergedKeys[key] = true;
        //We do not call `a.hasOwnProperty()` directly
        //because if `a = Object.create(null)`,
        //an `Error` will be thrown
        if (Object.prototype.hasOwnProperty.call(a, key)) {
            result[key] = deepMergeImpl(a[key], b[key]);
        }
        else {
            result[key] = b[key];
        }
    }
    return result;
}
function deepMerge() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    if (args.length == 0) {
        throw new Error("Cannot deep merge zero arguments");
    }
    var result = args[0];
    for (var i = 1; i < args.length; ++i) {
        result = deepMergeImpl(result, args[i]);
    }
    return result;
}
exports.deepMerge = deepMerge;
//# sourceMappingURL=deep-merge.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/type-util/index.js":
/*!*****************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/type-util/index.js ***!
  \*****************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./allows-instance-of */ "../tsql/node_modules/type-mapping/dist/type-util/allows-instance-of.js"));
__export(__webpack_require__(/*! ./buffer-ctor */ "../tsql/node_modules/type-mapping/dist/type-util/buffer-ctor.js"));
__export(__webpack_require__(/*! ./deep-merge */ "../tsql/node_modules/type-mapping/dist/type-util/deep-merge.js"));
__export(__webpack_require__(/*! ./is-instance-of */ "../tsql/node_modules/type-mapping/dist/type-util/is-instance-of.js"));
__export(__webpack_require__(/*! ./is-bigint */ "../tsql/node_modules/type-mapping/dist/type-util/is-bigint.js"));
__export(__webpack_require__(/*! ./is-pojo */ "../tsql/node_modules/type-mapping/dist/type-util/is-pojo.js"));
__export(__webpack_require__(/*! ./is-primitive */ "../tsql/node_modules/type-mapping/dist/type-util/is-primitive.js"));
__export(__webpack_require__(/*! ./omit */ "../tsql/node_modules/type-mapping/dist/type-util/omit.js"));
__export(__webpack_require__(/*! ./pick */ "../tsql/node_modules/type-mapping/dist/type-util/pick.js"));
__export(__webpack_require__(/*! ./set-function-name */ "../tsql/node_modules/type-mapping/dist/type-util/set-function-name.js"));
__export(__webpack_require__(/*! ./strict-equal */ "../tsql/node_modules/type-mapping/dist/type-util/strict-equal.js"));
__export(__webpack_require__(/*! ./to-type-str */ "../tsql/node_modules/type-mapping/dist/type-util/to-type-str.js"));
__export(__webpack_require__(/*! ./try-deep-merge */ "../tsql/node_modules/type-mapping/dist/type-util/try-deep-merge.js"));
__export(__webpack_require__(/*! ./try-get-bigint-factory-function */ "../tsql/node_modules/type-mapping/dist/type-util/try-get-bigint-factory-function.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/type-util/is-bigint.js":
/*!*********************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/type-util/is-bigint.js ***!
  \*********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var try_get_bigint_factory_function_1 = __webpack_require__(/*! ./try-get-bigint-factory-function */ "../tsql/node_modules/type-mapping/dist/type-util/try-get-bigint-factory-function.js");
var buffer_ctor_1 = __webpack_require__(/*! ./buffer-ctor */ "../tsql/node_modules/type-mapping/dist/type-util/buffer-ctor.js");
function isBigIntNative(x) {
    return (typeof x == "bigint");
}
function isBigIntPolyfill(x) {
    if (typeof x == "bigint") {
        return true;
    }
    if (!(x instanceof Object)) {
        //It is a primitive type and not a bigint
        return false;
    }
    if ((x instanceof Number) ||
        (x instanceof String) ||
        buffer_ctor_1.isInstanceOfBuffer(x)) {
        //Sanity check.
        //These objects are most likely to pass the
        //numeric `.toString()` check below.
        return false;
    }
    if ((x instanceof Array) ||
        (x instanceof Date) ||
        (x instanceof Function)) {
        //Sanity check.
        //These objects are commonly used.
        return false;
    }
    var bigIntFactory = try_get_bigint_factory_function_1.tryGetBigIntFactoryFunction();
    if (bigIntFactory == undefined) {
        //No BigInt polyfill detected
        return false;
    }
    if (!bigIntFactory.possiblyInstanceOfBigInt(x)) {
        //Definitely not BigInt polyfilled object
        return false;
    }
    /*
        We now have,

        + An object
        + A BigInt factory
        + The object was possibly created by the BigInt factory
    */
    var xStr = String(x);
    if (!/^\-?\d+$/.test(xStr)) {
        //This object's string representation is not valid.
        return false;
    }
    //High confidence that this is a polyfilled BigInt object
    return true;
}
function isBigInt(x) {
    if (try_get_bigint_factory_function_1.isBigIntNativelySupported()) {
        return isBigIntNative(x);
    }
    else {
        return isBigIntPolyfill(x);
    }
}
exports.isBigInt = isBigInt;
//# sourceMappingURL=is-bigint.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/type-util/is-instance-of.js":
/*!**************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/type-util/is-instance-of.js ***!
  \**************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var try_get_bigint_factory_function_1 = __webpack_require__(/*! ./try-get-bigint-factory-function */ "../tsql/node_modules/type-mapping/dist/type-util/try-get-bigint-factory-function.js");
var is_bigint_1 = __webpack_require__(/*! ./is-bigint */ "../tsql/node_modules/type-mapping/dist/type-util/is-bigint.js");
/**
    Like using "regular" `instanceof` but
    bigint polyfill objects will never be an `instanceof Object`,
    or any other class.
*/
function isInstanceOf(mixed, ctor) {
    return ((mixed instanceof ctor) &&
        (try_get_bigint_factory_function_1.isBigIntNativelySupported() ||
            !is_bigint_1.isBigInt(mixed)));
}
exports.isInstanceOf = isInstanceOf;
//# sourceMappingURL=is-instance-of.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/type-util/is-pojo.js":
/*!*******************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/type-util/is-pojo.js ***!
  \*******************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var is_instance_of_1 = __webpack_require__(/*! ./is-instance-of */ "../tsql/node_modules/type-mapping/dist/type-util/is-instance-of.js");
/**
    Abbreviation for "Plain old JavasScript object".

    Meaning, an Object that isn't,

    + Date
    + Array
    + Function
    + An instance of some other class

    -----

    Will never consider a BigInt polyfill object a Pojo
*/
function isPojo(mixed) {
    if (!is_instance_of_1.isInstanceOf(mixed, Object)) {
        return false;
    }
    if (Object.getPrototypeOf(mixed) !== Object.prototype) {
        return false;
    }
    return true;
}
exports.isPojo = isPojo;
//# sourceMappingURL=is-pojo.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/type-util/is-primitive.js":
/*!************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/type-util/is-primitive.js ***!
  \************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var is_bigint_1 = __webpack_require__(/*! ./is-bigint */ "../tsql/node_modules/type-mapping/dist/type-util/is-bigint.js");
function isPrimitive(x) {
    if (x == undefined) {
        return true;
    }
    var t = typeof x;
    if (t != "object" && t != "function") {
        return true;
    }
    return is_bigint_1.isBigInt(x);
}
exports.isPrimitive = isPrimitive;
function isLiteral(x) {
    if (x == undefined) {
        return true;
    }
    var t = typeof x;
    if (t != "object" && t != "function" && t != "symbol") {
        return true;
    }
    return is_bigint_1.isBigInt(x);
}
exports.isLiteral = isLiteral;
//# sourceMappingURL=is-primitive.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/type-util/omit.js":
/*!****************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/type-util/omit.js ***!
  \****************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Performs `Omit<>` on an `object` during run-time
 *
 * @param obj - The object to omit key-value pairs from
 * @param keys - The keys to omit
 */
function omit(obj) {
    var keys = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        keys[_i - 1] = arguments[_i];
    }
    var result = __assign({}, obj);
    for (var _a = 0, keys_1 = keys; _a < keys_1.length; _a++) {
        var k = keys_1[_a];
        delete result[k];
    }
    return result;
}
exports.omit = omit;
//# sourceMappingURL=omit.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/type-util/pick.js":
/*!****************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/type-util/pick.js ***!
  \****************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Performs `Pick<>` on an `object` during run-time
 *
 * @param obj - The object to pick key-value pairs from
 * @param keys - The keys to pick
 */
function pick(obj) {
    var keys = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        keys[_i - 1] = arguments[_i];
    }
    var result = {};
    for (var _a = 0, keys_1 = keys; _a < keys_1.length; _a++) {
        var k = keys_1[_a];
        if (!Object.prototype.hasOwnProperty.call(obj, k)) {
            continue;
        }
        result[k] = obj[k];
    }
    return result;
}
exports.pick = pick;
//# sourceMappingURL=pick.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/type-util/set-function-name.js":
/*!*****************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/type-util/set-function-name.js ***!
  \*****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
    Modifies `f` directly.
*/
function setFunctionName(f, name) {
    if (typeof name != "string") {
        name = "";
    }
    f.__name = name;
    return f;
}
exports.setFunctionName = setFunctionName;
//# sourceMappingURL=set-function-name.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/type-util/strict-equal.js":
/*!************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/type-util/strict-equal.js ***!
  \************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var is_bigint_1 = __webpack_require__(/*! ./is-bigint */ "../tsql/node_modules/type-mapping/dist/type-util/is-bigint.js");
var try_get_bigint_factory_function_1 = __webpack_require__(/*! ./try-get-bigint-factory-function */ "../tsql/node_modules/type-mapping/dist/type-util/try-get-bigint-factory-function.js");
function strictEqualNative(a, b) {
    return (a === b);
}
function strictEqualPolyfill(a, b) {
    if (a === b) {
        return true;
    }
    if (is_bigint_1.isBigInt(a) && is_bigint_1.isBigInt(b)) {
        return a.toString() === b.toString();
    }
    return false;
}
/**
    This library supports `bigint`.
    However, not all browsers support `bigint`.

    Some developers may polyfill it with a `BigInt` class.

    ```ts
    //With polyfill, this may be false
    BigInt(2) === BigInt(2)
    ```

    ```ts
    //We want a special case for `BigInt`
    //This must be true
    strictEqual(BigInt(2), BigInt(2))
    ```
*/
function strictEqual(a, b) {
    if (try_get_bigint_factory_function_1.isBigIntNativelySupported()) {
        return strictEqualNative(a, b);
    }
    else {
        return strictEqualPolyfill(a, b);
    }
}
exports.strictEqual = strictEqual;
//# sourceMappingURL=strict-equal.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/type-util/to-type-str.js":
/*!***********************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/type-util/to-type-str.js ***!
  \***********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var is_bigint_1 = __webpack_require__(/*! ./is-bigint */ "../tsql/node_modules/type-mapping/dist/type-util/is-bigint.js");
var is_primitive_1 = __webpack_require__(/*! ./is-primitive */ "../tsql/node_modules/type-mapping/dist/type-util/is-primitive.js");
/**
    Intended to work better than `String(mixed)`.
*/
function toLiteralStr(mixed) {
    //We do not mind === here.
    if (mixed === null) {
        return "null";
        //We do not mind === here.
    }
    else if (mixed === undefined) {
        return "undefined";
    }
    else if (is_bigint_1.isBigInt(typeof mixed)) {
        return mixed.toString() + "n";
    }
    else if (typeof mixed == "string") {
        return JSON.stringify(mixed);
    }
    else {
        return String(mixed);
    }
}
exports.toLiteralStr = toLiteralStr;
function toLiteralUnionStr(arr) {
    return arr
        .map(toLiteralStr)
        .join("|");
}
exports.toLiteralUnionStr = toLiteralUnionStr;
function getCtorName(ctor) {
    if (!(ctor instanceof Object)) {
        return "[Not Ctor]";
    }
    var name = ctor.name;
    if (typeof name == "string") {
        return name;
    }
    return "[Unknown Name]";
}
exports.getCtorName = getCtorName;
/**
    Intended to work better than `typeof mixed`.
*/
function toTypeStr(mixed) {
    //We do not mind === here.
    if (mixed === null) {
        return "null";
    }
    //We do not mind === here.
    if (mixed === undefined) {
        return "undefined";
    }
    var str = (typeof mixed);
    if (str !== "object") {
        return str;
    }
    if (is_bigint_1.isBigInt(mixed)) {
        return "bigint";
    }
    var prototype = Object.getPrototypeOf(mixed);
    if (prototype == undefined) {
        return "[Unknown Type]";
    }
    var constructor = prototype.constructor;
    if (constructor == undefined) {
        return "[Unknown Prototype]";
    }
    return getCtorName(constructor);
}
exports.toTypeStr = toTypeStr;
function toLiteralOrTypeStr(mixed) {
    if (is_primitive_1.isLiteral(mixed)) {
        return toLiteralStr(mixed);
    }
    else {
        return toTypeStr(mixed);
    }
}
exports.toLiteralOrTypeStr = toLiteralOrTypeStr;
function toLiteralOrTypeUnionStr(arr) {
    return arr
        .map(toLiteralOrTypeStr)
        .join("|");
}
exports.toLiteralOrTypeUnionStr = toLiteralOrTypeUnionStr;
//# sourceMappingURL=to-type-str.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/type-util/try-deep-merge.js":
/*!**************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/type-util/try-deep-merge.js ***!
  \**************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var to_type_str_1 = __webpack_require__(/*! ./to-type-str */ "../tsql/node_modules/type-mapping/dist/type-util/to-type-str.js");
var strict_equal_1 = __webpack_require__(/*! ./strict-equal */ "../tsql/node_modules/type-mapping/dist/type-util/strict-equal.js");
var is_primitive_1 = __webpack_require__(/*! ./is-primitive */ "../tsql/node_modules/type-mapping/dist/type-util/is-primitive.js");
var ArrayBufferUtil = __webpack_require__(/*! ../array-buffer-util */ "../tsql/node_modules/type-mapping/dist/array-buffer-util/index.js");
var buffer_ctor_1 = __webpack_require__(/*! ./buffer-ctor */ "../tsql/node_modules/type-mapping/dist/type-util/buffer-ctor.js");
function tryDeepMergeImpl(path, a, b) {
    if (strict_equal_1.strictEqual(a, b)) {
        return {
            success: true,
            value: a,
        };
    }
    if (is_primitive_1.isPrimitive(a) || is_primitive_1.isPrimitive(b)) {
        return {
            success: false,
            path: path,
            aValue: a,
            bValue: b,
            message: "Cannot merge " + to_type_str_1.toTypeStr(a) + " and " + to_type_str_1.toTypeStr(b) + "; they are not equal",
            expected: to_type_str_1.toTypeStr(a),
            actualValue: b,
        };
    }
    //We should have object types now.
    if ((typeof a == "function") || (typeof b == "function")) {
        return {
            success: false,
            path: path,
            aValue: a,
            bValue: b,
            message: "Cannot merge " + to_type_str_1.toTypeStr(a) + " and " + to_type_str_1.toTypeStr(b) + "; they are not equal",
            expected: to_type_str_1.toTypeStr(a),
            actualValue: b,
        };
    }
    if ((a instanceof Date) || (b instanceof Date)) {
        if (!(a instanceof Date)) {
            return {
                success: false,
                path: path,
                aValue: a,
                bValue: b,
                message: "Cannot merge " + to_type_str_1.toTypeStr(a) + " with Date",
                expected: to_type_str_1.toTypeStr(a),
                actualValue: b,
            };
        }
        if (!(b instanceof Date)) {
            return {
                success: false,
                path: path,
                aValue: a,
                bValue: b,
                message: "Cannot merge Date with " + to_type_str_1.toTypeStr(b),
                expected: to_type_str_1.toTypeStr(a),
                actualValue: b,
            };
        }
        if (a.getTime() === b.getTime()) {
            return {
                success: true,
                value: a,
            };
        }
        else {
            return {
                success: false,
                path: path,
                aValue: a,
                bValue: b,
                message: "Cannot merge dates; they must have the same value",
                expected: to_type_str_1.toTypeStr(a),
                actualValue: b,
            };
        }
    }
    if (buffer_ctor_1.isInstanceOfBuffer(a) || buffer_ctor_1.isInstanceOfBuffer(b)) {
        if (!buffer_ctor_1.isInstanceOfBuffer(a)) {
            return {
                success: false,
                path: path,
                aValue: a,
                bValue: b,
                message: "Cannot merge " + to_type_str_1.toTypeStr(a) + " with Buffer",
                expected: to_type_str_1.toTypeStr(a),
                actualValue: b,
            };
        }
        if (!buffer_ctor_1.isInstanceOfBuffer(b)) {
            return {
                success: false,
                path: path,
                aValue: a,
                bValue: b,
                message: "Cannot merge Buffer with " + to_type_str_1.toTypeStr(b),
                expected: to_type_str_1.toTypeStr(a),
                actualValue: b,
            };
        }
        if (!ArrayBufferUtil.equals(a, b)) {
            return {
                success: false,
                path: path,
                aValue: a,
                bValue: b,
                message: "Cannot merge Buffer; they are not equal",
                expected: to_type_str_1.toTypeStr(a),
                actualValue: b,
            };
        }
        return {
            success: true,
            value: a,
        };
    }
    if ((a instanceof Uint8Array) || (b instanceof Uint8Array)) {
        if (!(a instanceof Uint8Array)) {
            return {
                success: false,
                path: path,
                aValue: a,
                bValue: b,
                message: "Cannot merge " + to_type_str_1.toTypeStr(a) + " with Uint8Array",
                expected: to_type_str_1.toTypeStr(a),
                actualValue: b,
            };
        }
        if (!(b instanceof Uint8Array)) {
            return {
                success: false,
                path: path,
                aValue: a,
                bValue: b,
                message: "Cannot merge Uint8Array with " + to_type_str_1.toTypeStr(b),
                expected: to_type_str_1.toTypeStr(a),
                actualValue: b,
            };
        }
        if (!ArrayBufferUtil.equals(a, b)) {
            return {
                success: false,
                path: path,
                aValue: a,
                bValue: b,
                message: "Cannot merge Uint8Array; they are not equal",
                expected: to_type_str_1.toTypeStr(a),
                actualValue: b,
            };
        }
        return {
            success: true,
            value: a,
        };
    }
    if ((a instanceof Array) || (b instanceof Array)) {
        if (!(a instanceof Array)) {
            return {
                success: false,
                path: path,
                aValue: a,
                bValue: b,
                message: "Cannot merge " + to_type_str_1.toTypeStr(a) + " with array",
                expected: to_type_str_1.toTypeStr(a),
                actualValue: b,
            };
        }
        if (!(b instanceof Array)) {
            return {
                success: false,
                path: path,
                aValue: a,
                bValue: b,
                message: "Cannot merge array with " + to_type_str_1.toTypeStr(b),
                expected: to_type_str_1.toTypeStr(a),
                actualValue: b,
            };
        }
        if (a.length != b.length) {
            return {
                success: false,
                path: path,
                aValue: a,
                bValue: b,
                message: "Cannot merge arrays of different lengths",
                expected: to_type_str_1.toTypeStr(a),
                actualValue: b,
            };
        }
        var newArray = [];
        for (var i = 0; i < a.length; ++i) {
            var elementResult = tryDeepMergeImpl(path.concat([i.toString()]), a[i], b[i]);
            if (elementResult.success) {
                newArray.push(elementResult.value);
            }
            else {
                return elementResult;
            }
        }
        return {
            success: true,
            value: newArray
        };
    }
    var aKeys = Object.keys(a);
    var bKeys = Object.keys(b);
    var mergedKeys = {};
    var newObj = {};
    for (var _i = 0, aKeys_1 = aKeys; _i < aKeys_1.length; _i++) {
        var key = aKeys_1[_i];
        //We can skip a.hasOwnProperty() because Object.keys() ignores parent prototype
        if (mergedKeys[key] === true) {
            continue;
        }
        mergedKeys[key] = true;
        //We do not call `b.hasOwnProperty()` directly
        //because if `b = Object.create(null)`,
        //an `Error` will be thrown
        if (Object.prototype.hasOwnProperty.call(b, key)) {
            var valueResult = tryDeepMergeImpl(path.concat([key]), a[key], b[key]);
            if (valueResult.success) {
                newObj[key] = valueResult.value;
            }
            else {
                return valueResult;
            }
        }
        else {
            newObj[key] = a[key];
        }
    }
    for (var _a = 0, bKeys_1 = bKeys; _a < bKeys_1.length; _a++) {
        var key = bKeys_1[_a];
        //We can skip b.hasOwnProperty() because Object.keys() ignores parent prototype
        if (mergedKeys[key] === true) {
            continue;
        }
        mergedKeys[key] = true;
        //We do not call `a.hasOwnProperty()` directly
        //because if `a = Object.create(null)`,
        //an `Error` will be thrown
        if (Object.prototype.hasOwnProperty.call(a, key)) {
            var valueResult = tryDeepMergeImpl(path.concat([key]), a[key], b[key]);
            if (valueResult.success) {
                newObj[key] = valueResult.value;
            }
            else {
                return valueResult;
            }
        }
        else {
            newObj[key] = b[key];
        }
    }
    return {
        success: true,
        value: newObj,
    };
}
function tryDeepMerge() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    if (args.length == 0) {
        throw new Error("Cannot deep merge zero arguments");
    }
    var result = args[0];
    for (var i = 1; i < args.length; ++i) {
        var implResult = tryDeepMergeImpl([], result, args[i]);
        if (implResult.success) {
            result = implResult.value;
        }
        else {
            return __assign({}, implResult, { aRoot: result, bRoot: args[i] });
        }
    }
    return {
        success: true,
        value: result,
    };
}
exports.tryDeepMerge = tryDeepMerge;
//# sourceMappingURL=try-deep-merge.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/dist/type-util/try-get-bigint-factory-function.js":
/*!*******************************************************************************************!*\
  !*** ../tsql/node_modules/type-mapping/dist/type-util/try-get-bigint-factory-function.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function createPossiblyInstanceOfBigInt(x) {
    if (x == undefined) {
        return function () { return false; };
    }
    try {
        var ctor_1 = Object.getPrototypeOf(x).constructor;
        if (typeof ctor_1 != "function") {
            return function () { return false; };
        }
        //Make sure `instanceof` checks don't throw
        ({} instanceof ctor_1);
        return function (x) {
            return (x instanceof ctor_1);
        };
    }
    catch (_err) {
        return function () { return false; };
    }
}
function tryFindBigIntFactoryFunction() {
    try {
        var unsafeFactory_1 = BigInt;
        if (typeof unsafeFactory_1 != "function") {
            return undefined;
        }
        try {
            var bigInt = unsafeFactory_1(0);
            var possiblyInstanceOfBigInt = createPossiblyInstanceOfBigInt(bigInt);
            var wrapper = (function (x) {
                return unsafeFactory_1(x);
            });
            wrapper.possiblyInstanceOfBigInt = possiblyInstanceOfBigInt;
            wrapper.bigIntNative = (typeof bigInt == "bigint");
            return wrapper;
        }
        catch (_err) {
        }
        try {
            var possiblyInstanceOfBigInt = createPossiblyInstanceOfBigInt(new unsafeFactory_1(0));
            var wrapper = (function (x) {
                return new unsafeFactory_1(x);
            });
            wrapper.possiblyInstanceOfBigInt = possiblyInstanceOfBigInt;
            //Had to use `new`; not supported
            wrapper.bigIntNative = false;
            return wrapper;
        }
        catch (_err) {
        }
        return undefined;
    }
    catch (_err) {
        //No BigInt, no polyfill
        return undefined;
    }
}
var cachedBigIntFactoryFunction = "uninitialized";
function tryGetBigIntFactoryFunction() {
    if (cachedBigIntFactoryFunction == "uninitialized") {
        cachedBigIntFactoryFunction = tryFindBigIntFactoryFunction();
    }
    return cachedBigIntFactoryFunction;
}
exports.tryGetBigIntFactoryFunction = tryGetBigIntFactoryFunction;
function getBigIntFactoryFunctionOrError() {
    var result = tryGetBigIntFactoryFunction();
    if (result == undefined) {
        throw new Error("No native or polyfilled bigint implementation found; set the `BigInt` variable on the `globalThis`/`window`/`global` scope to a polyfilled implementation");
    }
    return result;
}
exports.getBigIntFactoryFunctionOrError = getBigIntFactoryFunctionOrError;
function isBigIntNativelySupported() {
    var factory = tryGetBigIntFactoryFunction();
    if (factory == undefined) {
        return false;
    }
    return factory.bigIntNative;
}
exports.isBigIntNativelySupported = isBigIntNativelySupported;
//# sourceMappingURL=try-get-bigint-factory-function.js.map

/***/ }),

/***/ "../tsql/node_modules/type-mapping/fluent.js":
/*!***************************************************!*\
  !*** ../tsql/node_modules/type-mapping/fluent.js ***!
  \***************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./dist/fluent-lib */ "../tsql/node_modules/type-mapping/dist/fluent-lib/index.js"));

/***/ }),

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(
      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)
    ))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),

/***/ "./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__(/*! base64-js */ "./node_modules/base64-js/index.js")
var ieee754 = __webpack_require__(/*! ieee754 */ "./node_modules/ieee754/index.js")
var isArray = __webpack_require__(/*! isarray */ "./node_modules/isarray/index.js")

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports) {

exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),

/***/ "./node_modules/isarray/index.js":
/*!***************************************!*\
  !*** ./node_modules/isarray/index.js ***!
  \***************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),

/***/ "./node_modules/type-mapping/dist/accessor-util/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/type-mapping/dist/accessor-util/index.js ***!
  \***************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function isAccessorDescriptor(descriptor) {
    if (descriptor == null) {
        return false;
    }
    return (descriptor.hasOwnProperty("get") &&
        descriptor.hasOwnProperty("set") &&
        descriptor.hasOwnProperty("configurable") &&
        descriptor.hasOwnProperty("enumerable") &&
        (typeof descriptor.get == "function" ||
            typeof descriptor.get == "undefined") &&
        (typeof descriptor.set == "function" ||
            typeof descriptor.set == "undefined") &&
        typeof descriptor.configurable == "boolean" &&
        typeof descriptor.enumerable == "boolean");
}
exports.isAccessorDescriptor = isAccessorDescriptor;
var BUILT_IN_PROTOTYPES = [
    Object.prototype,
    Date.prototype,
];
function isBuiltInPrototype(obj) {
    return BUILT_IN_PROTOTYPES.indexOf(obj) >= 0;
}
function getOwnAccessors(obj) {
    var arr = Object.getOwnPropertyNames(obj);
    var result = [];
    for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {
        var k = arr_1[_i];
        var descriptor = Object.getOwnPropertyDescriptor(obj, k);
        if (isAccessorDescriptor(descriptor)) {
            result.push({
                name: k,
                descriptor: descriptor,
            });
        }
    }
    return result;
}
exports.getOwnAccessors = getOwnAccessors;
function getAllAccessors(obj) {
    var result = [];
    while (!isBuiltInPrototype(obj)) {
        result.push.apply(result, getOwnAccessors(obj));
        obj = Object.getPrototypeOf(obj);
    }
    return result;
}
exports.getAllAccessors = getAllAccessors;
function getAccessor(obj, name) {
    if (isBuiltInPrototype(obj)) {
        return undefined;
    }
    var potentialResult = Object.getOwnPropertyDescriptor(obj, name);
    if (potentialResult == undefined || !isAccessorDescriptor(potentialResult)) {
        return getAccessor(Object.getPrototypeOf(obj), name);
    }
    return potentialResult;
}
exports.getAccessor = getAccessor;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/array-buffer-util/equals.js":
/*!********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/array-buffer-util/equals.js ***!
  \********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
//https://stackoverflow.com/questions/21553528/how-to-test-for-equality-in-arraybuffer-dataview-and-typedarray
function dataViewsAreEqual(a, b) {
    if (a.byteLength !== b.byteLength) {
        return false;
    }
    for (var i = 0; i < a.byteLength; ++i) {
        if (a.getUint8(i) !== b.getUint8(i)) {
            return false;
        }
    }
    return true;
}
/**
 * Allows you to compare,
 * + `Buffer` to `Buffer`
 * + `Uint8Array` to `Uint8Array`
 * + `Buffer` to `Uint8Array`
 * + `Uint8Array` to `Buffer`
 */
function equals(a, b) {
    return dataViewsAreEqual(new DataView(a.buffer, a.byteOffset, a.byteLength), new DataView(b.buffer, b.byteOffset, b.byteLength));
}
exports.equals = equals;
//# sourceMappingURL=equals.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/array-buffer-util/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/type-mapping/dist/array-buffer-util/index.js ***!
  \*******************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./equals */ "./node_modules/type-mapping/dist/array-buffer-util/equals.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/array-util/array-fill.js":
/*!*****************************************************************!*\
  !*** ./node_modules/type-mapping/dist/array-util/array-fill.js ***!
  \*****************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
    Replaces all elements of `arr` with `value`
*/
function arrayFill(arr, value) {
    for (var i = 0; i < arr.length; ++i) {
        arr[i] = value;
    }
    return arr;
}
exports.arrayFill = arrayFill;
//# sourceMappingURL=array-fill.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/array-util/index.js":
/*!************************************************************!*\
  !*** ./node_modules/type-mapping/dist/array-util/index.js ***!
  \************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./array-fill */ "./node_modules/type-mapping/dist/array-util/array-fill.js"));
__export(__webpack_require__(/*! ./remove-duplicate-elements */ "./node_modules/type-mapping/dist/array-util/remove-duplicate-elements.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/array-util/remove-duplicate-elements.js":
/*!********************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/array-util/remove-duplicate-elements.js ***!
  \********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
/**
 * Removes duplicates from `arr`.
 * Preserves the order of elements.
 *
 * A "duplicate" is an element that is `===` to another element
 * with a lower index in `arr`.
 *
 * Given the following,
 * ```ts
 * [1,2,1]
 * ```
 * The first `1` is **NOT** a duplicate.
 * The second `1` is a duplicate.
 *
 * @param arr
 */
function removeDuplicateElements(arr) {
    var result = [];
    var _loop_1 = function (element) {
        if (result.some(function (r) { return type_util_1.strictEqual(r, element); })) {
            return "continue";
        }
        result.push(element);
    };
    for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {
        var element = arr_1[_i];
        _loop_1(element);
    }
    return result;
}
exports.removeDuplicateElements = removeDuplicateElements;
//# sourceMappingURL=remove-duplicate-elements.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/bigint-util/arithmetic.js":
/*!******************************************************************!*\
  !*** ./node_modules/type-mapping/dist/bigint-util/arithmetic.js ***!
  \******************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var jsbi_1 = __webpack_require__(/*! ./jsbi */ "./node_modules/type-mapping/dist/bigint-util/jsbi.js");
function add(a, b) {
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    if (type_util_1.isBigIntNativelySupported()) {
        if (typeof a == "number") {
            if (typeof b == "number") {
                return BigInt(a) + BigInt(b);
            }
            else {
                return BigInt(a) + b;
            }
        }
        else {
            if (typeof b == "number") {
                return a + BigInt(b);
            }
            else {
                return a + b;
            }
        }
    }
    var result = jsbi_1.JSBI.add(jsbi_1.JSBI.BigInt(a.toString()), jsbi_1.JSBI.BigInt(b.toString()));
    return BigInt(result.toString());
}
exports.add = add;
function addMany(a, b) {
    var rest = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        rest[_i - 2] = arguments[_i];
    }
    var result = add(a, b);
    for (var _a = 0, rest_1 = rest; _a < rest_1.length; _a++) {
        var ele = rest_1[_a];
        result = add(result, ele);
    }
    return result;
}
exports.addMany = addMany;
function sub(a, b) {
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    if (type_util_1.isBigIntNativelySupported()) {
        if (typeof a == "number") {
            if (typeof b == "number") {
                return BigInt(a) - BigInt(b);
            }
            else {
                return BigInt(a) - b;
            }
        }
        else {
            if (typeof b == "number") {
                return a - BigInt(b);
            }
            else {
                return a - b;
            }
        }
    }
    var result = jsbi_1.JSBI.subtract(jsbi_1.JSBI.BigInt(a.toString()), jsbi_1.JSBI.BigInt(b.toString()));
    return BigInt(result.toString());
}
exports.sub = sub;
function mul(a, b) {
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    if (type_util_1.isBigIntNativelySupported()) {
        if (typeof a == "number") {
            if (typeof b == "number") {
                return BigInt(a) * BigInt(b);
            }
            else {
                return BigInt(a) * b;
            }
        }
        else {
            if (typeof b == "number") {
                return a * BigInt(b);
            }
            else {
                return a * b;
            }
        }
    }
    var result = jsbi_1.JSBI.multiply(jsbi_1.JSBI.BigInt(a.toString()), jsbi_1.JSBI.BigInt(b.toString()));
    return BigInt(result.toString());
}
exports.mul = mul;
function div(a, b) {
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    if (type_util_1.isBigIntNativelySupported()) {
        if (typeof a == "number") {
            if (typeof b == "number") {
                return BigInt(a) / BigInt(b);
            }
            else {
                return BigInt(a) / b;
            }
        }
        else {
            if (typeof b == "number") {
                return a / BigInt(b);
            }
            else {
                return a / b;
            }
        }
    }
    var result = jsbi_1.JSBI.divide(jsbi_1.JSBI.BigInt(a.toString()), jsbi_1.JSBI.BigInt(b.toString()));
    return BigInt(result.toString());
}
exports.div = div;
function mod(a, b) {
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    if (type_util_1.isBigIntNativelySupported()) {
        if (typeof a == "number") {
            if (typeof b == "number") {
                return BigInt(a) % BigInt(b);
            }
            else {
                return BigInt(a) % b;
            }
        }
        else {
            if (typeof b == "number") {
                return a % BigInt(b);
            }
            else {
                return a % b;
            }
        }
    }
    var result = jsbi_1.JSBI.remainder(jsbi_1.JSBI.BigInt(a.toString()), jsbi_1.JSBI.BigInt(b.toString()));
    return BigInt(result.toString());
}
exports.mod = mod;
//# sourceMappingURL=arithmetic.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/bigint-util/as-int-n.js":
/*!****************************************************************!*\
  !*** ./node_modules/type-mapping/dist/bigint-util/as-int-n.js ***!
  \****************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var jsbi_1 = __webpack_require__(/*! ./jsbi */ "./node_modules/type-mapping/dist/bigint-util/jsbi.js");
function asIntN(n, x) {
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    return BigInt(jsbi_1.JSBI.asIntN(n, jsbi_1.JSBI.BigInt(x.toString())).toString());
}
exports.asIntN = asIntN;
//# sourceMappingURL=as-int-n.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/bigint-util/as-uint-n.js":
/*!*****************************************************************!*\
  !*** ./node_modules/type-mapping/dist/bigint-util/as-uint-n.js ***!
  \*****************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var jsbi_1 = __webpack_require__(/*! ./jsbi */ "./node_modules/type-mapping/dist/bigint-util/jsbi.js");
function asUintN(n, x) {
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    return BigInt(jsbi_1.JSBI.asUintN(n, jsbi_1.JSBI.BigInt(x.toString())).toString());
}
exports.asUintN = asUintN;
//# sourceMappingURL=as-uint-n.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/bigint-util/bitwise-operation.js":
/*!*************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/bigint-util/bitwise-operation.js ***!
  \*************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var jsbi_1 = __webpack_require__(/*! ./jsbi */ "./node_modules/type-mapping/dist/bigint-util/jsbi.js");
function leftShift(a, b) {
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    if (type_util_1.isBigIntNativelySupported()) {
        if (typeof a == "number") {
            if (typeof b == "number") {
                return BigInt(a) << BigInt(b);
            }
            else {
                return BigInt(a) << b;
            }
        }
        else {
            if (typeof b == "number") {
                return a << BigInt(b);
            }
            else {
                return a << b;
            }
        }
    }
    var result = jsbi_1.JSBI.leftShift(jsbi_1.JSBI.BigInt(a.toString()), jsbi_1.JSBI.BigInt(b.toString()));
    return BigInt(result.toString());
}
exports.leftShift = leftShift;
function signedRightShift(a, b) {
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    if (type_util_1.isBigIntNativelySupported()) {
        if (typeof a == "number") {
            if (typeof b == "number") {
                return BigInt(a) >> BigInt(b);
            }
            else {
                return BigInt(a) >> b;
            }
        }
        else {
            if (typeof b == "number") {
                return a >> BigInt(b);
            }
            else {
                return a >> b;
            }
        }
    }
    var result = jsbi_1.JSBI.signedRightShift(jsbi_1.JSBI.BigInt(a.toString()), jsbi_1.JSBI.BigInt(b.toString()));
    return BigInt(result.toString());
}
exports.signedRightShift = signedRightShift;
function bitwiseAnd(a, b) {
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    if (type_util_1.isBigIntNativelySupported()) {
        if (typeof a == "number") {
            if (typeof b == "number") {
                return BigInt(a) & BigInt(b);
            }
            else {
                return BigInt(a) & b;
            }
        }
        else {
            if (typeof b == "number") {
                return a & BigInt(b);
            }
            else {
                return a & b;
            }
        }
    }
    var result = jsbi_1.JSBI.bitwiseAnd(jsbi_1.JSBI.BigInt(a.toString()), jsbi_1.JSBI.BigInt(b.toString()));
    return BigInt(result.toString());
}
exports.bitwiseAnd = bitwiseAnd;
function bitwiseOr(a, b) {
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    if (type_util_1.isBigIntNativelySupported()) {
        if (typeof a == "number") {
            if (typeof b == "number") {
                return BigInt(a) | BigInt(b);
            }
            else {
                return BigInt(a) | b;
            }
        }
        else {
            if (typeof b == "number") {
                return a | BigInt(b);
            }
            else {
                return a | b;
            }
        }
    }
    var result = jsbi_1.JSBI.bitwiseOr(jsbi_1.JSBI.BigInt(a.toString()), jsbi_1.JSBI.BigInt(b.toString()));
    return BigInt(result.toString());
}
exports.bitwiseOr = bitwiseOr;
function bitwiseXor(a, b) {
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    if (type_util_1.isBigIntNativelySupported()) {
        if (typeof a == "number") {
            if (typeof b == "number") {
                return BigInt(a) ^ BigInt(b);
            }
            else {
                return BigInt(a) ^ b;
            }
        }
        else {
            if (typeof b == "number") {
                return a ^ BigInt(b);
            }
            else {
                return a ^ b;
            }
        }
    }
    var result = jsbi_1.JSBI.bitwiseXor(jsbi_1.JSBI.BigInt(a.toString()), jsbi_1.JSBI.BigInt(b.toString()));
    return BigInt(result.toString());
}
exports.bitwiseXor = bitwiseXor;
function bitwiseNot(a) {
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    if (type_util_1.isBigIntNativelySupported()) {
        if (typeof a == "number") {
            return ~BigInt(a);
        }
        else {
            return ~a;
        }
    }
    var result = jsbi_1.JSBI.bitwiseNot(jsbi_1.JSBI.BigInt(a.toString()));
    return BigInt(result.toString());
}
exports.bitwiseNot = bitwiseNot;
//# sourceMappingURL=bitwise-operation.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/bigint-util/comparison.js":
/*!******************************************************************!*\
  !*** ./node_modules/type-mapping/dist/bigint-util/comparison.js ***!
  \******************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var jsbi_1 = __webpack_require__(/*! ./jsbi */ "./node_modules/type-mapping/dist/bigint-util/jsbi.js");
/**
    Assumes BigInt.toString() is implemented correctly.

    Assummes we won't get strings like,

    + "-0000"
    + "-qwerty"
    + "123.123"
*/
function compare(a, b) {
    if (type_util_1.isBigIntNativelySupported()) {
        return ((typeof a == "number" && isNaN(a)) ?
            NaN :
            (typeof b == "number" && isNaN(b)) ?
                NaN :
                a < b ?
                    -1 :
                    a > b ?
                        1 :
                        0);
    }
    if (typeof a == "number") {
        if (typeof b == "number") {
            return a - b;
        }
        else {
            var cmp = jsbi_1.JSBI.__compareToNumber(jsbi_1.JSBI.BigInt(b.toString()), a);
            return -cmp;
        }
    }
    else {
        if (typeof b == "number") {
            var cmp = jsbi_1.JSBI.__compareToNumber(jsbi_1.JSBI.BigInt(a.toString()), b);
            return cmp;
        }
        else {
            return jsbi_1.JSBI.__compareToBigInt(jsbi_1.JSBI.BigInt(a.toString()), jsbi_1.JSBI.BigInt(b.toString()));
        }
    }
}
exports.compare = compare;
function lessThan(a, b) {
    return compare(a, b) < 0;
}
exports.lessThan = lessThan;
function greaterThan(a, b) {
    return compare(a, b) > 0;
}
exports.greaterThan = greaterThan;
function equal(a, b) {
    return compare(a, b) == 0;
}
exports.equal = equal;
function lessThanOrEqual(a, b) {
    return compare(a, b) <= 0;
}
exports.lessThanOrEqual = lessThanOrEqual;
function greaterThanOrEqual(a, b) {
    return compare(a, b) >= 0;
}
exports.greaterThanOrEqual = greaterThanOrEqual;
function subOneImpl(str) {
    if (str[0] == "-") {
        var result = addOneImpl(str.substr(1));
        return "-" + result;
    }
    if (str == "0") {
        return "-1";
    }
    var digits = str
        .split("")
        .map(function (s) { return parseInt(s); });
    for (var i = digits.length - 1; i >= 0; --i) {
        var d = digits[i];
        if (d == 0) {
            digits[i] = 9;
        }
        else {
            if (i == 0 && digits[i] == 1) {
                digits.shift();
            }
            else {
                digits[i] = d - 1;
            }
            break;
        }
    }
    if (digits.length == 0) {
        return "0";
    }
    else {
        return digits.join("");
    }
}
exports.subOneImpl = subOneImpl;
function addOneImpl(str) {
    jsbi_1.JSBI.__absoluteAddOne;
    if (str[0] == "-") {
        var result = subOneImpl(str.substr(1));
        if (result == "0") {
            return result;
        }
        else {
            return "-" + result;
        }
    }
    var digits = str
        .split("")
        .map(function (s) { return parseInt(s); });
    var carry = true;
    for (var i = digits.length - 1; i >= 0; --i) {
        var d = digits[i];
        if (d == 9) {
            digits[i] = 0;
        }
        else {
            digits[i] = d + 1;
            carry = false;
            break;
        }
    }
    if (carry) {
        digits.unshift(1);
    }
    return digits.join("");
}
exports.addOneImpl = addOneImpl;
//# sourceMappingURL=comparison.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/bigint-util/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/type-mapping/dist/bigint-util/index.js ***!
  \*************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./arithmetic */ "./node_modules/type-mapping/dist/bigint-util/arithmetic.js"));
__export(__webpack_require__(/*! ./as-int-n */ "./node_modules/type-mapping/dist/bigint-util/as-int-n.js"));
__export(__webpack_require__(/*! ./as-uint-n */ "./node_modules/type-mapping/dist/bigint-util/as-uint-n.js"));
__export(__webpack_require__(/*! ./bitwise-operation */ "./node_modules/type-mapping/dist/bigint-util/bitwise-operation.js"));
__export(__webpack_require__(/*! ./comparison */ "./node_modules/type-mapping/dist/bigint-util/comparison.js"));
__export(__webpack_require__(/*! ./to-number */ "./node_modules/type-mapping/dist/bigint-util/to-number.js"));
__export(__webpack_require__(/*! ./to-string */ "./node_modules/type-mapping/dist/bigint-util/to-string.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/bigint-util/jsbi.js":
/*!************************************************************!*\
  !*** ./node_modules/type-mapping/dist/bigint-util/jsbi.js ***!
  \************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32#Polyfill
 */
function clz32(x) {
    // Let n be ToUint32(x).
    // Let p be the number of leading zero bits in
    // the 32-bit binary representation of n.
    // Return p.
    var asUint = x >>> 0;
    if (asUint === 0) {
        return 32;
    }
    return 31 - (Math.log(asUint) / Math.LN2 | 0) | 0; // the "| 0" acts like math.floor
}
/**
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul#Polyfill
 */
function imul(a, b) {
    var aHi = (a >>> 16) & 0xffff;
    var aLo = a & 0xffff;
    var bHi = (b >>> 16) & 0xffff;
    var bLo = b & 0xffff;
    // the shift by 0 fixes the sign on the high part
    // the final |0 converts the unsigned value into a signed value
    return ((aLo * bLo) + (((aHi * bLo + aLo * bHi) << 16) >>> 0) | 0);
}
if (Math.clz32 == undefined) {
    Math.clz32 = clz32;
}
if (Math.imul == undefined) {
    Math.imul = imul;
}
if (Symbol == undefined) {
    Symbol = {};
}
/**
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf
 */
/**
*** Object.appendChain(@object, @prototype)
*
* Appends the first non-native prototype of a chain to a new prototype.
* Returns @object (if it was a primitive value it will transformed into an object).
*
*** Object.appendChain(@object [, "@arg_name_1", "@arg_name_2", "@arg_name_3", "..."], "@function_body")
*** Object.appendChain(@object [, "@arg_name_1, @arg_name_2, @arg_name_3, ..."], "@function_body")
*
* Appends the first non-native prototype of a chain to the native Function.prototype object, then appends a
* new Function(["@arg"(s)], "@function_body") to that chain.
* Returns the function.
*
**/
Object.appendChain = function (oChain, oProto) {
    if (arguments.length < 2) {
        throw new TypeError('Object.appendChain - Not enough arguments');
    }
    if (typeof oProto !== 'object' && typeof oProto !== 'string') {
        throw new TypeError('second argument to Object.appendChain must be an object or a string');
    }
    var oNewProto = oProto;
    var oReturn = oChain instanceof this ? oChain : new oChain.constructor(oChain);
    var o2nd = oReturn;
    var oLast = oReturn;
    for (var o1st = this.getPrototypeOf(o2nd); o1st !== Object.prototype && o1st !== Function.prototype; o1st = this.getPrototypeOf(o2nd)) {
        o2nd = o1st;
    }
    if (oProto.constructor === String) {
        oNewProto = Function.prototype;
        oReturn = Function.apply(null, Array.prototype.slice.call(arguments, 1));
        this.setPrototypeOf(oReturn, oLast);
    }
    this.setPrototypeOf(o2nd, oNewProto);
    return oReturn;
};
// Copyright 2018 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the “License”);
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// <https://apache.org/licenses/LICENSE-2.0>.
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an “AS IS” BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * https://github.com/GoogleChromeLabs/jsbi
 */
var JSBI = /** @class */ (function (_super) {
    __extends(JSBI, _super);
    function JSBI(length, sign) {
        var _this = this;
        if (length > JSBI.__kMaxLength) {
            throw new RangeError('Maximum BigInt size exceeded');
        }
        _this = _super.call(this, length) || this;
        _this.sign = sign;
        Object.setPrototypeOf(_this, JSBI.prototype);
        return _this;
    }
    JSBI.BigInt = function (arg) {
        if (typeof arg === 'number') {
            if (arg === 0)
                return JSBI.__zero();
            if ((arg | 0) === arg) {
                if (arg < 0) {
                    return JSBI.__oneDigit(-arg, true);
                }
                return JSBI.__oneDigit(arg, false);
            }
            if (!isFinite(arg) || Math.floor(arg) !== arg) {
                throw new RangeError('The number ' + arg + ' cannot be converted to ' +
                    'BigInt because it is not an integer');
            }
            return JSBI.__fromDouble(arg);
        }
        else if (typeof arg === 'string') {
            var result = JSBI.__fromString(arg);
            if (result === null) {
                throw new SyntaxError('Cannot convert ' + arg + ' to a BigInt');
            }
            return result;
        }
        else if (typeof arg === 'boolean') {
            if (arg === true) {
                return JSBI.__oneDigit(1, false);
            }
            return JSBI.__zero();
        }
        else if (typeof arg === 'object') {
            if (arg.constructor === JSBI)
                return arg;
            var primitive = JSBI.__toPrimitive(arg);
            return JSBI.BigInt(primitive);
        }
        throw new TypeError('Cannot convert ' + arg + ' to a BigInt');
    };
    JSBI.prototype.toDebugString = function () {
        var result = ['BigInt['];
        for (var _i = 0, _a = this; _i < _a.length; _i++) {
            var digit = _a[_i];
            result.push((digit ? (digit >>> 0).toString(16) : digit) + ', ');
        }
        result.push(']');
        return result.join('');
    };
    JSBI.prototype.toString = function (radix) {
        if (radix === void 0) { radix = 10; }
        if (radix < 2 || radix > 36) {
            throw new RangeError('toString() radix argument must be between 2 and 36');
        }
        if (this.length === 0)
            return '0';
        if ((radix & (radix - 1)) === 0) {
            return JSBI.__toStringBasePowerOfTwo(this, radix);
        }
        return JSBI.__toStringGeneric(this, radix, false);
    };
    // Equivalent of "Number(my_bigint)" in the native implementation.
    JSBI.toNumber = function (x) {
        var xLength = x.length;
        if (xLength === 0)
            return 0;
        if (xLength === 1) {
            var value = x.__unsignedDigit(0);
            return x.sign ? -value : value;
        }
        var xMsd = x.__digit(xLength - 1);
        var msdLeadingZeros = Math.clz32(xMsd);
        var xBitLength = xLength * 32 - msdLeadingZeros;
        if (xBitLength > 1024)
            return x.sign ? -Infinity : Infinity;
        var exponent = xBitLength - 1;
        var currentDigit = xMsd;
        var digitIndex = xLength - 1;
        var shift = msdLeadingZeros + 1;
        var mantissaHigh = (shift === 32) ? 0 : currentDigit << shift;
        mantissaHigh >>>= 12;
        var mantissaHighBitsUnset = shift - 12;
        var mantissaLow = (shift >= 12) ? 0 : (currentDigit << (20 + shift));
        var mantissaLowBitsUnset = 20 + shift;
        if (mantissaHighBitsUnset > 0 && digitIndex > 0) {
            digitIndex--;
            currentDigit = x.__digit(digitIndex);
            mantissaHigh |= (currentDigit >>> (32 - mantissaHighBitsUnset));
            mantissaLow = currentDigit << mantissaHighBitsUnset;
            mantissaLowBitsUnset = mantissaHighBitsUnset;
        }
        if (mantissaLowBitsUnset > 0 && digitIndex > 0) {
            digitIndex--;
            currentDigit = x.__digit(digitIndex);
            mantissaLow |= (currentDigit >>> (32 - mantissaLowBitsUnset));
            mantissaLowBitsUnset -= 32;
        }
        var rounding = JSBI.__decideRounding(x, mantissaLowBitsUnset, digitIndex, currentDigit);
        if (rounding === 1 || (rounding === 0 && (mantissaLow & 1) === 1)) {
            mantissaLow = (mantissaLow + 1) >>> 0;
            if (mantissaLow === 0) {
                // Incrementing mantissaLow overflowed.
                mantissaHigh++;
                if ((mantissaHigh >>> 20) !== 0) {
                    // Incrementing mantissaHigh overflowed.
                    mantissaHigh = 0;
                    exponent++;
                    if (exponent > 1023) {
                        // Incrementing the exponent overflowed.
                        return x.sign ? -Infinity : Infinity;
                    }
                }
            }
        }
        var signBit = x.sign ? (1 << 31) : 0;
        exponent = (exponent + 0x3FF) << 20;
        JSBI.__kBitConversionInts[1] = signBit | exponent | mantissaHigh;
        JSBI.__kBitConversionInts[0] = mantissaLow;
        return JSBI.__kBitConversionDouble[0];
    };
    // Operations.
    JSBI.unaryMinus = function (x) {
        if (x.length === 0)
            return x;
        var result = x.__copy();
        result.sign = !x.sign;
        return result;
    };
    JSBI.bitwiseNot = function (x) {
        if (x.sign) {
            // ~(-x) == ~(~(x-1)) == x-1
            return JSBI.__absoluteSubOne(x).__trim();
        }
        // ~x == -x-1 == -(x+1)
        return JSBI.__absoluteAddOne(x, true);
    };
    JSBI.exponentiate = function (x, y) {
        if (y.sign) {
            throw new RangeError('Exponent must be positive');
        }
        if (y.length === 0) {
            return JSBI.__oneDigit(1, false);
        }
        if (x.length === 0)
            return x;
        if (x.length === 1 && x.__digit(0) === 1) {
            // (-1) ** even_number == 1.
            if (x.sign && (y.__digit(0) & 1) === 0) {
                return JSBI.unaryMinus(x);
            }
            // (-1) ** odd_number == -1, 1 ** anything == 1.
            return x;
        }
        // For all bases >= 2, very large exponents would lead to unrepresentable
        // results.
        if (y.length > 1)
            throw new RangeError('BigInt too big');
        var expValue = y.__unsignedDigit(0);
        if (expValue === 1)
            return x;
        if (expValue >= JSBI.__kMaxLengthBits) {
            throw new RangeError('BigInt too big');
        }
        if (x.length === 1 && x.__digit(0) === 2) {
            // Fast path for 2^n.
            var neededDigits = 1 + (expValue >>> 5);
            var sign = x.sign && ((expValue & 1) !== 0);
            var result_1 = new JSBI(neededDigits, sign);
            result_1.__initializeDigits();
            // All bits are zero. Now set the n-th bit.
            var msd = 1 << (expValue & 31);
            result_1.__setDigit(neededDigits - 1, msd);
            return result_1;
        }
        var result = null;
        var runningSquare = x;
        // This implicitly sets the result's sign correctly.
        if ((expValue & 1) !== 0)
            result = x;
        expValue >>= 1;
        for (; expValue !== 0; expValue >>= 1) {
            runningSquare = JSBI.multiply(runningSquare, runningSquare);
            if ((expValue & 1) !== 0) {
                if (result === null) {
                    result = runningSquare;
                }
                else {
                    result = JSBI.multiply(result, runningSquare);
                }
            }
        }
        if (result == null) {
            throw new Error("Could not exponentiate");
        }
        return result;
    };
    JSBI.multiply = function (x, y) {
        if (x.length === 0)
            return x;
        if (y.length === 0)
            return y;
        var resultLength = x.length + y.length;
        if (x.__clzmsd() + y.__clzmsd() >= 32) {
            resultLength--;
        }
        var result = new JSBI(resultLength, x.sign !== y.sign);
        result.__initializeDigits();
        for (var i = 0; i < x.length; i++) {
            JSBI.__multiplyAccumulate(y, x.__digit(i), result, i);
        }
        return result.__trim();
    };
    JSBI.divide = function (x, y) {
        if (y.length === 0)
            throw new RangeError('Division by zero');
        if (JSBI.__absoluteCompare(x, y) < 0)
            return JSBI.__zero();
        var resultSign = x.sign !== y.sign;
        var divisor = y.__unsignedDigit(0);
        var quotient;
        if (y.length === 1 && divisor <= 0xFFFF) {
            if (divisor === 1) {
                return resultSign === x.sign ? x : JSBI.unaryMinus(x);
            }
            quotient = JSBI.__absoluteDivSmall(x, divisor, null);
        }
        else {
            quotient = JSBI.__absoluteDivLarge(x, y, true, false);
        }
        quotient.sign = resultSign;
        return quotient.__trim();
    };
    JSBI.remainder = function (x, y) {
        if (y.length === 0)
            throw new RangeError('Division by zero');
        if (JSBI.__absoluteCompare(x, y) < 0)
            return x;
        var divisor = y.__unsignedDigit(0);
        if (y.length === 1 && divisor <= 0xFFFF) {
            if (divisor === 1)
                return JSBI.__zero();
            var remainderDigit = JSBI.__absoluteModSmall(x, divisor);
            if (remainderDigit === 0)
                return JSBI.__zero();
            return JSBI.__oneDigit(remainderDigit, x.sign);
        }
        var remainder = JSBI.__absoluteDivLarge(x, y, false, true);
        remainder.sign = x.sign;
        return remainder.__trim();
    };
    JSBI.add = function (x, y) {
        var sign = x.sign;
        if (sign === y.sign) {
            // x + y == x + y
            // -x + -y == -(x + y)
            return JSBI.__absoluteAdd(x, y, sign);
        }
        // x + -y == x - y == -(y - x)
        // -x + y == y - x == -(x - y)
        if (JSBI.__absoluteCompare(x, y) >= 0) {
            return JSBI.__absoluteSub(x, y, sign);
        }
        return JSBI.__absoluteSub(y, x, !sign);
    };
    JSBI.subtract = function (x, y) {
        var sign = x.sign;
        if (sign !== y.sign) {
            // x - (-y) == x + y
            // (-x) - y == -(x + y)
            return JSBI.__absoluteAdd(x, y, sign);
        }
        // x - y == -(y - x)
        // (-x) - (-y) == y - x == -(x - y)
        if (JSBI.__absoluteCompare(x, y) >= 0) {
            return JSBI.__absoluteSub(x, y, sign);
        }
        return JSBI.__absoluteSub(y, x, !sign);
    };
    JSBI.leftShift = function (x, y) {
        if (y.length === 0 || x.length === 0)
            return x;
        if (y.sign)
            return JSBI.__rightShiftByAbsolute(x, y);
        return JSBI.__leftShiftByAbsolute(x, y);
    };
    JSBI.signedRightShift = function (x, y) {
        if (y.length === 0 || x.length === 0)
            return x;
        if (y.sign)
            return JSBI.__leftShiftByAbsolute(x, y);
        return JSBI.__rightShiftByAbsolute(x, y);
    };
    JSBI.unsignedRightShift = function () {
        throw new TypeError('BigInts have no unsigned right shift; use >> instead');
    };
    JSBI.lessThan = function (x, y) {
        return JSBI.__compareToBigInt(x, y) < 0;
    };
    JSBI.lessThanOrEqual = function (x, y) {
        return JSBI.__compareToBigInt(x, y) <= 0;
    };
    JSBI.greaterThan = function (x, y) {
        return JSBI.__compareToBigInt(x, y) > 0;
    };
    JSBI.greaterThanOrEqual = function (x, y) {
        return JSBI.__compareToBigInt(x, y) >= 0;
    };
    JSBI.equal = function (x, y) {
        if (x.sign !== y.sign)
            return false;
        if (x.length !== y.length)
            return false;
        for (var i = 0; i < x.length; i++) {
            if (x.__digit(i) !== y.__digit(i))
                return false;
        }
        return true;
    };
    JSBI.notEqual = function (x, y) {
        return !JSBI.equal(x, y);
    };
    JSBI.bitwiseAnd = function (x, y) {
        var _a;
        if (!x.sign && !y.sign) {
            return JSBI.__absoluteAnd(x, y).__trim();
        }
        else if (x.sign && y.sign) {
            var resultLength = Math.max(x.length, y.length) + 1;
            // (-x) & (-y) == ~(x-1) & ~(y-1) == ~((x-1) | (y-1))
            // == -(((x-1) | (y-1)) + 1)
            var result = JSBI.__absoluteSubOne(x, resultLength);
            var y1 = JSBI.__absoluteSubOne(y);
            result = JSBI.__absoluteOr(result, y1, result);
            return JSBI.__absoluteAddOne(result, true, result).__trim();
        }
        // Assume that x is the positive BigInt.
        if (x.sign) {
            _a = [y, x], x = _a[0], y = _a[1];
        }
        // x & (-y) == x & ~(y-1) == x &~ (y-1)
        return JSBI.__absoluteAndNot(x, JSBI.__absoluteSubOne(y)).__trim();
    };
    JSBI.bitwiseXor = function (x, y) {
        var _a;
        if (!x.sign && !y.sign) {
            return JSBI.__absoluteXor(x, y).__trim();
        }
        else if (x.sign && y.sign) {
            // (-x) ^ (-y) == ~(x-1) ^ ~(y-1) == (x-1) ^ (y-1)
            var resultLength_1 = Math.max(x.length, y.length);
            var result_2 = JSBI.__absoluteSubOne(x, resultLength_1);
            var y1 = JSBI.__absoluteSubOne(y);
            return JSBI.__absoluteXor(result_2, y1, result_2).__trim();
        }
        var resultLength = Math.max(x.length, y.length) + 1;
        // Assume that x is the positive BigInt.
        if (x.sign) {
            _a = [y, x], x = _a[0], y = _a[1];
        }
        // x ^ (-y) == x ^ ~(y-1) == ~(x ^ (y-1)) == -((x ^ (y-1)) + 1)
        var result = JSBI.__absoluteSubOne(y, resultLength);
        result = JSBI.__absoluteXor(result, x, result);
        return JSBI.__absoluteAddOne(result, true, result).__trim();
    };
    JSBI.bitwiseOr = function (x, y) {
        var _a;
        var resultLength = Math.max(x.length, y.length);
        if (!x.sign && !y.sign) {
            return JSBI.__absoluteOr(x, y).__trim();
        }
        else if (x.sign && y.sign) {
            // (-x) | (-y) == ~(x-1) | ~(y-1) == ~((x-1) & (y-1))
            // == -(((x-1) & (y-1)) + 1)
            var result_3 = JSBI.__absoluteSubOne(x, resultLength);
            var y1 = JSBI.__absoluteSubOne(y);
            result_3 = JSBI.__absoluteAnd(result_3, y1, result_3);
            return JSBI.__absoluteAddOne(result_3, true, result_3).__trim();
        }
        // Assume that x is the positive BigInt.
        if (x.sign) {
            _a = [y, x], x = _a[0], y = _a[1];
        }
        // x | (-y) == x | ~(y-1) == ~((y-1) &~ x) == -(((y-1) ~& x) + 1)
        var result = JSBI.__absoluteSubOne(y, resultLength);
        result = JSBI.__absoluteAndNot(result, x, result);
        return JSBI.__absoluteAddOne(result, true, result).__trim();
    };
    JSBI.asIntN = function (n, x) {
        if (x.length === 0)
            return x;
        if (n === 0)
            return JSBI.__zero();
        // If {x} has less than {n} bits, return it directly.
        if (n >= JSBI.__kMaxLengthBits)
            return x;
        var neededLength = (n + 31) >>> 5;
        if (x.length < neededLength)
            return x;
        var topDigit = x.__unsignedDigit(neededLength - 1);
        var compareDigit = 1 << ((n - 1) & 31);
        if (x.length === neededLength && topDigit < compareDigit)
            return x;
        // Otherwise truncate and simulate two's complement.
        var hasBit = (topDigit & compareDigit) === compareDigit;
        if (!hasBit)
            return JSBI.__truncateToNBits(n, x);
        if (!x.sign)
            return JSBI.__truncateAndSubFromPowerOfTwo(n, x, true);
        if ((topDigit & (compareDigit - 1)) === 0) {
            for (var i = neededLength - 2; i >= 0; i--) {
                if (x.__digit(i) !== 0) {
                    return JSBI.__truncateAndSubFromPowerOfTwo(n, x, false);
                }
            }
            if (x.length === neededLength && topDigit === compareDigit)
                return x;
            return JSBI.__truncateToNBits(n, x);
        }
        return JSBI.__truncateAndSubFromPowerOfTwo(n, x, false);
    };
    JSBI.asUintN = function (n, x) {
        if (x.length === 0)
            return x;
        if (n === 0)
            return JSBI.__zero();
        // If {x} is negative, simulate two's complement representation.
        if (x.sign) {
            if (n > JSBI.__kMaxLengthBits) {
                throw new RangeError('BigInt too big');
            }
            return JSBI.__truncateAndSubFromPowerOfTwo(n, x, false);
        }
        // If {x} is positive and has up to {n} bits, return it directly.
        if (n >= JSBI.__kMaxLengthBits)
            return x;
        var neededLength = (n + 31) >>> 5;
        if (x.length < neededLength)
            return x;
        var bitsInTopDigit = n & 31;
        if (x.length == neededLength) {
            if (bitsInTopDigit === 0)
                return x;
            var topDigit = x.__digit(neededLength - 1);
            if ((topDigit >>> bitsInTopDigit) === 0)
                return x;
        }
        // Otherwise, truncate.
        return JSBI.__truncateToNBits(n, x);
    };
    // Operators.
    JSBI.ADD = function (x, y) {
        x = JSBI.__toPrimitive(x);
        y = JSBI.__toPrimitive(y);
        if (typeof x === 'string') {
            if (typeof y !== 'string')
                y = y.toString();
            return x + y;
        }
        if (typeof y === 'string') {
            return x.toString() + y;
        }
        x = JSBI.__toNumeric(x);
        y = JSBI.__toNumeric(y);
        if (JSBI.__isBigInt(x) && JSBI.__isBigInt(y)) {
            return JSBI.add(x, y);
        }
        if (typeof x === 'number' && typeof y === 'number') {
            return x + y;
        }
        throw new TypeError('Cannot mix BigInt and other types, use explicit conversions');
    };
    JSBI.LT = function (x, y) {
        return JSBI.__compare(x, y, 0);
    };
    JSBI.LE = function (x, y) {
        return JSBI.__compare(x, y, 1);
    };
    JSBI.GT = function (x, y) {
        return JSBI.__compare(x, y, 2);
    };
    JSBI.GE = function (x, y) {
        return JSBI.__compare(x, y, 3);
    };
    JSBI.EQ = function (x, y) {
        while (true) {
            if (JSBI.__isBigInt(x)) {
                if (JSBI.__isBigInt(y))
                    return JSBI.equal(x, y);
                return JSBI.EQ(y, x);
            }
            else if (typeof x === 'number') {
                if (JSBI.__isBigInt(y))
                    return JSBI.__equalToNumber(y, x);
                if (typeof y !== 'object')
                    return x == y;
                y = JSBI.__toPrimitive(y);
            }
            else if (typeof x === 'string') {
                if (JSBI.__isBigInt(y)) {
                    x = JSBI.__fromString(x);
                    if (x === null)
                        return false;
                    return JSBI.equal(x, y);
                }
                if (typeof y !== 'object')
                    return x == y;
                y = JSBI.__toPrimitive(y);
            }
            else if (typeof x === 'boolean') {
                if (JSBI.__isBigInt(y))
                    return JSBI.__equalToNumber(y, +x);
                if (typeof y !== 'object')
                    return x == y;
                y = JSBI.__toPrimitive(y);
            }
            else if (typeof x === 'symbol') {
                if (JSBI.__isBigInt(y))
                    return false;
                if (typeof y !== 'object')
                    return x == y;
                y = JSBI.__toPrimitive(y);
            }
            else if (typeof x === 'object') {
                if (typeof y === 'object' && y.constructor !== JSBI)
                    return x == y;
                x = JSBI.__toPrimitive(x);
            }
            else {
                return x == y;
            }
        }
    };
    JSBI.NE = function (x, y) {
        return !JSBI.EQ(x, y);
    };
    // Helpers.
    JSBI.__zero = function () {
        return new JSBI(0, false);
    };
    JSBI.__oneDigit = function (value, sign) {
        var result = new JSBI(1, sign);
        result.__setDigit(0, value);
        return result;
    };
    JSBI.prototype.__copy = function () {
        var result = new JSBI(this.length, this.sign);
        for (var i = 0; i < this.length; i++) {
            result[i] = this[i];
        }
        return result;
    };
    JSBI.prototype.__trim = function () {
        var newLength = this.length;
        var last = this[newLength - 1];
        while (last === 0) {
            newLength--;
            last = this[newLength - 1];
            this.pop();
        }
        if (newLength === 0)
            this.sign = false;
        return this;
    };
    JSBI.prototype.__initializeDigits = function () {
        for (var i = 0; i < this.length; i++) {
            this[i] = 0;
        }
    };
    JSBI.__decideRounding = function (x, mantissaBitsUnset, digitIndex, currentDigit) {
        if (mantissaBitsUnset > 0)
            return -1;
        var topUnconsumedBit;
        if (mantissaBitsUnset < 0) {
            topUnconsumedBit = -mantissaBitsUnset - 1;
        }
        else {
            // {currentDigit} fit the mantissa exactly; look at the next digit.
            if (digitIndex === 0)
                return -1;
            digitIndex--;
            currentDigit = x.__digit(digitIndex);
            topUnconsumedBit = 31;
        }
        // If the most significant remaining bit is 0, round down.
        var mask = 1 << topUnconsumedBit;
        if ((currentDigit & mask) === 0)
            return -1;
        // If any other remaining bit is set, round up.
        mask -= 1;
        if ((currentDigit & mask) !== 0)
            return 1;
        while (digitIndex > 0) {
            digitIndex--;
            if (x.__digit(digitIndex) !== 0)
                return 1;
        }
        return 0;
    };
    JSBI.__fromDouble = function (value) {
        var sign = value < 0;
        JSBI.__kBitConversionDouble[0] = value;
        var rawExponent = (JSBI.__kBitConversionInts[1] >>> 20) & 0x7FF;
        var exponent = rawExponent - 0x3FF;
        var digits = (exponent >>> 5) + 1;
        var result = new JSBI(digits, sign);
        var kHiddenBit = 0x00100000;
        var mantissaHigh = (JSBI.__kBitConversionInts[1] & 0xFFFFF) | kHiddenBit;
        var mantissaLow = JSBI.__kBitConversionInts[0];
        var kMantissaHighTopBit = 20;
        // 0-indexed position of most significant bit in most significant digit.
        var msdTopBit = exponent & 31;
        // Number of unused bits in the mantissa. We'll keep them shifted to the
        // left (i.e. most significant part).
        var remainingMantissaBits = 0;
        // Next digit under construction.
        var digit;
        // First, build the MSD by shifting the mantissa appropriately.
        if (msdTopBit < kMantissaHighTopBit) {
            var shift = kMantissaHighTopBit - msdTopBit;
            remainingMantissaBits = shift + 32;
            digit = mantissaHigh >>> shift;
            mantissaHigh = (mantissaHigh << (32 - shift)) |
                (mantissaLow >>> shift);
            mantissaLow = mantissaLow << (32 - shift);
        }
        else if (msdTopBit === kMantissaHighTopBit) {
            remainingMantissaBits = 32;
            digit = mantissaHigh;
            mantissaHigh = mantissaLow;
        }
        else {
            var shift = msdTopBit - kMantissaHighTopBit;
            remainingMantissaBits = 32 - shift;
            digit = (mantissaHigh << shift) | (mantissaLow >>> (32 - shift));
            mantissaHigh = mantissaLow << shift;
        }
        result.__setDigit(digits - 1, digit);
        // Then fill in the rest of the digits.
        for (var digitIndex = digits - 2; digitIndex >= 0; digitIndex--) {
            if (remainingMantissaBits > 0) {
                remainingMantissaBits -= 32;
                digit = mantissaHigh;
                mantissaHigh = mantissaLow;
            }
            else {
                digit = 0;
            }
            result.__setDigit(digitIndex, digit);
        }
        return result.__trim();
    };
    JSBI.__isWhitespace = function (c) {
        if (c <= 0x0D && c >= 0x09)
            return true;
        if (c <= 0x9F)
            return c === 0x20;
        if (c <= 0x01FFFF) {
            return c === 0xA0 || c === 0x1680;
        }
        if (c <= 0x02FFFF) {
            c &= 0x01FFFF;
            return c <= 0x0A || c === 0x28 || c === 0x29 || c === 0x2F ||
                c === 0x5F || c === 0x1000;
        }
        return c === 0xFEFF;
    };
    JSBI.__fromString = function (string, radix) {
        if (radix === void 0) { radix = 0; }
        var sign = 0;
        //This line was found in the source code but never used?
        var leadingZero = false;
        //This line makes the compiler think it was used.
        leadingZero;
        var length = string.length;
        var cursor = 0;
        if (cursor === length)
            return JSBI.__zero();
        var current = string.charCodeAt(cursor);
        // Skip whitespace.
        while (JSBI.__isWhitespace(current)) {
            if (++cursor === length)
                return JSBI.__zero();
            current = string.charCodeAt(cursor);
        }
        // Detect radix.
        if (current === 0x2B) { // '+'
            if (++cursor === length)
                return null;
            current = string.charCodeAt(cursor);
            sign = 1;
        }
        else if (current === 0x2D) { // '-'
            if (++cursor === length)
                return null;
            current = string.charCodeAt(cursor);
            sign = -1;
        }
        if (radix === 0) {
            radix = 10;
            if (current === 0x30) { // '0'
                if (++cursor === length)
                    return JSBI.__zero();
                current = string.charCodeAt(cursor);
                if (current === 0x58 || current === 0x78) { // 'X' or 'x'
                    radix = 16;
                    if (++cursor === length)
                        return null;
                    current = string.charCodeAt(cursor);
                }
                else if (current === 0x4F || current === 0x6F) { // 'O' or 'o'
                    radix = 8;
                    if (++cursor === length)
                        return null;
                    current = string.charCodeAt(cursor);
                }
                else if (current === 0x42 || current === 0x62) { // 'B' or 'b'
                    radix = 2;
                    if (++cursor === length)
                        return null;
                    current = string.charCodeAt(cursor);
                }
                else {
                    leadingZero = true;
                }
            }
        }
        else if (radix === 16) {
            if (current === 0x30) { // '0'
                // Allow "0x" prefix.
                if (++cursor === length)
                    return JSBI.__zero();
                current = string.charCodeAt(cursor);
                if (current === 0x58 || current === 0x78) { // 'X' or 'x'
                    if (++cursor === length)
                        return null;
                    current = string.charCodeAt(cursor);
                }
                else {
                    leadingZero = true;
                }
            }
        }
        // Skip leading zeros.
        while (current === 0x30) {
            leadingZero = true;
            if (++cursor === length)
                return JSBI.__zero();
            current = string.charCodeAt(cursor);
        }
        // Allocate result.
        var chars = length - cursor;
        var bitsPerChar = JSBI.__kMaxBitsPerChar[radix];
        var roundup = JSBI.__kBitsPerCharTableMultiplier - 1;
        if (chars > (1 << 30) / bitsPerChar)
            return null;
        var bitsMin = (bitsPerChar * chars + roundup) >>> JSBI.__kBitsPerCharTableShift;
        var resultLength = (bitsMin + 31) >>> 5;
        var result = new JSBI(resultLength, false);
        // Parse.
        var limDigit = radix < 10 ? radix : 10;
        var limAlpha = radix > 10 ? radix - 10 : 0;
        if ((radix & (radix - 1)) === 0) {
            // Power-of-two radix.
            bitsPerChar >>= JSBI.__kBitsPerCharTableShift;
            var parts = [];
            var partsBits = [];
            var done = false;
            do {
                var part = 0;
                var bits = 0;
                while (true) {
                    var d = void 0;
                    if (((current - 48) >>> 0) < limDigit) {
                        d = current - 48;
                    }
                    else if ((((current | 32) - 97) >>> 0) < limAlpha) {
                        d = (current | 32) - 87;
                    }
                    else {
                        done = true;
                        break;
                    }
                    bits += bitsPerChar;
                    part = (part << bitsPerChar) | d;
                    if (++cursor === length) {
                        done = true;
                        break;
                    }
                    current = string.charCodeAt(cursor);
                    if (bits + bitsPerChar > 32)
                        break;
                }
                parts.push(part);
                partsBits.push(bits);
            } while (!done);
            JSBI.__fillFromParts(result, parts, partsBits);
        }
        else {
            result.__initializeDigits();
            var done = false;
            var charsSoFar = 0;
            do {
                var part = 0;
                var multiplier = 1;
                while (true) {
                    var d = void 0;
                    if (((current - 48) >>> 0) < limDigit) {
                        d = current - 48;
                    }
                    else if ((((current | 32) - 97) >>> 0) < limAlpha) {
                        d = (current | 32) - 87;
                    }
                    else {
                        done = true;
                        break;
                    }
                    var m = multiplier * radix;
                    if (m > 0xFFFFFFFF)
                        break;
                    multiplier = m;
                    part = part * radix + d;
                    charsSoFar++;
                    if (++cursor === length) {
                        done = true;
                        break;
                    }
                    current = string.charCodeAt(cursor);
                }
                roundup = JSBI.__kBitsPerCharTableMultiplier * 32 - 1;
                var digitsSoFar = (bitsPerChar * charsSoFar + roundup) >>>
                    (JSBI.__kBitsPerCharTableShift + 5);
                result.__inplaceMultiplyAdd(multiplier, part, digitsSoFar);
            } while (!done);
        }
        while (cursor !== length) {
            if (!JSBI.__isWhitespace(current))
                return null;
            current = string.charCodeAt(cursor++);
        }
        // Get result.
        if (sign !== 0 && radix !== 10)
            return null;
        result.sign = (sign === -1);
        return result.__trim();
    };
    JSBI.__fillFromParts = function (result, parts, partsBits) {
        var digitIndex = 0;
        var digit = 0;
        var bitsInDigit = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
            var part = parts[i];
            var partBits = partsBits[i];
            digit |= (part << bitsInDigit);
            bitsInDigit += partBits;
            if (bitsInDigit === 32) {
                result.__setDigit(digitIndex++, digit);
                bitsInDigit = 0;
                digit = 0;
            }
            else if (bitsInDigit > 32) {
                result.__setDigit(digitIndex++, digit);
                bitsInDigit -= 32;
                digit = part >>> (partBits - bitsInDigit);
            }
        }
        if (digit !== 0) {
            if (digitIndex >= result.length)
                throw new Error('implementation bug');
            result.__setDigit(digitIndex++, digit);
        }
        for (; digitIndex < result.length; digitIndex++) {
            result.__setDigit(digitIndex, 0);
        }
    };
    JSBI.__toStringBasePowerOfTwo = function (x, radix) {
        var length = x.length;
        var bits = radix - 1;
        bits = ((bits >>> 1) & 0x55) + (bits & 0x55);
        bits = ((bits >>> 2) & 0x33) + (bits & 0x33);
        bits = ((bits >>> 4) & 0x0F) + (bits & 0x0F);
        var bitsPerChar = bits;
        var charMask = radix - 1;
        var msd = x.__digit(length - 1);
        var msdLeadingZeros = Math.clz32(msd);
        var bitLength = length * 32 - msdLeadingZeros;
        var charsRequired = ((bitLength + bitsPerChar - 1) / bitsPerChar) | 0;
        if (x.sign)
            charsRequired++;
        if (charsRequired > (1 << 28))
            throw new Error('string too long');
        var result = new Array(charsRequired);
        var pos = charsRequired - 1;
        var digit = 0;
        var availableBits = 0;
        for (var i = 0; i < length - 1; i++) {
            var newDigit = x.__digit(i);
            var current_1 = (digit | (newDigit << availableBits)) & charMask;
            result[pos--] = JSBI.__kConversionChars[current_1];
            var consumedBits = bitsPerChar - availableBits;
            digit = newDigit >>> consumedBits;
            availableBits = 32 - consumedBits;
            while (availableBits >= bitsPerChar) {
                result[pos--] = JSBI.__kConversionChars[digit & charMask];
                digit >>>= bitsPerChar;
                availableBits -= bitsPerChar;
            }
        }
        var current = (digit | (msd << availableBits)) & charMask;
        result[pos--] = JSBI.__kConversionChars[current];
        digit = msd >>> (bitsPerChar - availableBits);
        while (digit !== 0) {
            result[pos--] = JSBI.__kConversionChars[digit & charMask];
            digit >>>= bitsPerChar;
        }
        if (x.sign)
            result[pos--] = '-';
        if (pos !== -1)
            throw new Error('implementation bug');
        return result.join('');
    };
    JSBI.__toStringGeneric = function (x, radix, isRecursiveCall) {
        var length = x.length;
        if (length === 0)
            return '';
        if (length === 1) {
            var result = x.__unsignedDigit(0).toString(radix);
            if (isRecursiveCall === false && x.sign) {
                result = '-' + result;
            }
            return result;
        }
        var bitLength = length * 32 - Math.clz32(x.__digit(length - 1));
        var maxBitsPerChar = JSBI.__kMaxBitsPerChar[radix];
        var minBitsPerChar = maxBitsPerChar - 1;
        var charsRequired = bitLength * JSBI.__kBitsPerCharTableMultiplier;
        charsRequired += minBitsPerChar - 1;
        charsRequired = (charsRequired / minBitsPerChar) | 0;
        var secondHalfChars = (charsRequired + 1) >> 1;
        // Divide-and-conquer: split by a power of {radix} that's approximately
        // the square root of {x}, then recurse.
        var conqueror = JSBI.exponentiate(JSBI.__oneDigit(radix, false), JSBI.__oneDigit(secondHalfChars, false));
        var quotient;
        var secondHalf;
        var divisor = conqueror.__unsignedDigit(0);
        if (conqueror.length === 1 && divisor <= 0xFFFF) {
            quotient = new JSBI(x.length, false);
            quotient.__initializeDigits();
            var remainder = 0;
            for (var i = x.length * 2 - 1; i >= 0; i--) {
                var input = (remainder << 16) | x.__halfDigit(i);
                quotient.__setHalfDigit(i, (input / divisor) | 0);
                remainder = (input % divisor) | 0;
            }
            secondHalf = remainder.toString(radix);
        }
        else {
            var divisionResult = JSBI.__absoluteDivLarge(x, conqueror, true, true);
            quotient = divisionResult.quotient;
            var remainder = divisionResult.remainder.__trim();
            secondHalf = JSBI.__toStringGeneric(remainder, radix, true);
        }
        quotient.__trim();
        var firstHalf = JSBI.__toStringGeneric(quotient, radix, true);
        while (secondHalf.length < secondHalfChars) {
            secondHalf = '0' + secondHalf;
        }
        if (isRecursiveCall === false && x.sign) {
            firstHalf = '-' + firstHalf;
        }
        return firstHalf + secondHalf;
    };
    JSBI.__unequalSign = function (leftNegative) {
        return leftNegative ? -1 : 1;
    };
    JSBI.__absoluteGreater = function (bothNegative) {
        return bothNegative ? -1 : 1;
    };
    JSBI.__absoluteLess = function (bothNegative) {
        return bothNegative ? 1 : -1;
    };
    JSBI.__compareToBigInt = function (x, y) {
        var xSign = x.sign;
        if (xSign !== y.sign)
            return JSBI.__unequalSign(xSign);
        var result = JSBI.__absoluteCompare(x, y);
        if (result > 0)
            return JSBI.__absoluteGreater(xSign);
        if (result < 0)
            return JSBI.__absoluteLess(xSign);
        return 0;
    };
    JSBI.__compareToNumber = function (x, y) {
        /**
         * @todo Investigate this weird `0 === 0` construct
         */
        if (y | (0 === 0)) {
            var xSign = x.sign;
            var ySign = (y < 0);
            if (xSign !== ySign)
                return JSBI.__unequalSign(xSign);
            if (x.length === 0) {
                if (ySign)
                    throw new Error('implementation bug');
                return y === 0 ? 0 : -1;
            }
            // Any multi-digit BigInt is bigger than an int32.
            if (x.length > 1)
                return JSBI.__absoluteGreater(xSign);
            var yAbs = Math.abs(y);
            var xDigit = x.__unsignedDigit(0);
            if (xDigit > yAbs)
                return JSBI.__absoluteGreater(xSign);
            if (xDigit < yAbs)
                return JSBI.__absoluteLess(xSign);
            return 0;
        }
        return JSBI.__compareToDouble(x, y);
    };
    /**
     * @returns NaN|-1|1|0
     *
     * + NaN    : `y` was `NaN`
     * + -1     : `x < y`
     * + +1     : `x > y`
     * +  0     : `x == y`
     */
    JSBI.__compareToDouble = function (x, y) {
        if (y !== y)
            return y; // NaN.
        if (y === Infinity)
            return -1;
        if (y === -Infinity)
            return 1;
        var xSign = x.sign;
        var ySign = (y < 0);
        if (xSign !== ySign)
            return JSBI.__unequalSign(xSign);
        if (y === 0) {
            throw new Error('implementation bug: should be handled elsewhere');
        }
        if (x.length === 0)
            return -1;
        JSBI.__kBitConversionDouble[0] = y;
        var rawExponent = (JSBI.__kBitConversionInts[1] >>> 20) & 0x7FF;
        if (rawExponent === 0x7FF) {
            throw new Error('implementation bug: handled elsewhere');
        }
        var exponent = rawExponent - 0x3FF;
        if (exponent < 0) {
            // The absolute value of y is less than 1. Only 0n has an absolute
            // value smaller than that, but we've already covered that case.
            return JSBI.__absoluteGreater(xSign);
        }
        var xLength = x.length;
        var xMsd = x.__digit(xLength - 1);
        var msdLeadingZeros = Math.clz32(xMsd);
        var xBitLength = xLength * 32 - msdLeadingZeros;
        var yBitLength = exponent + 1;
        if (xBitLength < yBitLength)
            return JSBI.__absoluteLess(xSign);
        if (xBitLength > yBitLength)
            return JSBI.__absoluteGreater(xSign);
        // Same sign, same bit length. Shift mantissa to align with x and compare
        // bit for bit.
        var kHiddenBit = 0x00100000;
        var mantissaHigh = (JSBI.__kBitConversionInts[1] & 0xFFFFF) | kHiddenBit;
        var mantissaLow = JSBI.__kBitConversionInts[0];
        var kMantissaHighTopBit = 20;
        var msdTopBit = 31 - msdLeadingZeros;
        if (msdTopBit !== ((xBitLength - 1) % 31)) {
            throw new Error('implementation bug');
        }
        var compareMantissa; // Shifted chunk of mantissa.
        var remainingMantissaBits = 0;
        // First, compare most significant digit against beginning of mantissa.
        if (msdTopBit < kMantissaHighTopBit) {
            var shift = kMantissaHighTopBit - msdTopBit;
            remainingMantissaBits = shift + 32;
            compareMantissa = mantissaHigh >>> shift;
            mantissaHigh = (mantissaHigh << (32 - shift)) | (mantissaLow >>> shift);
            mantissaLow = mantissaLow << (32 - shift);
        }
        else if (msdTopBit === kMantissaHighTopBit) {
            remainingMantissaBits = 32;
            compareMantissa = mantissaHigh;
            mantissaHigh = mantissaLow;
        }
        else {
            var shift = msdTopBit - kMantissaHighTopBit;
            remainingMantissaBits = 32 - shift;
            compareMantissa =
                (mantissaHigh << shift) | (mantissaLow >>> (32 - shift));
            mantissaHigh = mantissaLow << shift;
        }
        xMsd = xMsd >>> 0;
        compareMantissa = compareMantissa >>> 0;
        if (xMsd > compareMantissa)
            return JSBI.__absoluteGreater(xSign);
        if (xMsd < compareMantissa)
            return JSBI.__absoluteLess(xSign);
        // Then, compare additional digits against remaining mantissa bits.
        for (var digitIndex = xLength - 2; digitIndex >= 0; digitIndex--) {
            if (remainingMantissaBits > 0) {
                remainingMantissaBits -= 32;
                compareMantissa = mantissaHigh >>> 0;
                mantissaHigh = mantissaLow;
                mantissaLow = 0;
            }
            else {
                compareMantissa = 0;
            }
            var digit = x.__unsignedDigit(digitIndex);
            if (digit > compareMantissa)
                return JSBI.__absoluteGreater(xSign);
            if (digit < compareMantissa)
                return JSBI.__absoluteLess(xSign);
        }
        // Integer parts are equal; check whether {y} has a fractional part.
        if (mantissaHigh !== 0 || mantissaLow !== 0) {
            if (remainingMantissaBits === 0)
                throw new Error('implementation bug');
            return JSBI.__absoluteLess(xSign);
        }
        return 0;
    };
    JSBI.__equalToNumber = function (x, y) {
        if (y | (0 === y)) {
            if (y === 0)
                return x.length === 0;
            // Any multi-digit BigInt is bigger than an int32.
            return (x.length === 1) && (x.sign === (y < 0)) &&
                (x.__unsignedDigit(0) === Math.abs(y));
        }
        return JSBI.__compareToDouble(x, y) === 0;
    };
    // Comparison operations, chosen such that "op ^ 2" reverses direction:
    // 0 - lessThan
    // 1 - lessThanOrEqual
    // 2 - greaterThan
    // 3 - greaterThanOrEqual
    JSBI.__comparisonResultToBool = function (result, op) {
        switch (op) {
            case 0: return result < 0;
            case 1: return result <= 0;
            case 2: return result > 0;
            case 3: return result >= 0;
        }
        throw new Error('unreachable');
    };
    JSBI.__compare = function (x, y, op) {
        x = JSBI.__toPrimitive(x);
        y = JSBI.__toPrimitive(y);
        if (typeof x === 'string' && typeof y === 'string') {
            switch (op) {
                case 0: return x < y;
                case 1: return x <= y;
                case 2: return x > y;
                case 3: return x >= y;
            }
        }
        if (JSBI.__isBigInt(x) && typeof y === 'string') {
            y = JSBI.__fromString(y);
            if (y === null)
                return false;
            return JSBI.__comparisonResultToBool(JSBI.__compareToBigInt(x, y), op);
        }
        if (typeof x === 'string' && JSBI.__isBigInt(y)) {
            x = JSBI.__fromString(x);
            if (x === null)
                return false;
            return JSBI.__comparisonResultToBool(JSBI.__compareToBigInt(x, y), op);
        }
        if (x == null || y == null) {
            throw new Error("x and y should not be null");
        }
        x = JSBI.__toNumeric(x);
        y = JSBI.__toNumeric(y);
        if (JSBI.__isBigInt(x)) {
            if (JSBI.__isBigInt(y)) {
                return JSBI.__comparisonResultToBool(JSBI.__compareToBigInt(x, y), op);
            }
            if (typeof y !== 'number')
                throw new Error('implementation bug');
            return JSBI.__comparisonResultToBool(JSBI.__compareToNumber(x, y), op);
        }
        if (typeof x !== 'number')
            throw new Error('implementation bug');
        if (JSBI.__isBigInt(y)) {
            // Note that "op ^ 2" reverses the op's direction.
            return JSBI.__comparisonResultToBool(JSBI.__compareToNumber(y, x), (op ^ 2));
        }
        if (typeof y !== 'number')
            throw new Error('implementation bug');
        switch (op) {
            case 0: return x < y;
            case 1: return x <= y;
            case 2: return x > y;
            case 3: return x >= y;
        }
    };
    JSBI.prototype.__clzmsd = function () {
        return Math.clz32(this[this.length - 1]);
    };
    JSBI.__absoluteAdd = function (x, y, resultSign) {
        if (x.length < y.length)
            return JSBI.__absoluteAdd(y, x, resultSign);
        if (x.length === 0)
            return x;
        if (y.length === 0)
            return x.sign === resultSign ? x : JSBI.unaryMinus(x);
        var resultLength = x.length;
        if (x.__clzmsd() === 0 || (y.length === x.length && y.__clzmsd() === 0)) {
            resultLength++;
        }
        var result = new JSBI(resultLength, resultSign);
        var carry = 0;
        var i = 0;
        for (; i < y.length; i++) {
            var yDigit = y.__digit(i);
            var xDigit = x.__digit(i);
            var rLow = (xDigit & 0xFFFF) + (yDigit & 0xFFFF) + carry;
            var rHigh = (xDigit >>> 16) + (yDigit >>> 16) + (rLow >>> 16);
            carry = rHigh >>> 16;
            result.__setDigit(i, (rLow & 0xFFFF) | (rHigh << 16));
        }
        for (; i < x.length; i++) {
            var xDigit = x.__digit(i);
            var rLow = (xDigit & 0xFFFF) + carry;
            var rHigh = (xDigit >>> 16) + (rLow >>> 16);
            carry = rHigh >>> 16;
            result.__setDigit(i, (rLow & 0xFFFF) | (rHigh << 16));
        }
        if (i < result.length) {
            result.__setDigit(i, carry);
        }
        return result.__trim();
    };
    JSBI.__absoluteSub = function (x, y, resultSign) {
        if (x.length === 0)
            return x;
        if (y.length === 0)
            return x.sign === resultSign ? x : JSBI.unaryMinus(x);
        var result = new JSBI(x.length, resultSign);
        var borrow = 0;
        var i = 0;
        for (; i < y.length; i++) {
            var xDigit = x.__digit(i);
            var yDigit = y.__digit(i);
            var rLow = (xDigit & 0xFFFF) - (yDigit & 0xFFFF) - borrow;
            borrow = (rLow >>> 16) & 1;
            var rHigh = (xDigit >>> 16) - (yDigit >>> 16) - borrow;
            borrow = (rHigh >>> 16) & 1;
            result.__setDigit(i, (rLow & 0xFFFF) | (rHigh << 16));
        }
        for (; i < x.length; i++) {
            var xDigit = x.__digit(i);
            var rLow = (xDigit & 0xFFFF) - borrow;
            borrow = (rLow >>> 16) & 1;
            var rHigh = (xDigit >>> 16) - borrow;
            borrow = (rHigh >>> 16) & 1;
            result.__setDigit(i, (rLow & 0xFFFF) | (rHigh << 16));
        }
        return result.__trim();
    };
    JSBI.__absoluteAddOne = function (x, sign, result) {
        if (result === void 0) { result = null; }
        var inputLength = x.length;
        if (result === null) {
            result = new JSBI(inputLength, sign);
        }
        else {
            result.sign = sign;
        }
        var carry = true;
        for (var i = 0; i < inputLength; i++) {
            var digit = x.__digit(i);
            var newCarry = digit === (0xFFFFFFFF | 0);
            if (carry)
                digit = (digit + 1) | 0;
            carry = newCarry;
            result.__setDigit(i, digit);
        }
        if (carry) {
            result.__setDigitGrow(inputLength, 1);
        }
        return result;
    };
    JSBI.__absoluteSubOne = function (x, resultLength) {
        var length = x.length;
        resultLength = resultLength || length;
        var result = new JSBI(resultLength, false);
        var borrow = true;
        for (var i = 0; i < length; i++) {
            var digit = x.__digit(i);
            var newBorrow = digit === 0;
            if (borrow)
                digit = (digit - 1) | 0;
            borrow = newBorrow;
            result.__setDigit(i, digit);
        }
        for (var i = length; i < resultLength; i++) {
            result.__setDigit(i, 0);
        }
        return result;
    };
    JSBI.__absoluteAnd = function (x, y, result) {
        if (result === void 0) { result = null; }
        var xLength = x.length;
        var yLength = y.length;
        var numPairs = yLength;
        if (xLength < yLength) {
            numPairs = xLength;
            var tmp = x;
            var tmpLength = xLength;
            x = y;
            xLength = yLength;
            y = tmp;
            yLength = tmpLength;
        }
        var resultLength = numPairs;
        if (result === null) {
            result = new JSBI(resultLength, false);
        }
        else {
            resultLength = result.length;
        }
        var i = 0;
        for (; i < numPairs; i++) {
            result.__setDigit(i, x.__digit(i) & y.__digit(i));
        }
        for (; i < resultLength; i++) {
            result.__setDigit(i, 0);
        }
        return result;
    };
    JSBI.__absoluteAndNot = function (x, y, result) {
        if (result === void 0) { result = null; }
        var xLength = x.length;
        var yLength = y.length;
        var numPairs = yLength;
        if (xLength < yLength) {
            numPairs = xLength;
        }
        var resultLength = xLength;
        if (result === null) {
            result = new JSBI(resultLength, false);
        }
        else {
            resultLength = result.length;
        }
        var i = 0;
        for (; i < numPairs; i++) {
            result.__setDigit(i, x.__digit(i) & ~y.__digit(i));
        }
        for (; i < xLength; i++) {
            result.__setDigit(i, x.__digit(i));
        }
        for (; i < resultLength; i++) {
            result.__setDigit(i, 0);
        }
        return result;
    };
    JSBI.__absoluteOr = function (x, y, result) {
        if (result === void 0) { result = null; }
        var xLength = x.length;
        var yLength = y.length;
        var numPairs = yLength;
        if (xLength < yLength) {
            numPairs = xLength;
            var tmp = x;
            var tmpLength = xLength;
            x = y;
            xLength = yLength;
            y = tmp;
            yLength = tmpLength;
        }
        var resultLength = xLength;
        if (result === null) {
            result = new JSBI(resultLength, false);
        }
        else {
            resultLength = result.length;
        }
        var i = 0;
        for (; i < numPairs; i++) {
            result.__setDigit(i, x.__digit(i) | y.__digit(i));
        }
        for (; i < xLength; i++) {
            result.__setDigit(i, x.__digit(i));
        }
        for (; i < resultLength; i++) {
            result.__setDigit(i, 0);
        }
        return result;
    };
    JSBI.__absoluteXor = function (x, y, result) {
        if (result === void 0) { result = null; }
        var xLength = x.length;
        var yLength = y.length;
        var numPairs = yLength;
        if (xLength < yLength) {
            numPairs = xLength;
            var tmp = x;
            var tmpLength = xLength;
            x = y;
            xLength = yLength;
            y = tmp;
            yLength = tmpLength;
        }
        var resultLength = xLength;
        if (result === null) {
            result = new JSBI(resultLength, false);
        }
        else {
            resultLength = result.length;
        }
        var i = 0;
        for (; i < numPairs; i++) {
            result.__setDigit(i, x.__digit(i) ^ y.__digit(i));
        }
        for (; i < xLength; i++) {
            result.__setDigit(i, x.__digit(i));
        }
        for (; i < resultLength; i++) {
            result.__setDigit(i, 0);
        }
        return result;
    };
    JSBI.__absoluteCompare = function (x, y) {
        var diff = x.length - y.length;
        if (diff !== 0)
            return diff;
        var i = x.length - 1;
        while (i >= 0 && x.__digit(i) === y.__digit(i))
            i--;
        if (i < 0)
            return 0;
        return x.__unsignedDigit(i) > y.__unsignedDigit(i) ? 1 : -1;
    };
    JSBI.__multiplyAccumulate = function (multiplicand, multiplier, accumulator, accumulatorIndex) {
        if (multiplier === 0)
            return;
        var m2Low = multiplier & 0xFFFF;
        var m2High = multiplier >>> 16;
        var carry = 0;
        var highLower = 0;
        var highHigher = 0;
        for (var i = 0; i < multiplicand.length; i++, accumulatorIndex++) {
            var acc = accumulator.__digit(accumulatorIndex);
            var accLow = acc & 0xFFFF;
            var accHigh = acc >>> 16;
            var m1 = multiplicand.__digit(i);
            var m1Low = m1 & 0xFFFF;
            var m1High = m1 >>> 16;
            var rLow = Math.imul(m1Low, m2Low);
            var rMid1 = Math.imul(m1Low, m2High);
            var rMid2 = Math.imul(m1High, m2Low);
            var rHigh = Math.imul(m1High, m2High);
            accLow += highLower + (rLow & 0xFFFF);
            accHigh += highHigher + carry + (accLow >>> 16) + (rLow >>> 16) +
                (rMid1 & 0xFFFF) + (rMid2 & 0xFFFF);
            carry = accHigh >>> 16;
            highLower = (rMid1 >>> 16) + (rMid2 >>> 16) + (rHigh & 0xFFFF) + carry;
            carry = highLower >>> 16;
            highLower &= 0xFFFF;
            highHigher = rHigh >>> 16;
            acc = (accLow & 0xFFFF) | (accHigh << 16);
            accumulator.__setDigit(accumulatorIndex, acc);
        }
        for (; carry !== 0 || highLower !== 0 || highHigher !== 0; accumulatorIndex++) {
            var acc = accumulator.__digit(accumulatorIndex);
            var accLow = (acc & 0xFFFF) + highLower;
            var accHigh = (acc >>> 16) + (accLow >>> 16) + highHigher + carry;
            highLower = 0;
            highHigher = 0;
            carry = accHigh >>> 16;
            acc = (accLow & 0xFFFF) | (accHigh << 16);
            accumulator.__setDigit(accumulatorIndex, acc);
        }
    };
    JSBI.__internalMultiplyAdd = function (source, factor, summand, n, result) {
        var carry = summand;
        var high = 0;
        for (var i = 0; i < n; i++) {
            var digit = source.__digit(i);
            var rx = Math.imul(digit & 0xFFFF, factor);
            var r0 = (rx & 0xFFFF) + high + carry;
            carry = r0 >>> 16;
            var ry = Math.imul(digit >>> 16, factor);
            var r16 = (ry & 0xFFFF) + (rx >>> 16) + carry;
            carry = r16 >>> 16;
            high = ry >>> 16;
            result.__setDigit(i, (r16 << 16) | (r0 & 0xFFFF));
        }
        if (result.length > n) {
            result.__setDigit(n++, carry + high);
            while (n < result.length) {
                result.__setDigit(n++, 0);
            }
        }
        else {
            if (carry + high !== 0)
                throw new Error('implementation bug');
        }
    };
    JSBI.prototype.__inplaceMultiplyAdd = function (multiplier, summand, length) {
        if (length > this.length)
            length = this.length;
        var mLow = multiplier & 0xFFFF;
        var mHigh = multiplier >>> 16;
        var carry = 0;
        var highLower = summand & 0xFFFF;
        var highHigher = summand >>> 16;
        for (var i = 0; i < length; i++) {
            var d = this.__digit(i);
            var dLow = d & 0xFFFF;
            var dHigh = d >>> 16;
            var pLow = Math.imul(dLow, mLow);
            var pMid1 = Math.imul(dLow, mHigh);
            var pMid2 = Math.imul(dHigh, mLow);
            var pHigh = Math.imul(dHigh, mHigh);
            var rLow = highLower + (pLow & 0xFFFF);
            var rHigh = highHigher + carry + (rLow >>> 16) + (pLow >>> 16) +
                (pMid1 & 0xFFFF) + (pMid2 & 0xFFFF);
            highLower = (pMid1 >>> 16) + (pMid2 >>> 16) + (pHigh & 0xFFFF) +
                (rHigh >>> 16);
            carry = highLower >>> 16;
            highLower &= 0xFFFF;
            highHigher = pHigh >>> 16;
            var result = (rLow & 0xFFFF) | (rHigh << 16);
            this.__setDigit(i, result);
        }
        if (carry !== 0 || highLower !== 0 || highHigher !== 0) {
            throw new Error('implementation bug');
        }
    };
    JSBI.__absoluteDivSmall = function (x, divisor, quotient) {
        if (quotient === null)
            quotient = new JSBI(x.length, false);
        var remainder = 0;
        for (var i = x.length * 2 - 1; i >= 0; i -= 2) {
            var input = ((remainder << 16) | x.__halfDigit(i)) >>> 0;
            var upperHalf = (input / divisor) | 0;
            remainder = (input % divisor) | 0;
            input = ((remainder << 16) | x.__halfDigit(i - 1)) >>> 0;
            var lowerHalf = (input / divisor) | 0;
            remainder = (input % divisor) | 0;
            quotient.__setDigit(i >>> 1, (upperHalf << 16) | lowerHalf);
        }
        return quotient;
    };
    JSBI.__absoluteModSmall = function (x, divisor) {
        var remainder = 0;
        for (var i = x.length * 2 - 1; i >= 0; i--) {
            var input = ((remainder << 16) | x.__halfDigit(i)) >>> 0;
            remainder = (input % divisor) | 0;
        }
        return remainder;
    };
    JSBI.__absoluteDivLarge = function (dividend, divisor, wantQuotient, wantRemainder) {
        var n = divisor.__halfDigitLength();
        var n2 = divisor.length;
        var m = dividend.__halfDigitLength() - n;
        var q = null;
        if (wantQuotient) {
            q = new JSBI((m + 2) >>> 1, false);
            q.__initializeDigits();
        }
        var qhatv = new JSBI((n + 2) >>> 1, false);
        qhatv.__initializeDigits();
        // D1.
        var shift = JSBI.__clz16(divisor.__halfDigit(n - 1));
        if (shift > 0) {
            divisor = JSBI.__specialLeftShift(divisor, shift, 0 /* add no digits*/);
        }
        var u = JSBI.__specialLeftShift(dividend, shift, 1 /* add one digit */);
        // D2.
        var vn1 = divisor.__halfDigit(n - 1);
        var halfDigitBuffer = 0;
        for (var j = m; j >= 0; j--) {
            // D3.
            var qhat = 0xFFFF;
            var ujn = u.__halfDigit(j + n);
            if (ujn !== vn1) {
                var input = ((ujn << 16) | u.__halfDigit(j + n - 1)) >>> 0;
                qhat = (input / vn1) | 0;
                var rhat = (input % vn1) | 0;
                var vn2 = divisor.__halfDigit(n - 2);
                var ujn2 = u.__halfDigit(j + n - 2);
                while ((Math.imul(qhat, vn2) >>> 0) > (((rhat << 16) | ujn2) >>> 0)) {
                    qhat--;
                    rhat += vn1;
                    if (rhat > 0xFFFF)
                        break;
                }
            }
            // D4.
            JSBI.__internalMultiplyAdd(divisor, qhat, 0, n2, qhatv);
            var c = u.__inplaceSub(qhatv, j, n + 1);
            if (c !== 0) {
                c = u.__inplaceAdd(divisor, j, n);
                u.__setHalfDigit(j + n, u.__halfDigit(j + n) + c);
                qhat--;
            }
            if (wantQuotient && q != null) {
                if (j & 1) {
                    halfDigitBuffer = qhat << 16;
                }
                else {
                    q.__setDigit(j >>> 1, halfDigitBuffer | qhat);
                }
            }
        }
        if (wantRemainder) {
            u.__inplaceRightShift(shift);
            if (wantQuotient && q != null) {
                return { quotient: q, remainder: u };
            }
            return u;
        }
        if (wantQuotient && q != null)
            return q;
        throw new Error("Either wantQuotient or wantRemainder must be set");
    };
    JSBI.__clz16 = function (value) {
        return Math.clz32(value) - 16;
    };
    // TODO: work on full digits, like __inplaceSub?
    JSBI.prototype.__inplaceAdd = function (summand, startIndex, halfDigits) {
        var carry = 0;
        for (var i = 0; i < halfDigits; i++) {
            var sum = this.__halfDigit(startIndex + i) +
                summand.__halfDigit(i) +
                carry;
            carry = sum >>> 16;
            this.__setHalfDigit(startIndex + i, sum);
        }
        return carry;
    };
    JSBI.prototype.__inplaceSub = function (subtrahend, startIndex, halfDigits) {
        var fullSteps = (halfDigits - 1) >>> 1;
        var borrow = 0;
        if (startIndex & 1) {
            // this:   [..][..][..]
            // subtr.:   [..][..]
            startIndex >>= 1;
            var current = this.__digit(startIndex);
            var r0 = current & 0xFFFF;
            var i = 0;
            for (; i < fullSteps; i++) {
                var sub_1 = subtrahend.__digit(i);
                var r16_1 = (current >>> 16) - (sub_1 & 0xFFFF) - borrow;
                borrow = (r16_1 >>> 16) & 1;
                this.__setDigit(startIndex + i, (r16_1 << 16) | (r0 & 0xFFFF));
                current = this.__digit(startIndex + i + 1);
                r0 = (current & 0xFFFF) - (sub_1 >>> 16) - borrow;
                borrow = (r0 >>> 16) & 1;
            }
            // Unrolling the last iteration gives a 5% performance benefit!
            var sub = subtrahend.__digit(i);
            var r16 = (current >>> 16) - (sub & 0xFFFF) - borrow;
            borrow = (r16 >>> 16) & 1;
            this.__setDigit(startIndex + i, (r16 << 16) | (r0 & 0xFFFF));
            var subTop = sub >>> 16;
            if (startIndex + i + 1 >= this.length) {
                throw new RangeError('out of bounds');
            }
            if ((halfDigits & 1) === 0) {
                current = this.__digit(startIndex + i + 1);
                r0 = (current & 0xFFFF) - subTop - borrow;
                borrow = (r0 >>> 16) & 1;
                this.__setDigit(startIndex + subtrahend.length, (current & 0xFFFF0000) | (r0 & 0xFFFF));
            }
        }
        else {
            startIndex >>= 1;
            var i = 0;
            for (; i < subtrahend.length - 1; i++) {
                var current_2 = this.__digit(startIndex + i);
                var sub_2 = subtrahend.__digit(i);
                var r0_1 = (current_2 & 0xFFFF) - (sub_2 & 0xFFFF) - borrow;
                borrow = (r0_1 >>> 16) & 1;
                var r16_2 = (current_2 >>> 16) - (sub_2 >>> 16) - borrow;
                borrow = (r16_2 >>> 16) & 1;
                this.__setDigit(startIndex + i, (r16_2 << 16) | (r0_1 & 0xFFFF));
            }
            var current = this.__digit(startIndex + i);
            var sub = subtrahend.__digit(i);
            var r0 = (current & 0xFFFF) - (sub & 0xFFFF) - borrow;
            borrow = (r0 >>> 16) & 1;
            var r16 = 0;
            if ((halfDigits & 1) === 0) {
                r16 = (current >>> 16) - (sub >>> 16) - borrow;
                borrow = (r16 >>> 16) & 1;
            }
            this.__setDigit(startIndex + i, (r16 << 16) | (r0 & 0xFFFF));
        }
        return borrow;
    };
    JSBI.prototype.__inplaceRightShift = function (shift) {
        if (shift === 0)
            return;
        var carry = this.__digit(0) >>> shift;
        var last = this.length - 1;
        for (var i = 0; i < last; i++) {
            var d = this.__digit(i + 1);
            this.__setDigit(i, (d << (32 - shift)) | carry);
            carry = d >>> shift;
        }
        this.__setDigit(last, carry);
    };
    JSBI.__specialLeftShift = function (x, shift, addDigit) {
        var n = x.length;
        var resultLength = n + addDigit;
        var result = new JSBI(resultLength, false);
        if (shift === 0) {
            for (var i = 0; i < n; i++)
                result.__setDigit(i, x.__digit(i));
            if (addDigit > 0)
                result.__setDigit(n, 0);
            return result;
        }
        var carry = 0;
        for (var i = 0; i < n; i++) {
            var d = x.__digit(i);
            result.__setDigit(i, (d << shift) | carry);
            carry = d >>> (32 - shift);
        }
        if (addDigit > 0) {
            result.__setDigit(n, carry);
        }
        return result;
    };
    JSBI.__leftShiftByAbsolute = function (x, y) {
        var shift = JSBI.__toShiftAmount(y);
        if (shift < 0)
            throw new RangeError('BigInt too big');
        var digitShift = shift >>> 5;
        var bitsShift = shift & 31;
        var length = x.length;
        var grow = bitsShift !== 0 &&
            (x.__digit(length - 1) >>> (32 - bitsShift)) !== 0;
        var resultLength = length + digitShift + (grow ? 1 : 0);
        var result = new JSBI(resultLength, x.sign);
        if (bitsShift === 0) {
            var i = 0;
            for (; i < digitShift; i++)
                result.__setDigit(i, 0);
            for (; i < resultLength; i++) {
                result.__setDigit(i, x.__digit(i - digitShift));
            }
        }
        else {
            var carry = 0;
            for (var i = 0; i < digitShift; i++)
                result.__setDigit(i, 0);
            for (var i = 0; i < length; i++) {
                var d = x.__digit(i);
                result.__setDigit(i + digitShift, (d << bitsShift) | carry);
                carry = d >>> (32 - bitsShift);
            }
            if (grow) {
                result.__setDigit(length + digitShift, carry);
            }
            else {
                if (carry !== 0)
                    throw new Error('implementation bug');
            }
        }
        return result.__trim();
    };
    JSBI.__rightShiftByAbsolute = function (x, y) {
        var length = x.length;
        var sign = x.sign;
        var shift = JSBI.__toShiftAmount(y);
        if (shift < 0)
            return JSBI.__rightShiftByMaximum(sign);
        var digitShift = shift >>> 5;
        var bitsShift = shift & 31;
        var resultLength = length - digitShift;
        if (resultLength <= 0)
            return JSBI.__rightShiftByMaximum(sign);
        // For negative numbers, round down if any bit was shifted out (so that
        // e.g. -5n >> 1n == -3n and not -2n). Check now whether this will happen
        // and whether itc an cause overflow into a new digit. If we allocate the
        // result large enough up front, it avoids having to do grow it later.
        var mustRoundDown = false;
        if (sign) {
            var mask = (1 << bitsShift) - 1;
            if ((x.__digit(digitShift) & mask) !== 0) {
                mustRoundDown = true;
            }
            else {
                for (var i = 0; i < digitShift; i++) {
                    if (x.__digit(i) !== 0) {
                        mustRoundDown = true;
                        break;
                    }
                }
            }
        }
        // If bitsShift is non-zero, it frees up bits, preventing overflow.
        if (mustRoundDown && bitsShift === 0) {
            // Overflow cannot happen if the most significant digit has unset bits.
            var msd = x.__digit(length - 1);
            var roundingCanOverflow = ~msd === 0;
            if (roundingCanOverflow)
                resultLength++;
        }
        var result = new JSBI(resultLength, sign);
        if (bitsShift === 0) {
            for (var i = digitShift; i < length; i++) {
                result.__setDigit(i - digitShift, x.__digit(i));
            }
        }
        else {
            var carry = x.__digit(digitShift) >>> bitsShift;
            var last = length - digitShift - 1;
            for (var i = 0; i < last; i++) {
                var d = x.__digit(i + digitShift + 1);
                result.__setDigit(i, (d << (32 - bitsShift)) | carry);
                carry = d >>> bitsShift;
            }
            result.__setDigit(last, carry);
        }
        if (mustRoundDown) {
            // Since the result is negative, rounding down means adding one to its
            // absolute value. This cannot overflow.
            result = JSBI.__absoluteAddOne(result, true, result);
        }
        return result.__trim();
    };
    JSBI.__rightShiftByMaximum = function (sign) {
        if (sign) {
            return JSBI.__oneDigit(1, true);
        }
        return JSBI.__zero();
    };
    JSBI.__toShiftAmount = function (x) {
        if (x.length > 1)
            return -1;
        var value = x.__unsignedDigit(0);
        if (value > JSBI.__kMaxLengthBits)
            return -1;
        return value;
    };
    JSBI.__toPrimitive = function (obj, hint) {
        if (hint === void 0) { hint = 'default'; }
        if (typeof obj !== 'object')
            return obj;
        if (obj.constructor === JSBI)
            return obj;
        var exoticToPrim = Symbol.toPrimitive == undefined ? undefined : obj[Symbol.toPrimitive];
        if (exoticToPrim) {
            var primitive = exoticToPrim(hint);
            if (typeof primitive !== 'object')
                return primitive;
            throw new TypeError('Cannot convert object to primitive value');
        }
        var valueOf = obj.valueOf;
        if (valueOf) {
            var primitive = valueOf.call(obj);
            if (typeof primitive !== 'object')
                return primitive;
        }
        var toString = obj.toString;
        if (toString) {
            var primitive = toString.call(obj);
            if (typeof primitive !== 'object')
                return primitive;
        }
        throw new TypeError('Cannot convert object to primitive value');
    };
    JSBI.__toNumeric = function (value) {
        if (JSBI.__isBigInt(value))
            return value;
        return +value;
    };
    JSBI.__isBigInt = function (value) {
        return typeof value === 'object' && value.constructor === JSBI;
    };
    JSBI.__truncateToNBits = function (n, x) {
        var neededDigits = (n + 31) >>> 5;
        var result = new JSBI(neededDigits, x.sign);
        var last = neededDigits - 1;
        for (var i = 0; i < last; i++) {
            result.__setDigit(i, x.__digit(i));
        }
        var msd = x.__digit(last);
        if ((n & 31) !== 0) {
            var drop = 32 - (n & 31);
            msd = (msd << drop) >>> drop;
        }
        result.__setDigit(last, msd);
        return result.__trim();
    };
    JSBI.__truncateAndSubFromPowerOfTwo = function (n, x, resultSign) {
        var neededDigits = (n + 31) >>> 5;
        var result = new JSBI(neededDigits, resultSign);
        var i = 0;
        var last = neededDigits - 1;
        var borrow = 0;
        var limit = Math.min(last, x.length);
        for (; i < limit; i++) {
            var xDigit = x.__digit(i);
            var rLow = 0 - (xDigit & 0xFFFF) - borrow;
            borrow = (rLow >>> 16) & 1;
            var rHigh = 0 - (xDigit >>> 16) - borrow;
            borrow = (rHigh >>> 16) & 1;
            result.__setDigit(i, (rLow & 0xFFFF) | (rHigh << 16));
        }
        for (; i < last; i++) {
            result.__setDigit(i, (-borrow) | 0);
        }
        var msd = last < x.length ? x.__digit(last) : 0;
        var msdBitsConsumed = n & 31;
        var resultMsd;
        if (msdBitsConsumed === 0) {
            var rLow = 0 - (msd & 0xFFFF) - borrow;
            borrow = (rLow >>> 16) & 1;
            var rHigh = 0 - (msd >>> 16) - borrow;
            resultMsd = (rLow & 0xFFFF) | (rHigh << 16);
        }
        else {
            var drop = 32 - msdBitsConsumed;
            msd = (msd << drop) >>> drop;
            var minuendMsd = 1 << (32 - drop);
            var rLow = (minuendMsd & 0xFFFF) - (msd & 0xFFFF) - borrow;
            borrow = (rLow >>> 16) & 1;
            var rHigh = (minuendMsd >>> 16) - (msd >>> 16) - borrow;
            resultMsd = (rLow & 0xFFFF) | (rHigh << 16);
            resultMsd &= (minuendMsd - 1);
        }
        result.__setDigit(last, resultMsd);
        return result.__trim();
    };
    // Digit helpers.
    JSBI.prototype.__digit = function (i) {
        return this[i];
    };
    JSBI.prototype.__unsignedDigit = function (i) {
        return this[i] >>> 0;
    };
    JSBI.prototype.__setDigit = function (i, digit) {
        this[i] = digit | 0;
    };
    JSBI.prototype.__setDigitGrow = function (i, digit) {
        this[i] = digit | 0;
    };
    JSBI.prototype.__halfDigitLength = function () {
        var len = this.length;
        if (this.__unsignedDigit(len - 1) <= 0xFFFF)
            return len * 2 - 1;
        return len * 2;
    };
    JSBI.prototype.__halfDigit = function (i) {
        return (this[i >>> 1] >>> ((i & 1) << 4)) & 0xFFFF;
    };
    JSBI.prototype.__setHalfDigit = function (i, value) {
        var digitIndex = i >>> 1;
        var previous = this.__digit(digitIndex);
        var updated = (i & 1) ? (previous & 0xFFFF) | (value << 16)
            : (previous & 0xFFFF0000) | (value & 0xFFFF);
        this.__setDigit(digitIndex, updated);
    };
    JSBI.__digitPow = function (base, exponent) {
        var result = 1;
        while (exponent > 0) {
            if (exponent & 1)
                result *= base;
            exponent >>>= 1;
            base *= base;
        }
        return result;
    };
    JSBI.__kMaxLength = 1 << 25;
    JSBI.__kMaxLengthBits = JSBI.__kMaxLength << 5;
    // Lookup table for the maximum number of bits required per character of a
    // base-N string representation of a number. To increase accuracy, the array
    // value is the actual value multiplied by 32. To generate this table:
    //
    // for (let i = 0; i <= 36; i++) {
    //   console.log(Math.ceil(Math.log2(i) * 32) + ',');
    // }
    JSBI.__kMaxBitsPerChar = [
        0, 0, 32, 51, 64, 75, 83, 90, 96,
        102, 107, 111, 115, 119, 122, 126, 128,
        131, 134, 136, 139, 141, 143, 145, 147,
        149, 151, 153, 154, 156, 158, 159, 160,
        162, 163, 165, 166,
    ];
    JSBI.__kBitsPerCharTableShift = 5;
    JSBI.__kBitsPerCharTableMultiplier = 1 << JSBI.__kBitsPerCharTableShift;
    JSBI.__kConversionChars = '0123456789abcdefghijklmnopqrstuvwxyz'.split('');
    JSBI.__kBitConversionBuffer = new ArrayBuffer(8);
    JSBI.__kBitConversionDouble = new Float64Array(JSBI.__kBitConversionBuffer);
    JSBI.__kBitConversionInts = new Int32Array(JSBI.__kBitConversionBuffer);
    return JSBI;
}(Array));
exports.JSBI = JSBI;
//# sourceMappingURL=jsbi.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/bigint-util/to-number.js":
/*!*****************************************************************!*\
  !*** ./node_modules/type-mapping/dist/bigint-util/to-number.js ***!
  \*****************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Attempts to convert `x` into a `number`
 * without any loss in precision.
 *
 * If it is not possible, an error is thrown.
 *
 * -----
 *
 * In general, this should not happen if our `bigint` is
 * in the range,
 *
 * `[Number.MIN_SAFE_INTEGER, Number.MAX_SAFE_INTEGER]`
 *
 * Which is,
 *
 * `[-9007199254740991, 9007199254740991]`
 *
 * @param x - The `bigint` to convert to a `number`
 */
function toNumber(x) {
    var result = Number(x);
    if (x.toString() === result.toString()) {
        return result;
    }
    else {
        throw new Error("Cannot convert bigint to number without loss in precision");
    }
}
exports.toNumber = toNumber;
//# sourceMappingURL=to-number.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/bigint-util/to-string.js":
/*!*****************************************************************!*\
  !*** ./node_modules/type-mapping/dist/bigint-util/to-string.js ***!
  \*****************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var jsbi_1 = __webpack_require__(/*! ./jsbi */ "./node_modules/type-mapping/dist/bigint-util/jsbi.js");
function toString(x, radix) {
    return jsbi_1.JSBI.BigInt(x.toString()).toString(radix);
}
exports.toString = toString;
//# sourceMappingURL=to-string.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/decorator/func.js":
/*!**********************************************************!*\
  !*** ./node_modules/type-mapping/dist/decorator/func.js ***!
  \**********************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function func() {
    var mappers = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        mappers[_i] = arguments[_i];
    }
    var factory = function (target) {
        if (mappers.length == 0) {
            //Nothing to validate.
            return target;
        }
        var name = (typeof target.name == "string") ?
            typeof target.name :
            "[Anonymous function]";
        var result = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var max = Math.max(args.length, target.length);
            for (var i = 0; i < max; ++i) {
                var mapper = (i < mappers.length) ?
                    mappers[i] :
                    //Probably a rest parameter
                    mappers[mappers.length - 1];
                if (i < args.length) {
                    args[i] = mapper(name + "(#" + i + ")", args[i]);
                }
                else {
                    args.push(mapper(name + "(#" + i + ")", undefined));
                }
            }
            return target.apply(this, args);
        };
        return result;
    };
    return factory;
}
exports.func = func;
//# sourceMappingURL=func.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/decorator/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/type-mapping/dist/decorator/index.js ***!
  \***********************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./func */ "./node_modules/type-mapping/dist/decorator/func.js"));
__export(__webpack_require__(/*! ./method */ "./node_modules/type-mapping/dist/decorator/method.js"));
__export(__webpack_require__(/*! ./prop */ "./node_modules/type-mapping/dist/decorator/prop.js"));
__export(__webpack_require__(/*! ./setter */ "./node_modules/type-mapping/dist/decorator/setter.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/decorator/method.js":
/*!************************************************************!*\
  !*** ./node_modules/type-mapping/dist/decorator/method.js ***!
  \************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
function method() {
    var mappers = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        mappers[_i] = arguments[_i];
    }
    var result = function (target, propertyKey, descriptor) {
        if (mappers.length == 0) {
            //Nothing to validate.
            return;
        }
        var propertyName = (typeof propertyKey == "string") ?
            propertyKey :
            "Symbol(" + propertyKey.toString() + ")";
        var ctorName = type_util_1.getCtorName(target.constructor);
        var fullName = ctorName + "." + propertyName;
        var originalMethod = descriptor.value;
        if (!(originalMethod instanceof Function)) {
            throw new Error("Method " + fullName + " not found");
        }
        descriptor.value = (function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var max = Math.max(args.length, originalMethod.length);
            for (var i = 0; i < max; ++i) {
                var mapper = (i < mappers.length) ?
                    mappers[i] :
                    //Probably a rest parameter
                    mappers[mappers.length - 1];
                if (i < args.length) {
                    args[i] = mapper(fullName + "(#" + i + ")", args[i]);
                }
                else {
                    args.push(mapper(fullName + "(#" + i + ")", undefined));
                }
            }
            if (originalMethod != undefined) {
                return originalMethod.apply(this, args);
            }
            else {
                return undefined;
            }
        });
    };
    return result;
}
exports.method = method;
/*
class Clazz {
    @method(() => 1, () => "")
    foo (arg0 : number, arg1 : string) {
    }
    //Rest params are a bit iffy
    @method(() => 1, ...[() => ""])
    foo2 (arg0 : number, ...arg1 : string[]) {
    }

    @setter()
    get x () {
        return 5;
    }

    @setter(() => 1, () => "")
    set name (v : string) {
        console.log(v);
    }
}
type wtf = ExtractKeyWithParams<Clazz, [() => 1]>
type c_name = Clazz["name"]
const c = new Clazz();
type p = Parameters<(arg0 : number, ...args : string[]) => void>
type p0 = p[0];
type p1 = p[1];
type p2 = p[2];
type l = p["length"];
//*/ 
//# sourceMappingURL=method.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/decorator/prop.js":
/*!**********************************************************!*\
  !*** ./node_modules/type-mapping/dist/decorator/prop.js ***!
  \**********************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var accessor_util_1 = __webpack_require__(/*! ../accessor-util */ "./node_modules/type-mapping/dist/accessor-util/index.js");
var type_util_1 = __webpack_require__(/*! ../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
function prop(f) {
    var result = function (target, propertyKey) {
        /*
            Implementation copied over from schema-decorator.
            The code isn't too well-written and kind of confusing.
        */
        var propertyName = (typeof propertyKey == "string") ?
            propertyKey :
            "Symbol(" + propertyKey.toString() + ")";
        var privateName = "____hijacked-by-type-mapping-" + propertyName;
        var ctorName = type_util_1.getCtorName(target.constructor);
        var fullName = ctorName + "." + propertyName;
        /*
            We call this `superAccessorGenerator` because
            calling `.set()` on this may trigger the base class'
            decorator that may create another accessor on the base class.

            `superSetter` below is the `.set()` of the base class,
            if it exists.

            We need to also call the base class' `.set()`
            because there may be other mappers running in the
            base class.
        */
        var superAccessorGenerator = accessor_util_1.getAccessor(target, propertyKey);
        Object.defineProperty(target, propertyKey, {
            get: function () {
                return this[privateName];
            },
            set: function (mixed) {
                //If we are here, we have the accessor defined on the class prototype,
                //but not on the instance itself.
                //We want to preserve the behaviour of Object.keys(),
                //So, we need to define the accessor on the instance.
                var superSetter = undefined;
                if (superAccessorGenerator != undefined && superAccessorGenerator.set != undefined) {
                    superAccessorGenerator.set.bind(this)(mixed);
                    var accessor = Object.getOwnPropertyDescriptor(this, propertyKey);
                    if (!accessor_util_1.isAccessorDescriptor(accessor) || accessor.set == undefined) {
                        throw new Error("Expected " + fullName + " to be an accessor and have a \"set()\" method");
                    }
                    superSetter = accessor.set.bind(this);
                }
                //Set the value on the instance first,
                //We define a property that is not enumerable,
                //So it does not show up in Object.keys().
                //We don't want this property to show up because
                //its name is `privateName`, not the "original" name.
                if (superSetter == undefined) {
                    Object.defineProperty(this, privateName, {
                        value: f(fullName, mixed),
                        writable: true,
                        enumerable: false,
                    });
                }
                else {
                    superSetter(f(fullName, mixed));
                }
                //We define the accessor that should be used from now on
                //And will be enumerable with Object.keys(instance)
                Object.defineProperty(this, propertyName, {
                    get: function () {
                        return this[privateName];
                    },
                    set: function (mixed) {
                        if (superSetter == undefined) {
                            this[privateName] = f(fullName, mixed);
                        }
                        else {
                            superSetter(f(fullName, mixed));
                        }
                    },
                    enumerable: true,
                    configurable: true,
                });
            },
            enumerable: true,
        });
    };
    return result;
}
exports.prop = prop;
/*
class Clazz {
    @prop(() => "1")
    prop0 : number = 3;
}
const c = new Clazz();
//*/ 
//# sourceMappingURL=prop.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/decorator/setter.js":
/*!************************************************************!*\
  !*** ./node_modules/type-mapping/dist/decorator/setter.js ***!
  \************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
function setter(f) {
    var result = function (target, propertyKey, descriptor) {
        var propertyName = (typeof propertyKey == "string") ?
            propertyKey :
            "Symbol(" + propertyKey.toString() + ")";
        var ctorName = type_util_1.getCtorName(target.constructor);
        var fullName = ctorName + "." + propertyName;
        var originalMethod = descriptor.set;
        descriptor.set = (function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            if (args.length == 0) {
                throw new Error("Cannot call " + fullName + ".set() with zero arguments");
            }
            for (var i = 0; i < args.length; ++i) {
                args[i] = f(fullName, args[i]);
            }
            if (originalMethod != undefined) {
                return originalMethod.apply(this, args);
            }
            else {
                return undefined;
            }
        });
    };
    return result;
}
exports.setter = setter;
/*
class Clazz {
    @setter(() => "1")
    set name (v : string) {
        console.log(v);
    }
}
//*/ 
//# sourceMappingURL=setter.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/enum-util/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/type-mapping/dist/enum-util/index.js ***!
  \***********************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
//Please only pass enums here
var Enum;
(function (Enum) {
})(Enum = exports.Enum || (exports.Enum = {}));
function getKeys(e) {
    return (Object.keys(e)
        .filter(function (k) {
        if (/^\d/.test(k)) {
            return false;
        }
        var v = e[k];
        return (typeof v == "string" ||
            typeof v == "number");
    }));
}
exports.getKeys = getKeys;
function getValues(e) {
    return getKeys(e).map(function (k) { return e[k]; });
}
exports.getValues = getValues;
function getEntries(e) {
    return getKeys(e).map(function (k) {
        return {
            key: k,
            value: e[k],
        };
    });
}
exports.getEntries = getEntries;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/error-code.js":
/*!******************************************************!*\
  !*** ./node_modules/type-mapping/dist/error-code.js ***!
  \******************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function toKeyEnum() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    return arr.reduce(function (memo, k) {
        memo[k] = k;
        return memo;
    }, {});
}
/**
 * @todo More error codes
 */
exports.ErrorCode = toKeyEnum(
/**
 * + `expectedMeta.gt`
 */
"EXPECTED_GREATER_THAN", 
/**
 * + `expectedMeta.lt`
 */
"EXPECTED_LESS_THAN", 
/**
 * + `expectedMeta.gtEq`
 */
"EXPECTED_GREATER_THAN_OR_EQUAL_TO", 
/**
 * + `expectedMeta.ltEq`
 */
"EXPECTED_LESS_THAN_OR_EQUAL_TO", 
/**
 * + `expected`
 */
"EXPECTED_TYPE", 
/**
 * + `expectedMeta.min`
 * + `expectedMeta.max`
 */
"EXPECTED_LENGTH", 
/**
 * + `expectedMeta.min`
 * + `expectedMeta.max`
 */
"EXPECTED_BYTE_LENGTH", 
/**
 * + `expectedMeta.mappableValue`
 * + `expectedMeta.outputValue`
 * + `expectedMeta.entries`
 */
"EXPECTED_ENUM_KEY", 
/**
 * + `expectedMeta.mappableValue`
 * + `expectedMeta.outputValue`
 * + `expectedMeta.entries`
 */
"EXPECTED_ENUM_VALUE", 
/**
 * + `expectedMeta.mappableValue`
 * + `expectedMeta.outputValue`
 * + `expectedMeta.desiredValue`
 * + `expectedMeta.validKeys`
 */
"EXPECTED_ONE_ENUM_VALUE_OR_VALID_ENUM_KEY", 
/**
 * + `expectedMeta.maxPrecision`
 * + `expectedMeta.maxScale`
 * + `expectedMeta.curPrecision`
 * + `expectedMeta.curScale`
 */
"EXPECTED_DECIMAL_PRECISION_LESS_THAN_OR_EQUAL_TO", 
/**
 * + `expectedMeta.maxPrecision`
 * + `expectedMeta.maxScale`
 * + `expectedMeta.curPrecision`
 * + `expectedMeta.curScale`
 */
"EXPECTED_DECIMAL_SCALE_LESS_THAN_OR_EQUAL_TO");
//# sourceMappingURL=error-code.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/error-util/flatten-union-errors.js":
/*!***************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/error-util/flatten-union-errors.js ***!
  \***************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function flattenUnionErrors(arr) {
    var result = [];
    for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {
        var err = arr_1[_i];
        if (err.unionErrors == undefined || err.unionErrors.length == 0) {
            result.push(err);
        }
        else {
            result.push.apply(result, flattenUnionErrors(err.unionErrors));
        }
    }
    return result;
}
exports.flattenUnionErrors = flattenUnionErrors;
//# sourceMappingURL=flatten-union-errors.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/error-util/indent-error-message.js":
/*!***************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/error-util/indent-error-message.js ***!
  \***************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function indentErrorMessage(str) {
    str = str
        .split("\n")
        .map(function (str) { return "\t" + str; })
        .join("\n");
    return "(\n" + str + "\n)";
}
exports.indentErrorMessage = indentErrorMessage;
//# sourceMappingURL=indent-error-message.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/error-util/index.js":
/*!************************************************************!*\
  !*** ./node_modules/type-mapping/dist/error-util/index.js ***!
  \************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./flatten-union-errors */ "./node_modules/type-mapping/dist/error-util/flatten-union-errors.js"));
__export(__webpack_require__(/*! ./indent-error-message */ "./node_modules/type-mapping/dist/error-util/indent-error-message.js"));
__export(__webpack_require__(/*! ./is-mapping-error */ "./node_modules/type-mapping/dist/error-util/is-mapping-error.js"));
__export(__webpack_require__(/*! ./make-mapping-error */ "./node_modules/type-mapping/dist/error-util/make-mapping-error.js"));
__export(__webpack_require__(/*! ./make-normalized-union-error */ "./node_modules/type-mapping/dist/error-util/make-normalized-union-error.js"));
__export(__webpack_require__(/*! ./try-get-property-error */ "./node_modules/type-mapping/dist/error-util/try-get-property-error.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/error-util/is-mapping-error.js":
/*!***********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/error-util/is-mapping-error.js ***!
  \***********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function isMappingErrorArray(x) {
    if (!(x instanceof Array)) {
        return false;
    }
    for (var _i = 0, x_1 = x; _i < x_1.length; _i++) {
        var i = x_1[_i];
        if (!isMappingError(i)) {
            return false;
        }
    }
    return true;
}
exports.isMappingErrorArray = isMappingErrorArray;
function isMappingError(x) {
    if (!(x instanceof Error)) {
        return false;
    }
    var mixed = x;
    if (typeof mixed.inputName != "string") {
        return false;
    }
    if (mixed.expected != undefined && typeof mixed.expected != "string") {
        return false;
    }
    if (mixed.expectedMeta != undefined && !(mixed.expectedMeta instanceof Object)) {
        return false;
    }
    if (mixed.propertyErrors != undefined &&
        !isMappingErrorArray(mixed.propertyErrors)) {
        return false;
    }
    if (mixed.unionErrors != undefined &&
        !isMappingErrorArray(mixed.unionErrors)) {
        return false;
    }
    if (mixed.intersectionErrors != undefined &&
        !isMappingErrorArray(mixed.intersectionErrors)) {
        return false;
    }
    return true;
}
exports.isMappingError = isMappingError;
//# sourceMappingURL=is-mapping-error.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/error-util/make-mapping-error.js":
/*!*************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/error-util/make-mapping-error.js ***!
  \*************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function makeMappingError(args) {
    var err = new Error(args.message);
    Object.defineProperty(err, "inputName", {
        value: args.inputName,
        enumerable: false,
    });
    Object.defineProperty(err, "actualValue", {
        value: args.actualValue,
        enumerable: false,
    });
    Object.defineProperty(err, "expected", {
        value: args.expected,
        enumerable: false,
    });
    Object.defineProperty(err, "expectedMeta", {
        value: args.expectedMeta,
        enumerable: false,
    });
    if ("propertyErrors" in args) {
        Object.defineProperty(err, "propertyErrors", {
            value: args.propertyErrors,
            enumerable: false,
        });
    }
    if ("unionErrors" in args) {
        Object.defineProperty(err, "unionErrors", {
            value: args.unionErrors,
            enumerable: false,
        });
    }
    if ("intersectionErrors" in args) {
        Object.defineProperty(err, "intersectionErrors", {
            value: args.intersectionErrors,
            enumerable: false,
        });
    }
    if (typeof args.stack == "string") {
        Object.defineProperty(err, "stack", {
            value: args.stack,
            enumerable: false,
        });
    }
    return err;
}
exports.makeMappingError = makeMappingError;
//# sourceMappingURL=make-mapping-error.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/error-util/make-normalized-union-error.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/error-util/make-normalized-union-error.js ***!
  \**********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var flatten_union_errors_1 = __webpack_require__(/*! ./flatten-union-errors */ "./node_modules/type-mapping/dist/error-util/flatten-union-errors.js");
var array_util_1 = __webpack_require__(/*! ../array-util */ "./node_modules/type-mapping/dist/array-util/index.js");
var make_mapping_error_1 = __webpack_require__(/*! ./make-mapping-error */ "./node_modules/type-mapping/dist/error-util/make-mapping-error.js");
var type_util_1 = __webpack_require__(/*! ../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var indent_error_message_1 = __webpack_require__(/*! ./indent-error-message */ "./node_modules/type-mapping/dist/error-util/indent-error-message.js");
function everyElementHasMappableValues(arr) {
    return arr.every(function (err) { return err.expectedMeta != undefined && err.expectedMeta.mappableValues != undefined; });
}
function everyElementHasOutputValues(arr) {
    return arr.every(function (err) { return err.expectedMeta != undefined && err.expectedMeta.outputValues != undefined; });
}
function makeNormalizedUnionError(name, mixed, unionErrors) {
    unionErrors = flatten_union_errors_1.flattenUnionErrors(unionErrors);
    var rawExpectedArr = unionErrors
        .map(function (e) { return e.expected; })
        .filter(function (i) { return typeof i == "string"; });
    if (rawExpectedArr.length == unionErrors.length) {
        var expected = array_util_1.removeDuplicateElements(rawExpectedArr)
            .map(function (str) { return "(" + str + ")"; })
            .join(" or ");
        return make_mapping_error_1.makeMappingError({
            message: name + " must be " + expected + "; received " + type_util_1.toTypeStr(mixed),
            inputName: name,
            actualValue: mixed,
            expected: expected,
            expectedMeta: {
                mappableValues: (everyElementHasMappableValues(unionErrors) ?
                    unionErrors.reduce(function (memo, err) {
                        memo.push.apply(memo, err.expectedMeta.mappableValues);
                        return memo;
                    }, []) :
                    undefined),
                outputValues: (everyElementHasOutputValues(unionErrors) ?
                    unionErrors.reduce(function (memo, err) {
                        memo.push.apply(memo, err.expectedMeta.outputValues);
                        return memo;
                    }, []) :
                    undefined),
            },
            unionErrors: unionErrors,
        });
    }
    else {
        /**
         * At least one of our mappers did not throw
         * a `MappingError`
         */
        var errorMessages = array_util_1.removeDuplicateElements(unionErrors
            .map(function (e) { return indent_error_message_1.indentErrorMessage(e.message); })).map(function (str) { return "(" + str + ")"; });
        var expected = array_util_1.removeDuplicateElements(rawExpectedArr.concat(["valid value"]))
            .map(function (str) { return "(" + str + ")"; })
            .join(" or ");
        return make_mapping_error_1.makeMappingError({
            message: name + " is invalid.\n" + errorMessages.join(" or\n"),
            inputName: name,
            actualValue: mixed,
            expected: expected,
            unionErrors: unionErrors,
        });
    }
}
exports.makeNormalizedUnionError = makeNormalizedUnionError;
//# sourceMappingURL=make-normalized-union-error.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/error-util/try-get-property-error.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/error-util/try-get-property-error.js ***!
  \*****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function tryGetPropertyError(mappingError, inputName) {
    if (mappingError.propertyErrors == undefined) {
        return undefined;
    }
    for (var _i = 0, _a = mappingError.propertyErrors; _i < _a.length; _i++) {
        var propertyError = _a[_i];
        if (propertyError.inputName == inputName) {
            return propertyError;
        }
    }
    return undefined;
}
exports.tryGetPropertyError = tryGetPropertyError;
//# sourceMappingURL=try-get-property-error.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/field-map/ctor.js":
/*!**********************************************************!*\
  !*** ./node_modules/type-mapping/dist/field-map/ctor.js ***!
  \**********************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../mapper */ "./node_modules/type-mapping/dist/mapper/index.js");
/**
    Constructs multiple `Field<>` instances at once.
*/
function fields(map) {
    var result = {};
    for (var name in map) {
        if (!map.hasOwnProperty(name)) {
            continue;
        }
        result[name] = mapper_1.withName(map[name], name);
    }
    return result;
}
exports.fields = fields;
//# sourceMappingURL=ctor.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/field-map/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/type-mapping/dist/field-map/index.js ***!
  \***********************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./ctor */ "./node_modules/type-mapping/dist/field-map/ctor.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/fixed-point-util/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/type-mapping/dist/fixed-point-util/index.js ***!
  \******************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./is-equal */ "./node_modules/type-mapping/dist/fixed-point-util/is-equal.js"));
__export(__webpack_require__(/*! ./try-parse */ "./node_modules/type-mapping/dist/fixed-point-util/try-parse.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/fixed-point-util/is-equal.js":
/*!*********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/fixed-point-util/is-equal.js ***!
  \*********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var BigIntUtil = __webpack_require__(/*! ../bigint-util */ "./node_modules/type-mapping/dist/bigint-util/index.js");
var ZeroEqualityAlgorithm;
(function (ZeroEqualityAlgorithm) {
    ZeroEqualityAlgorithm["NEGATIVE_AND_POSITIVE_ZERO_ARE_EQUAL"] = "NEGATIVE_AND_POSITIVE_ZERO_ARE_EQUAL";
    ZeroEqualityAlgorithm["NEGATIVE_AND_POSITIVE_ZERO_NOT_EQUAL"] = "NEGATIVE_AND_POSITIVE_ZERO_NOT_EQUAL";
})(ZeroEqualityAlgorithm = exports.ZeroEqualityAlgorithm || (exports.ZeroEqualityAlgorithm = {}));
function isEqual(a, b, zeroEqualityAlgorithm) {
    if (zeroEqualityAlgorithm == ZeroEqualityAlgorithm.NEGATIVE_AND_POSITIVE_ZERO_ARE_EQUAL &&
        a.isZero &&
        b.isZero) {
        return true;
    }
    if (a.isInteger != b.isInteger) {
        return false;
    }
    if (a.isNegative != b.isNegative) {
        return false;
    }
    if (a.isZero != b.isZero) {
        return false;
    }
    if (!BigIntUtil.equal(a.fixedPointIntegerPartLength, b.fixedPointIntegerPartLength)) {
        return false;
    }
    if (!BigIntUtil.equal(a.fixedPointFractionalPartLength, b.fixedPointFractionalPartLength)) {
        return false;
    }
    if (!BigIntUtil.equal(a.fixedPointLength, b.fixedPointLength)) {
        return false;
    }
    return (a.getFixedPointString() ==
        b.getFixedPointString());
}
exports.isEqual = isEqual;
//# sourceMappingURL=is-equal.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/fixed-point-util/try-parse.js":
/*!**********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/fixed-point-util/try-parse.js ***!
  \**********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var FloatingPointUtil = __webpack_require__(/*! ../floating-point-util */ "./node_modules/type-mapping/dist/floating-point-util/index.js");
var type_util_1 = __webpack_require__(/*! ../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var BigIntUtil = __webpack_require__(/*! ../bigint-util */ "./node_modules/type-mapping/dist/bigint-util/index.js");
var string_util_1 = __webpack_require__(/*! ../string-util */ "./node_modules/type-mapping/dist/string-util/index.js");
function lazyInit(initDelegate) {
    var initialized = false;
    var value = undefined;
    return function () {
        if (!initialized) {
            value = initDelegate();
            initialized = true;
        }
        return value;
    };
}
/**
 * @todo Make `getXxx()` functions cache results
 */
function tryParse(str) {
    var parsed = FloatingPointUtil.tryParse(str);
    if (parsed == undefined) {
        return undefined;
    }
    var _a = FloatingPointUtil.toIntegerAndExponent(parsed), isNegative = _a.isNegative, integerPart = _a.integerPart, isZero = _a.isZero, exponentValue = _a.exponentValue;
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    if (isZero) {
        var fixedPointIntegerPartLength = BigInt(1);
        var fixedPointFractionalPartLength = BigInt(1);
        var fixedPointLength = BigIntUtil.addMany((isNegative ? BigInt(1) : BigInt(0)), fixedPointIntegerPartLength, BigInt(1), fixedPointFractionalPartLength);
        var getFixedPointIntegerPartString_1 = function () { return "0"; };
        var getFixedPointFractionalPartString_1 = function () { return "0"; };
        var getFixedPointString = lazyInit(function () {
            var sign = isNegative ? "-" : "";
            return (sign +
                getFixedPointIntegerPartString_1() +
                "." +
                getFixedPointFractionalPartString_1());
        });
        return {
            isInteger: true,
            isNegative: isNegative,
            isZero: isZero,
            fixedPointIntegerPartLength: fixedPointIntegerPartLength,
            fixedPointFractionalPartLength: fixedPointFractionalPartLength,
            fixedPointLength: fixedPointLength,
            getFixedPointIntegerPartString: getFixedPointIntegerPartString_1,
            getFixedPointFractionalPartString: getFixedPointFractionalPartString_1,
            getFixedPointString: getFixedPointString,
        };
    }
    if (BigIntUtil.greaterThanOrEqual(exponentValue, 0)) {
        var fixedPointIntegerPartLength = BigIntUtil.add(BigInt(integerPart.length), exponentValue);
        var fixedPointFractionalPartLength = BigInt(1);
        var fixedPointLength = BigIntUtil.addMany((isNegative ? BigInt(1) : BigInt(0)), fixedPointIntegerPartLength, BigInt(1), fixedPointFractionalPartLength);
        var getFixedPointIntegerPartString_2 = lazyInit(function () { return (integerPart + string_util_1.stringRepeat("0", BigIntUtil.toNumber(exponentValue))); });
        var getFixedPointFractionalPartString_2 = function () { return "0"; };
        var getFixedPointString = lazyInit(function () {
            var sign = isNegative ? "-" : "";
            return (sign +
                getFixedPointIntegerPartString_2() +
                "." +
                getFixedPointFractionalPartString_2());
        });
        return {
            isInteger: true,
            isNegative: isNegative,
            isZero: isZero,
            fixedPointIntegerPartLength: fixedPointIntegerPartLength,
            fixedPointFractionalPartLength: fixedPointFractionalPartLength,
            fixedPointLength: fixedPointLength,
            getFixedPointIntegerPartString: getFixedPointIntegerPartString_2,
            getFixedPointFractionalPartString: getFixedPointFractionalPartString_2,
            getFixedPointString: getFixedPointString,
        };
    }
    else {
        var fractionalOffset = BigIntUtil.mul(exponentValue, -1);
        if (BigIntUtil.lessThan(fractionalOffset, integerPart.length)) {
            var newIntegerPart_1 = integerPart.substring(0, integerPart.length - BigIntUtil.toNumber(fractionalOffset));
            var newFractionalPart_1 = integerPart.substring(integerPart.length - BigIntUtil.toNumber(fractionalOffset), integerPart.length).replace(/(0+)$/, "");
            if (newFractionalPart_1 == "") {
                newFractionalPart_1 = "0";
            }
            var fixedPointIntegerPartLength = BigInt(newIntegerPart_1.length);
            var fixedPointFractionalPartLength = BigInt(newFractionalPart_1.length);
            var fixedPointLength = BigIntUtil.addMany((isNegative ? BigInt(1) : BigInt(0)), fixedPointIntegerPartLength, BigInt(1), fixedPointFractionalPartLength);
            var getFixedPointIntegerPartString_3 = function () { return newIntegerPart_1; };
            var getFixedPointFractionalPartString_3 = function () { return newFractionalPart_1; };
            var getFixedPointString = lazyInit(function () {
                var sign = isNegative ? "-" : "";
                return (sign +
                    getFixedPointIntegerPartString_3() +
                    "." +
                    getFixedPointFractionalPartString_3());
            });
            return {
                isInteger: (newFractionalPart_1 == "0"),
                isNegative: isNegative,
                isZero: isZero,
                fixedPointIntegerPartLength: fixedPointIntegerPartLength,
                fixedPointFractionalPartLength: fixedPointFractionalPartLength,
                fixedPointLength: fixedPointLength,
                getFixedPointIntegerPartString: getFixedPointIntegerPartString_3,
                getFixedPointFractionalPartString: getFixedPointFractionalPartString_3,
                getFixedPointString: getFixedPointString,
            };
        }
        else if (BigIntUtil.equal(fractionalOffset, BigInt(integerPart.length))) {
            var newFractionalPart_2 = integerPart.replace(/(0+)$/, "");
            if (newFractionalPart_2 == "") {
                newFractionalPart_2 = "0";
            }
            var fixedPointIntegerPartLength = BigInt(1);
            var fixedPointFractionalPartLength = BigInt(newFractionalPart_2.length);
            var fixedPointLength = BigIntUtil.addMany((isNegative ? BigInt(1) : BigInt(0)), fixedPointIntegerPartLength, BigInt(1), fixedPointFractionalPartLength);
            var getFixedPointIntegerPartString_4 = function () { return ("0"); };
            var getFixedPointFractionalPartString_4 = function () { return newFractionalPart_2; };
            var getFixedPointString = lazyInit(function () {
                var sign = isNegative ? "-" : "";
                return (sign +
                    getFixedPointIntegerPartString_4() +
                    "." +
                    getFixedPointFractionalPartString_4());
            });
            return {
                isInteger: (newFractionalPart_2 == "0"),
                isNegative: isNegative,
                isZero: isZero,
                fixedPointIntegerPartLength: fixedPointIntegerPartLength,
                fixedPointFractionalPartLength: fixedPointFractionalPartLength,
                fixedPointLength: fixedPointLength,
                getFixedPointIntegerPartString: getFixedPointIntegerPartString_4,
                getFixedPointFractionalPartString: getFixedPointFractionalPartString_4,
                getFixedPointString: getFixedPointString,
            };
        }
        else {
            var leadingZeroCount_1 = BigIntUtil.sub(fractionalOffset, BigInt(integerPart.length));
            var newFractionalPart_3 = integerPart.replace(/(0+)$/, "");
            if (newFractionalPart_3 == "") {
                leadingZeroCount_1 = BigInt(0);
                newFractionalPart_3 = "0";
            }
            var fixedPointIntegerPartLength = BigInt(1);
            var fixedPointFractionalPartLength = BigIntUtil.add(leadingZeroCount_1, BigInt(newFractionalPart_3.length));
            var fixedPointLength = BigIntUtil.addMany((isNegative ? BigInt(1) : BigInt(0)), fixedPointIntegerPartLength, BigInt(1), fixedPointFractionalPartLength);
            var getFixedPointIntegerPartString_5 = function () { return ("0"); };
            var getFixedPointFractionalPartString_5 = lazyInit(function () { return (string_util_1.stringRepeat("0", BigIntUtil.toNumber(leadingZeroCount_1)) +
                newFractionalPart_3); });
            var getFixedPointString = lazyInit(function () {
                var sign = isNegative ? "-" : "";
                return (sign +
                    getFixedPointIntegerPartString_5() +
                    "." +
                    getFixedPointFractionalPartString_5());
            });
            return {
                isInteger: (newFractionalPart_3 == "0"),
                isNegative: isNegative,
                isZero: isZero,
                fixedPointIntegerPartLength: fixedPointIntegerPartLength,
                fixedPointFractionalPartLength: fixedPointFractionalPartLength,
                fixedPointLength: fixedPointLength,
                getFixedPointIntegerPartString: getFixedPointIntegerPartString_5,
                getFixedPointFractionalPartString: getFixedPointFractionalPartString_5,
                getFixedPointString: getFixedPointString,
            };
        }
    }
}
exports.tryParse = tryParse;
//# sourceMappingURL=try-parse.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/floating-point-util/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/floating-point-util/index.js ***!
  \*********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./to-integer-and-exponent */ "./node_modules/type-mapping/dist/floating-point-util/to-integer-and-exponent.js"));
__export(__webpack_require__(/*! ./try-parse */ "./node_modules/type-mapping/dist/floating-point-util/try-parse.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/floating-point-util/to-integer-and-exponent.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/floating-point-util/to-integer-and-exponent.js ***!
  \***************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var BigIntUtil = __webpack_require__(/*! ../bigint-util */ "./node_modules/type-mapping/dist/bigint-util/index.js");
/**
 * Converts the fractional part to an integer part,
 * by lowering the exponent
 */
function toIntegerAndExponent(arg) {
    if (arg.fractionalPart == "0") {
        return arg;
    }
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    var exponentValue = BigIntUtil.sub(arg.exponentValue, BigInt(arg.fractionalPart.length));
    var integerPart = (arg.integerPart == "0" ?
        arg.fractionalPart.replace(/^(0+)/, "") :
        arg.integerPart + arg.fractionalPart);
    return {
        isNegative: arg.isNegative,
        integerPart: integerPart,
        fractionalPart: "0",
        isZero: arg.isZero,
        exponentValue: exponentValue,
    };
}
exports.toIntegerAndExponent = toIntegerAndExponent;
//# sourceMappingURL=to-integer-and-exponent.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/floating-point-util/try-parse.js":
/*!*************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/floating-point-util/try-parse.js ***!
  \*************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var BigIntUtil = __webpack_require__(/*! ../bigint-util */ "./node_modules/type-mapping/dist/bigint-util/index.js");
exports.floatingPointRegex = /^([-+])?([0-9]+\.?[0-9]*|[0-9]*\.?[0-9]+)([eE]([-+])?([0-9]+))?$/;
function tryParse(str) {
    var m = exports.floatingPointRegex.exec(str);
    if (m == undefined) {
        return undefined;
    }
    //-123.456e+789
    //~
    var rawCoefficientSign = m[1];
    //-123.456e+789
    // ~~~~~~~
    var rawCoefficientValue = m[2];
    //-123.456e+789
    //         ~
    var rawExponentSign = m[4];
    //-123.456e+789
    //          ~~~
    var rawExponentValue = m[5];
    var rawDecimalPlaceIndex = rawCoefficientValue.indexOf(".");
    var rawIntegerPart = (rawDecimalPlaceIndex < 0 ?
        rawCoefficientValue :
        rawCoefficientValue.substring(0, rawDecimalPlaceIndex));
    var rawFractionalPart = (rawDecimalPlaceIndex < 0 ?
        "" :
        rawCoefficientValue.substring(rawDecimalPlaceIndex + 1, rawCoefficientValue.length));
    var trimmedIntegerPart = rawIntegerPart.replace(/^(0+)/, "");
    var integerPart = (trimmedIntegerPart == "" ?
        "0" :
        trimmedIntegerPart);
    var trimmedFractionalPart = rawFractionalPart.replace(/(0+)$/, "");
    var fractionalPart = (trimmedFractionalPart == "" ?
        "0" :
        trimmedFractionalPart);
    var isZero = (integerPart == "0" && fractionalPart == "0");
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    var exponentValue = (isZero ?
        BigInt(0) :
        rawExponentValue == undefined ?
            BigInt(0) :
            BigIntUtil.mul(BigInt(rawExponentValue), BigInt((rawExponentSign === "-") ?
                -1 :
                1)));
    return {
        isNegative: (rawCoefficientSign === "-"),
        integerPart: integerPart,
        fractionalPart: fractionalPart,
        isZero: isZero,
        exponentValue: exponentValue,
    };
}
exports.tryParse = tryParse;
//# sourceMappingURL=try-parse.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/fluent-lib/field-map-ctor.js":
/*!*********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/fluent-lib/field-map-ctor.js ***!
  \*********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fluent_mapper_1 = __webpack_require__(/*! ../fluent-mapper */ "./node_modules/type-mapping/dist/fluent-mapper.js");
/**
    Constructs multiple `Field<>` instances at once,
    that are also `FluentMapper<>` instances
*/
function fields(map) {
    var result = {};
    for (var name in map) {
        if (!map.hasOwnProperty(name)) {
            continue;
        }
        result[name] = fluent_mapper_1.fluentMapper(map[name]).withName(name);
    }
    return result;
}
exports.fields = fields;
//# sourceMappingURL=field-map-ctor.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/fluent-lib/generic.js":
/*!**************************************************************!*\
  !*** ./node_modules/type-mapping/dist/fluent-lib/generic.js ***!
  \**************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var m = __webpack_require__(/*! ../functional-lib */ "./node_modules/type-mapping/dist/functional-lib/index.js");
var fluent_mapper_1 = __webpack_require__(/*! ../fluent-mapper */ "./node_modules/type-mapping/dist/fluent-mapper.js");
function arrayLike(f) {
    return fluent_mapper_1.fluentMapper(m.arrayLike(f));
}
exports.arrayLike = arrayLike;
function arrayLikeToArray(f) {
    return fluent_mapper_1.fluentMapper(m.arrayLikeToArray(f));
}
exports.arrayLikeToArray = arrayLikeToArray;
function arrayLikeToReadOnlyArray(f) {
    return fluent_mapper_1.fluentMapper(m.arrayLikeToReadOnlyArray(f));
}
exports.arrayLikeToReadOnlyArray = arrayLikeToReadOnlyArray;
function array(f) {
    return fluent_mapper_1.fluentMapper(m.array(f));
}
exports.array = array;
function readOnlyArray(f) {
    return fluent_mapper_1.fluentMapper(m.readOnlyArray(f));
}
exports.readOnlyArray = readOnlyArray;
function castEnumFlyweight(e) {
    var src = m.castEnumFlyweight(e);
    var result = {
        toValue: {},
        toKey: {},
    };
    for (var k in src.toValue) {
        if (!src.toValue.hasOwnProperty(k)) {
            continue;
        }
        result.toValue[k] = fluent_mapper_1.fluentMapper(src.toValue[k]);
    }
    for (var k in src.toKey) {
        if (!src.toKey.hasOwnProperty(k)) {
            continue;
        }
        result.toKey[k] = fluent_mapper_1.fluentMapper(src.toKey[k]);
    }
    return result;
}
exports.castEnumFlyweight = castEnumFlyweight;
function toEnumValue(e) {
    return fluent_mapper_1.fluentMapper(m.toEnumValue(e));
}
exports.toEnumValue = toEnumValue;
function toEnumKey(e) {
    return fluent_mapper_1.fluentMapper(m.toEnumKey(e));
}
exports.toEnumKey = toEnumKey;
function toOneEnumValue(e, k) {
    return fluent_mapper_1.fluentMapper(m.toOneEnumValue(e, k));
}
exports.toOneEnumValue = toOneEnumValue;
function toOneEnumKey(e, k) {
    return fluent_mapper_1.fluentMapper(m.toOneEnumKey(e, k));
}
exports.toOneEnumKey = toOneEnumKey;
function enumKey(e) {
    return fluent_mapper_1.fluentMapper(m.enumKey(e));
}
exports.enumKey = enumKey;
function enumValue(e) {
    return fluent_mapper_1.fluentMapper(m.enumValue(e));
}
exports.enumValue = enumValue;
function unsafeLiteral() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.unsafeLiteral.apply(m, arr));
}
exports.unsafeLiteral = unsafeLiteral;
function literal(arg0) {
    var arr = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        arr[_i - 1] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.literal.apply(m, [arg0].concat(arr)));
}
exports.literal = literal;
function tupleLiteral() {
    var tuple = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        tuple[_i] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.tupleLiteral.apply(m, tuple));
}
exports.tupleLiteral = tupleLiteral;
function deriveMap(map) {
    return fluent_mapper_1.fluentMapper(m.deriveMap(map));
}
exports.deriveMap = deriveMap;
function derive(srcKey, dstKey, f) {
    return fluent_mapper_1.fluentMapper(m.derive(srcKey, dstKey, f));
}
exports.derive = derive;
function instanceOf(ctor) {
    return fluent_mapper_1.fluentMapper(m.instanceOf(ctor));
}
exports.instanceOf = instanceOf;
function objectFromArray() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.objectFromArray.apply(m, arr));
}
exports.objectFromArray = objectFromArray;
function objectFromMap(map) {
    return fluent_mapper_1.fluentMapper(m.objectFromMap(map));
}
exports.objectFromMap = objectFromMap;
exports.object = function () {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.object.apply(m, arr));
};
function partialDeriveMap(map) {
    return fluent_mapper_1.fluentMapper(m.partialDeriveMap(map));
}
exports.partialDeriveMap = partialDeriveMap;
function partialObjectFromArray() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.partialObjectFromArray.apply(m, arr));
}
exports.partialObjectFromArray = partialObjectFromArray;
function partialObjectFromMap(map) {
    return fluent_mapper_1.fluentMapper(m.partialObjectFromMap(map));
}
exports.partialObjectFromMap = partialObjectFromMap;
exports.partialObject = function () {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.partialObject.apply(m, arr));
};
function partialRenameMap(map) {
    return fluent_mapper_1.fluentMapper(m.partialRenameMap(map));
}
exports.partialRenameMap = partialRenameMap;
function renameMap(map) {
    return fluent_mapper_1.fluentMapper(m.renameMap(map));
}
exports.renameMap = renameMap;
function rename(srcKey, dstKey, f) {
    return fluent_mapper_1.fluentMapper(m.rename(srcKey, dstKey, f));
}
exports.rename = rename;
function unsafeStringIndexer(f) {
    return fluent_mapper_1.fluentMapper(m.unsafeStringIndexer(f));
}
exports.unsafeStringIndexer = unsafeStringIndexer;
function stringIndexer(f) {
    return fluent_mapper_1.fluentMapper(m.stringIndexer(f));
}
exports.stringIndexer = stringIndexer;
function cache(cached, f) {
    return fluent_mapper_1.fluentMapper(m.cache(cached, f));
}
exports.cache = cache;
function cast(srcDelegate, castDelegate, dstDelegate) {
    return fluent_mapper_1.fluentMapper(m.cast(srcDelegate, castDelegate, dstDelegate));
}
exports.cast = cast;
function unsafeDeepMerge() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.unsafeDeepMerge.apply(m, arr));
}
exports.unsafeDeepMerge = unsafeDeepMerge;
function deepMerge(f) {
    var arr = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        arr[_i - 1] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.deepMerge.apply(m, [f].concat(arr)));
}
exports.deepMerge = deepMerge;
function unsafeDiscriminatedUnion(discriminantK) {
    var arr = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        arr[_i - 1] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.unsafeDiscriminatedUnion.apply(m, [discriminantK].concat(arr)));
}
exports.unsafeDiscriminatedUnion = unsafeDiscriminatedUnion;
function discriminatedUnion(discriminantK, f) {
    var arr = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        arr[_i - 2] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.discriminatedUnion.apply(m, [discriminantK, f].concat(arr)));
}
exports.discriminatedUnion = discriminatedUnion;
function excludeLiteral(f) {
    var arr = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        arr[_i - 1] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.excludeLiteral.apply(m, [f].concat(arr)));
}
exports.excludeLiteral = excludeLiteral;
function orUndefined(f) {
    return fluent_mapper_1.fluentMapper(m.orUndefined(f));
}
exports.orUndefined = orUndefined;
function orNull(f) {
    return fluent_mapper_1.fluentMapper(m.orNull(f));
}
exports.orNull = orNull;
function orMaybe(f) {
    return fluent_mapper_1.fluentMapper(m.orMaybe(f));
}
exports.orMaybe = orMaybe;
function notUndefined(f) {
    return fluent_mapper_1.fluentMapper(m.notUndefined(f));
}
exports.notUndefined = notUndefined;
function notNull(f) {
    return fluent_mapper_1.fluentMapper(m.notNull(f));
}
exports.notNull = notNull;
function notMaybe(f) {
    return fluent_mapper_1.fluentMapper(m.notMaybe(f));
}
exports.notMaybe = notMaybe;
function optional(f) {
    return fluent_mapper_1.fluentMapper(m.optional(f));
}
exports.optional = optional;
function notOptional(f) {
    return fluent_mapper_1.fluentMapper(m.notOptional(f));
}
exports.notOptional = notOptional;
function unsafeOr() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.unsafeOr.apply(m, arr));
}
exports.unsafeOr = unsafeOr;
function or(f) {
    var arr = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        arr[_i - 1] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.or.apply(m, [f].concat(arr)));
}
exports.or = or;
exports.pipe = function () {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.reallyUnsafePipe.apply(m, arr));
};
function unsafePipe(f) {
    var arr = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        arr[_i - 1] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.unsafePipe.apply(m, [f].concat(arr)));
}
exports.unsafePipe = unsafePipe;
function reallyUnsafePipe() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    return fluent_mapper_1.fluentMapper(m.reallyUnsafePipe.apply(m, arr));
}
exports.reallyUnsafePipe = reallyUnsafePipe;
function deferred() {
    return fluent_mapper_1.fluentMapper(m.deferred());
}
exports.deferred = deferred;
//# sourceMappingURL=generic.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/fluent-lib/index.js":
/*!************************************************************!*\
  !*** ./node_modules/type-mapping/dist/fluent-lib/index.js ***!
  \************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path="../buffer.d.ts" />
var non_generic_1 = __webpack_require__(/*! ./non-generic */ "./node_modules/type-mapping/dist/fluent-lib/non-generic.js");
exports.null = non_generic_1.null;
/**
    Export generated with `npm run generate-fluent-lib-export`

    The export generation script is needed because of this,
    https://github.com/microsoft/TypeScript/issues/31824
*/
var non_generic_2 = __webpack_require__(/*! ./non-generic */ "./node_modules/type-mapping/dist/fluent-lib/non-generic.js");
exports.unsafeAny = non_generic_2.unsafeAny;
exports.instanceOfArray = non_generic_2.instanceOfArray;
exports.instanceOfReadOnlyArray = non_generic_2.instanceOfReadOnlyArray;
exports.implementsArrayLike = non_generic_2.implementsArrayLike;
exports.length = non_generic_2.length;
exports.bigInt = non_generic_2.bigInt;
exports.unsignedBigInt = non_generic_2.unsignedBigInt;
exports.stringToBigInt = non_generic_2.stringToBigInt;
exports.stringToUnsignedBigInt = non_generic_2.stringToUnsignedBigInt;
exports.integerToBigInt = non_generic_2.integerToBigInt;
exports.unsignedIntegerToUnsignedBigInt = non_generic_2.unsignedIntegerToUnsignedBigInt;
exports.toBigInt = non_generic_2.toBigInt;
exports.toUnsignedBigInt = non_generic_2.toUnsignedBigInt;
exports.bigIntGt = non_generic_2.bigIntGt;
exports.bigIntLt = non_generic_2.bigIntLt;
exports.bigIntGtEq = non_generic_2.bigIntGtEq;
exports.bigIntLtEq = non_generic_2.bigIntLtEq;
exports.bigIntRange = non_generic_2.bigIntRange;
exports.boolean = non_generic_2.boolean;
exports.finiteNumberToBoolean = non_generic_2.finiteNumberToBoolean;
exports.stringToBoolean = non_generic_2.stringToBoolean;
exports.finiteNumberToTrue = non_generic_2.finiteNumberToTrue;
exports.finiteNumberToFalse = non_generic_2.finiteNumberToFalse;
exports.stringToTrue = non_generic_2.stringToTrue;
exports.stringToFalse = non_generic_2.stringToFalse;
exports.toBoolean = non_generic_2.toBoolean;
exports.toTrue = non_generic_2.toTrue;
exports.toFalse = non_generic_2.toFalse;
exports.instanceOfBuffer = non_generic_2.instanceOfBuffer;
exports.bufferLength = non_generic_2.bufferLength;
exports.bufferExactLength = non_generic_2.bufferExactLength;
exports.unsafeStringToDate = non_generic_2.unsafeStringToDate;
exports.dateToString = non_generic_2.dateToString;
exports.unixTimestampSecondsToDate = non_generic_2.unixTimestampSecondsToDate;
exports.unixTimestampMillisecondsToDate = non_generic_2.unixTimestampMillisecondsToDate;
exports.dateToUnixTimestampSeconds = non_generic_2.dateToUnixTimestampSeconds;
exports.dateToUnixTimestampMilliseconds = non_generic_2.dateToUnixTimestampMilliseconds;
exports.instanceOfDate = non_generic_2.instanceOfDate;
exports.stringToJsonObject = non_generic_2.stringToJsonObject;
exports.jsonObject = non_generic_2.jsonObject;
exports.never = non_generic_2.never;
exports.nonMaybe = non_generic_2.nonMaybe;
exports.undefinedToNull = non_generic_2.undefinedToNull;
exports.emptyStringToNull = non_generic_2.emptyStringToNull;
exports.whitespaceStringToNull = non_generic_2.whitespaceStringToNull;
exports.stringToFiniteNumber = non_generic_2.stringToFiniteNumber;
exports.stringToInteger = non_generic_2.stringToInteger;
exports.stringToUnsignedInteger = non_generic_2.stringToUnsignedInteger;
exports.toFiniteNumber = non_generic_2.toFiniteNumber;
exports.toInteger = non_generic_2.toInteger;
exports.toUnsignedInteger = non_generic_2.toUnsignedInteger;
exports.gt = non_generic_2.gt;
exports.lt = non_generic_2.lt;
exports.gtEq = non_generic_2.gtEq;
exports.ltEq = non_generic_2.ltEq;
exports.range = non_generic_2.range;
exports.unsafeNumber = non_generic_2.unsafeNumber;
exports.finiteNumber = non_generic_2.finiteNumber;
exports.integer = non_generic_2.integer;
exports.unsignedInteger = non_generic_2.unsignedInteger;
exports.toEmptyObject = non_generic_2.toEmptyObject;
exports.instanceOfObject = non_generic_2.instanceOfObject;
exports.pojo = non_generic_2.pojo;
exports.runTimeRequired = non_generic_2.runTimeRequired;
exports.notRunTimeRequired = non_generic_2.notRunTimeRequired;
exports.finiteNumberToFiniteNumberString = non_generic_2.finiteNumberToFiniteNumberString;
exports.integerToIntegerString = non_generic_2.integerToIntegerString;
exports.unsignedIntegerToUnsignedIntegerString = non_generic_2.unsignedIntegerToUnsignedIntegerString;
exports.jsonObjectToJsonObjectString = non_generic_2.jsonObjectToJsonObjectString;
exports.ipAddressString = non_generic_2.ipAddressString;
exports.ipV4MappedIpV6String = non_generic_2.ipV4MappedIpV6String;
exports.ipV4OctetString = non_generic_2.ipV4OctetString;
exports.ipV4String = non_generic_2.ipV4String;
exports.ipV6SegmentString = non_generic_2.ipV6SegmentString;
exports.ipV6StringWithMaxSegmentCount = non_generic_2.ipV6StringWithMaxSegmentCount;
exports.ipV6String = non_generic_2.ipV6String;
exports.floatingPointFormatString = non_generic_2.floatingPointFormatString;
exports.integerFormatString = non_generic_2.integerFormatString;
exports.unsignedIntegerFormatString = non_generic_2.unsignedIntegerFormatString;
exports.finiteNumberString = non_generic_2.finiteNumberString;
exports.integerString = non_generic_2.integerString;
exports.unsignedIntegerString = non_generic_2.unsignedIntegerString;
exports.string = non_generic_2.string;
exports.jsonObjectString = non_generic_2.jsonObjectString;
exports.stringLength = non_generic_2.stringLength;
exports.stringExactLength = non_generic_2.stringExactLength;
exports.match = non_generic_2.match;
exports.notMatch = non_generic_2.notMatch;
exports.email = non_generic_2.email;
exports.emailAddress = non_generic_2.emailAddress;
exports.hexadecimalString = non_generic_2.hexadecimalString;
exports.toUpperCase = non_generic_2.toUpperCase;
exports.toLowerCase = non_generic_2.toLowerCase;
exports.padLeft = non_generic_2.padLeft;
exports.padRight = non_generic_2.padRight;
exports.subStringBlacklist = non_generic_2.subStringBlacklist;
exports.toTrimmed = non_generic_2.toTrimmed;
exports.byteLength = non_generic_2.byteLength;
exports.instanceOfUint8Array = non_generic_2.instanceOfUint8Array;
exports.uint8ArrayLength = non_generic_2.uint8ArrayLength;
exports.uint8ArrayExactLength = non_generic_2.uint8ArrayExactLength;
exports.nullToUndefined = non_generic_2.nullToUndefined;
exports.emptyStringToUndefined = non_generic_2.emptyStringToUndefined;
exports.whitespaceStringToUndefined = non_generic_2.whitespaceStringToUndefined;
exports.undefined = non_generic_2.undefined;
exports.unknown = non_generic_2.unknown;
__export(__webpack_require__(/*! ./generic */ "./node_modules/type-mapping/dist/fluent-lib/generic.js"));
__export(__webpack_require__(/*! ./field-map-ctor */ "./node_modules/type-mapping/dist/fluent-lib/field-map-ctor.js"));
var ArrayBufferUtil = __webpack_require__(/*! ../array-buffer-util */ "./node_modules/type-mapping/dist/array-buffer-util/index.js");
exports.ArrayBufferUtil = ArrayBufferUtil;
var EnumUtil = __webpack_require__(/*! ../enum-util */ "./node_modules/type-mapping/dist/enum-util/index.js");
exports.EnumUtil = EnumUtil;
var BigIntUtil = __webpack_require__(/*! ../bigint-util */ "./node_modules/type-mapping/dist/bigint-util/index.js");
exports.BigIntUtil = BigIntUtil;
var FixedPointUtil = __webpack_require__(/*! ../fixed-point-util */ "./node_modules/type-mapping/dist/fixed-point-util/index.js");
exports.FixedPointUtil = FixedPointUtil;
var FloatingPointUtil = __webpack_require__(/*! ../floating-point-util */ "./node_modules/type-mapping/dist/floating-point-util/index.js");
exports.FloatingPointUtil = FloatingPointUtil;
__export(__webpack_require__(/*! ../decorator */ "./node_modules/type-mapping/dist/decorator/index.js"));
var ErrorUtil = __webpack_require__(/*! ../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
exports.ErrorUtil = ErrorUtil;
var jsonApi = __webpack_require__(/*! ../json-api-lib */ "./node_modules/type-mapping/dist/json-api-lib/index.js");
exports.jsonApi = jsonApi;
__export(__webpack_require__(/*! ../mapper */ "./node_modules/type-mapping/dist/mapper/index.js"));
var mysql = __webpack_require__(/*! ../mysql-lib */ "./node_modules/type-mapping/dist/mysql-lib/index.js");
exports.mysql = mysql;
var TypeUtil = __webpack_require__(/*! ../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
exports.TypeUtil = TypeUtil;
__export(__webpack_require__(/*! ../error-code */ "./node_modules/type-mapping/dist/error-code.js"));
__export(__webpack_require__(/*! ../fluent-mapper */ "./node_modules/type-mapping/dist/fluent-mapper.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/fluent-lib/non-generic.js":
/*!******************************************************************!*\
  !*** ./node_modules/type-mapping/dist/fluent-lib/non-generic.js ***!
  \******************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var m = __webpack_require__(/*! ../functional-lib */ "./node_modules/type-mapping/dist/functional-lib/index.js");
var fluent_mapper_1 = __webpack_require__(/*! ../fluent-mapper */ "./node_modules/type-mapping/dist/fluent-mapper.js");
function omit(obj) {
    var keys = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        keys[_i - 1] = arguments[_i];
    }
    var result = __assign({}, obj);
    for (var _a = 0, keys_1 = keys; _a < keys_1.length; _a++) {
        var k = keys_1[_a];
        delete result[k];
    }
    return result;
}
function toFluentExport(obj) {
    var result = {};
    var _loop_1 = function (k) {
        if (!obj.hasOwnProperty(k)) {
            return "continue";
        }
        result[k] = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return fluent_mapper_1.fluentMapper(obj[k].apply(obj, args));
        };
    };
    for (var k in obj) {
        _loop_1(k);
    }
    return result;
}
//No need for omit<>() because `fluent-lib/index.ts`
//overwrites the generic functions with the ones
//in `fluent-lib/generic.ts`
var fluentExport = toFluentExport(omit(m, 
//Well, we need to omit this one because
//it doesn't return a SafeMapper<>
"castEnumFlyweight"));
module.exports = fluentExport;
//# sourceMappingURL=non-generic.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/fluent-mapper.js":
/*!*********************************************************!*\
  !*** ./node_modules/type-mapping/dist/fluent-mapper.js ***!
  \*********************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ./mapper */ "./node_modules/type-mapping/dist/mapper/index.js");
var functional_lib_1 = __webpack_require__(/*! ./functional-lib */ "./node_modules/type-mapping/dist/functional-lib/index.js");
var type_util_1 = __webpack_require__(/*! ./type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
function fluentMapper(f) {
    var result = function (name, mixed) {
        return f(name, mixed);
    };
    result.__optional = mapper_1.getOptionalFlagOrFalse(f);
    //== mapper/debug ==
    result._debugIsExpectedInput = function (_x) {
    };
    result._debugIsHandledInput = function (_x) {
    };
    result._debugIsMappableInput = function (_x) {
    };
    result._debugIsOutput = function (_x) {
    };
    //== mapper/operation ==
    result.map = function (name, mixed) {
        return mapper_1.map(f, name, mixed);
    };
    result.mapExpected = function (name, mixed) {
        return mapper_1.mapExpected(f, name, mixed);
    };
    result.mapMappable = function (name, mixed) {
        return mapper_1.mapMappable(f, name, mixed);
    };
    result.mapHandled = function (name, mixed) {
        return mapper_1.mapHandled(f, name, mixed);
    };
    result.tryMap = function (name, mixed) {
        return mapper_1.tryMap(f, name, mixed);
    };
    result.tryMapExpected = function (name, mixed) {
        return mapper_1.tryMapExpected(f, name, mixed);
    };
    result.tryMapMappable = function (name, mixed) {
        return mapper_1.tryMapMappable(f, name, mixed);
    };
    result.tryMapHandled = function (name, mixed) {
        return mapper_1.tryMapHandled(f, name, mixed);
    };
    result.expectMappableInput = function () {
        return fluentMapper(mapper_1.expectMappableInput(f));
    };
    result.withExpectedInput = function () {
        return fluentMapper(mapper_1.withExpectedInput(f)());
    };
    result.withMapper = function (newMapper) {
        return fluentMapper(mapper_1.withMapper(f, newMapper));
    };
    result.withName = function (name) {
        return fluentMapper(mapper_1.withName(f, name));
    };
    //== array ==
    result.array = function () {
        return fluentMapper(functional_lib_1.array(f));
    };
    result.readOnlyArray = function () {
        return fluentMapper(functional_lib_1.readOnlyArray(f));
    };
    result.arrayLikeToArray = function () {
        return fluentMapper(functional_lib_1.arrayLikeToArray(f));
    };
    result.arrayLikeToReadOnlyArray = function () {
        return fluentMapper(functional_lib_1.arrayLikeToReadOnlyArray(f));
    };
    //== array-like ==
    result.arrayLike = function () {
        return fluentMapper(functional_lib_1.arrayLike(f));
    };
    // == object
    result.derive = function (srcKey, dstKey) {
        return fluentMapper(functional_lib_1.derive(srcKey, dstKey, f));
    };
    result.rename = function (srcKey, dstKey) {
        return fluentMapper(functional_lib_1.rename(srcKey, dstKey, f));
    };
    result.unsafeStringIndexer = function () {
        return fluentMapper(functional_lib_1.unsafeStringIndexer(f));
    };
    result.stringIndexer = function () {
        return fluentMapper(functional_lib_1.stringIndexer(f));
    };
    //== operator ==
    result.cast = function (castDelegate, dstDelegate) {
        return fluentMapper(functional_lib_1.cast(f, castDelegate, dstDelegate));
    };
    result.deepMerge = function () {
        var arr = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            arr[_i] = arguments[_i];
        }
        var result = functional_lib_1.deepMerge.apply(void 0, [f].concat(arr));
        return fluentMapper(result);
    };
    result.excludeLiteral = function () {
        var arr = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            arr[_i] = arguments[_i];
        }
        return fluentMapper(functional_lib_1.excludeLiteral.apply(void 0, [f].concat(arr)));
    };
    result.orUndefined = function () {
        return fluentMapper(functional_lib_1.orUndefined(f));
    };
    result.orNull = function () {
        return fluentMapper(functional_lib_1.orNull(f));
    };
    result.orMaybe = function () {
        return fluentMapper(functional_lib_1.orMaybe(f));
    };
    result.notUndefined = function () {
        return fluentMapper(functional_lib_1.notUndefined(f));
    };
    result.notNull = function () {
        return fluentMapper(functional_lib_1.notNull(f));
    };
    result.notMaybe = function () {
        return fluentMapper(functional_lib_1.notMaybe(f));
    };
    result.optional = function () {
        return fluentMapper(functional_lib_1.optional(f));
    };
    result.notOptional = function () {
        return fluentMapper(functional_lib_1.notOptional(f));
    };
    result.or = function () {
        var arr = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            arr[_i] = arguments[_i];
        }
        return fluentMapper(functional_lib_1.or.apply(void 0, [f].concat(arr)));
    };
    result.pipe = (function () {
        var arr = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            arr[_i] = arguments[_i];
        }
        return fluentMapper(functional_lib_1.unsafePipe.apply(void 0, [f].concat(arr)));
    });
    result.unsafePipe = function () {
        var arr = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            arr[_i] = arguments[_i];
        }
        return fluentMapper(functional_lib_1.unsafePipe.apply(void 0, [f].concat(arr)));
    };
    //== type ==
    result.setImplementation = function (impl) {
        f.setImplementation(impl);
    };
    //const rt : FluentMapper<AnySafeMapper> = result;
    return type_util_1.setFunctionName(result, mapper_1.getNameOrEmptyString(f));
}
exports.fluentMapper = fluentMapper;
/*
import {stringToUnsignedInteger, inclusiveRange} from "./functional-lib";
const n = stringToUnsignedInteger();
const x = fluentMapper(n);
x.__optional
x.__expectedInput
x.__mappableInput
const y = x
    .pipe(
        inclusiveRange({
            min : 3.141,
            max : 6.282,
        })
    )
    .derive("x", "y");
const opt = x.optional()
    .withName("qwerty");
//const x2 = x.withExpectedInput<any>();
//*/ 
//# sourceMappingURL=fluent-mapper.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/any/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/any/index.js ***!
  \********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./unsafe-any */ "./node_modules/type-mapping/dist/functional-lib/any/unsafe-any.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/any/unsafe-any.js":
/*!*************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/any/unsafe-any.js ***!
  \*************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Prefer to use `unknown()` instead.
 */
function unsafeAny() {
    return function (_name, mixed) {
        return mixed;
    };
}
exports.unsafeAny = unsafeAny;
//# sourceMappingURL=unsafe-any.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/array-like/array-like.js":
/*!********************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/array-like/array-like.js ***!
  \********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "./node_modules/type-mapping/dist/mapper/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var implements_array_like_1 = __webpack_require__(/*! ./implements-array-like */ "./node_modules/type-mapping/dist/functional-lib/array-like/implements-array-like.js");
var string_util_1 = __webpack_require__(/*! ../../string-util */ "./node_modules/type-mapping/dist/string-util/index.js");
function copyArrayLike(arr) {
    var result = [];
    for (var i = 0; i < arr.length; ++i) {
        result.push(arr[i]);
    }
    return result;
}
function arrayLike(f) {
    return mapper_1.copyRunTimeModifier(f, operator_1.pipe(implements_array_like_1.implementsArrayLike(), function (name, mixed) {
        var result = mixed;
        var isCopy = false;
        for (var i = 0; i < mixed.length; ++i) {
            /**
             * For now, fail quick for array-likes.
             *
             * @todo Should we accumulate errors like in `objectFromMap()`?
             * The array-like might be too large. How large is too large?
             * Should we accumulate the first `n` errors before throwing?
             */
            var cur = f("" + name + string_util_1.toPropertyAccess(i), mixed[i]);
            //We do not mind === here.
            //If either is a BigInt polyfill, we are okay with the copy.
            if (cur === mixed[i]) {
                continue;
            }
            if (!isCopy) {
                result = copyArrayLike(result);
                isCopy = true;
            }
            result[i] = cur;
        }
        return result;
    }));
}
exports.arrayLike = arrayLike;
//# sourceMappingURL=array-like.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/array-like/implements-array-like.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/array-like/implements-array-like.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var length_1 = __webpack_require__(/*! ./length */ "./node_modules/type-mapping/dist/functional-lib/array-like/length.js");
/**
    With this, a `string` will pass the check.

    ```ts
    const x : ArrayLike<string> = "test";
    console.log(x[0]);
    ```
*/
function implementsArrayLike() {
    return length_1.length({});
}
exports.implementsArrayLike = implementsArrayLike;
//# sourceMappingURL=implements-array-like.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/array-like/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/array-like/index.js ***!
  \***************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./array-like */ "./node_modules/type-mapping/dist/functional-lib/array-like/array-like.js"));
__export(__webpack_require__(/*! ./implements-array-like */ "./node_modules/type-mapping/dist/functional-lib/array-like/implements-array-like.js"));
__export(__webpack_require__(/*! ./length */ "./node_modules/type-mapping/dist/functional-lib/array-like/length.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/array-like/length.js":
/*!****************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/array-like/length.js ***!
  \****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var object_1 = __webpack_require__(/*! ../object */ "./node_modules/type-mapping/dist/functional-lib/object/index.js");
var number_1 = __webpack_require__(/*! ../number */ "./node_modules/type-mapping/dist/functional-lib/number/index.js");
var mapper_1 = __webpack_require__(/*! ../../mapper */ "./node_modules/type-mapping/dist/mapper/index.js");
var string_1 = __webpack_require__(/*! ../string */ "./node_modules/type-mapping/dist/functional-lib/string/index.js");
var operator_2 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var string_util_1 = __webpack_require__(/*! ../../string-util */ "./node_modules/type-mapping/dist/string-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
var error_code_1 = __webpack_require__(/*! ../../error-code */ "./node_modules/type-mapping/dist/error-code.js");
function length(args) {
    var lengthDelegate = operator_1.pipe(number_1.unsignedInteger(), number_1.range({
        gtEq: args.min,
        ltEq: args.max,
    }));
    var expected = ((args.min == undefined) ?
        ((args.max == undefined) ?
            "value with \"length\" property" :
            "value of length less than, or equal to " + args.max.toString()) :
        ((args.max == undefined) ?
            "value of length greater than, or equal to " + args.min.toString() :
            (args.min == args.max) ?
                "value of length " + args.min.toString() :
                "value of length between " + args.min.toString() + " and " + args.max.toString()));
    return operator_1.pipe(operator_2.or(object_1.instanceOfObject(), string_1.string()), function (name, mixed) {
        var lengthResult = mapper_1.tryMapHandled(lengthDelegate, "" + name + string_util_1.toPropertyAccess("length"), mixed.length);
        if (lengthResult.success) {
            return mixed;
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must be " + expected,
                inputName: name,
                actualValue: mixed,
                expected: expected,
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_LENGTH,
                    min: args.min,
                    max: args.max,
                },
                propertyErrors: [
                    lengthResult.mappingError,
                ],
            });
        }
    });
}
exports.length = length;
//# sourceMappingURL=length.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/array/array.js":
/*!**********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/array/array.js ***!
  \**********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "./node_modules/type-mapping/dist/mapper/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var instance_of_array_1 = __webpack_require__(/*! ./instance-of-array */ "./node_modules/type-mapping/dist/functional-lib/array/instance-of-array.js");
var string_util_1 = __webpack_require__(/*! ../../string-util */ "./node_modules/type-mapping/dist/string-util/index.js");
function array(f) {
    return mapper_1.copyRunTimeModifier(f, operator_1.pipe(instance_of_array_1.instanceOfArray(), function (name, mixed) {
        var result = mixed;
        var isCopy = false;
        for (var i = 0; i < mixed.length; ++i) {
            /**
             * For now, fail quick for arrays.
             *
             * @todo Should we accumulate errors like in `objectFromMap()`?
             * The array might be too large. How large is too large?
             * Should we accumulate the first `n` errors before throwing?
             */
            var cur = f("" + name + string_util_1.toPropertyAccess(i), mixed[i]);
            //We do not mind === here.
            //If either is a BigInt polyfill, we are okay with the copy.
            if (cur === mixed[i]) {
                continue;
            }
            if (!isCopy) {
                result = result.slice();
                isCopy = true;
            }
            result[i] = cur;
        }
        return result;
    }));
}
exports.array = array;
function readOnlyArray(f) {
    return array(f);
}
exports.readOnlyArray = readOnlyArray;
//# sourceMappingURL=array.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/array/cast/array-like-to-array.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/array/cast/array-like-to-array.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var operator_1 = __webpack_require__(/*! ../../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var array_like_1 = __webpack_require__(/*! ../../array-like */ "./node_modules/type-mapping/dist/functional-lib/array-like/index.js");
function arrayLikeToArray(f) {
    return operator_1.pipe(array_like_1.arrayLike(f), (function (_name, arrayLike) {
        if (arrayLike instanceof Array) {
            return arrayLike;
        }
        var result = [];
        for (var i = 0; i < arrayLike.length; ++i) {
            result.push(arrayLike[i]);
        }
        return result;
    }));
}
exports.arrayLikeToArray = arrayLikeToArray;
function arrayLikeToReadOnlyArray(f) {
    return arrayLikeToArray(f);
}
exports.arrayLikeToReadOnlyArray = arrayLikeToReadOnlyArray;
//# sourceMappingURL=array-like-to-array.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/array/cast/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/array/cast/index.js ***!
  \***************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./array-like-to-array */ "./node_modules/type-mapping/dist/functional-lib/array/cast/array-like-to-array.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/array/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/array/index.js ***!
  \**********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./cast */ "./node_modules/type-mapping/dist/functional-lib/array/cast/index.js"));
__export(__webpack_require__(/*! ./array */ "./node_modules/type-mapping/dist/functional-lib/array/array.js"));
__export(__webpack_require__(/*! ./instance-of-array */ "./node_modules/type-mapping/dist/functional-lib/array/instance-of-array.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/array/instance-of-array.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/array/instance-of-array.js ***!
  \**********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
var error_code_1 = __webpack_require__(/*! ../../error-code */ "./node_modules/type-mapping/dist/error-code.js");
function instanceOfArray() {
    return function (name, mixed) {
        if (!(mixed instanceof Array)) {
            throw error_util_1.makeMappingError({
                message: name + " must be instance of Array; received " + type_util_1.toTypeStr(mixed),
                inputName: name,
                actualValue: mixed,
                expected: "array",
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_TYPE,
                },
            });
        }
        return mixed;
    };
}
exports.instanceOfArray = instanceOfArray;
function instanceOfReadOnlyArray() {
    return instanceOfArray();
}
exports.instanceOfReadOnlyArray = instanceOfReadOnlyArray;
//# sourceMappingURL=instance-of-array.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/bigint/bigint.js":
/*!************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/bigint/bigint.js ***!
  \************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var comparison_1 = __webpack_require__(/*! ./comparison */ "./node_modules/type-mapping/dist/functional-lib/bigint/comparison.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
var error_code_1 = __webpack_require__(/*! ../../error-code */ "./node_modules/type-mapping/dist/error-code.js");
function bigInt() {
    return function (name, mixed) {
        if (type_util_1.isBigInt(mixed)) {
            return mixed;
        }
        throw error_util_1.makeMappingError({
            message: name + " must be bigint; received " + type_util_1.toTypeStr(mixed),
            inputName: name,
            actualValue: mixed,
            expected: "bigint",
            expectedMeta: {
                errorCode: error_code_1.ErrorCode.EXPECTED_TYPE,
            },
        });
    };
}
exports.bigInt = bigInt;
/**
    bigint >= 0
*/
function unsignedBigInt() {
    var bigIntFactory = type_util_1.getBigIntFactoryFunctionOrError();
    return operator_1.pipe(bigInt(), comparison_1.bigIntGtEq(bigIntFactory(0)));
}
exports.unsignedBigInt = unsignedBigInt;
//# sourceMappingURL=bigint.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/bigint/cast.js":
/*!**********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/bigint/cast.js ***!
  \**********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var string_1 = __webpack_require__(/*! ../string */ "./node_modules/type-mapping/dist/functional-lib/string/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var bigint_1 = __webpack_require__(/*! ./bigint */ "./node_modules/type-mapping/dist/functional-lib/bigint/bigint.js");
var type_util_1 = __webpack_require__(/*! ../../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var number_1 = __webpack_require__(/*! ../number */ "./node_modules/type-mapping/dist/functional-lib/number/index.js");
/**
    Uses `integerFormatString()` and `BigInt()` internally.
*/
function stringToBigInt() {
    var bigIntFactory = type_util_1.getBigIntFactoryFunctionOrError();
    return operator_1.cast(string_1.integerFormatString(), bigIntFactory, bigint_1.bigInt());
}
exports.stringToBigInt = stringToBigInt;
/**
    Uses `unsignedIntegerFormatString()` and `BigInt()` internally.
*/
function stringToUnsignedBigInt() {
    var bigIntFactory = type_util_1.getBigIntFactoryFunctionOrError();
    return operator_1.cast(string_1.unsignedIntegerFormatString(), bigIntFactory, bigint_1.unsignedBigInt());
}
exports.stringToUnsignedBigInt = stringToUnsignedBigInt;
function integerToBigInt() {
    var bigIntFactory = type_util_1.getBigIntFactoryFunctionOrError();
    return operator_1.cast(number_1.integer(), bigIntFactory, bigint_1.bigInt());
}
exports.integerToBigInt = integerToBigInt;
function unsignedIntegerToUnsignedBigInt() {
    var bigIntFactory = type_util_1.getBigIntFactoryFunctionOrError();
    return operator_1.cast(number_1.unsignedInteger(), bigIntFactory, bigint_1.unsignedBigInt());
}
exports.unsignedIntegerToUnsignedBigInt = unsignedIntegerToUnsignedBigInt;
/**
    Uses `integerFormatString()` and `BigInt()` internally.
*/
function toBigInt() {
    var bigIntFactory = type_util_1.getBigIntFactoryFunctionOrError();
    return operator_1.cast(operator_1.or(string_1.integerFormatString(), number_1.integer()), bigIntFactory, bigint_1.bigInt());
}
exports.toBigInt = toBigInt;
/**
    Uses `unsignedIntegerFormatString()` and `BigInt()` internally.
*/
function toUnsignedBigInt() {
    var bigIntFactory = type_util_1.getBigIntFactoryFunctionOrError();
    return operator_1.cast(operator_1.or(string_1.unsignedIntegerFormatString(), number_1.unsignedInteger()), bigIntFactory, bigint_1.unsignedBigInt());
}
exports.toUnsignedBigInt = toUnsignedBigInt;
//# sourceMappingURL=cast.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/bigint/comparison.js":
/*!****************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/bigint/comparison.js ***!
  \****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var bigint_1 = __webpack_require__(/*! ./bigint */ "./node_modules/type-mapping/dist/functional-lib/bigint/bigint.js");
var literal_1 = __webpack_require__(/*! ../literal */ "./node_modules/type-mapping/dist/functional-lib/literal/index.js");
var type_util_1 = __webpack_require__(/*! ../../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var bigint_util_1 = __webpack_require__(/*! ../../bigint-util */ "./node_modules/type-mapping/dist/bigint-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
var error_code_1 = __webpack_require__(/*! ../../error-code */ "./node_modules/type-mapping/dist/error-code.js");
function bigIntGt(x) {
    return operator_1.pipe(bigint_1.bigInt(), function (name, num) {
        if (bigint_util_1.greaterThan(num, x)) {
            return num;
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must be greater than " + type_util_1.toLiteralStr(x),
                inputName: name,
                actualValue: num,
                expected: "greater than " + type_util_1.toLiteralStr(x),
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_GREATER_THAN,
                    gt: x,
                },
            });
        }
    });
}
exports.bigIntGt = bigIntGt;
function bigIntLt(x) {
    return operator_1.pipe(bigint_1.bigInt(), function (name, num) {
        if (bigint_util_1.lessThan(num, x)) {
            return num;
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must be less than " + type_util_1.toLiteralStr(x),
                inputName: name,
                actualValue: num,
                expected: "less than " + type_util_1.toLiteralStr(x),
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_LESS_THAN,
                    lt: x,
                },
            });
        }
    });
}
exports.bigIntLt = bigIntLt;
function bigIntGtEq(x) {
    return operator_1.pipe(bigint_1.bigInt(), function (name, num) {
        if (bigint_util_1.greaterThanOrEqual(num, x)) {
            return num;
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must be greater than, or equal to " + type_util_1.toLiteralStr(x),
                inputName: name,
                actualValue: num,
                expected: "greater than, or equal to " + type_util_1.toLiteralStr(x),
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_GREATER_THAN_OR_EQUAL_TO,
                    gtEq: x,
                },
            });
        }
    });
}
exports.bigIntGtEq = bigIntGtEq;
function bigIntLtEq(x) {
    return operator_1.pipe(bigint_1.bigInt(), function (name, num) {
        if (bigint_util_1.lessThanOrEqual(num, x)) {
            return num;
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must be less than, or equal to " + type_util_1.toLiteralStr(x),
                inputName: name,
                actualValue: num,
                expected: "less than, or equal to " + type_util_1.toLiteralStr(x),
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_LESS_THAN_OR_EQUAL_TO,
                    ltEq: x,
                },
            });
        }
    });
}
exports.bigIntLtEq = bigIntLtEq;
function bigIntRange(args) {
    var min = ((type_util_1.isBigInt(args.gt)) ?
        ((type_util_1.isBigInt(args.gtEq)) ?
            ((bigint_util_1.greaterThanOrEqual(args.gt, args.gtEq)) ?
                {
                    f: bigIntGt(args.gt),
                    inclusive: false,
                    value: args.gt,
                } :
                {
                    f: bigIntGtEq(args.gtEq),
                    inclusive: true,
                    value: args.gtEq,
                }) :
            {
                f: bigIntGt(args.gt),
                inclusive: false,
                value: args.gt,
            }) :
        ((type_util_1.isBigInt(args.gtEq)) ?
            {
                f: bigIntGtEq(args.gtEq),
                inclusive: true,
                value: args.gtEq,
            } :
            undefined));
    var max = ((type_util_1.isBigInt(args.lt)) ?
        ((type_util_1.isBigInt(args.ltEq)) ?
            ((bigint_util_1.lessThanOrEqual(args.lt, args.ltEq)) ?
                {
                    f: bigIntLt(args.lt),
                    inclusive: false,
                    value: args.lt,
                } :
                {
                    f: bigIntLtEq(args.ltEq),
                    inclusive: true,
                    value: args.ltEq,
                }) :
            {
                f: bigIntLt(args.lt),
                inclusive: false,
                value: args.lt,
            }) :
        ((type_util_1.isBigInt(args.ltEq)) ?
            {
                f: bigIntLtEq(args.ltEq),
                inclusive: true,
                value: args.ltEq,
            } :
            undefined));
    if (min == undefined) {
        if (max == undefined) {
            return bigint_1.bigInt();
        }
        else {
            return max.f;
        }
    }
    else {
        if (max == undefined) {
            return min.f;
        }
        else {
            if (bigint_util_1.greaterThan(min.value, max.value)) {
                throw new Error("Min value cannot be greater than max value");
            }
            else if (bigint_util_1.equal(min.value, max.value)) {
                if (min.inclusive && max.inclusive) {
                    return literal_1.literal(min.value);
                }
                else {
                    throw new Error("Min value cannot be equal to max value unless using gtEq and ltEq");
                }
            }
            else {
                if (bigint_util_1.addOneImpl(min.value.toString()) == max.value.toString() &&
                    !min.inclusive &&
                    !max.inclusive) {
                    throw new Error("There is no bigint 'x' where: " + min.value.toString() + " < x < " + max.value.toString());
                }
                return operator_1.pipe(min.f, max.f);
            }
        }
    }
}
exports.bigIntRange = bigIntRange;
//# sourceMappingURL=comparison.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/bigint/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/bigint/index.js ***!
  \***********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./bigint */ "./node_modules/type-mapping/dist/functional-lib/bigint/bigint.js"));
__export(__webpack_require__(/*! ./cast */ "./node_modules/type-mapping/dist/functional-lib/bigint/cast.js"));
__export(__webpack_require__(/*! ./comparison */ "./node_modules/type-mapping/dist/functional-lib/bigint/comparison.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/boolean/boolean.js":
/*!**************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/boolean/boolean.js ***!
  \**************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
var error_code_1 = __webpack_require__(/*! ../../error-code */ "./node_modules/type-mapping/dist/error-code.js");
function boolean() {
    return function (name, mixed) {
        if (typeof mixed != "boolean") {
            throw error_util_1.makeMappingError({
                message: name + " must be boolean; received " + type_util_1.toTypeStr(mixed),
                inputName: name,
                actualValue: mixed,
                expected: "boolean",
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_TYPE,
                },
            });
        }
        return mixed;
    };
}
exports.boolean = boolean;
//# sourceMappingURL=boolean.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/boolean/cast.js":
/*!***********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/boolean/cast.js ***!
  \***********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var number_1 = __webpack_require__(/*! ../number */ "./node_modules/type-mapping/dist/functional-lib/number/index.js");
var boolean_1 = __webpack_require__(/*! ./boolean */ "./node_modules/type-mapping/dist/functional-lib/boolean/boolean.js");
var string_1 = __webpack_require__(/*! ../string */ "./node_modules/type-mapping/dist/functional-lib/string/index.js");
var operator_2 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var literal_1 = __webpack_require__(/*! ../literal */ "./node_modules/type-mapping/dist/functional-lib/literal/index.js");
/**
    + Zero is false
    + All other finite number values are true
*/
function finiteNumberToBoolean() {
    return operator_1.cast(number_1.finiteNumber(), function (num) { return (num != 0); }, boolean_1.boolean());
}
exports.finiteNumberToBoolean = finiteNumberToBoolean;
/**
    + `"1"` is true
    + `/^true$/i` is true
    + All other string values are false

    TODO Is this a good convention?
*/
function stringToBoolean() {
    return operator_1.cast(string_1.string(), function (str) { return (str == "1" || str.toLowerCase() == "true"); }, boolean_1.boolean());
}
exports.stringToBoolean = stringToBoolean;
/**
    + Zero is false
    + All other finite number values are true
*/
function finiteNumberToTrue() {
    return operator_2.pipe(finiteNumberToBoolean(), literal_1.literal(true));
}
exports.finiteNumberToTrue = finiteNumberToTrue;
/**
    + Zero is false
    + All other finite number values are true
*/
function finiteNumberToFalse() {
    return operator_2.pipe(finiteNumberToBoolean(), literal_1.literal(false));
}
exports.finiteNumberToFalse = finiteNumberToFalse;
/**
    + `"1"` is true
    + `/^true$/i` is true
    + All other string values are false

    TODO Is this a good convention?
*/
function stringToTrue() {
    return operator_2.pipe(stringToBoolean(), literal_1.literal(true));
}
exports.stringToTrue = stringToTrue;
/**
    + `"1"` is true
    + `/^true$/i` is true
    + All other string values are false

    TODO Is this a good convention?
*/
function stringToFalse() {
    return operator_2.pipe(stringToBoolean(), literal_1.literal(false));
}
exports.stringToFalse = stringToFalse;
/**
    Uses `stringToBoolean()` and `finiteNumberToBoolean()` internally
*/
function toBoolean() {
    return operator_1.or(stringToBoolean(), finiteNumberToBoolean());
}
exports.toBoolean = toBoolean;
/**
    Uses `stringToTrue()` and `finiteNumberToTrue()` internally
*/
function toTrue() {
    return operator_1.or(stringToTrue(), finiteNumberToTrue());
}
exports.toTrue = toTrue;
/**
    Uses `stringToFalse()` and `finiteNumberToFalse()` internally
*/
function toFalse() {
    return operator_1.or(stringToFalse(), finiteNumberToFalse());
}
exports.toFalse = toFalse;
//# sourceMappingURL=cast.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/boolean/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/boolean/index.js ***!
  \************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./boolean */ "./node_modules/type-mapping/dist/functional-lib/boolean/boolean.js"));
__export(__webpack_require__(/*! ./cast */ "./node_modules/type-mapping/dist/functional-lib/boolean/cast.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/buffer/buffer.js":
/*!************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/buffer/buffer.js ***!
  \************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var uint_8_array_1 = __webpack_require__(/*! ../uint-8-array */ "./node_modules/type-mapping/dist/functional-lib/uint-8-array/index.js");
var buffer_ctor_1 = __webpack_require__(/*! ../../type-util/buffer-ctor */ "./node_modules/type-mapping/dist/type-util/buffer-ctor.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
var error_code_1 = __webpack_require__(/*! ../../error-code */ "./node_modules/type-mapping/dist/error-code.js");
function instanceOfBuffer() {
    return function (name, mixed) {
        if (!buffer_ctor_1.isInstanceOfBuffer(mixed)) {
            throw error_util_1.makeMappingError({
                message: name + " must be instance of Buffer; received " + type_util_1.toTypeStr(mixed),
                inputName: name,
                actualValue: mixed,
                expected: "Buffer",
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_TYPE,
                },
            });
        }
        return mixed;
    };
}
exports.instanceOfBuffer = instanceOfBuffer;
function bufferLength(args) {
    return operator_1.pipe(uint_8_array_1.byteLength(args), instanceOfBuffer());
}
exports.bufferLength = bufferLength;
function bufferExactLength(length) {
    return bufferLength({
        min: length,
        max: length,
    });
}
exports.bufferExactLength = bufferExactLength;
//# sourceMappingURL=buffer.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/buffer/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/buffer/index.js ***!
  \***********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./buffer */ "./node_modules/type-mapping/dist/functional-lib/buffer/buffer.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/date/cast.js":
/*!********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/date/cast.js ***!
  \********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var string_1 = __webpack_require__(/*! ../string */ "./node_modules/type-mapping/dist/functional-lib/string/index.js");
var instance_of_date_1 = __webpack_require__(/*! ./instance-of-date */ "./node_modules/type-mapping/dist/functional-lib/date/instance-of-date.js");
var number_1 = __webpack_require__(/*! ../number */ "./node_modules/type-mapping/dist/functional-lib/number/index.js");
/**
    Unsafe because it just uses `new Date(str)`
    to convert to a `Date`.

    This may have surprising results.
    ```ts
    new Date("1").getTime() === 978325200000
    ```
*/
function unsafeStringToDate() {
    return operator_1.cast(string_1.string(), function (str) { return new Date(str); }, instance_of_date_1.instanceOfDate());
}
exports.unsafeStringToDate = unsafeStringToDate;
/**
    Feel free to specify your own `Date` parsing function,
    using any JS Date library you want.

    It is safe for `dateParser` to throw `Error`s.

    Do not use `Date.parse(str)` or `new Date(str)`
    as implementations vary wildly.

    If you wish to use either of those,
    use `unsafeStringToDate()` instead.
*/
function dateToString(dateParser) {
    return operator_1.cast(string_1.string(), function (str) { return dateParser(str); }, instance_of_date_1.instanceOfDate());
}
exports.dateToString = dateToString;
/**
 * Convert the number of seconds since the Unix Epoch to a `Date`.
 *
 * The Unix Epoch is January 1st, 1970 at UTC.
 */
function unixTimestampSecondsToDate() {
    return operator_1.cast(number_1.integer(), 
    //Multiply by 1000 because `Date` ctor expects
    //milliseconds since Unix Epoch
    function (num) { return new Date(num * 1000); }, instance_of_date_1.instanceOfDate());
}
exports.unixTimestampSecondsToDate = unixTimestampSecondsToDate;
/**
 * Convert the number of milliseconds since the Unix Epoch to a `Date`.
 *
 * The Unix Epoch is January 1st, 1970 at UTC.
 */
function unixTimestampMillisecondsToDate() {
    return operator_1.cast(number_1.integer(), function (num) { return new Date(num); }, instance_of_date_1.instanceOfDate());
}
exports.unixTimestampMillisecondsToDate = unixTimestampMillisecondsToDate;
/**
 * Convert a `Date` to the number of seconds since the Unix Epoch.
 *
 * The Unix Epoch is January 1st, 1970 at UTC.
 */
function dateToUnixTimestampSeconds() {
    return operator_1.cast(instance_of_date_1.instanceOfDate(), function (d) { return Math.floor(d.getTime() / 1000); }, number_1.integer());
}
exports.dateToUnixTimestampSeconds = dateToUnixTimestampSeconds;
/**
 * Convert a `Date` to the number of milliseconds since the Unix Epoch.
 *
 * The Unix Epoch is January 1st, 1970 at UTC.
 */
function dateToUnixTimestampMilliseconds() {
    return operator_1.cast(instance_of_date_1.instanceOfDate(), function (d) { return d.getTime(); }, number_1.integer());
}
exports.dateToUnixTimestampMilliseconds = dateToUnixTimestampMilliseconds;
//# sourceMappingURL=cast.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/date/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/date/index.js ***!
  \*********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./cast */ "./node_modules/type-mapping/dist/functional-lib/date/cast.js"));
__export(__webpack_require__(/*! ./instance-of-date */ "./node_modules/type-mapping/dist/functional-lib/date/instance-of-date.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/date/instance-of-date.js":
/*!********************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/date/instance-of-date.js ***!
  \********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var number_1 = __webpack_require__(/*! ../number */ "./node_modules/type-mapping/dist/functional-lib/number/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
var error_code_1 = __webpack_require__(/*! ../../error-code */ "./node_modules/type-mapping/dist/error-code.js");
/**
 * Must be a valid date.
 *
 * `mixed.getTime()` must be a finite number.
 */
function instanceOfDate() {
    var unixTimestampMsDelegate = number_1.finiteNumber();
    return function (name, mixed) {
        if (!(mixed instanceof Date)) {
            throw error_util_1.makeMappingError({
                message: name + " must be instance of Date; received " + type_util_1.toTypeStr(mixed),
                inputName: name,
                actualValue: mixed,
                expected: "Date",
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_TYPE,
                },
            });
        }
        var unixTimestampMs = mixed.getTime();
        unixTimestampMsDelegate(name + ".getTime()", unixTimestampMs);
        return mixed;
    };
}
exports.instanceOfDate = instanceOfDate;
//# sourceMappingURL=instance-of-date.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/enum/cast-enum-flyweight.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/enum/cast-enum-flyweight.js ***!
  \***********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var enum_util_1 = __webpack_require__(/*! ../../enum-util */ "./node_modules/type-mapping/dist/enum-util/index.js");
var cast_1 = __webpack_require__(/*! ./cast */ "./node_modules/type-mapping/dist/functional-lib/enum/cast.js");
function castEnumFlyweight(e) {
    var keys = enum_util_1.getKeys(e);
    var result = {
        toValue: keys.reduce(function (memo, k) {
            memo[k] = cast_1.toOneEnumValue(e, k);
            return memo;
        }, cast_1.toEnumValue(e)),
        toKey: keys.reduce(function (memo, k) {
            memo[k] = cast_1.toOneEnumKey(e, k);
            return memo;
        }, cast_1.toEnumKey(e)),
    };
    return result;
}
exports.castEnumFlyweight = castEnumFlyweight;
//# sourceMappingURL=cast-enum-flyweight.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/enum/cast.js":
/*!********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/enum/cast.js ***!
  \********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var enum_util_1 = __webpack_require__(/*! ../../enum-util */ "./node_modules/type-mapping/dist/enum-util/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var mapper_1 = __webpack_require__(/*! ../../mapper */ "./node_modules/type-mapping/dist/mapper/index.js");
var literal_1 = __webpack_require__(/*! ../literal */ "./node_modules/type-mapping/dist/functional-lib/literal/index.js");
var type_util_1 = __webpack_require__(/*! ../../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
var error_code_1 = __webpack_require__(/*! ../../error-code */ "./node_modules/type-mapping/dist/error-code.js");
function toEnumValue(e) {
    var entries = enum_util_1.getEntries(e);
    var expected = entries.map(function (e) { return type_util_1.toLiteralStr(e.key); }).join("|");
    //https://github.com/microsoft/TypeScript/issues/31602
    //Discovered string and conditional types also give problems
    return mapper_1.mapper(operator_1.or(literal_1.unsafeLiteral.apply(void 0, entries.map(function (e) { return e.value; })), 
    //Not a value, so maybe a key?
    function (name, mixed) {
        for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
            var entry = entries_1[_i];
            if (mixed === entry.key) {
                return entry.value;
            }
        }
        throw error_util_1.makeMappingError({
            message: name + " must be " + expected + "; received " + type_util_1.toTypeStr(mixed),
            inputName: name,
            actualValue: mixed,
            expected: expected,
            expectedMeta: {
                errorCode: error_code_1.ErrorCode.EXPECTED_ENUM_KEY,
                mappableValues: entries.map(function (entry) { return entry.key; }),
                outputValues: entries.map(function (entry) { return entry.value; }),
                entries: entries.slice(),
            },
        });
    }));
}
exports.toEnumValue = toEnumValue;
function toEnumKey(e) {
    var entries = enum_util_1.getEntries(e);
    var expected = entries.map(function (e) { return type_util_1.toLiteralStr(e.value); }).join("|");
    //https://github.com/microsoft/TypeScript/issues/31602
    //Discovered string and conditional types also give problems
    return mapper_1.mapper(operator_1.or(literal_1.unsafeLiteral.apply(void 0, entries.map(function (e) { return e.key; })), 
    //Not a key, so maybe a value?
    function (name, mixed) {
        for (var _i = 0, entries_2 = entries; _i < entries_2.length; _i++) {
            var entry = entries_2[_i];
            if (mixed === entry.value) {
                return entry.key;
            }
        }
        throw error_util_1.makeMappingError({
            message: name + " must be " + expected + "; received " + type_util_1.toTypeStr(mixed),
            inputName: name,
            actualValue: mixed,
            expected: expected,
            expectedMeta: {
                errorCode: error_code_1.ErrorCode.EXPECTED_ENUM_VALUE,
                mappableValues: entries.map(function (entry) { return entry.value; }),
                outputValues: entries.map(function (entry) { return entry.key; }),
                entries: entries.slice(),
            },
        });
    }));
}
exports.toEnumKey = toEnumKey;
function toOneEnumValue(e, k) {
    var desiredValue = e[k];
    var entries = enum_util_1.getEntries(e);
    var validKeys = entries
        .filter(function (entry) { return (entry.value === desiredValue &&
        entry.key !== desiredValue); })
        .map(function (entry) { return entry.key; });
    var expected = (type_util_1.toLiteralOrTypeUnionStr([
        desiredValue
    ].concat(validKeys)));
    return mapper_1.mapper(function (name, mixed) {
        if (mixed === desiredValue) {
            return desiredValue;
        }
        for (var _i = 0, validKeys_1 = validKeys; _i < validKeys_1.length; _i++) {
            var validKey = validKeys_1[_i];
            if (mixed === validKey) {
                return desiredValue;
            }
        }
        throw error_util_1.makeMappingError({
            message: name + " must be " + expected + "; received " + type_util_1.toTypeStr(mixed),
            inputName: name,
            actualValue: mixed,
            expected: expected,
            expectedMeta: {
                errorCode: error_code_1.ErrorCode.EXPECTED_ONE_ENUM_VALUE_OR_VALID_ENUM_KEY,
                mappableValues: [desiredValue].concat(validKeys),
                outputValues: [desiredValue],
                desiredValue: desiredValue,
                validKeys: validKeys.slice(),
            },
        });
    });
}
exports.toOneEnumValue = toOneEnumValue;
function toOneEnumKey(e, k) {
    var validValue = e[k];
    var entries = enum_util_1.getEntries(e);
    var validKeys = entries
        .filter(function (e) { return (e.value === validValue &&
        e.key !== validValue &&
        e.key !== k); })
        .map(function (e) { return e.key; });
    var expected = (type_util_1.toLiteralOrTypeUnionStr([
        k
    ].concat(validKeys, [
        validValue,
    ])));
    return mapper_1.mapper(function (name, mixed) {
        if (mixed === k) {
            return k;
        }
        for (var _i = 0, validKeys_2 = validKeys; _i < validKeys_2.length; _i++) {
            var validKey = validKeys_2[_i];
            if (mixed === validKey) {
                return k;
            }
        }
        if (mixed === validValue) {
            return k;
        }
        throw error_util_1.makeMappingError({
            message: name + " must be " + expected + "; received " + type_util_1.toTypeStr(mixed),
            inputName: name,
            actualValue: mixed,
            expected: expected,
            expectedMeta: {
                mappableValues: [k].concat(validKeys, [validValue]),
                outputValues: [k],
                desiredKey: k,
                validKeys: validKeys.slice(),
                validValue: validValue,
            },
        });
    });
}
exports.toOneEnumKey = toOneEnumKey;
//# sourceMappingURL=cast.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/enum/enum.js":
/*!********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/enum/enum.js ***!
  \********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var enum_util_1 = __webpack_require__(/*! ../../enum-util */ "./node_modules/type-mapping/dist/enum-util/index.js");
var literal_1 = __webpack_require__(/*! ../literal */ "./node_modules/type-mapping/dist/functional-lib/literal/index.js");
function enumKey(e) {
    return literal_1.unsafeLiteral.apply(void 0, enum_util_1.getKeys(e));
}
exports.enumKey = enumKey;
function enumValue(e) {
    return literal_1.unsafeLiteral.apply(void 0, enum_util_1.getValues(e));
}
exports.enumValue = enumValue;
//# sourceMappingURL=enum.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/enum/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/enum/index.js ***!
  \*********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./cast-enum-flyweight */ "./node_modules/type-mapping/dist/functional-lib/enum/cast-enum-flyweight.js"));
__export(__webpack_require__(/*! ./cast */ "./node_modules/type-mapping/dist/functional-lib/enum/cast.js"));
__export(__webpack_require__(/*! ./enum */ "./node_modules/type-mapping/dist/functional-lib/enum/enum.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/index.js ***!
  \****************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./any */ "./node_modules/type-mapping/dist/functional-lib/any/index.js"));
__export(__webpack_require__(/*! ./array */ "./node_modules/type-mapping/dist/functional-lib/array/index.js"));
__export(__webpack_require__(/*! ./array-like */ "./node_modules/type-mapping/dist/functional-lib/array-like/index.js"));
__export(__webpack_require__(/*! ./bigint */ "./node_modules/type-mapping/dist/functional-lib/bigint/index.js"));
__export(__webpack_require__(/*! ./boolean */ "./node_modules/type-mapping/dist/functional-lib/boolean/index.js"));
__export(__webpack_require__(/*! ./buffer */ "./node_modules/type-mapping/dist/functional-lib/buffer/index.js"));
__export(__webpack_require__(/*! ./date */ "./node_modules/type-mapping/dist/functional-lib/date/index.js"));
__export(__webpack_require__(/*! ./enum */ "./node_modules/type-mapping/dist/functional-lib/enum/index.js"));
__export(__webpack_require__(/*! ./json-object */ "./node_modules/type-mapping/dist/functional-lib/json-object/index.js"));
__export(__webpack_require__(/*! ./literal */ "./node_modules/type-mapping/dist/functional-lib/literal/index.js"));
__export(__webpack_require__(/*! ./never */ "./node_modules/type-mapping/dist/functional-lib/never/index.js"));
__export(__webpack_require__(/*! ./non-maybe */ "./node_modules/type-mapping/dist/functional-lib/non-maybe/index.js"));
__export(__webpack_require__(/*! ./null */ "./node_modules/type-mapping/dist/functional-lib/null/index.js"));
__export(__webpack_require__(/*! ./number */ "./node_modules/type-mapping/dist/functional-lib/number/index.js"));
__export(__webpack_require__(/*! ./object */ "./node_modules/type-mapping/dist/functional-lib/object/index.js"));
__export(__webpack_require__(/*! ./operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js"));
__export(__webpack_require__(/*! ./string */ "./node_modules/type-mapping/dist/functional-lib/string/index.js"));
__export(__webpack_require__(/*! ./type */ "./node_modules/type-mapping/dist/functional-lib/type/index.js"));
__export(__webpack_require__(/*! ./uint-8-array */ "./node_modules/type-mapping/dist/functional-lib/uint-8-array/index.js"));
__export(__webpack_require__(/*! ./undefined */ "./node_modules/type-mapping/dist/functional-lib/undefined/index.js"));
__export(__webpack_require__(/*! ./unknown */ "./node_modules/type-mapping/dist/functional-lib/unknown/index.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/json-object/cast.js":
/*!***************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/json-object/cast.js ***!
  \***************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
/**
    Calls `JSON.parse()` once, may call `JSON.stringify()` zero or one times.
*/
function stringToJsonObject() {
    return function (name, mixed) {
        if (typeof mixed != "string") {
            try {
                var str = JSON.stringify(mixed);
                if (typeof str == "string" && str[0] == "{") {
                    if (type_util_1.isBigIntNativelySupported() || !type_util_1.isBigInt(mixed)) {
                        return JSON.parse(str);
                    }
                }
                throw error_util_1.makeMappingError({
                    message: name + " must be JSON Object; received " + type_util_1.toTypeStr(mixed),
                    inputName: name,
                    actualValue: mixed,
                    expected: "JSON Object",
                });
            }
            catch (err) {
                throw error_util_1.makeMappingError({
                    message: name + " must be JSON Object; " + err.message,
                    inputName: name,
                    actualValue: mixed,
                    expected: "JSON Object",
                });
            }
        }
        if (!/^\s*\{/.test(mixed)) {
            throw error_util_1.makeMappingError({
                message: name + " must be JSON Object string",
                inputName: name,
                actualValue: mixed,
                expected: "JSON Object string",
            });
        }
        try {
            return JSON.parse(mixed);
        }
        catch (err) {
            throw error_util_1.makeMappingError({
                message: name + " must be valid JSON Object string; " + err.message,
                inputName: name,
                actualValue: mixed,
                expected: "valid JSON Object string",
            });
        }
    };
}
exports.stringToJsonObject = stringToJsonObject;
//# sourceMappingURL=cast.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/json-object/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/json-object/index.js ***!
  \****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./cast */ "./node_modules/type-mapping/dist/functional-lib/json-object/cast.js"));
__export(__webpack_require__(/*! ./json-object */ "./node_modules/type-mapping/dist/functional-lib/json-object/json-object.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/json-object/json-object.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/json-object/json-object.js ***!
  \**********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
/**
    Calls `JSON.stringify()` and `JSON.parse()` once.

    Always returns a new object.
*/
function jsonObject() {
    return function (name, mixed) {
        try {
            var str = JSON.stringify(mixed);
            if (typeof str == "string" && str[0] == "{") {
                if (type_util_1.isBigIntNativelySupported() || !type_util_1.isBigInt(mixed)) {
                    return JSON.parse(str);
                }
            }
            throw error_util_1.makeMappingError({
                message: name + " must be JSON Object; received " + type_util_1.toTypeStr(mixed),
                inputName: name,
                actualValue: mixed,
                expected: "JSON Object",
            });
        }
        catch (err) {
            throw error_util_1.makeMappingError({
                message: name + " must be JSON Object; " + err.message,
                inputName: name,
                actualValue: mixed,
                expected: "JSON Object",
            });
        }
    };
}
exports.jsonObject = jsonObject;
//# sourceMappingURL=json-object.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/literal/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/literal/index.js ***!
  \************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./literal */ "./node_modules/type-mapping/dist/functional-lib/literal/literal.js"));
__export(__webpack_require__(/*! ./tuple-literal */ "./node_modules/type-mapping/dist/functional-lib/literal/tuple-literal.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/literal/literal.js":
/*!**************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/literal/literal.js ***!
  \**************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
/**
 * Returns a mapper that validates if the input is an element of `arr`
 *
 * This function throws an error if `arr.length == 0`
 *
 * @param arr
 *  @see {@link LiteralType}
 */
function unsafeLiteral() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    if (arr.length == 0) {
        throw new Error("Cannot map zero literals");
    }
    var expected = type_util_1.toLiteralUnionStr(arr);
    return function (name, mixed) {
        for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {
            var item = arr_1[_i];
            if (type_util_1.strictEqual(mixed, item)) {
                return mixed;
            }
        }
        throw error_util_1.makeMappingError({
            message: name + " must be " + expected + "; received " + type_util_1.toTypeStr(mixed),
            inputName: name,
            actualValue: mixed,
            expected: expected,
            expectedMeta: {
                mappableValues: arr.slice(),
                outputValues: arr.slice(),
            },
        });
    };
}
exports.unsafeLiteral = unsafeLiteral;
/**
 * Returns a mapper that validates if the input is one of the arguments
 *
 * @param arg0
 * @param arr
 *  @see {@link LiteralType}
 */
function literal(arg0) {
    var arr = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        arr[_i - 1] = arguments[_i];
    }
    return unsafeLiteral.apply(void 0, [arg0].concat(arr));
}
exports.literal = literal;
//# sourceMappingURL=literal.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/literal/tuple-literal.js":
/*!********************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/literal/tuple-literal.js ***!
  \********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var array_1 = __webpack_require__(/*! ../array */ "./node_modules/type-mapping/dist/functional-lib/array/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
var array_like_1 = __webpack_require__(/*! ../array-like */ "./node_modules/type-mapping/dist/functional-lib/array-like/index.js");
var string_util_1 = __webpack_require__(/*! ../../string-util */ "./node_modules/type-mapping/dist/string-util/index.js");
/**
 * Returns a mapper that checks if incoming data matches the tuple `TupleT`.
 *
 * ```ts
 * tupleLiteral("a", "b")("x", ["a", "b"]);       //OK!
 * tupleLiteral("a", "b")("x", ["a", "b", "c"]);  //Error
 * tupleLiteral("a", "b")("x", ["a"]);            //Error
 * tupleLiteral("a", "b")("x", ["b", "a"]);       //Error
 * ```
 *
 * @param tuple The tuple incoming data must equal to
 */
function tupleLiteral() {
    var tuple = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        tuple[_i] = arguments[_i];
    }
    var lengthDelegate = array_like_1.length({
        min: tuple.length,
        max: tuple.length,
    });
    return operator_1.pipe(array_1.instanceOfArray(), function (name, mixed) {
        lengthDelegate(name, mixed);
        for (var i = 0; i < tuple.length; ++i) {
            if (!type_util_1.strictEqual(mixed[i], tuple[i])) {
                throw error_util_1.makeMappingError({
                    message: "" + name + string_util_1.toPropertyAccess(i) + " must be " + type_util_1.toLiteralStr(tuple[i]) + "; received " + type_util_1.toTypeStr(mixed[i]),
                    inputName: "" + name + string_util_1.toPropertyAccess(i),
                    actualValue: mixed[i],
                    expected: type_util_1.toLiteralStr(tuple[i]),
                    expectedMeta: {
                        mappableValues: [
                            tuple.slice()
                        ],
                        outputValues: [
                            tuple.slice()
                        ],
                    },
                });
            }
        }
        return mixed;
    });
}
exports.tupleLiteral = tupleLiteral;
//# sourceMappingURL=tuple-literal.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/never/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/never/index.js ***!
  \**********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./never */ "./node_modules/type-mapping/dist/functional-lib/never/never.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/never/never.js":
/*!**********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/never/never.js ***!
  \**********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
/**
 * Use this if something is never supposed to have a value.
 * Not even `undefined`.
 *
 * For example, `never[]` can be,
 * ```ts
 * const arrayOfNever = array(never());
 * ```
 *
 * The only value that will satisfy this mapper is the empty array.
 */
function never() {
    return function (name, mixed) {
        throw error_util_1.makeMappingError({
            message: name + " must be never",
            inputName: name,
            actualValue: mixed,
            expected: "never",
        });
    };
}
exports.never = never;
//# sourceMappingURL=never.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/non-maybe/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/non-maybe/index.js ***!
  \**************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./non-maybe */ "./node_modules/type-mapping/dist/functional-lib/non-maybe/non-maybe.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/non-maybe/non-maybe.js":
/*!******************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/non-maybe/non-maybe.js ***!
  \******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var any_1 = __webpack_require__(/*! ../any */ "./node_modules/type-mapping/dist/functional-lib/any/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
function nonMaybe() {
    return operator_1.notMaybe(any_1.unsafeAny());
}
exports.nonMaybe = nonMaybe;
//# sourceMappingURL=non-maybe.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/null/cast.js":
/*!********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/null/cast.js ***!
  \********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var literal_1 = __webpack_require__(/*! ../literal */ "./node_modules/type-mapping/dist/functional-lib/literal/index.js");
var null_1 = __webpack_require__(/*! ./null */ "./node_modules/type-mapping/dist/functional-lib/null/null.js");
var string_1 = __webpack_require__(/*! ../string */ "./node_modules/type-mapping/dist/functional-lib/string/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
function undefinedToNull() {
    return function (name, mixed) {
        //We do not mind === here.
        if (mixed === undefined || mixed === null) {
            return null;
        }
        throw error_util_1.makeMappingError({
            message: name + " must be null|undefined; received " + type_util_1.toTypeStr(mixed),
            inputName: name,
            actualValue: mixed,
            expected: "null|undefined",
            expectedMeta: {
                mappableValues: [null, undefined],
                outputValues: [null],
            },
        });
    };
}
exports.undefinedToNull = undefinedToNull;
function emptyStringToNull() {
    return operator_1.cast(literal_1.literal(""), function () { return null; }, null_1.null());
}
exports.emptyStringToNull = emptyStringToNull;
/**
    An empty string, or a string of only whitespace
*/
function whitespaceStringToNull() {
    return operator_1.cast(string_1.match(/^\s*$/, function (name) {
        return {
            message: name + " must be a whitespace string",
            expected: "whitespace string",
        };
    }), function () { return null; }, null_1.null());
}
exports.whitespaceStringToNull = whitespaceStringToNull;
//# sourceMappingURL=cast.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/null/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/null/index.js ***!
  \*********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./cast */ "./node_modules/type-mapping/dist/functional-lib/null/cast.js"));
__export(__webpack_require__(/*! ./null */ "./node_modules/type-mapping/dist/functional-lib/null/null.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/null/null.js":
/*!********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/null/null.js ***!
  \********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
function nil() {
    return function (name, mixed) {
        //We do not mind === here.
        if (mixed === null) {
            return mixed;
        }
        throw error_util_1.makeMappingError({
            message: name + " must be null; received " + type_util_1.toTypeStr(mixed),
            inputName: name,
            actualValue: mixed,
            expected: "null",
            expectedMeta: {
                mappableValues: [null],
                outputValues: [null],
            }
        });
    };
}
exports.null = nil;
//# sourceMappingURL=null.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/number/cast.js":
/*!**********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/number/cast.js ***!
  \**********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var string_1 = __webpack_require__(/*! ../string */ "./node_modules/type-mapping/dist/functional-lib/string/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var number_1 = __webpack_require__(/*! ./number */ "./node_modules/type-mapping/dist/functional-lib/number/number.js");
var bigint_1 = __webpack_require__(/*! ../bigint/bigint */ "./node_modules/type-mapping/dist/functional-lib/bigint/bigint.js");
/**
    Uses `floatingPointFormatString()` and `parseFloat()` internally.

    ```ts
    const s = "999999999999999999999999999"
    //Output is "1e+27" due to loss in precision
    stringToFiniteNumber("", s).toString()
    ```
*/
function stringToFiniteNumber() {
    return operator_1.cast(string_1.floatingPointFormatString(), parseFloat, number_1.finiteNumber());
}
exports.stringToFiniteNumber = stringToFiniteNumber;
/**
    Uses `integerFormatString()` and `parseFloat()` internally.

    ```ts
    const s = "999999999999999999999999999"
    //Output is "1e+27" due to loss in precision
    stringToInteger("", s).toString()
    ```
*/
function stringToInteger() {
    return operator_1.cast(string_1.integerFormatString(), parseFloat, number_1.integer());
}
exports.stringToInteger = stringToInteger;
/**
    Uses `unsignedIntegerFormatString()` and `parseFloat()` internally.

    ```ts
    const s = "999999999999999999999999999"
    //Output is "1e+27" due to loss in precision
    stringToUnsignedInteger("", s).toString()
    ```
*/
function stringToUnsignedInteger() {
    return operator_1.cast(string_1.unsignedIntegerFormatString(), parseFloat, number_1.unsignedInteger());
}
exports.stringToUnsignedInteger = stringToUnsignedInteger;
/**
    Uses `floatingPointFormatString()` and `parseFloat()` internally.

    ```ts
    const s = "999999999999999999999999999"
    //Output is "1e+27" due to loss in precision
    toFiniteNumber("", s).toString()
    ```

    -----

    ```ts
    const b = BigInt("999999999999999999999999999")
    //Output is "1e+27" due to loss in precision
    toFiniteNumber("", b).toString()
    ```
*/
function toFiniteNumber() {
    return operator_1.cast(operator_1.or(string_1.floatingPointFormatString(), operator_1.pipe(bigint_1.bigInt(), function (_name, b) {
        return b.toString();
    })), parseFloat, number_1.finiteNumber());
}
exports.toFiniteNumber = toFiniteNumber;
/**
    Uses `floatingPointFormatString()` and `parseFloat()` internally.

    ```ts
    const s = "999999999999999999999999999"
    //Output is "1e+27" due to loss in precision
    toUnsafeNumber("", s).toString()
    ```

    -----

    ```ts
    const b = BigInt("999999999999999999999999999")
    //Output is "1e+27" due to loss in precision
    toUnsafeNumber("", b).toString()
    ```
*/
function toUnsafeNumber() {
    return operator_1.cast(operator_1.or(string_1.floatingPointFormatString(), operator_1.pipe(bigint_1.bigInt(), function (_name, b) {
        return b.toString();
    })), parseFloat, number_1.unsafeNumber());
}
exports.toUnsafeNumber = toUnsafeNumber;
/**
    Uses `integerFormatString()` and `parseFloat()` internally.

    ```ts
    const s = "999999999999999999999999999"
    //Output is "1e+27" due to loss in precision
    toInteger("", s).toString()
    ```

    -----

    ```ts
    const b = BigInt("999999999999999999999999999")
    //Output is "1e+27" due to loss in precision
    toInteger("", b).toString()
    ```
*/
function toInteger() {
    return operator_1.cast(operator_1.or(string_1.integerFormatString(), operator_1.pipe(bigint_1.bigInt(), function (_name, b) {
        return b.toString();
    })), parseFloat, number_1.integer());
}
exports.toInteger = toInteger;
/**
    Uses `unsignedIntegerFormatString()` and `parseFloat()` internally.

    ```ts
    const s = "999999999999999999999999999"
    //Output is "1e+27" due to loss in precision
    toUnsignedInteger("", s).toString()
    ```

    -----

    ```ts
    const b = BigInt("999999999999999999999999999")
    //Output is "1e+27" due to loss in precision
    toUnsignedInteger("", b).toString()
    ```
*/
function toUnsignedInteger() {
    return operator_1.cast(operator_1.or(string_1.unsignedIntegerFormatString(), operator_1.pipe(bigint_1.bigInt(), function (_name, b) {
        return b.toString();
    })), parseFloat, number_1.unsignedInteger());
}
exports.toUnsignedInteger = toUnsignedInteger;
//# sourceMappingURL=cast.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/number/comparison.js":
/*!****************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/number/comparison.js ***!
  \****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var number_1 = __webpack_require__(/*! ./number */ "./node_modules/type-mapping/dist/functional-lib/number/number.js");
var literal_1 = __webpack_require__(/*! ../literal */ "./node_modules/type-mapping/dist/functional-lib/literal/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
var error_code_1 = __webpack_require__(/*! ../../error-code */ "./node_modules/type-mapping/dist/error-code.js");
function gt(x) {
    return operator_1.pipe(number_1.finiteNumber(), function (name, num) {
        if (num > x) {
            return num;
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must be greater than " + x,
                inputName: name,
                actualValue: num,
                expected: "greater than " + x,
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_GREATER_THAN,
                    gt: x,
                },
            });
        }
    });
}
exports.gt = gt;
function lt(x) {
    return operator_1.pipe(number_1.finiteNumber(), function (name, num) {
        if (num < x) {
            return num;
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must be less than " + x,
                inputName: name,
                actualValue: num,
                expected: "less than " + x,
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_LESS_THAN,
                    lt: x,
                },
            });
        }
    });
}
exports.lt = lt;
function gtEq(x) {
    return operator_1.pipe(number_1.finiteNumber(), function (name, num) {
        if (num >= x) {
            return num;
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must be greater than, or equal to " + x,
                inputName: name,
                actualValue: num,
                expected: "greater than, or equal to " + x,
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_GREATER_THAN_OR_EQUAL_TO,
                    gtEq: x,
                },
            });
        }
    });
}
exports.gtEq = gtEq;
function ltEq(x) {
    return operator_1.pipe(number_1.finiteNumber(), function (name, num) {
        if (num <= x) {
            return num;
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must be less than, or equal to " + x,
                inputName: name,
                actualValue: num,
                expected: "less than, or equal to " + x,
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_LESS_THAN_OR_EQUAL_TO,
                    ltEq: x,
                },
            });
        }
    });
}
exports.ltEq = ltEq;
function range(args) {
    var min = ((typeof args.gt == "number") ?
        ((typeof args.gtEq == "number") ?
            ((args.gt >= args.gtEq) ?
                {
                    f: gt(args.gt),
                    inclusive: false,
                    value: args.gt,
                } :
                {
                    f: gtEq(args.gtEq),
                    inclusive: true,
                    value: args.gtEq,
                }) :
            {
                f: gt(args.gt),
                inclusive: false,
                value: args.gt,
            }) :
        ((typeof args.gtEq == "number") ?
            {
                f: gtEq(args.gtEq),
                inclusive: true,
                value: args.gtEq,
            } :
            undefined));
    var max = ((typeof args.lt == "number") ?
        ((typeof args.ltEq == "number") ?
            ((args.lt <= args.ltEq) ?
                {
                    f: lt(args.lt),
                    inclusive: false,
                    value: args.lt,
                } :
                {
                    f: ltEq(args.ltEq),
                    inclusive: true,
                    value: args.ltEq,
                }) :
            {
                f: lt(args.lt),
                inclusive: false,
                value: args.lt,
            }) :
        ((typeof args.ltEq == "number") ?
            {
                f: ltEq(args.ltEq),
                inclusive: true,
                value: args.ltEq,
            } :
            undefined));
    if (min == undefined) {
        if (max == undefined) {
            return number_1.finiteNumber();
        }
        else {
            return max.f;
        }
    }
    else {
        if (max == undefined) {
            return min.f;
        }
        else {
            if (min.value > max.value) {
                throw new Error("Min value cannot be greater than max value");
            }
            else if (min.value == max.value) {
                if (min.inclusive && max.inclusive) {
                    return literal_1.literal(min.value);
                }
                else {
                    throw new Error("Min value cannot be equal to max value unless using gtEq and ltEq");
                }
            }
            else {
                return operator_1.pipe(min.f, max.f);
            }
        }
    }
}
exports.range = range;
//# sourceMappingURL=comparison.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/number/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/number/index.js ***!
  \***********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./cast */ "./node_modules/type-mapping/dist/functional-lib/number/cast.js"));
__export(__webpack_require__(/*! ./comparison */ "./node_modules/type-mapping/dist/functional-lib/number/comparison.js"));
__export(__webpack_require__(/*! ./number */ "./node_modules/type-mapping/dist/functional-lib/number/number.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/number/number.js":
/*!************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/number/number.js ***!
  \************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var comparison_1 = __webpack_require__(/*! ./comparison */ "./node_modules/type-mapping/dist/functional-lib/number/comparison.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
var error_code_1 = __webpack_require__(/*! ../../error-code */ "./node_modules/type-mapping/dist/error-code.js");
//Unsafe because it allows NaN and +/-Infinity
function unsafeNumber() {
    return function (name, mixed) {
        if (typeof mixed != "number") {
            throw error_util_1.makeMappingError({
                message: name + " must be number; received " + type_util_1.toTypeStr(mixed),
                inputName: name,
                actualValue: mixed,
                expected: "number",
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_TYPE,
                },
            });
        }
        return mixed;
    };
}
exports.unsafeNumber = unsafeNumber;
function finiteNumber() {
    return operator_1.pipe(unsafeNumber(), function (name, num) {
        if (isNaN(num)) {
            throw error_util_1.makeMappingError({
                message: name + " must be finite number; received NaN",
                inputName: name,
                actualValue: num,
                expected: "finite number",
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_TYPE,
                },
            });
        }
        if (!isFinite(num)) {
            throw error_util_1.makeMappingError({
                message: name + " must be finite number; received " + num,
                inputName: name,
                actualValue: num,
                expected: "finite number",
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_TYPE,
                },
            });
        }
        return num;
    });
}
exports.finiteNumber = finiteNumber;
function integer() {
    return operator_1.pipe(finiteNumber(), function (name, num) {
        if (Math.floor(num) !== num) {
            throw error_util_1.makeMappingError({
                message: name + " must be integer; received double",
                inputName: name,
                actualValue: num,
                expected: "integer",
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_TYPE,
                },
            });
        }
        return num;
    });
}
exports.integer = integer;
/**
    An unsigned integer is an integer >= 0
*/
function unsignedInteger() {
    return operator_1.pipe(integer(), comparison_1.gtEq(0));
}
exports.unsignedInteger = unsignedInteger;
//# sourceMappingURL=number.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/object/derive-map.js":
/*!****************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/object/derive-map.js ***!
  \****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "./node_modules/type-mapping/dist/mapper/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var derive_1 = __webpack_require__(/*! ./derive */ "./node_modules/type-mapping/dist/functional-lib/object/derive.js");
var to_empty_object_1 = __webpack_require__(/*! ./to-empty-object */ "./node_modules/type-mapping/dist/functional-lib/object/to-empty-object.js");
function deriveMap(map) {
    var arr = [];
    for (var k in map) {
        if (!map.hasOwnProperty(k)) {
            continue;
        }
        var f = map[k];
        arr.push(derive_1.derive(k, mapper_1.getNameOrEmptyString(f), f));
    }
    if (arr.length == 0) {
        return to_empty_object_1.toEmptyObject();
    }
    return operator_1.unsafeDeepMerge.apply(void 0, arr);
}
exports.deriveMap = deriveMap;
/*
import {string} from "../string";
import {withName, withExpectedInput} from "../../mapper";
import {unsignedInteger, stringToFiniteNumber} from "../number";
import {optional} from "../operator";

const m = renameMap({
    x : withName(string(), "y"),
    x2 : withName(unsignedInteger(), "y"),
    a : withExpectedInput(withName(stringToFiniteNumber(), "b"))<string>(),
    a2 : withExpectedInput(withName(stringToFiniteNumber(), "b2"))<string|number>(),
    a3 : withExpectedInput(withName(stringToFiniteNumber(), "b2"))<number>(),
    o : withExpectedInput(withName(optional(stringToFiniteNumber()), "_o"))<number>(),
});
m.__expectedInput
m.__mappableInput

const x = optional(withExpectedInput(withName(stringToFiniteNumber(), "_o"))<number>());

const m2 = renameMap({
    x : withName(string(), "y" as string),
    x2 : withName(unsignedInteger(), "y" as string),
    a : withExpectedInput(withName(stringToFiniteNumber(), "b"))<string>(),
    a2 : withExpectedInput(withName(stringToFiniteNumber(), "b2"))<string|number>(),
    a3 : withExpectedInput(withName(stringToFiniteNumber(), "b2"))<number>(),
    o : withExpectedInput(withName(optional(stringToFiniteNumber()), "_o"))<number>(),
    c2 : withExpectedInput(withName(stringToFiniteNumber(), "c2"))<string|number>(),
    c3 : withExpectedInput(withName(string(), "c2"))<string>(),
});
//*/ 
//# sourceMappingURL=derive-map.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/object/derive.js":
/*!************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/object/derive.js ***!
  \************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "./node_modules/type-mapping/dist/mapper/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var instance_of_object_1 = __webpack_require__(/*! ./instance-of-object */ "./node_modules/type-mapping/dist/functional-lib/object/instance-of-object.js");
var string_util_1 = __webpack_require__(/*! ../../string-util */ "./node_modules/type-mapping/dist/string-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
function derive(srcKey, dstKey, f) {
    /**
        Must property be explicitly set?

                        | `orUndefined` | `optional` | `runTimeRequired()`
        compile-time    | -no-effect-   | optional   | required
        run-time        | optional      | optional   | required
    */
    var runTimeRequired = mapper_1.getRunTimeRequiredFlagOrFalse(f);
    var result = operator_1.pipe(instance_of_object_1.instanceOfObject(), function (name, mixed) {
        var _a;
        if (!Object.prototype.hasOwnProperty.call(mixed, srcKey)) {
            if (runTimeRequired) {
                var expected = "object with explicitly set property " + JSON.stringify(srcKey);
                throw error_util_1.makeMappingError({
                    message: name + " must be " + expected,
                    inputName: name,
                    actualValue: mixed,
                    expected: expected,
                    expectedMeta: {
                        srcKey: srcKey,
                        dstKey: dstKey,
                    },
                    propertyErrors: [
                        error_util_1.makeMappingError({
                            message: "" + name + string_util_1.toPropertyAccess(srcKey) + " must be explicitly set",
                            inputName: "" + name + string_util_1.toPropertyAccess(srcKey),
                            actualValue: undefined,
                            expected: "explicitly set",
                        }),
                    ],
                });
            }
        }
        var dstResult = mapper_1.tryMapHandled(f, "" + name + string_util_1.toPropertyAccess(srcKey), mixed[srcKey]);
        if (dstResult.success) {
            var obj = (_a = {},
                _a[dstKey] = dstResult.value,
                _a);
            return obj;
        }
        if (dstResult.mappingError.expected == undefined) {
            throw error_util_1.makeMappingError({
                message: name + " must be valid object. " + dstResult.mappingError.message,
                inputName: name,
                actualValue: mixed,
                expected: "valid object",
                expectedMeta: {
                    srcKey: srcKey,
                    dstKey: dstKey,
                },
                propertyErrors: [
                    dstResult.mappingError,
                ],
            });
        }
        else {
            var expected = "object with " + dstResult.mappingError.expected + " property " + JSON.stringify(srcKey);
            throw error_util_1.makeMappingError({
                message: name + " must be " + expected,
                inputName: name,
                actualValue: mixed,
                expected: expected,
                expectedMeta: {
                    srcKey: srcKey,
                    dstKey: dstKey,
                },
                propertyErrors: [
                    dstResult.mappingError,
                ],
            });
        }
    });
    return mapper_1.copyRunTimeModifier(f, result);
}
exports.derive = derive;
/*
const a = unsignedInteger();
const b = optional(unsignedInteger());
const c = string();
const d = optional(string());

declare const _0 : typeof a;
declare const _1 : typeof b;
declare const _2 : typeof c;
declare const _3 : typeof d;

declare const _01 : (typeof a) | (typeof b);
declare const _02 : (typeof a) | (typeof c);
declare const _03 : (typeof a) | (typeof d);

declare const _12 : (typeof b) | (typeof c);
declare const _13 : (typeof b) | (typeof d);

declare const _23 : (typeof c) | (typeof d);

const __0 = derive("x", "y", _0);
const __1 = derive("x", "y", _1);
const __2 = derive("x", "y", _2);
const __3 = derive("x", "y", _3);

const __01 = derive("x", "y", _01);
const __02 = derive("x", "y", _02);
const __03 = derive("x", "y", _03);

const __12 = derive("x", "y", _12);
const __13 = derive("x", "y", _13);

const __23 = derive("x", "y", _23);
*/ 
//# sourceMappingURL=derive.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/object/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/object/index.js ***!
  \***********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./derive-map */ "./node_modules/type-mapping/dist/functional-lib/object/derive-map.js"));
__export(__webpack_require__(/*! ./derive */ "./node_modules/type-mapping/dist/functional-lib/object/derive.js"));
__export(__webpack_require__(/*! ./to-empty-object */ "./node_modules/type-mapping/dist/functional-lib/object/to-empty-object.js"));
__export(__webpack_require__(/*! ./instance-of-object */ "./node_modules/type-mapping/dist/functional-lib/object/instance-of-object.js"));
__export(__webpack_require__(/*! ./instance-of */ "./node_modules/type-mapping/dist/functional-lib/object/instance-of.js"));
__export(__webpack_require__(/*! ./object-from-array */ "./node_modules/type-mapping/dist/functional-lib/object/object-from-array.js"));
__export(__webpack_require__(/*! ./object-from-map */ "./node_modules/type-mapping/dist/functional-lib/object/object-from-map.js"));
__export(__webpack_require__(/*! ./object */ "./node_modules/type-mapping/dist/functional-lib/object/object.js"));
__export(__webpack_require__(/*! ./partial-derive-map */ "./node_modules/type-mapping/dist/functional-lib/object/partial-derive-map.js"));
__export(__webpack_require__(/*! ./partial-object-from-array */ "./node_modules/type-mapping/dist/functional-lib/object/partial-object-from-array.js"));
__export(__webpack_require__(/*! ./partial-object-from-map */ "./node_modules/type-mapping/dist/functional-lib/object/partial-object-from-map.js"));
__export(__webpack_require__(/*! ./partial-object */ "./node_modules/type-mapping/dist/functional-lib/object/partial-object.js"));
__export(__webpack_require__(/*! ./partial-rename-map */ "./node_modules/type-mapping/dist/functional-lib/object/partial-rename-map.js"));
__export(__webpack_require__(/*! ./pojo */ "./node_modules/type-mapping/dist/functional-lib/object/pojo.js"));
__export(__webpack_require__(/*! ./rename-map */ "./node_modules/type-mapping/dist/functional-lib/object/rename-map.js"));
__export(__webpack_require__(/*! ./rename */ "./node_modules/type-mapping/dist/functional-lib/object/rename.js"));
__export(__webpack_require__(/*! ./string-indexer */ "./node_modules/type-mapping/dist/functional-lib/object/string-indexer.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/object/instance-of-object.js":
/*!************************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/object/instance-of-object.js ***!
  \************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
/**
    If you pass in a bigint object created by
    a polyfill, it will be rejected,
    even though it is technically an instance of `Object`.
*/
function instanceOfObject() {
    return function (name, mixed) {
        if (type_util_1.isInstanceOf(mixed, Object)) {
            return mixed;
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must be instance of Object; received " + type_util_1.toTypeStr(mixed),
                inputName: name,
                actualValue: mixed,
                expected: "Object",
            });
        }
    };
}
exports.instanceOfObject = instanceOfObject;
//# sourceMappingURL=instance-of-object.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/object/instance-of.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/object/instance-of.js ***!
  \*****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
/**
    If you pass in a bigint object created by
    a polyfill, it will never pass any `instanceof` checks,
    even though the polyfill could be done with an object.
*/
function instanceOf(ctor) {
    if (!type_util_1.allowsInstanceOf(ctor)) {
        throw new Error("instanceof check not allowed on " + type_util_1.getCtorName(ctor));
    }
    var ctorName = type_util_1.getCtorName(ctor);
    return function (name, mixed) {
        if (type_util_1.isInstanceOf(mixed, ctor)) {
            return mixed;
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must be instance of " + ctorName + "; received " + type_util_1.toTypeStr(mixed),
                inputName: name,
                actualValue: mixed,
                expected: ctorName,
                expectedMeta: {
                    ctor: ctor,
                },
            });
        }
    };
}
exports.instanceOf = instanceOf;
//# sourceMappingURL=instance-of.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/object/object-from-array.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/object/object-from-array.js ***!
  \***********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "./node_modules/type-mapping/dist/mapper/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var object_from_map_1 = __webpack_require__(/*! ./object-from-map */ "./node_modules/type-mapping/dist/functional-lib/object/object-from-map.js");
var to_empty_object_1 = __webpack_require__(/*! ./to-empty-object */ "./node_modules/type-mapping/dist/functional-lib/object/to-empty-object.js");
/**
    This,
    ```ts
    objectFromArray(
        withName(unsignedInteger(), "foo"),
        withName(string(), "foo")
    );
    ```

    Is the same as,
    ```ts
    objectFromArray(
        withName(or(
            unsignedInteger(),
            string()
        ), "foo")
    );
    ```
*/
function objectFromArray() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    if (arr.length == 0) {
        return to_empty_object_1.toEmptyObject();
    }
    var groupedByName = {};
    for (var _a = 0, arr_1 = arr; _a < arr_1.length; _a++) {
        var f = arr_1[_a];
        var name = mapper_1.getNameOrEmptyString(f);
        var mappers = groupedByName[name];
        if (mappers == undefined) {
            mappers = [];
            groupedByName[name] = mappers;
        }
        mappers.push(f);
    }
    var map = {};
    for (var k in groupedByName) {
        var mappers = groupedByName[k];
        if (mappers == undefined) {
            continue;
        }
        map[k] = (mappers.length == 1) ?
            mappers[0] : operator_1.unsafeOr.apply(void 0, mappers);
    }
    return object_from_map_1.objectFromMap(map);
}
exports.objectFromArray = objectFromArray;
//# sourceMappingURL=object-from-array.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/object/object-from-map.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/object/object-from-map.js ***!
  \*********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "./node_modules/type-mapping/dist/mapper/index.js");
var instance_of_object_1 = __webpack_require__(/*! ./instance-of-object */ "./node_modules/type-mapping/dist/functional-lib/object/instance-of-object.js");
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var to_empty_object_1 = __webpack_require__(/*! ./to-empty-object */ "./node_modules/type-mapping/dist/functional-lib/object/to-empty-object.js");
var string_util_1 = __webpack_require__(/*! ../../string-util */ "./node_modules/type-mapping/dist/string-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
/**
    Always returns a new object.

    If the input contains additional fields not part
    of the map, they will not be in the new object.
*/
function objectFromMap(map) {
    var keys = Object.keys(map);
    if (keys.length == 0) {
        return to_empty_object_1.toEmptyObject();
    }
    var runTimeRequiredDict = {};
    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
        var k = keys_1[_i];
        runTimeRequiredDict[k] = mapper_1.getRunTimeRequiredFlagOrFalse(map[k]);
    }
    return mapper_1.mapper(operator_1.pipe(instance_of_object_1.instanceOfObject(), function (name, mixed) {
        var propertyErrors = [];
        var result = {};
        for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {
            var k = keys_2[_i];
            if (Object.prototype.hasOwnProperty.call(mixed, k) || runTimeRequiredDict[k] === false) {
                var propertyResult = mapper_1.tryMapHandled(map[k], "" + name + string_util_1.toPropertyAccess(k), mixed[k]);
                if (propertyResult.success) {
                    result[k] = propertyResult.value;
                }
                else {
                    propertyErrors.push(propertyResult.mappingError);
                }
            }
            else {
                propertyErrors.push(error_util_1.makeMappingError({
                    message: "" + name + string_util_1.toPropertyAccess(k) + " must be explicitly set",
                    inputName: "" + name + string_util_1.toPropertyAccess(k),
                    actualValue: undefined,
                    expected: "explicitly set",
                }));
            }
        }
        if (propertyErrors.length == 0) {
            return result;
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must be valid object",
                inputName: name,
                actualValue: mixed,
                expected: "valid object",
                propertyErrors: propertyErrors,
            });
        }
    }));
}
exports.objectFromMap = objectFromMap;
/*
import {optional, orUndefined} from "../operator";
import {unsignedInteger} from "../number";

const m = objectFromMap({
    shouldBeOptional : optional(unsignedInteger()),
    shouldNotBeOptional : orUndefined(unsignedInteger())
});
m.__expectedInput
m.__mappableInput


declare const map2 : {

    [name : string] : SafeMapper<number>|SafeMapper<boolean>
};
const m2 = objectFromMap(map2);
m2.__expectedInput
m2.__mappableInput


declare const map3 : {
    k : SafeMapper<number>|SafeMapper<boolean>,
    l : SafeMapper<number>,
};
const m3 = objectFromMap(map3);
m3.__expectedInput
m3.__mappableInput
//*/ 
//# sourceMappingURL=object-from-map.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/object/object.js":
/*!************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/object/object.js ***!
  \************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var object_from_map_1 = __webpack_require__(/*! ./object-from-map */ "./node_modules/type-mapping/dist/functional-lib/object/object-from-map.js");
var object_from_array_1 = __webpack_require__(/*! ./object-from-array */ "./node_modules/type-mapping/dist/functional-lib/object/object-from-array.js");
function object() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    if (arr.length == 1 && !(arr[0] instanceof Function)) {
        return object_from_map_1.objectFromMap(arr[0]);
    }
    else {
        return object_from_array_1.objectFromArray.apply(void 0, arr);
    }
}
exports.object = object;
//# sourceMappingURL=object.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/object/partial-derive-map.js":
/*!************************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/object/partial-derive-map.js ***!
  \************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "./node_modules/type-mapping/dist/mapper/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var derive_1 = __webpack_require__(/*! ./derive */ "./node_modules/type-mapping/dist/functional-lib/object/derive.js");
var to_empty_object_1 = __webpack_require__(/*! ./to-empty-object */ "./node_modules/type-mapping/dist/functional-lib/object/to-empty-object.js");
function partialDeriveMap(map) {
    var arr = [];
    for (var k in map) {
        if (!map.hasOwnProperty(k)) {
            continue;
        }
        var f = map[k];
        arr.push(derive_1.derive(k, mapper_1.getNameOrEmptyString(f), operator_1.optional(f)));
    }
    if (arr.length == 0) {
        return to_empty_object_1.toEmptyObject();
    }
    return operator_1.unsafeDeepMerge.apply(void 0, arr);
}
exports.partialDeriveMap = partialDeriveMap;
//# sourceMappingURL=partial-derive-map.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/object/partial-object-from-array.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/object/partial-object-from-array.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "./node_modules/type-mapping/dist/mapper/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var to_empty_object_1 = __webpack_require__(/*! ./to-empty-object */ "./node_modules/type-mapping/dist/functional-lib/object/to-empty-object.js");
var partial_object_from_map_1 = __webpack_require__(/*! ./partial-object-from-map */ "./node_modules/type-mapping/dist/functional-lib/object/partial-object-from-map.js");
/**
    This,
    ```ts
    objectFromArray(
        withName(unsignedInteger(), "foo"),
        withName(string(), "foo")
    );
    ```

    Is the same as,
    ```ts
    objectFromArray(
        withName(or(
            unsignedInteger(),
            string()
        ), "foo")
    );
    ```
*/
function partialObjectFromArray() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    if (arr.length == 0) {
        return to_empty_object_1.toEmptyObject();
    }
    var groupedByName = {};
    for (var _a = 0, arr_1 = arr; _a < arr_1.length; _a++) {
        var f = arr_1[_a];
        var name = mapper_1.getNameOrEmptyString(f);
        var mappers = groupedByName[name];
        if (mappers == undefined) {
            mappers = [];
            groupedByName[name] = mappers;
        }
        mappers.push(f);
    }
    var map = {};
    for (var k in groupedByName) {
        var mappers = groupedByName[k];
        if (mappers == undefined) {
            continue;
        }
        map[k] = (mappers.length == 1) ?
            mappers[0] : operator_1.unsafeOr.apply(void 0, mappers);
    }
    return partial_object_from_map_1.partialObjectFromMap(map);
}
exports.partialObjectFromArray = partialObjectFromArray;
//# sourceMappingURL=partial-object-from-array.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/object/partial-object-from-map.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/object/partial-object-from-map.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "./node_modules/type-mapping/dist/mapper/index.js");
var instance_of_object_1 = __webpack_require__(/*! ./instance-of-object */ "./node_modules/type-mapping/dist/functional-lib/object/instance-of-object.js");
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var to_empty_object_1 = __webpack_require__(/*! ./to-empty-object */ "./node_modules/type-mapping/dist/functional-lib/object/to-empty-object.js");
/**
    Always returns a new object.

    If the input contains additional fields not part
    of the map, they will not be in the new object.

    -----

    All input fields are optional.
    All output fields may be undefined.
*/
function partialObjectFromMap(map) {
    var keys = Object.keys(map);
    if (keys.length == 0) {
        return to_empty_object_1.toEmptyObject();
    }
    var partialMap = {};
    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
        var k = keys_1[_i];
        partialMap[k] = operator_1.optional(map[k]);
    }
    return mapper_1.mapper(operator_1.pipe(instance_of_object_1.instanceOfObject(), function (name, mixed) {
        var result = {};
        for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {
            var k = keys_2[_i];
            result[k] = partialMap[k](name + "." + k, mixed[k]);
        }
        return result;
    }));
}
exports.partialObjectFromMap = partialObjectFromMap;
//# sourceMappingURL=partial-object-from-map.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/object/partial-object.js":
/*!********************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/object/partial-object.js ***!
  \********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var partial_object_from_map_1 = __webpack_require__(/*! ./partial-object-from-map */ "./node_modules/type-mapping/dist/functional-lib/object/partial-object-from-map.js");
var partial_object_from_array_1 = __webpack_require__(/*! ./partial-object-from-array */ "./node_modules/type-mapping/dist/functional-lib/object/partial-object-from-array.js");
function partialObject() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    if (arr.length == 1 && !(arr[0] instanceof Function)) {
        return partial_object_from_map_1.partialObjectFromMap(arr[0]);
    }
    else {
        return partial_object_from_array_1.partialObjectFromArray.apply(void 0, arr);
    }
}
exports.partialObject = partialObject;
//# sourceMappingURL=partial-object.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/object/partial-rename-map.js":
/*!************************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/object/partial-rename-map.js ***!
  \************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "./node_modules/type-mapping/dist/mapper/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var rename_1 = __webpack_require__(/*! ./rename */ "./node_modules/type-mapping/dist/functional-lib/object/rename.js");
var to_empty_object_1 = __webpack_require__(/*! ./to-empty-object */ "./node_modules/type-mapping/dist/functional-lib/object/to-empty-object.js");
function partialRenameMap(map) {
    var arr = [];
    for (var k in map) {
        if (!map.hasOwnProperty(k)) {
            continue;
        }
        var f = map[k];
        arr.push(rename_1.rename(k, mapper_1.getNameOrEmptyString(f), operator_1.optional(f)));
    }
    if (arr.length == 0) {
        return to_empty_object_1.toEmptyObject();
    }
    return operator_1.unsafeDeepMerge.apply(void 0, arr);
}
exports.partialRenameMap = partialRenameMap;
//# sourceMappingURL=partial-rename-map.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/object/pojo.js":
/*!**********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/object/pojo.js ***!
  \**********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
/**
 * Abbreviation for "Plain old JavasScript object".
 *
 * Meaning, an Object that isn't,
 *
 * + Date
 * + Array
 * + Function
 * + An instance of some other class
 */
function pojo() {
    return function (name, mixed) {
        if (!type_util_1.isPojo(mixed)) {
            throw error_util_1.makeMappingError({
                message: name + " must be plain old JavaScript object; received " + type_util_1.toTypeStr(mixed),
                inputName: name,
                actualValue: mixed,
                expected: "plain old JavaScript object",
            });
        }
        return mixed;
    };
}
exports.pojo = pojo;
//# sourceMappingURL=pojo.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/object/rename-map.js":
/*!****************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/object/rename-map.js ***!
  \****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "./node_modules/type-mapping/dist/mapper/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var rename_1 = __webpack_require__(/*! ./rename */ "./node_modules/type-mapping/dist/functional-lib/object/rename.js");
var to_empty_object_1 = __webpack_require__(/*! ./to-empty-object */ "./node_modules/type-mapping/dist/functional-lib/object/to-empty-object.js");
function renameMap(map) {
    var arr = [];
    for (var k in map) {
        if (!map.hasOwnProperty(k)) {
            continue;
        }
        var f = map[k];
        arr.push(rename_1.rename(k, mapper_1.getNameOrEmptyString(f), f));
    }
    if (arr.length == 0) {
        return to_empty_object_1.toEmptyObject();
    }
    return operator_1.unsafeDeepMerge.apply(void 0, arr);
}
exports.renameMap = renameMap;
//# sourceMappingURL=rename-map.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/object/rename.js":
/*!************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/object/rename.js ***!
  \************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "./node_modules/type-mapping/dist/mapper/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var instance_of_object_1 = __webpack_require__(/*! ./instance-of-object */ "./node_modules/type-mapping/dist/functional-lib/object/instance-of-object.js");
var string_util_1 = __webpack_require__(/*! ../../string-util */ "./node_modules/type-mapping/dist/string-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
function rename(srcKey, dstKey, f) {
    var runTimeRequired = mapper_1.getRunTimeRequiredFlagOrFalse(f);
    var result = operator_1.pipe(instance_of_object_1.instanceOfObject(), function (name, mixed) {
        var _a;
        var unsafeKey = "";
        var unsafeName = "";
        var unsafeValue = undefined;
        if (Object.prototype.hasOwnProperty.call(mixed, dstKey)) {
            unsafeKey = dstKey;
            unsafeName = "" + name + string_util_1.toPropertyAccess(dstKey);
            unsafeValue = mixed[dstKey];
        }
        else if (Object.prototype.hasOwnProperty.call(mixed, srcKey)) {
            unsafeKey = srcKey;
            unsafeName = "" + name + string_util_1.toPropertyAccess(srcKey);
            unsafeValue = mixed[srcKey];
        }
        else if (runTimeRequired) {
            var expected = "object with explicitly set property " + JSON.stringify(dstKey);
            throw error_util_1.makeMappingError({
                message: name + " must be " + expected,
                inputName: name,
                actualValue: mixed,
                expected: expected,
                expectedMeta: {
                    srcKey: srcKey,
                    dstKey: dstKey,
                },
                propertyErrors: [
                    error_util_1.makeMappingError({
                        message: "" + name + string_util_1.toPropertyAccess(dstKey) + " must be explicitly set",
                        inputName: "" + name + string_util_1.toPropertyAccess(dstKey),
                        actualValue: undefined,
                        expected: "explicitly set",
                    }),
                ],
            });
        }
        else {
            unsafeKey = dstKey;
            unsafeName = "" + name + string_util_1.toPropertyAccess(dstKey);
            unsafeValue = undefined;
        }
        var dstResult = mapper_1.tryMapHandled(f, unsafeName, unsafeValue);
        if (dstResult.success) {
            var obj = (_a = {},
                _a[dstKey] = dstResult.value,
                _a);
            return obj;
        }
        if (dstResult.mappingError.expected == undefined) {
            throw error_util_1.makeMappingError({
                message: name + " must be valid object. " + dstResult.mappingError.message,
                inputName: name,
                actualValue: mixed,
                expected: "valid object",
                expectedMeta: {
                    srcKey: srcKey,
                    dstKey: dstKey,
                },
                propertyErrors: [
                    dstResult.mappingError,
                ],
            });
        }
        else {
            var expected = "object with " + dstResult.mappingError.expected + " property " + JSON.stringify(unsafeKey);
            throw error_util_1.makeMappingError({
                message: name + " must be " + expected,
                inputName: name,
                actualValue: mixed,
                expected: expected,
                expectedMeta: {
                    srcKey: srcKey,
                    dstKey: dstKey,
                },
                propertyErrors: [
                    dstResult.mappingError,
                ],
            });
        }
    });
    return mapper_1.copyRunTimeModifier(f, result);
}
exports.rename = rename;
/*
const a = unsignedInteger();
const b = optional(unsignedInteger());
const c = string();
const d = optional(string());

declare const _0 : typeof a;
declare const _1 : typeof b;
declare const _2 : typeof c;
declare const _3 : typeof d;

declare const _01 : (typeof a) | (typeof b);
declare const _02 : (typeof a) | (typeof c);
declare const _03 : (typeof a) | (typeof d);

declare const _12 : (typeof b) | (typeof c);
declare const _13 : (typeof b) | (typeof d);

declare const _23 : (typeof c) | (typeof d);

const __0 = rename("x", "y", _0);
const __1 = rename("x", "y", _1);
const __2 = rename("x", "y", _2);
const __3 = rename("x", "y", _3);

const __01 = rename("x", "y", _01);
const __02 = rename("x", "y", _02);
const __03 = rename("x", "y", _03);

const __12 = rename("x", "y", _12);
const __13 = rename("x", "y", _13);

const __23 = rename("x", "y", _23);
*/ 
//# sourceMappingURL=rename.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/object/string-indexer.js":
/*!********************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/object/string-indexer.js ***!
  \********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "./node_modules/type-mapping/dist/mapper/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var instance_of_object_1 = __webpack_require__(/*! ./instance-of-object */ "./node_modules/type-mapping/dist/functional-lib/object/instance-of-object.js");
var string_util_1 = __webpack_require__(/*! ../../string-util */ "./node_modules/type-mapping/dist/string-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
function unsafeStringIndexer(f) {
    var result = operator_1.pipe(instance_of_object_1.instanceOfObject(), function (name, obj) {
        var propertyErrors = [];
        var result = {};
        for (var k in obj) {
            if (!Object.prototype.hasOwnProperty.call(obj, k)) {
                continue;
            }
            var propertyResult = mapper_1.tryMapHandled(f, "" + name + string_util_1.toPropertyAccess(k), obj[k]);
            if (propertyResult.success) {
                result[k] = propertyResult.value;
            }
            else {
                propertyErrors.push(propertyResult.mappingError);
            }
        }
        if (propertyErrors.length == 0) {
            return result;
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must be valid object",
                inputName: name,
                actualValue: obj,
                expected: "valid object",
                propertyErrors: propertyErrors,
            });
        }
    });
    return mapper_1.copyRunTimeModifier(f, result);
}
exports.unsafeStringIndexer = unsafeStringIndexer;
function stringIndexer(f) {
    var fOrUndefined = operator_1.orUndefined(f);
    var result = operator_1.pipe(instance_of_object_1.instanceOfObject(), function (name, obj) {
        var propertyErrors = [];
        var result = {};
        for (var k in obj) {
            if (!Object.prototype.hasOwnProperty.call(obj, k)) {
                continue;
            }
            var propertyResult = mapper_1.tryMapHandled(fOrUndefined, "" + name + string_util_1.toPropertyAccess(k), obj[k]);
            if (propertyResult.success) {
                result[k] = propertyResult.value;
            }
            else {
                propertyErrors.push(propertyResult.mappingError);
            }
        }
        if (propertyErrors.length == 0) {
            return result;
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must be valid object",
                inputName: name,
                actualValue: obj,
                expected: "valid object",
                propertyErrors: propertyErrors,
            });
        }
    });
    return mapper_1.copyRunTimeModifier(f, result);
}
exports.stringIndexer = stringIndexer;
//# sourceMappingURL=string-indexer.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/object/to-empty-object.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/object/to-empty-object.js ***!
  \*********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
    Always returns a new empty object.
    Basically, converts *everything* into an empty object.
*/
function toEmptyObject() {
    return function () {
        return {};
    };
}
exports.toEmptyObject = toEmptyObject;
//# sourceMappingURL=to-empty-object.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/operator/cache.js":
/*!*************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/operator/cache.js ***!
  \*************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var operation_1 = __webpack_require__(/*! ../../mapper/operation */ "./node_modules/type-mapping/dist/mapper/operation/index.js");
function cache(cached, f) {
    var result = operation_1.copyRunTimeModifier(f, function (name, mixed) {
        return f(name, mixed, cached);
    });
    //https://github.com/microsoft/TypeScript/issues/31602
    return result;
}
exports.cache = cache;
//# sourceMappingURL=cache.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/operator/cast.js":
/*!************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/operator/cast.js ***!
  \************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "./node_modules/type-mapping/dist/mapper/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
function cast(srcMapper, castDelegate, dstMapper) {
    var result = mapper_1.copyRunTimeModifier(srcMapper, function (name, mixed) {
        var alreadyDstResult = mapper_1.tryMapHandled(dstMapper, name, mixed);
        if (alreadyDstResult.success) {
            //If this works, we are already the desired data type
            return alreadyDstResult.value;
        }
        var cannotCastPrefix = (alreadyDstResult.mappingError.expected == undefined) ?
            "Cannot cast " + name + ";" :
            "Cannot cast " + name + " to " + alreadyDstResult.mappingError.expected + ";";
        //Failed. We need to cast.
        var mapSrcResult = mapper_1.tryMapHandled(srcMapper, name, mixed);
        if (!mapSrcResult.success) {
            throw error_util_1.makeMappingError({
                message: cannotCastPrefix + " " + mapSrcResult.mappingError.message,
                inputName: name,
                actualValue: mixed,
                expected: (mapSrcResult.mappingError.expected == alreadyDstResult.mappingError.expected ?
                    mapSrcResult.mappingError.expected :
                    "(" + alreadyDstResult.mappingError.expected + ") or (" + mapSrcResult.mappingError.expected + ")"),
                expectedMeta: {
                    mappableValues: ((alreadyDstResult.mappingError.expectedMeta == undefined ||
                        alreadyDstResult.mappingError.expectedMeta.mappableValues == undefined ||
                        mapSrcResult.mappingError.expectedMeta == undefined ||
                        mapSrcResult.mappingError.expectedMeta.mappableValues == undefined) ?
                        undefined : alreadyDstResult.mappingError.expectedMeta.mappableValues.concat(mapSrcResult.mappingError.expectedMeta.mappableValues)),
                    outputValues: ((alreadyDstResult.mappingError.expectedMeta == undefined ||
                        alreadyDstResult.mappingError.expectedMeta.outputValues == undefined) ?
                        undefined : alreadyDstResult.mappingError.expectedMeta.outputValues.slice()),
                },
                unionErrors: [
                    alreadyDstResult.mappingError,
                    mapSrcResult.mappingError,
                ],
            });
        }
        var dst = undefined;
        try {
            dst = castDelegate(mapSrcResult.value);
        }
        catch (castErr) {
            /**
             * In general, this should never happen.
             * If we're here, that means the `castDelegate` or `srcMapper` isn't working right.
             */
            throw error_util_1.makeMappingError({
                message: cannotCastPrefix + " " + castErr.message,
                inputName: name,
                actualValue: mapSrcResult.value,
                /**
                 * Since it seems like the `castDelegate` or `srcMapper` isn't working right,
                 * we should only expect whatever the `dstMapper` expects.
                 */
                expected: alreadyDstResult.mappingError.expected,
                stack: castErr.stack,
            });
        }
        var mapDstResult = mapper_1.tryMapHandled(dstMapper, name, dst);
        if (mapDstResult.success) {
            return mapDstResult.value;
        }
        else {
            /**
             * In general, this should never happen.
             * If we're here, that means the `castDelegate` or `srcMapper` isn't working right.
             */
            throw error_util_1.makeMappingError({
                message: cannotCastPrefix + " " + mapDstResult.mappingError.message,
                inputName: name,
                actualValue: dst,
                /**
                 * Since it seems like the `castDelegate` or `srcMapper` isn't working right,
                 * we should only expect whatever the `dstMapper` expects.
                 */
                expected: mapDstResult.mappingError.expected,
                unionErrors: [
                    alreadyDstResult.mappingError,
                    mapDstResult.mappingError,
                ],
            });
        }
    });
    return result;
}
exports.cast = cast;
//# sourceMappingURL=cast.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/operator/deep-merge.js":
/*!******************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/operator/deep-merge.js ***!
  \******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "./node_modules/type-mapping/dist/mapper/index.js");
var TypeUtil = __webpack_require__(/*! ../../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
var array_util_1 = __webpack_require__(/*! ../../array-util */ "./node_modules/type-mapping/dist/array-util/index.js");
var string_util_1 = __webpack_require__(/*! ../../string-util */ "./node_modules/type-mapping/dist/string-util/index.js");
function unsafeDeepMerge() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    if (arr.length == 0) {
        throw new Error("Cannot deep merge zero mappers");
    }
    if (arr.length == 1) {
        return arr[0];
    }
    var mapper = function (name, mixed) {
        var intersectionErrors = [];
        var values = [];
        for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {
            var f = arr_1[_i];
            var elementResult = mapper_1.tryMapHandled(f, name, mixed);
            if (elementResult.success) {
                values.push(elementResult.value);
            }
            else {
                intersectionErrors.push(elementResult.mappingError);
            }
        }
        if (intersectionErrors.length == 1) {
            throw intersectionErrors[0];
        }
        if (intersectionErrors.length > 1) {
            var errorMessages = array_util_1.removeDuplicateElements(intersectionErrors
                .map(function (e) { return error_util_1.indentErrorMessage(e.message); }));
            var expectedElements = array_util_1.removeDuplicateElements(intersectionErrors
                .map(function (e) { return e.expected; })
                .filter(function (i) { return typeof i == "string"; }));
            throw error_util_1.makeMappingError({
                message: name + " is invalid.\n+ " + errorMessages.join("\n+ "),
                inputName: name,
                actualValue: mixed,
                expected: ((expectedElements.length == 0) ?
                    undefined :
                    (expectedElements.length == 1) ?
                        expectedElements[0] :
                        expectedElements
                            .map(function (str) { return "(" + str + ")"; })
                            .join(" and ")),
                intersectionErrors: intersectionErrors,
            });
        }
        var deepMergeResult = TypeUtil.tryDeepMerge.apply(TypeUtil, values);
        if (deepMergeResult.success) {
            return deepMergeResult.value;
        }
        else {
            /**
             * In general, this should not happen.
             * If we are here, our mappers may be doing something suspicious.
             */
            /**
             * If `path.length == 0`,
             * then it's a top-level value that failed to merge
             */
            if (deepMergeResult.path == undefined) {
                console.log(deepMergeResult);
            }
            if (deepMergeResult.path.length == 0) {
                throw error_util_1.makeMappingError({
                    message: name + " is invalid; " + deepMergeResult.message,
                    inputName: name,
                    actualValue: deepMergeResult.actualValue,
                    expected: deepMergeResult.expected,
                });
            }
            else {
                throw error_util_1.makeMappingError({
                    message: name + " is invalid; " + deepMergeResult.message,
                    inputName: name,
                    actualValue: deepMergeResult.bRoot,
                    expected: deepMergeResult.path.reduceRight(function (memo, part) {
                        return "{ " + JSON.stringify(part) + " : " + memo + " }";
                    }, deepMergeResult.expected),
                    propertyErrors: [
                        error_util_1.makeMappingError({
                            message: deepMergeResult.message,
                            inputName: deepMergeResult.path.reduce(function (memo, part) {
                                return memo + string_util_1.toPropertyAccess(part);
                            }, name),
                            actualValue: deepMergeResult.actualValue,
                            expected: deepMergeResult.expected,
                        }),
                    ],
                });
            }
        }
    };
    return mapper_1.copyRunTimeModifier(arr[0], mapper);
}
exports.unsafeDeepMerge = unsafeDeepMerge;
function deepMerge(f) {
    var arr = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        arr[_i - 1] = arguments[_i];
    }
    return unsafeDeepMerge.apply(void 0, [f].concat(arr));
}
exports.deepMerge = deepMerge;
/*
import {length} from "../array-like";
import {string} from "../string";
const dm = deepMerge(
    (null as unknown as (() => { x : "test" }) & ExpectedInput<{ foo : string }> & MappableInput<{ foo? : string|Buffer }>),
    () : { x : 1 } => (null as any),
    () : { y : true } => (null as any),
    () : { y? : true } => (null as any),
    (null as unknown as (() => { z : Date }) & MappableInput<{ foo? : Buffer }>),
);
dm("", "").y

//*
const dm2 = deepMerge(
    (null as unknown as (() => number) & ExpectedInput<{ foo : string }> & MappableInput<string>),
    (null as unknown as (() => string) & MappableInput<number>),
);
const dm3 = deepMerge(
    (null as unknown as (() => number) & ExpectedInput<{ foo : string }> & MappableInput<{ foo? : string|Buffer }>),
    (null as unknown as (() => string)),
    (null as unknown as (() => { x : "test" }) & ExpectedInput<{ foo : string }> & MappableInput<{ foo? : string|Buffer }>),
);

const dm4 = deepMerge(
    length({
        min : 1
    }),
    string()
)
//*/ 
//# sourceMappingURL=deep-merge.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/operator/discriminated-union.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/operator/discriminated-union.js ***!
  \***************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "./node_modules/type-mapping/dist/mapper/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var string_util_1 = __webpack_require__(/*! ../../string-util */ "./node_modules/type-mapping/dist/string-util/index.js");
function unsafeDiscriminatedUnion(discriminantK) {
    var arr = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        arr[_i - 1] = arguments[_i];
    }
    if (arr.length == 0) {
        throw new Error("Cannot call unsafeDiscriminatedUnion() on zero mappers");
    }
    var orDelegate = operator_1.unsafeOr.apply(void 0, arr);
    var result = function (name, mixed) {
        var mapResult = mapper_1.tryMapHandled(orDelegate, name, mixed);
        if (mapResult.success) {
            return mapResult.value;
        }
        else {
            var unionErrors = mapResult.mappingError.unionErrors;
            if (unionErrors == undefined) {
                throw mapResult.mappingError;
            }
            var discriminantInputName_1 = "" + name + string_util_1.toPropertyAccess(discriminantK);
            var discriminantErrors = unionErrors
                .map(function (unionError) {
                return error_util_1.tryGetPropertyError(unionError, discriminantInputName_1);
            })
                .filter(function (propertyError) {
                return propertyError != undefined;
            });
            if (discriminantErrors.length != unionErrors.length) {
                var nonDiscriminantErrors = unionErrors
                    .map(function (unionError) {
                    return (error_util_1.tryGetPropertyError(unionError, discriminantInputName_1) == undefined) ?
                        //This error is not because of the discriminant
                        unionError :
                        undefined;
                })
                    .filter(function (unionError) {
                    return unionError != undefined;
                });
                throw error_util_1.makeNormalizedUnionError(name, mixed, nonDiscriminantErrors);
            }
            var expectedDiscriminators = discriminantErrors.map(function (err) { return err.expected; }).join("|");
            throw error_util_1.makeMappingError({
                message: name + " must be object with " + expectedDiscriminators + " property " + JSON.stringify(discriminantK),
                inputName: name,
                actualValue: mixed,
                expected: "object with " + expectedDiscriminators + " property " + JSON.stringify(discriminantK),
                expectedMeta: undefined,
                propertyErrors: [
                    error_util_1.makeNormalizedUnionError(discriminantInputName_1, (mixed == undefined ?
                        undefined :
                        mixed[discriminantK]), discriminantErrors),
                ],
            });
        }
    };
    return result;
}
exports.unsafeDiscriminatedUnion = unsafeDiscriminatedUnion;
function discriminatedUnion(discriminantK, f) {
    var arr = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        arr[_i - 2] = arguments[_i];
    }
    return unsafeDiscriminatedUnion.apply(void 0, [discriminantK,
        f].concat(arr));
}
exports.discriminatedUnion = discriminatedUnion;
//# sourceMappingURL=discriminated-union.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/operator/exclude-literal.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/operator/exclude-literal.js ***!
  \***********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "./node_modules/type-mapping/dist/mapper/index.js");
var type_util_1 = __webpack_require__(/*! ../../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
var array_util_1 = __webpack_require__(/*! ../../array-util */ "./node_modules/type-mapping/dist/array-util/index.js");
function excludeLiteral(f) {
    var arr = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        arr[_i - 1] = arguments[_i];
    }
    var literalStrArr = arr.map(function (value) { return type_util_1.toLiteralStr(value); });
    return mapper_1.copyRunTimeModifier(f, function (name, mixed) {
        var mapResult = mapper_1.tryMapHandled(f, name, mixed);
        if (mapResult.success) {
            var value = mapResult.value;
            for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {
                var item = arr_1[_i];
                if (type_util_1.strictEqual(value, item)) {
                    throw error_util_1.makeMappingError({
                        message: name + " must not be " + type_util_1.toLiteralUnionStr(arr) + "; received " + type_util_1.toLiteralStr(item),
                        inputName: name,
                        actualValue: value,
                        expected: "not " + type_util_1.toLiteralUnionStr(arr),
                    });
                }
            }
            return value;
        }
        var rawUnionErrors = mapResult.mappingError.unionErrors;
        if (rawUnionErrors == undefined) {
            throw mapResult.mappingError;
        }
        var unionErrors = rawUnionErrors.filter(function (err) { return (err.expected != undefined &&
            literalStrArr.indexOf(err.expected) < 0); });
        var rawExpectedArr = unionErrors
            .map(function (e) { return e.expected; })
            .filter(function (s) { return s != undefined; });
        if (rawExpectedArr.length != unionErrors.length) {
            throw mapResult.mappingError;
        }
        /**
         * @todo Add checks for zero-length errors elsewhere in the code base, too
         */
        if (rawExpectedArr.length == 0) {
            throw error_util_1.makeMappingError({
                message: name + " must be never; received " + type_util_1.toTypeStr(mixed),
                inputName: name,
                actualValue: mixed,
                expected: "never",
                unionErrors: unionErrors,
            });
        }
        else if (rawExpectedArr.length == 1) {
            var expected = rawExpectedArr[0];
            throw error_util_1.makeMappingError({
                message: name + " must be " + expected + "; received " + type_util_1.toTypeStr(mixed),
                inputName: name,
                actualValue: mixed,
                expected: expected,
                expectedMeta: {
                    mappableValues: ((mapResult.mappingError.expectedMeta == undefined ||
                        mapResult.mappingError.expectedMeta.mappableValues == undefined) ?
                        undefined :
                        mapResult.mappingError.expectedMeta.mappableValues.filter(function (mappableValue) { return !arr.some(function (i) { return type_util_1.strictEqual(i, mappableValue); }); })),
                    outputValues: ((mapResult.mappingError.expectedMeta == undefined ||
                        mapResult.mappingError.expectedMeta.outputValues == undefined) ?
                        undefined :
                        mapResult.mappingError.expectedMeta.outputValues.filter(function (outputValue) { return !arr.some(function (i) { return type_util_1.strictEqual(i, outputValue); }); })),
                },
            });
        }
        else {
            var expected = array_util_1.removeDuplicateElements(rawExpectedArr)
                .map(function (str) { return "(" + str + ")"; })
                .join(" or ");
            throw error_util_1.makeMappingError({
                message: name + " must be " + expected + "; received " + type_util_1.toTypeStr(mixed),
                inputName: name,
                actualValue: mixed,
                expected: expected,
                expectedMeta: {
                    mappableValues: ((mapResult.mappingError.expectedMeta == undefined ||
                        mapResult.mappingError.expectedMeta.mappableValues == undefined) ?
                        undefined :
                        mapResult.mappingError.expectedMeta.mappableValues.filter(function (mappableValue) { return !arr.some(function (i) { return type_util_1.strictEqual(i, mappableValue); }); })),
                    outputValues: ((mapResult.mappingError.expectedMeta == undefined ||
                        mapResult.mappingError.expectedMeta.outputValues == undefined) ?
                        undefined :
                        mapResult.mappingError.expectedMeta.outputValues.filter(function (outputValue) { return !arr.some(function (i) { return type_util_1.strictEqual(i, outputValue); }); })),
                },
                unionErrors: unionErrors,
            });
        }
    });
}
exports.excludeLiteral = excludeLiteral;
//# sourceMappingURL=exclude-literal.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/operator/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/operator/index.js ***!
  \*************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./cache */ "./node_modules/type-mapping/dist/functional-lib/operator/cache.js"));
__export(__webpack_require__(/*! ./cast */ "./node_modules/type-mapping/dist/functional-lib/operator/cast.js"));
__export(__webpack_require__(/*! ./deep-merge */ "./node_modules/type-mapping/dist/functional-lib/operator/deep-merge.js"));
__export(__webpack_require__(/*! ./discriminated-union */ "./node_modules/type-mapping/dist/functional-lib/operator/discriminated-union.js"));
__export(__webpack_require__(/*! ./exclude-literal */ "./node_modules/type-mapping/dist/functional-lib/operator/exclude-literal.js"));
__export(__webpack_require__(/*! ./missing-value */ "./node_modules/type-mapping/dist/functional-lib/operator/missing-value.js"));
__export(__webpack_require__(/*! ./or */ "./node_modules/type-mapping/dist/functional-lib/operator/or.js"));
__export(__webpack_require__(/*! ./pipe */ "./node_modules/type-mapping/dist/functional-lib/operator/pipe.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/operator/missing-value.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/operator/missing-value.js ***!
  \*********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "./node_modules/type-mapping/dist/mapper/index.js");
var or_1 = __webpack_require__(/*! ./or */ "./node_modules/type-mapping/dist/functional-lib/operator/or.js");
var literal_1 = __webpack_require__(/*! ../literal */ "./node_modules/type-mapping/dist/functional-lib/literal/index.js");
var exclude_literal_1 = __webpack_require__(/*! ./exclude-literal */ "./node_modules/type-mapping/dist/functional-lib/operator/exclude-literal.js");
function orUndefined(f) {
    return or_1.or(f, literal_1.literal(undefined));
}
exports.orUndefined = orUndefined;
function orNull(f) {
    return or_1.or(f, literal_1.literal(null));
}
exports.orNull = orNull;
function orMaybe(f) {
    return or_1.or(f, literal_1.literal(undefined), literal_1.literal(null));
}
exports.orMaybe = orMaybe;
function notUndefined(f) {
    return exclude_literal_1.excludeLiteral(f, undefined);
}
exports.notUndefined = notUndefined;
function notNull(f) {
    return exclude_literal_1.excludeLiteral(f, null);
}
exports.notNull = notNull;
function notMaybe(assert) {
    return exclude_literal_1.excludeLiteral(assert, undefined, null);
}
exports.notMaybe = notMaybe;
function optional(f) {
    var g = orUndefined(f);
    g.__optional = true;
    g.__runTimeRequired = false;
    return g;
}
exports.optional = optional;
;
function notOptional(f) {
    var g = notUndefined(f);
    g.__optional = false;
    return g;
}
exports.notOptional = notOptional;
;
function runTimeRequired(f) {
    var g = function (name, mixed) {
        return f(name, mixed);
    };
    g.__runTimeRequired = true;
    g.__optional = false;
    return mapper_1.copyName(f, g);
}
exports.runTimeRequired = runTimeRequired;
;
function notRunTimeRequired(f) {
    var g = function (name, mixed) {
        return f(name, mixed);
    };
    g.__runTimeRequired = false;
    return mapper_1.copyName(f, mapper_1.copyOptional(f, g));
}
exports.notRunTimeRequired = notRunTimeRequired;
;
//# sourceMappingURL=missing-value.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/operator/or.js":
/*!**********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/operator/or.js ***!
  \**********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "./node_modules/type-mapping/dist/mapper/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
function unsafeOr() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    if (arr.length == 0) {
        throw new Error("Cannot call unsafeOr() on zero mappers");
    }
    return mapper_1.copyRunTimeModifier(arr[0], function (name, mixed) {
        var unionErrors = [];
        for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {
            var d = arr_1[_i];
            var elementResult = mapper_1.tryMapHandled(d, name, mixed);
            if (elementResult.success) {
                return elementResult.value;
            }
            else {
                unionErrors.push(elementResult.mappingError);
            }
        }
        throw error_util_1.makeNormalizedUnionError(name, mixed, unionErrors);
    });
}
exports.unsafeOr = unsafeOr;
function or(f) {
    var arr = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        arr[_i - 1] = arguments[_i];
    }
    return unsafeOr.apply(void 0, [f].concat(arr));
}
exports.or = or;
/*
or(
    (null as unknown as ((() => 1) & ExpectedInput<number>)),
    (null as unknown as ((() => 2) & ExpectedInput<string>)),
    (null as unknown as ((() => 3) & ExpectedInput<boolean>))
).__accepts
*/ 
//# sourceMappingURL=or.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/operator/pipe.js":
/*!************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/operator/pipe.js ***!
  \************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var mapper_1 = __webpack_require__(/*! ../../mapper */ "./node_modules/type-mapping/dist/mapper/index.js");
function pipeImpl() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    if (arr.length == 0) {
        throw new Error("Cannot pipe zero mappers");
    }
    return mapper_1.copyRunTimeModifier(arr[0], function (name, mixed) {
        for (var i = 0; i < arr.length; ++i) {
            var d = arr[i];
            var elementResult = mapper_1.tryMapHandled(d, name, mixed);
            if (elementResult.success) {
                mixed = elementResult.value;
            }
            else {
                throw elementResult.mappingError;
            }
        }
        return mixed;
    });
}
//Not the best...
//export function pipe<ArrT extends AnyMapper[]> (...arr : ArrT) : SafeMapper<unknown>;
function pipe() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    return pipeImpl.apply(void 0, arr);
}
exports.pipe = pipe;
function unsafePipe(f) {
    var arr = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        arr[_i - 1] = arguments[_i];
    }
    return pipeImpl.apply(void 0, [f].concat(arr));
}
exports.unsafePipe = unsafePipe;
function reallyUnsafePipe() {
    var arr = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        arr[_i] = arguments[_i];
    }
    return pipeImpl.apply(void 0, arr);
}
exports.reallyUnsafePipe = reallyUnsafePipe;
//# sourceMappingURL=pipe.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/string/cast.js":
/*!**********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/string/cast.js ***!
  \**********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var number_1 = __webpack_require__(/*! ../number */ "./node_modules/type-mapping/dist/functional-lib/number/index.js");
var number_string_1 = __webpack_require__(/*! ./number-string */ "./node_modules/type-mapping/dist/functional-lib/string/number-string.js");
var type_util_1 = __webpack_require__(/*! ../../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
function finiteNumberToFiniteNumberString() {
    return operator_1.cast(number_1.finiteNumber(), function (num) { return num.toString(); }, number_string_1.finiteNumberString());
}
exports.finiteNumberToFiniteNumberString = finiteNumberToFiniteNumberString;
function integerToIntegerString() {
    return operator_1.cast(number_1.integer(), function (num) { return num.toString(); }, number_string_1.integerString());
}
exports.integerToIntegerString = integerToIntegerString;
function unsignedIntegerToUnsignedIntegerString() {
    return operator_1.cast(number_1.unsignedInteger(), function (num) { return num.toString(); }, number_string_1.unsignedIntegerString());
}
exports.unsignedIntegerToUnsignedIntegerString = unsignedIntegerToUnsignedIntegerString;
/**
    Calls either `JSON.stringify()` or `JSON.parse()` once.
*/
function jsonObjectToJsonObjectString() {
    return function (name, mixed) {
        if (typeof mixed == "string") {
            if (!/^\s*\{/.test(mixed)) {
                throw error_util_1.makeMappingError({
                    message: name + " must be JSON Object string",
                    inputName: name,
                    actualValue: mixed,
                    expected: "JSON Object string",
                });
            }
            try {
                JSON.parse(mixed);
            }
            catch (err) {
                throw error_util_1.makeMappingError({
                    message: name + " must be valid JSON Object string; " + err.message,
                    inputName: name,
                    actualValue: mixed,
                    expected: "valid JSON Object string",
                });
            }
            return mixed;
        }
        try {
            var str = JSON.stringify(mixed);
            if (typeof str == "string" && str[0] == "{") {
                if (type_util_1.isBigIntNativelySupported() || !type_util_1.isBigInt(mixed)) {
                    return str;
                }
            }
            throw error_util_1.makeMappingError({
                message: name + " must be JSON Object; received " + type_util_1.toTypeStr(mixed),
                inputName: name,
                actualValue: mixed,
                expected: "JSON Object",
            });
        }
        catch (err) {
            throw error_util_1.makeMappingError({
                message: name + " must be JSON Object; " + err.message,
                inputName: name,
                actualValue: mixed,
                expected: "JSON Object",
            });
        }
    };
}
exports.jsonObjectToJsonObjectString = jsonObjectToJsonObjectString;
//# sourceMappingURL=cast.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/string/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/string/index.js ***!
  \***********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./cast */ "./node_modules/type-mapping/dist/functional-lib/string/cast.js"));
__export(__webpack_require__(/*! ./ip-address */ "./node_modules/type-mapping/dist/functional-lib/string/ip-address.js"));
__export(__webpack_require__(/*! ./ip-v4-mapped-ip-v6 */ "./node_modules/type-mapping/dist/functional-lib/string/ip-v4-mapped-ip-v6.js"));
__export(__webpack_require__(/*! ./ip-v4 */ "./node_modules/type-mapping/dist/functional-lib/string/ip-v4.js"));
__export(__webpack_require__(/*! ./ip-v6 */ "./node_modules/type-mapping/dist/functional-lib/string/ip-v6.js"));
__export(__webpack_require__(/*! ./number-string */ "./node_modules/type-mapping/dist/functional-lib/string/number-string.js"));
__export(__webpack_require__(/*! ./string */ "./node_modules/type-mapping/dist/functional-lib/string/string.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/string/ip-address.js":
/*!****************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/string/ip-address.js ***!
  \****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var ip_v4_1 = __webpack_require__(/*! ./ip-v4 */ "./node_modules/type-mapping/dist/functional-lib/string/ip-v4.js");
var ip_v6_1 = __webpack_require__(/*! ./ip-v6 */ "./node_modules/type-mapping/dist/functional-lib/string/ip-v6.js");
var ip_v4_mapped_ip_v6_1 = __webpack_require__(/*! ./ip-v4-mapped-ip-v6 */ "./node_modules/type-mapping/dist/functional-lib/string/ip-v4-mapped-ip-v6.js");
function ipAddressString() {
    return operator_1.or(ip_v4_1.ipV4String(), ip_v6_1.ipV6String(), ip_v4_mapped_ip_v6_1.ipV4MappedIpV6String());
}
exports.ipAddressString = ipAddressString;
//# sourceMappingURL=ip-address.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/string/ip-v4-mapped-ip-v6.js":
/*!************************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/string/ip-v4-mapped-ip-v6.js ***!
  \************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var string_1 = __webpack_require__(/*! ./string */ "./node_modules/type-mapping/dist/functional-lib/string/string.js");
var ip_v4_1 = __webpack_require__(/*! ./ip-v4 */ "./node_modules/type-mapping/dist/functional-lib/string/ip-v4.js");
var ip_v6_1 = __webpack_require__(/*! ./ip-v6 */ "./node_modules/type-mapping/dist/functional-lib/string/ip-v6.js");
var string_util_1 = __webpack_require__(/*! ../../string-util */ "./node_modules/type-mapping/dist/string-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
function ipV4MappedIpV6String() {
    var ipV4StringDelegate = ip_v4_1.ipV4String();
    var ipV6PartDelegate = ip_v6_1.ipV6StringWithMaxSegmentCount(6);
    return operator_1.pipe(string_1.string(), function (name, str) {
        var ipV4Start = str.lastIndexOf(":");
        if (ipV4Start < 0) {
            throw error_util_1.makeMappingError({
                message: "Expected " + name + " to have ':' symbol",
                inputName: name,
                actualValue: str,
                expected: "IPv4-mapped IPv6 string with ':' symbol",
            });
        }
        var rawIpV4 = str.substr(ipV4Start + 1);
        //Must have [1, 6] segments
        //Note : If input ends with "::", rawIpV6 becomes ":"
        var rawIpV6 = str.substr(0, ipV4Start);
        if (rawIpV6.length == 0) {
            throw error_util_1.makeMappingError({
                message: "Expected " + name + " to have one to six IPv6 segments; found zero",
                inputName: name,
                actualValue: str,
                expected: "IPv4-mapped IPv6 string with one to six IPv6 segments",
            });
        }
        var rawIpV6EndsWithDoubleColon = string_util_1.stringEndsWith(rawIpV6, ":");
        var ipV4 = ipV4StringDelegate(name + ".IPv4Part", rawIpV4);
        var ipV6 = ipV6PartDelegate(name + ".IPv6Part", rawIpV6EndsWithDoubleColon ?
            rawIpV6 + ":" :
            rawIpV6);
        if (string_util_1.stringEndsWith(ipV6, "::")) {
            return ipV6 + ipV4;
        }
        else if (string_util_1.stringEndsWith(ipV6, ":")) {
            return ipV6 + ipV4;
        }
        else {
            return ipV6 + ":" + ipV4;
        }
    });
}
exports.ipV4MappedIpV6String = ipV4MappedIpV6String;
//# sourceMappingURL=ip-v4-mapped-ip-v6.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/string/ip-v4.js":
/*!***********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/string/ip-v4.js ***!
  \***********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var number_1 = __webpack_require__(/*! ../number */ "./node_modules/type-mapping/dist/functional-lib/number/index.js");
var string_1 = __webpack_require__(/*! ./string */ "./node_modules/type-mapping/dist/functional-lib/string/string.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
/**
    https://en.wikipedia.org/wiki/Dot-decimal_notation

    An octet is 8-bits.
    In decimal, an octet can represent [0, 255].

    IPv4 strings are made of four octets (written in decimal),
    each separated by a period.

    Examples:

    127.0.0.1
    255.255.255.0
    255.255.255.255
*/
function ipV4OctetString() {
    return operator_1.pipe(number_1.stringToUnsignedInteger(), number_1.ltEq(255), function (_name, octet) {
        return octet.toString();
    });
}
exports.ipV4OctetString = ipV4OctetString;
function ipV4String() {
    var octetDelegate = ipV4OctetString();
    return operator_1.pipe(string_1.string(), function (name, str) {
        var rawOctets = str
            .replace(/\s+/g, "")
            .split(".");
        if (rawOctets.length != 4) {
            throw error_util_1.makeMappingError({
                message: name + " must have four octets; found " + rawOctets.length,
                inputName: name,
                actualValue: str,
                expected: "four IPv4 octets",
            });
        }
        return rawOctets
            .map(function (rawOctet, i) { return octetDelegate(name + ".octet" + i, rawOctet); })
            .join(".");
    });
}
exports.ipV4String = ipV4String;
//# sourceMappingURL=ip-v4.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/string/ip-v6.js":
/*!***********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/string/ip-v6.js ***!
  \***********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var string_1 = __webpack_require__(/*! ./string */ "./node_modules/type-mapping/dist/functional-lib/string/string.js");
var array_util_1 = __webpack_require__(/*! ../../array-util */ "./node_modules/type-mapping/dist/array-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
/**
    == INPUT ==
    https://tools.ietf.org/html/rfc4291#section-2.2

    Each IPv6 segment is any hexadecimal value between
    0 and ffff.

    Each segment is one to four hexadecimal digits.

    == OUTPUT ==
    https://tools.ietf.org/html/rfc5952#section-4.1
    Leading zeros MUST be suppressed.  For example, 2001:0db8::0001 is
    not acceptable and must be represented as 2001:db8::1.  A single 16-
    bit 0000 field MUST be represented as 0.

    https://tools.ietf.org/html/rfc5952#section-4.3

    The characters "a", "b", "c", "d", "e", and "f" in an IPv6 address
    MUST be represented in lowercase.
*/
function ipV6SegmentString() {
    return operator_1.pipe(string_1.stringLength({
        min: 1,
        max: 4,
    }), string_1.hexadecimalString(), function (_name, str) {
        if (/^0+$/.test(str)) {
            return "0";
        }
        return str.toLowerCase()
            .replace(/^0+/, "");
    });
}
exports.ipV6SegmentString = ipV6SegmentString;
function consecutiveZeroCount(segments, start) {
    var count = 0;
    while (segments[start] == "0") {
        ++count;
        ++start;
    }
    return count;
}
function largestConsecutiveZeroCount(segments) {
    var largestStart = 0;
    var largestCount = 0;
    var curStart = 0;
    while (curStart < segments.length) {
        var curCount = consecutiveZeroCount(segments, curStart);
        if (curCount > largestCount) {
            largestStart = curStart;
            largestCount = curCount;
        }
        ++curStart;
    }
    return {
        start: largestStart,
        count: largestCount,
        before: segments.slice(0, largestStart),
        after: segments.slice(largestStart + largestCount),
    };
}
/**
    https://tools.ietf.org/html/rfc5952#section-4.2.1

    The use of the symbol "::" MUST be used to its maximum capability.
    For example, 2001:db8:0:0:0:0:2:1 must be shortened to 2001:db8::2:1.
    Likewise, 2001:db8::0:1 is not acceptable, because the symbol "::"
    could have been used to produce a shorter representation 2001:db8::1.

    https://tools.ietf.org/html/rfc5952#section-4.2.2

    The symbol "::" MUST NOT be used to shorten just one 16-bit 0 field.
    For example, the representation 2001:db8:0:1:1:1:1:1 is correct, but
    2001:db8::1:1:1:1:1 is not correct.

    https://tools.ietf.org/html/rfc5952#section-4.2.3

    When there is an alternative choice in the placement of a "::", the
    longest run of consecutive 16-bit 0 fields MUST be shortened (i.e.,
    the sequence with three consecutive zero fields is shortened in 2001:
    0:0:1:0:0:0:1).  When the length of the consecutive 16-bit 0 fields
    are equal (i.e., 2001:db8:0:0:1:0:0:1), the first sequence of zero
    bits MUST be shortened.  For example, 2001:db8::1:0:0:1 is correct
    representation.
*/
function toIpV6CanonicalString(segments) {
    var result = largestConsecutiveZeroCount(segments);
    if (result.count <= 1) {
        return segments.join(":");
    }
    else {
        return (result.before.join(":") +
            "::" +
            result.after.join(":"));
    }
}
function ipV6StringWithMaxSegmentCount(maxSegmentCount) {
    var ipV6SegmentStringDelegate = ipV6SegmentString();
    return operator_1.pipe(string_1.string(), function (name, str) {
        var consecutiveNonZero = str
            .replace(/\s+/g, "")
            .split("::");
        if (consecutiveNonZero.length == 1) {
            //All non-zeroes
            var rawSegments = consecutiveNonZero[0].split(":");
            if (rawSegments.length != maxSegmentCount) {
                throw error_util_1.makeMappingError({
                    message: name + " must have " + maxSegmentCount + " segments; found " + rawSegments.length,
                    inputName: name,
                    actualValue: str,
                    expected: maxSegmentCount + " IPv6 segments",
                });
            }
            var segments = rawSegments
                .map(function (rawSegment, i) { return ipV6SegmentStringDelegate(name + " segment" + i, rawSegment); });
            return toIpV6CanonicalString(segments);
        }
        else if (consecutiveNonZero.length == 2) {
            //E.g. ffff:ffff::ffff:ffff:ffff
            var rawSegmentsA = consecutiveNonZero[0].split(":").filter(function (s) { return s != ""; });
            var rawSegmentsB = consecutiveNonZero[1].split(":").filter(function (s) { return s != ""; });
            var rawSegmentCount = rawSegmentsA.length + rawSegmentsB.length;
            if (rawSegmentCount >= maxSegmentCount) {
                throw error_util_1.makeMappingError({
                    message: name + " must have up to " + (maxSegmentCount - 1) + " segments when '::' symbol is used; found " + rawSegmentCount,
                    inputName: name,
                    actualValue: str,
                    expected: "up to " + (maxSegmentCount - 1) + " IPv6 segments",
                });
            }
            var segmentsA = rawSegmentsA
                .map(function (rawSegment, i) { return ipV6SegmentStringDelegate(name + " segment" + i, rawSegment); });
            var segmentBStart_1 = maxSegmentCount - rawSegmentsB.length;
            var segmentsB = rawSegmentsB
                .map(function (rawSegment, i) { return ipV6SegmentStringDelegate(name + " segment" + (segmentBStart_1 + i), rawSegment); });
            var zeroes = array_util_1.arrayFill(Array(maxSegmentCount - rawSegmentCount), "0");
            return toIpV6CanonicalString(segmentsA
                .concat(zeroes)
                .concat(segmentsB));
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must have zero or one '::' symbol; found " + (consecutiveNonZero.length - 1) + " uses",
                inputName: name,
                actualValue: str,
                expected: "IPv6 string with zero or one '::' symbol",
            });
        }
    });
}
exports.ipV6StringWithMaxSegmentCount = ipV6StringWithMaxSegmentCount;
function ipV6String() {
    return ipV6StringWithMaxSegmentCount(8);
}
exports.ipV6String = ipV6String;
//# sourceMappingURL=ip-v6.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/string/number-string.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/string/number-string.js ***!
  \*******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var number_1 = __webpack_require__(/*! ../number */ "./node_modules/type-mapping/dist/functional-lib/number/index.js");
var string_1 = __webpack_require__(/*! ./string */ "./node_modules/type-mapping/dist/functional-lib/string/string.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
var FixedPointUtil = __webpack_require__(/*! ../../fixed-point-util */ "./node_modules/type-mapping/dist/fixed-point-util/index.js");
var FloatingPointUtil = __webpack_require__(/*! ../../floating-point-util */ "./node_modules/type-mapping/dist/floating-point-util/index.js");
/**
    Just because a string is in floating point format does not mean
    it is a finite number.

    ```ts
    const nines_80 = "99999999999999999999999999999999999999999999999999999999999999999999999999999999";
    const nines_320 = nines_80.repeat(4);
    //This will pass, 320 nines in a row is a valid floating point format
    floatingPointFormatString()("", nines_320);
    //Infinity
    parseFloat(nines_320);
    ```

    + This mapper will trim strings before checking.
*/
function floatingPointFormatString() {
    return operator_1.pipe(string_1.toTrimmed(), string_1.match(FloatingPointUtil.floatingPointRegex, function (name) {
        return {
            message: name + " must be valid floating point format string",
            expected: "valid floating point format string",
        };
    }));
}
exports.floatingPointFormatString = floatingPointFormatString;
/**
    Just because a string is in integer format does not mean
    it is a finite number.

    ```ts
    const nines_80 = "99999999999999999999999999999999999999999999999999999999999999999999999999999999";
    const nines_320 = nines_80.repeat(4);
    //This will pass, 320 nines in a row is a valid integer format
    integerFormatString()("", nines_320);
    //Infinity
    parseFloat(nines_320);
    ```

    + This mapper will trim strings before checking.
    + This mapper allows scientific notation.
*/
function integerFormatString() {
    return operator_1.pipe(string_1.toTrimmed(), function (name, str) {
        var parsed = FixedPointUtil.tryParse(str);
        if (parsed == undefined || !parsed.isInteger) {
            throw error_util_1.makeMappingError({
                message: name + " must be a valid integer format string",
                inputName: name,
                actualValue: str,
                expected: "valid integer format string",
            });
        }
        return str;
    });
}
exports.integerFormatString = integerFormatString;
/**
    Just because a string is in unsigned number format does not mean
    it is a finite number.

    ```ts
    const nines_80 = "99999999999999999999999999999999999999999999999999999999999999999999999999999999";
    const nines_320 = nines_80.repeat(4);
    //This will pass, 320 nines in a row is a valid unsigned number format
    unsignedIntegerFormatString()("", nines_320);
    //Infinity
    parseFloat(nines_320);
    ```

    + This mapper will trim strings before checking.
    + This mapper allows scientific notation.
*/
function unsignedIntegerFormatString() {
    return operator_1.pipe(string_1.toTrimmed(), function (name, str) {
        var parsed = FixedPointUtil.tryParse(str);
        if (parsed == undefined || !parsed.isInteger || parsed.isNegative) {
            throw error_util_1.makeMappingError({
                message: name + " must be a valid unsigned integer format string",
                inputName: name,
                actualValue: str,
                expected: "valid unsigned integer format string",
            });
        }
        return str;
    });
}
exports.unsignedIntegerFormatString = unsignedIntegerFormatString;
/**
    Uses `floatingPointFormatString()` and `parseFloat()` internally.

    ```ts
    //Output is 10000000000000000 due to loss in precision
    finiteNumberString()("", "9999999999999999");
    ```
*/
function finiteNumberString() {
    var finiteNumberDelegate = number_1.finiteNumber();
    return operator_1.pipe(floatingPointFormatString(), function (name, str) {
        return finiteNumberDelegate("parseFloat(" + name + ")", parseFloat(str)).toString();
    });
}
exports.finiteNumberString = finiteNumberString;
/**
    Uses `integerFormatString()` and `parseFloat()` internally.

    ```ts
    //Output is 10000000000000000 due to loss in precision
    integerString()("", "9999999999999999");
    ```
*/
function integerString() {
    var integerDelegate = number_1.integer();
    return operator_1.pipe(integerFormatString(), function (name, str) {
        return integerDelegate("parseFloat(" + name + ")", parseFloat(str)).toString();
    });
}
exports.integerString = integerString;
/**
    Uses `unsignedIntegerString()` and `parseFloat()` internally.

    ```ts
    //Output is 10000000000000000 due to loss in precision
    integerString()("", "9999999999999999");
    ```
*/
function unsignedIntegerString() {
    var unsignedIntegerDelegate = number_1.unsignedInteger();
    return operator_1.pipe(unsignedIntegerFormatString(), function (name, str) {
        return unsignedIntegerDelegate("parseFloat(" + name + ")", parseFloat(str)).toString();
    });
}
exports.unsignedIntegerString = unsignedIntegerString;
//# sourceMappingURL=number-string.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/string/string.js":
/*!************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/string/string.js ***!
  \************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var array_like_1 = __webpack_require__(/*! ../array-like */ "./node_modules/type-mapping/dist/functional-lib/array-like/index.js");
var string_util_1 = __webpack_require__(/*! ../../string-util */ "./node_modules/type-mapping/dist/string-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
function string() {
    return function (name, mixed) {
        if (typeof mixed != "string") {
            throw error_util_1.makeMappingError({
                message: name + " must be string; received " + type_util_1.toTypeStr(mixed),
                inputName: name,
                actualValue: mixed,
                expected: "string",
            });
        }
        return mixed;
    };
}
exports.string = string;
/**
    Calls `JSON.parse()` once.
*/
function jsonObjectString() {
    return operator_1.pipe(string(), function (name, str) {
        if (!/^\s*\{/.test(str)) {
            throw error_util_1.makeMappingError({
                message: name + " must be JSON Object string",
                inputName: name,
                actualValue: str,
                expected: "JSON Object string",
            });
        }
        try {
            JSON.parse(str);
        }
        catch (err) {
            throw error_util_1.makeMappingError({
                message: name + " must be valid JSON Object string; " + err.message,
                inputName: name,
                actualValue: str,
                expected: "valid JSON Object string",
            });
        }
        return str;
    });
}
exports.jsonObjectString = jsonObjectString;
function stringLength(args) {
    return operator_1.pipe(string(), array_like_1.length(args));
}
exports.stringLength = stringLength;
function stringExactLength(length) {
    return stringLength({
        min: length,
        max: length,
    });
}
exports.stringExactLength = stringExactLength;
function match(regex, errorDelegate) {
    return operator_1.pipe(string(), function (name, mixed) {
        if (regex.test(mixed)) {
            return mixed;
        }
        else {
            if (errorDelegate == undefined) {
                throw error_util_1.makeMappingError({
                    message: name + " must match " + regex.toString(),
                    inputName: name,
                    actualValue: mixed,
                    expected: regex.toString(),
                });
            }
            else {
                var errResult = errorDelegate(name);
                if (typeof errResult == "string") {
                    throw error_util_1.makeMappingError({
                        message: errResult,
                        inputName: name,
                        actualValue: mixed,
                        expected: regex.toString(),
                    });
                }
                else {
                    throw error_util_1.makeMappingError({
                        message: errResult.message,
                        inputName: name,
                        actualValue: mixed,
                        expected: errResult.expected,
                    });
                }
            }
        }
    });
}
exports.match = match;
function notMatch(regex, errorDelegate) {
    return operator_1.pipe(string(), function (name, mixed) {
        if (regex.test(mixed)) {
            if (errorDelegate == undefined) {
                throw error_util_1.makeMappingError({
                    message: name + " must not match " + regex.toString(),
                    inputName: name,
                    actualValue: mixed,
                    expected: "not " + regex.toString(),
                });
            }
            else {
                var errResult = errorDelegate(name);
                if (typeof errResult == "string") {
                    throw error_util_1.makeMappingError({
                        message: errResult,
                        inputName: name,
                        actualValue: mixed,
                        expected: "not " + regex.toString(),
                    });
                }
                else {
                    throw error_util_1.makeMappingError({
                        message: errResult.message,
                        inputName: name,
                        actualValue: mixed,
                        expected: errResult.expected,
                    });
                }
            }
        }
        else {
            return mixed;
        }
    });
}
exports.notMatch = notMatch;
/**
 *
 * Alias for `emailAddress()`
 *  @see {@link emailAddress}
 *
 * @deprecated
 */
function email() {
    return emailAddress();
}
exports.email = email;
/**
 * Runs the regex `/^.+@.+$/` on the string.
 * Doesn't exactly follow a standard.
 *
 * You may roll your own email address validator,
 * but it's better to just send a confirmation
 * email to check the email address is valid.
 */
function emailAddress() {
    return match(/^.+@.+$/, function (name) {
        return {
            message: name + " must be an email address",
            expected: "email address",
        };
    });
}
exports.emailAddress = emailAddress;
/**
 * + Allows empty string.
 * + Allows digits 0-9.
 * + Allows uppercase A-F.
 * + Allows lowercase a-f.
 */
function hexadecimalString() {
    return match(/^[a-fA-F0-9]*$/, function (name) {
        return {
            message: name + " must be a hexadecimal string",
            expected: "hexadecimal string",
        };
    });
}
exports.hexadecimalString = hexadecimalString;
function toUpperCase() {
    return operator_1.pipe(string(), function (_name, str) {
        return str.toUpperCase();
    });
}
exports.toUpperCase = toUpperCase;
function toLowerCase() {
    return operator_1.pipe(string(), function (_name, str) {
        return str.toLowerCase();
    });
}
exports.toLowerCase = toLowerCase;
//The `char` must be a single character or an error is thrown
function padLeft(minLength, char) {
    if (char.length != 1) {
        throw new Error("\"char\" must be one character; received " + char);
    }
    return operator_1.pipe(string(), function (_name, str) {
        if (str.length >= minLength) {
            return str;
        }
        return string_util_1.stringRepeat(char, minLength - str.length) + str;
    });
}
exports.padLeft = padLeft;
//The `char` must be a single character or an error is thrown
function padRight(minLength, char) {
    if (char.length != 1) {
        throw new Error("\"char\" must be one character; received " + char);
    }
    return operator_1.pipe(string(), function (_name, str) {
        if (str.length >= minLength) {
            return str;
        }
        return str + string_util_1.stringRepeat(char, minLength - str.length);
    });
}
exports.padRight = padRight;
function subStringBlacklist(blacklist, configuration) {
    if (configuration === void 0) { configuration = {}; }
    //We do not mind === here.
    var caseInsensitive = (configuration.caseInsensitive === true);
    if (caseInsensitive) {
        blacklist = blacklist.map(function (subString) { return subString.toLowerCase(); });
    }
    var blacklistStr = blacklist.map(function (s) { return type_util_1.toLiteralStr(s); }).join(", ");
    var expected = "not " + blacklistStr;
    return operator_1.pipe(string(), function (name, original) {
        var str = caseInsensitive ?
            original.toLowerCase() :
            original;
        var found = [];
        for (var _i = 0, blacklist_1 = blacklist; _i < blacklist_1.length; _i++) {
            var subString = blacklist_1[_i];
            if (str.indexOf(subString) >= 0) {
                found.push(subString);
            }
        }
        if (found.length == 0) {
            return original;
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must not contain the following: " + blacklistStr + "; found " + found.map(function (s) { return type_util_1.toLiteralStr(s); }).join(", "),
                inputName: name,
                actualValue: original,
                expected: expected,
            });
        }
    });
}
exports.subStringBlacklist = subStringBlacklist;
function toTrimmed() {
    return operator_1.pipe(string(), function (_name, str) {
        return str.trim();
    });
}
exports.toTrimmed = toTrimmed;
//# sourceMappingURL=string.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/type/deferred.js":
/*!************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/type/deferred.js ***!
  \************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
;
function deferred() {
    var implementation = undefined;
    var result = function (name, mixed) {
        if (implementation == undefined) {
            throw error_util_1.makeMappingError({
                message: "Cannot check " + name + "; no implementation given for deferred mapper",
                inputName: name,
                actualValue: mixed,
                expected: "implementation for deferred mapper",
            });
        }
        else {
            return implementation(name, mixed);
        }
    };
    result.setImplementation = function (impl) {
        implementation = impl;
    };
    return result;
}
exports.deferred = deferred;
//# sourceMappingURL=deferred.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/type/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/type/index.js ***!
  \*********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./deferred */ "./node_modules/type-mapping/dist/functional-lib/type/deferred.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/uint-8-array/byte-length.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/uint-8-array/byte-length.js ***!
  \***********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var object_1 = __webpack_require__(/*! ../object */ "./node_modules/type-mapping/dist/functional-lib/object/index.js");
var number_1 = __webpack_require__(/*! ../number */ "./node_modules/type-mapping/dist/functional-lib/number/index.js");
var mapper_1 = __webpack_require__(/*! ../../mapper */ "./node_modules/type-mapping/dist/mapper/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
var error_code_1 = __webpack_require__(/*! ../../error-code */ "./node_modules/type-mapping/dist/error-code.js");
function byteLength(args) {
    var byteLengthDelegate = operator_1.pipe(number_1.unsignedInteger(), number_1.range({
        gtEq: args.min,
        ltEq: args.max,
    }));
    var expected = ((args.min == undefined) ?
        ((args.max == undefined) ?
            "value with \"byteLength\" property" :
            "value of byteLength less than, or equal to " + args.max.toString()) :
        ((args.max == undefined) ?
            "value of byteLength greater than, or equal to " + args.min.toString() :
            (args.min == args.max) ?
                "value of byteLength " + args.min.toString() :
                "value of byteLength between " + args.min.toString() + " and " + args.max.toString()));
    return operator_1.pipe(object_1.instanceOfObject(), function (name, mixed) {
        var byteLengthResult = mapper_1.tryMapHandled(byteLengthDelegate, name + ".byteLength", mixed.byteLength);
        if (byteLengthResult.success) {
            return mixed;
        }
        else {
            throw error_util_1.makeMappingError({
                message: name + " must be " + expected,
                inputName: name,
                actualValue: mixed,
                expected: expected,
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_BYTE_LENGTH,
                    min: args.min,
                    max: args.max,
                },
                propertyErrors: [
                    byteLengthResult.mappingError,
                ],
            });
        }
    });
}
exports.byteLength = byteLength;
//# sourceMappingURL=byte-length.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/uint-8-array/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/uint-8-array/index.js ***!
  \*****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./byte-length */ "./node_modules/type-mapping/dist/functional-lib/uint-8-array/byte-length.js"));
__export(__webpack_require__(/*! ./uint-8-array */ "./node_modules/type-mapping/dist/functional-lib/uint-8-array/uint-8-array.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/uint-8-array/uint-8-array.js":
/*!************************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/uint-8-array/uint-8-array.js ***!
  \************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var byte_length_1 = __webpack_require__(/*! ./byte-length */ "./node_modules/type-mapping/dist/functional-lib/uint-8-array/byte-length.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
var error_code_1 = __webpack_require__(/*! ../../error-code */ "./node_modules/type-mapping/dist/error-code.js");
function instanceOfUint8Array() {
    return function (name, mixed) {
        if (!(mixed instanceof Uint8Array)) {
            throw error_util_1.makeMappingError({
                message: name + " must be instance of Uint8Array; received " + type_util_1.toTypeStr(mixed),
                inputName: name,
                actualValue: mixed,
                expected: "Uint8Array",
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_TYPE,
                },
            });
        }
        return mixed;
    };
}
exports.instanceOfUint8Array = instanceOfUint8Array;
function uint8ArrayLength(args) {
    return operator_1.pipe(byte_length_1.byteLength(args), instanceOfUint8Array());
}
exports.uint8ArrayLength = uint8ArrayLength;
function uint8ArrayExactLength(length) {
    return uint8ArrayLength({
        min: length,
        max: length,
    });
}
exports.uint8ArrayExactLength = uint8ArrayExactLength;
//# sourceMappingURL=uint-8-array.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/undefined/cast.js":
/*!*************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/undefined/cast.js ***!
  \*************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var operator_1 = __webpack_require__(/*! ../operator */ "./node_modules/type-mapping/dist/functional-lib/operator/index.js");
var literal_1 = __webpack_require__(/*! ../literal */ "./node_modules/type-mapping/dist/functional-lib/literal/index.js");
var undefined_1 = __webpack_require__(/*! ./undefined */ "./node_modules/type-mapping/dist/functional-lib/undefined/undefined.js");
var string_1 = __webpack_require__(/*! ../string */ "./node_modules/type-mapping/dist/functional-lib/string/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
function nullToUndefined() {
    return function (name, mixed) {
        //We do not mind === here.
        if (mixed === undefined || mixed === null) {
            return undefined;
        }
        throw error_util_1.makeMappingError({
            message: name + " must be null|undefined; received " + type_util_1.toTypeStr(mixed),
            inputName: name,
            actualValue: mixed,
            expected: "null|undefined",
            expectedMeta: {
                mappableValues: [null, undefined],
                outputValues: [undefined],
            },
        });
    };
}
exports.nullToUndefined = nullToUndefined;
function emptyStringToUndefined() {
    return operator_1.cast(literal_1.literal(""), function () { return undefined; }, undefined_1.undefined());
}
exports.emptyStringToUndefined = emptyStringToUndefined;
/**
    An empty string, or a string of only whitespace
*/
function whitespaceStringToUndefined() {
    return operator_1.cast(string_1.match(/^\s*$/, function (name) {
        return {
            message: name + " must be a whitespace string",
            expected: "whitespace string",
        };
    }), function () { return undefined; }, undefined_1.undefined());
}
exports.whitespaceStringToUndefined = whitespaceStringToUndefined;
//# sourceMappingURL=cast.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/undefined/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/undefined/index.js ***!
  \**************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./cast */ "./node_modules/type-mapping/dist/functional-lib/undefined/cast.js"));
__export(__webpack_require__(/*! ./undefined */ "./node_modules/type-mapping/dist/functional-lib/undefined/undefined.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/undefined/undefined.js":
/*!******************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/undefined/undefined.js ***!
  \******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
function undef() {
    return function (name, mixed) {
        //We do not mind === here.
        if (mixed === undefined) {
            return mixed;
        }
        throw error_util_1.makeMappingError({
            message: name + " must be undefined; received " + type_util_1.toTypeStr(mixed),
            inputName: name,
            actualValue: mixed,
            expected: "undefined",
            expectedMeta: {
                mappableValues: [undefined],
                outputValues: [undefined],
            },
        });
    };
}
exports.undefined = undef;
//# sourceMappingURL=undefined.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/unknown/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/unknown/index.js ***!
  \************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./unknown */ "./node_modules/type-mapping/dist/functional-lib/unknown/unknown.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/functional-lib/unknown/unknown.js":
/*!**************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/functional-lib/unknown/unknown.js ***!
  \**************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function unknown() {
    return function (_name, mixed) {
        return mixed;
    };
}
exports.unknown = unknown;
//# sourceMappingURL=unknown.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/index.js":
/*!*************************************************!*\
  !*** ./node_modules/type-mapping/dist/index.js ***!
  \*************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path="buffer.d.ts" />
var ArrayBufferUtil = __webpack_require__(/*! ./array-buffer-util */ "./node_modules/type-mapping/dist/array-buffer-util/index.js");
exports.ArrayBufferUtil = ArrayBufferUtil;
var EnumUtil = __webpack_require__(/*! ./enum-util */ "./node_modules/type-mapping/dist/enum-util/index.js");
exports.EnumUtil = EnumUtil;
var BigIntUtil = __webpack_require__(/*! ./bigint-util */ "./node_modules/type-mapping/dist/bigint-util/index.js");
exports.BigIntUtil = BigIntUtil;
var FixedPointUtil = __webpack_require__(/*! ./fixed-point-util */ "./node_modules/type-mapping/dist/fixed-point-util/index.js");
exports.FixedPointUtil = FixedPointUtil;
var FloatingPointUtil = __webpack_require__(/*! ./floating-point-util */ "./node_modules/type-mapping/dist/floating-point-util/index.js");
exports.FloatingPointUtil = FloatingPointUtil;
__export(__webpack_require__(/*! ./decorator */ "./node_modules/type-mapping/dist/decorator/index.js"));
var ErrorUtil = __webpack_require__(/*! ./error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
exports.ErrorUtil = ErrorUtil;
__export(__webpack_require__(/*! ./field-map */ "./node_modules/type-mapping/dist/field-map/index.js"));
__export(__webpack_require__(/*! ./functional-lib */ "./node_modules/type-mapping/dist/functional-lib/index.js"));
var jsonApi = __webpack_require__(/*! ./json-api-lib */ "./node_modules/type-mapping/dist/json-api-lib/index.js");
exports.jsonApi = jsonApi;
__export(__webpack_require__(/*! ./mapper */ "./node_modules/type-mapping/dist/mapper/index.js"));
var mysql = __webpack_require__(/*! ./mysql-lib */ "./node_modules/type-mapping/dist/mysql-lib/index.js");
exports.mysql = mysql;
var TypeUtil = __webpack_require__(/*! ./type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
exports.TypeUtil = TypeUtil;
__export(__webpack_require__(/*! ./error-code */ "./node_modules/type-mapping/dist/error-code.js"));
__export(__webpack_require__(/*! ./fluent-mapper */ "./node_modules/type-mapping/dist/fluent-mapper.js"));
/**
 * Convenience function.
 * Will create a native `bigint` (if natively supported),
 * or create a polyfilled `bigint` (if polyfilled).
 */
function BigInt(x) {
    return TypeUtil.getBigIntFactoryFunctionOrError()(x);
}
exports.BigInt = BigInt;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/json-api-lib/attribute-collection.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/json-api-lib/attribute-collection.js ***!
  \*****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../fluent-lib */ "./node_modules/type-mapping/dist/fluent-lib/index.js");
/**
 * Must be a plain-old-JavaScript-object in this implementation
 *
 * -----
 *
 * https://jsonapi.org/format/1.0/#document-resource-object-attributes
 *
 * The value of the `attributes` key **MUST** be an object (an “attributes object”).
 * Members of the attributes object (“attributes”) represent information about the resource object in which it’s defined.
 *
 * Attributes may contain any valid JSON value.
 *
 * Complex data structures involving JSON objects and arrays are allowed as attribute values.
 * However, any object that constitutes or is contained in an attribute **MUST NOT**
 * contain a `relationships` or `links` member, as those members are reserved by this specification for future use.
 *
 * Although has-one foreign keys (e.g. `author_id`) are often stored internally alongside other
 * information to be represented in a resource object, these keys **SHOULD NOT** appear as attributes.
 *
 * -----
 *
 * https://jsonapi.org/format/1.0/#document-resource-object-fields
 *
 * A resource object’s attributes and its relationships are collectively called its “fields”.
 *
 * Fields for a resource object **MUST** share a common namespace with each other and with `type` and `id`.
 * In other words, a resource can not have an attribute and relationship with the same name,
 * nor can it have an attribute or relationship named `type` or `id`.
 *
 * -----
 *
 * https://jsonapi.org/format/1.0/#document-member-names
 *
 * All member names used in a JSON:API document **MUST** be treated as
 * case sensitive by clients and servers, and they **MUST** meet all of the following conditions:
 *
 * + Member names **MUST** contain at least one character.
 * + Member names **MUST** contain only the allowed characters listed below.
 * + Member names **MUST** start and end with a “globally allowed character”, as defined below.
 *
 * To enable an easy mapping of member names to URLs,
 * it is **RECOMMENDED** that member names use only non-reserved,
 * URL safe characters specified in [RFC 3986](http://tools.ietf.org/html/rfc3986#page-13).
 *
 * ### Allowed Characters
 *
 * The following “globally allowed characters” **MAY** be used anywhere in a member name:
 *
 * + U+0061 to U+007A, “a-z”
 * + U+0041 to U+005A, “A-Z”
 * + U+0030 to U+0039, “0-9”
 * + U+0080 and above (non-ASCII Unicode characters; not recommended, not URL safe)
 *
 * Additionally, the following characters are allowed in member names, except as the first or last character:
 *
 * + U+002D HYPHEN-MINUS, “-“
 * + U+005F LOW LINE, “_”
 * + U+0020 SPACE, “ “ (not recommended, not URL safe)
 *
 *
 * ### Reserved Characters
 *
 * The following characters **MUST NOT** be used in member names:
 *
 * + U+002B PLUS SIGN, “+” (used for ordering)
 * + U+002C COMMA, “,” (used as a separator between relationship paths)
 * + U+002E PERIOD, “.” (used as a separator within relationship paths)
 * + U+005B LEFT SQUARE BRACKET, “[” (used in sparse fieldsets)
 * + U+005D RIGHT SQUARE BRACKET, “]” (used in sparse fieldsets)
 * + U+0021 EXCLAMATION MARK, “!”
 * + U+0022 QUOTATION MARK, ‘”’
 * + U+0023 NUMBER SIGN, “#”
 * + U+0024 DOLLAR SIGN, “$”
 * + U+0025 PERCENT SIGN, “%”
 * + U+0026 AMPERSAND, “&”
 * + U+0027 APOSTROPHE, “’”
 * + U+0028 LEFT PARENTHESIS, “(“
 * + U+0029 RIGHT PARENTHESIS, “)”
 * + U+002A ASTERISK, “*”
 * + U+002F SOLIDUS, “/”
 * + U+003A COLON, “:”
 * + U+003B SEMICOLON, “;”
 * + U+003C LESS-THAN SIGN, “<”
 * + U+003D EQUALS SIGN, “=”
 * + U+003E GREATER-THAN SIGN, “>”
 * + U+003F QUESTION MARK, “?”
 * + U+0040 COMMERCIAL AT, “@”
 * + U+005C REVERSE SOLIDUS, “\”
 * + U+005E CIRCUMFLEX ACCENT, “^”
 * + U+0060 GRAVE ACCENT, “`”
 * + U+007B LEFT CURLY BRACKET, “{“
 * + U+007C VERTICAL LINE, “|”
 * + U+007D RIGHT CURLY BRACKET, “}”
 * + U+007E TILDE, “~”
 * + U+007F DELETE
 * + U+0000 to U+001F (C0 Controls)
 *
 *  @see {@link pojo}
 *  @see {@link AttributeCollection}
 *
 * -----
 *
 * The JSON:API spec outlines many restrictions on field names of an `AttributeCollection`.
 *
 * However, we do not implement any of them at the moment.
 *
 * @todo Implement restrictions on field names?
 *
 */
exports.attributeCollection = fLib.pojo;
//# sourceMappingURL=attribute-collection.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/json-api-lib/client-resource.js":
/*!************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/json-api-lib/client-resource.js ***!
  \************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../fluent-lib */ "./node_modules/type-mapping/dist/fluent-lib/index.js");
var attribute_collection_1 = __webpack_require__(/*! ./attribute-collection */ "./node_modules/type-mapping/dist/json-api-lib/attribute-collection.js");
var relationship_1 = __webpack_require__(/*! ./relationship */ "./node_modules/type-mapping/dist/json-api-lib/relationship.js");
var link_collection_1 = __webpack_require__(/*! ./link-collection */ "./node_modules/type-mapping/dist/json-api-lib/link-collection.js");
var meta_1 = __webpack_require__(/*! ./meta */ "./node_modules/type-mapping/dist/json-api-lib/meta.js");
/**
 * https://jsonapi.org/format/1.0/#document-resource-objects
 *
 * “Resource objects” appear in a JSON:API document to represent resources.
 *
 * A resource object **MUST** contain at least the following top-level members:
 *
 * + `id`
 * + `type`
 *
 * Exception: The `id` member is not required when the resource object originates
 * at the client and represents a new resource to be created on the server.
 *
 * In addition, a resource object **MAY** contain any of these top-level members:
 *
 * + `attributes`: an attributes object representing some of the resource’s data.
 * + `relationships`: a relationships object describing relationships between the resource and other JSON:API resources.
 * + `links`: a links object containing links related to the resource.
 * + `meta`: a meta object containing non-standard meta-information about a resource that can not be
 *   represented as an attribute or relationship.
 *
 *  @see {@link attributeCollection}
 *  @see {@link relationship}
 *  @see {@link linkCollection}
 *  @see {@link meta}
 *  @see {@link ClientResource}
 *  @see {@link ExpectedInputClientResource}
 */
exports.clientResource = function () { return fLib.object({
    id: fLib.string().orNull().optional(),
    type: fLib.string(),
    attributes: attribute_collection_1.attributeCollection().orNull().optional(),
    relationships: relationship_1.relationship().orNull().optional(),
    links: link_collection_1.linkCollection().orNull().optional(),
    meta: meta_1.meta().orNull().optional(),
}); };
//# sourceMappingURL=client-resource.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/json-api-lib/document/__document-constraint-impl.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/json-api-lib/document/__document-constraint-impl.js ***!
  \********************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../../fluent-lib */ "./node_modules/type-mapping/dist/fluent-lib/index.js");
/**
 * Implements the constraints outlined in https://jsonapi.org/format/1.0/#document-top-level
 *
 *  @see {@link serverDocument}
 *  @see {@link clientDocument}
 *  @see {@link __DocumentConstraintImplMapper}
 *  @see {@link __DocumentConstraintImpl}
 */
function __documentConstraintImpl(args) {
    if (args.data == undefined) {
        if (args.meta == undefined) {
            return fLib.object({
                data: fLib.null().optional(),
                included: fLib.null().optional(),
                errors: fLib.array(args.errorObject),
                meta: fLib.null().optional(),
            });
        }
        else {
            return fLib.or(fLib.object({
                data: fLib.null().optional(),
                included: fLib.null().optional(),
                errors: fLib.array(args.errorObject),
                meta: fLib.null().optional(),
            }), fLib.object({
                data: fLib.null().optional(),
                included: fLib.null().optional(),
                errors: fLib.null().optional(),
                meta: args.meta,
            }));
        }
    }
    else if (args.meta == undefined) {
        return fLib.or(fLib.object({
            data: fLib.null().optional(),
            included: fLib.null().optional(),
            errors: fLib.array(args.errorObject),
            meta: fLib.null().optional(),
        }), fLib.object({
            data: args.data,
            included: fLib.array(args.resource).orNull().optional(),
            errors: fLib.null().optional(),
            meta: fLib.null().optional(),
        }));
    }
    else {
        return fLib.or(fLib.object({
            data: fLib.null().optional(),
            included: fLib.null().optional(),
            errors: fLib.array(args.errorObject),
            meta: fLib.null().optional(),
        }), fLib.object({
            data: args.data,
            included: fLib.array(args.resource).orNull().optional(),
            errors: fLib.null().optional(),
            meta: args.meta,
        }));
    }
}
exports.__documentConstraintImpl = __documentConstraintImpl;
//# sourceMappingURL=__document-constraint-impl.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/json-api-lib/document/client-document.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/json-api-lib/document/client-document.js ***!
  \*********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var __document_constraint_impl_1 = __webpack_require__(/*! ./__document-constraint-impl */ "./node_modules/type-mapping/dist/json-api-lib/document/__document-constraint-impl.js");
var json_api_1 = __webpack_require__(/*! ../json-api */ "./node_modules/type-mapping/dist/json-api-lib/json-api.js");
var link_collection_1 = __webpack_require__(/*! ../link-collection */ "./node_modules/type-mapping/dist/json-api-lib/link-collection.js");
var error_object_1 = __webpack_require__(/*! ../error-object */ "./node_modules/type-mapping/dist/json-api-lib/error-object.js");
var client_resource_1 = __webpack_require__(/*! ../client-resource */ "./node_modules/type-mapping/dist/json-api-lib/client-resource.js");
var fLib = __webpack_require__(/*! ../../fluent-lib */ "./node_modules/type-mapping/dist/fluent-lib/index.js");
/**
 * In this implementation, you have to specify one of the following,
 *
 * + `data`
 * + `meta`
 * + both `data` and `meta`
 *
 * If both `data` and `meta` are specified, all documents without `errors` must also contain both.
 *
 * -----
 *
 * https://jsonapi.org/format/1.0/#document-top-level
 *
 * JSON object **MUST** be at the root of every JSON:API request and response containing data.
 * This object defines a document’s “top level”.
 *
 * A document **MUST** contain at least one of the following top-level members:
 *
 * + `data`: the document’s “primary data”
 * + `errors`: an array of error objects
 * + `meta`: a meta object that contains non-standard meta-information.
 *
 * The members `data` and `errors` **MUST NOT** coexist in the same document.
 *
 * A document **MAY** contain any of these top-level members:
 *
 * + `jsonapi`: an object describing the client’s implementation
 * + `links`: a links object related to the primary data.
 * + `included`: an array of resource objects that are related to the primary data and/or each other (“included resources”).
 *
 * If a document does not contain a top-level `data` key, the `included` member **MUST NOT** be present either.
 *
 * The top-level links object **MAY** contain the following members:
 *
 * + `self`: the link that generated the current response document.
 * + `related`: a related resource link when the primary data represents a resource relationship.
 * + pagination links for the primary data.
 *
 * The document’s “primary data” is a representation of the resource or collection of resources targeted by a request.
 *
 * Primary data **MUST** be either:
 *
 * + a single resource object, a single resource identifier object,
 *   or `null`, for requests that target single resources
 * + an array of resource objects, an array of resource identifier objects,
 *   or an empty array (`[]`), for requests that target resource collections
 *
 * A logical collection of resources **MUST** be represented as an array, even if it only contains one item or is empty.
 *
 * @param args - The data, or meta mappers (or both)
 *
 *  @see {@link ClientDocumentMapper}
 *  @see {@link ClientDocument}
 *  @see {@link ExpectedInputClientDocument}
 *  @see {@link MappableInputClientDocument}
 */
function clientDocument(args) {
    var clientDocumentBase = {
        errorObject: error_object_1.errorObject(),
        resource: client_resource_1.clientResource(),
    };
    var impl = __document_constraint_impl_1.__documentConstraintImpl(__assign({}, args, clientDocumentBase));
    var base = fLib.object({
        jsonapi: json_api_1.jsonApi().orNull().optional(),
        links: link_collection_1.linkCollection().orNull().optional(),
    });
    return fLib.deepMerge(impl, base);
}
exports.clientDocument = clientDocument;
//# sourceMappingURL=client-document.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/json-api-lib/document/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/json-api-lib/document/index.js ***!
  \***********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./__document-constraint-impl */ "./node_modules/type-mapping/dist/json-api-lib/document/__document-constraint-impl.js"));
__export(__webpack_require__(/*! ./client-document */ "./node_modules/type-mapping/dist/json-api-lib/document/client-document.js"));
__export(__webpack_require__(/*! ./server-document */ "./node_modules/type-mapping/dist/json-api-lib/document/server-document.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/json-api-lib/document/server-document.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/json-api-lib/document/server-document.js ***!
  \*********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var __document_constraint_impl_1 = __webpack_require__(/*! ./__document-constraint-impl */ "./node_modules/type-mapping/dist/json-api-lib/document/__document-constraint-impl.js");
var json_api_1 = __webpack_require__(/*! ../json-api */ "./node_modules/type-mapping/dist/json-api-lib/json-api.js");
var link_collection_1 = __webpack_require__(/*! ../link-collection */ "./node_modules/type-mapping/dist/json-api-lib/link-collection.js");
var error_object_1 = __webpack_require__(/*! ../error-object */ "./node_modules/type-mapping/dist/json-api-lib/error-object.js");
var server_resource_1 = __webpack_require__(/*! ../server-resource */ "./node_modules/type-mapping/dist/json-api-lib/server-resource.js");
var fLib = __webpack_require__(/*! ../../fluent-lib */ "./node_modules/type-mapping/dist/fluent-lib/index.js");
/**
 * In this implementation, you have to specify one of the following,
 *
 * + `data`
 * + `meta`
 * + both `data` and `meta`
 *
 * If both `data` and `meta` are specified, all documents without `errors` must also contain both.
 *
 * -----
 *
 * https://jsonapi.org/format/1.0/#document-top-level
 *
 * JSON object **MUST** be at the root of every JSON:API request and response containing data.
 * This object defines a document’s “top level”.
 *
 * A document **MUST** contain at least one of the following top-level members:
 *
 * + `data`: the document’s “primary data”
 * + `errors`: an array of error objects
 * + `meta`: a meta object that contains non-standard meta-information.
 *
 * The members `data` and `errors` **MUST NOT** coexist in the same document.
 *
 * A document **MAY** contain any of these top-level members:
 *
 * + `jsonapi`: an object describing the server’s implementation
 * + `links`: a links object related to the primary data.
 * + `included`: an array of resource objects that are related to the primary data and/or each other (“included resources”).
 *
 * If a document does not contain a top-level `data` key, the `included` member **MUST NOT** be present either.
 *
 * The top-level links object **MAY** contain the following members:
 *
 * + `self`: the link that generated the current response document.
 * + `related`: a related resource link when the primary data represents a resource relationship.
 * + pagination links for the primary data.
 *
 * The document’s “primary data” is a representation of the resource or collection of resources targeted by a request.
 *
 * Primary data **MUST** be either:
 *
 * + a single resource object, a single resource identifier object,
 *   or `null`, for requests that target single resources
 * + an array of resource objects, an array of resource identifier objects,
 *   or an empty array (`[]`), for requests that target resource collections
 *
 * A logical collection of resources **MUST** be represented as an array, even if it only contains one item or is empty.
 *
 * @param args - The data, or meta mappers (or both)
 *
 *  @see {@link ServerDocumentMapper}
 *  @see {@link ServerDocument}
 *  @see {@link ExpectedInputServerDocument}
 *  @see {@link MappableInputServerDocument}
 */
function serverDocument(args) {
    var serverDocumentBase = {
        errorObject: error_object_1.errorObject(),
        resource: server_resource_1.serverResource(),
    };
    var impl = __document_constraint_impl_1.__documentConstraintImpl(__assign({}, args, serverDocumentBase));
    var base = fLib.object({
        jsonapi: json_api_1.jsonApi().orNull().optional(),
        links: link_collection_1.linkCollection().orNull().optional(),
    });
    return fLib.deepMerge(impl, base);
}
exports.serverDocument = serverDocument;
//# sourceMappingURL=server-document.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/json-api-lib/error-link-collection.js":
/*!******************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/json-api-lib/error-link-collection.js ***!
  \******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../fluent-lib */ "./node_modules/type-mapping/dist/fluent-lib/index.js");
var link_collection_1 = __webpack_require__(/*! ./link-collection */ "./node_modules/type-mapping/dist/json-api-lib/link-collection.js");
var link_1 = __webpack_require__(/*! ./link */ "./node_modules/type-mapping/dist/json-api-lib/link.js");
/**
 * https://jsonapi.org/format/1.0/#error-objects
 *
 * Error objects provide additional information about problems encountered while performing an operation.
 * Error objects **MUST** be returned as an array keyed by `errors` in the top level of a JSON:API document.
 *
 * An error object **MAY** have the following members:
 *
 * + `links`: a links object containing the following members:
 *   + `about`: a link that leads to further details about this particular occurrence of the problem.
 *
 *  @see {@link errorObject}
 *  @see {@link link}
 *  @see {@link ErrorLinkCollection}
 *  @see {@link ExpectedInputErrorLinkCollection}
 */
exports.errorLinkCollection = function () { return fLib.deepMerge(link_collection_1.linkCollection(), fLib.object({
    about: link_1.link()
})); };
//# sourceMappingURL=error-link-collection.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/json-api-lib/error-object.js":
/*!*********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/json-api-lib/error-object.js ***!
  \*********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../fluent-lib */ "./node_modules/type-mapping/dist/fluent-lib/index.js");
var error_link_collection_1 = __webpack_require__(/*! ./error-link-collection */ "./node_modules/type-mapping/dist/json-api-lib/error-link-collection.js");
var error_source_1 = __webpack_require__(/*! ./error-source */ "./node_modules/type-mapping/dist/json-api-lib/error-source.js");
var meta_1 = __webpack_require__(/*! ./meta */ "./node_modules/type-mapping/dist/json-api-lib/meta.js");
/**
 * https://jsonapi.org/format/1.0/#error-objects
 *
 * Error objects provide additional information about problems encountered while performing an operation.
 * Error objects **MUST** be returned as an array keyed by `errors` in the top level of a JSON:API document.
 *
 * An error object **MAY** have the following members:
 *
 * + `id`: a unique identifier for this particular occurrence of the problem.
 * + `links`: a links object containing the following members:
 *   + `about`: a link that leads to further details about this particular occurrence of the problem.
 * + `status`: the HTTP status code applicable to this problem, expressed as a string value.
 * + `code`: an application-specific error code, expressed as a string value.
 * + `title`: a short, human-readable summary of the problem that **SHOULD NOT**
 *   change from occurrence to occurrence of the problem, except for purposes of localization.
 * + `detail`: a human-readable explanation specific to this occurrence of the problem.
 *   Like `title`, this field’s value can be localized.
 * + `source`: an object containing references to the source of the error,
 *   optionally including any of the following members:
 *   + `pointer`: a JSON Pointer [RFC6901](https://tools.ietf.org/html/rfc6901) to the associated entity in the request document
 *     [e.g. "/data" for a primary data object, or "/data/attributes/title" for a specific attribute].
 *   + `parameter`: a string indicating which URI query parameter caused the error.
 * + `meta`: a meta object containing non-standard meta-information about the error.
 *
 *  @see {@link errorLinkCollection}
 *  @see {@link errorSource}
 *  @see {@link meta}
 *  @see {@link ErrorObject}
 *  @see {@link ExpectedInputErrorObject}
 */
exports.errorObject = function () { return fLib.object({
    id: fLib.string().orNull().optional(),
    links: error_link_collection_1.errorLinkCollection().orNull().optional(),
    status: fLib.string().orNull().optional(),
    code: fLib.string().orNull().optional(),
    title: fLib.string().orNull().optional(),
    detail: fLib.string().orNull().optional(),
    source: error_source_1.errorSource().orNull().optional(),
    meta: meta_1.meta().orNull().optional(),
}); };
//# sourceMappingURL=error-object.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/json-api-lib/error-source.js":
/*!*********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/json-api-lib/error-source.js ***!
  \*********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../fluent-lib */ "./node_modules/type-mapping/dist/fluent-lib/index.js");
/**
 * https://jsonapi.org/format/1.0/#error-objects
 *
 * Error objects provide additional information about problems encountered while performing an operation.
 * Error objects **MUST** be returned as an array keyed by `errors` in the top level of a JSON:API document.
 *
 * An error object **MAY** have the following members:
 *
 * + `source`: an object containing references to the source of the error,
 *   optionally including any of the following members:
 *   + `pointer`: a JSON Pointer [RFC6901](https://tools.ietf.org/html/rfc6901) to the associated entity in the request document
 *     [e.g. "/data" for a primary data object, or "/data/attributes/title" for a specific attribute].
 *   + `parameter`: a string indicating which URI query parameter caused the error.
 *
 *  @see {@link errorObject}
 *  @see {@link ErrorSource}
 *  @see {@link ExpectedInputErrorSource}
 */
exports.errorSource = function () { return fLib.object({
    pointer: fLib.string().orNull().optional(),
    parameter: fLib.string().orNull().optional(),
}); };
//# sourceMappingURL=error-source.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/json-api-lib/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/type-mapping/dist/json-api-lib/index.js ***!
  \**************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./document */ "./node_modules/type-mapping/dist/json-api-lib/document/index.js"));
__export(__webpack_require__(/*! ./non-error-document */ "./node_modules/type-mapping/dist/json-api-lib/non-error-document/index.js"));
__export(__webpack_require__(/*! ./attribute-collection */ "./node_modules/type-mapping/dist/json-api-lib/attribute-collection.js"));
__export(__webpack_require__(/*! ./client-resource */ "./node_modules/type-mapping/dist/json-api-lib/client-resource.js"));
__export(__webpack_require__(/*! ./error-link-collection */ "./node_modules/type-mapping/dist/json-api-lib/error-link-collection.js"));
__export(__webpack_require__(/*! ./error-object */ "./node_modules/type-mapping/dist/json-api-lib/error-object.js"));
__export(__webpack_require__(/*! ./error-source */ "./node_modules/type-mapping/dist/json-api-lib/error-source.js"));
__export(__webpack_require__(/*! ./json-api */ "./node_modules/type-mapping/dist/json-api-lib/json-api.js"));
__export(__webpack_require__(/*! ./link-collection */ "./node_modules/type-mapping/dist/json-api-lib/link-collection.js"));
__export(__webpack_require__(/*! ./link */ "./node_modules/type-mapping/dist/json-api-lib/link.js"));
__export(__webpack_require__(/*! ./meta */ "./node_modules/type-mapping/dist/json-api-lib/meta.js"));
__export(__webpack_require__(/*! ./partial-relationship */ "./node_modules/type-mapping/dist/json-api-lib/partial-relationship.js"));
__export(__webpack_require__(/*! ./relationship */ "./node_modules/type-mapping/dist/json-api-lib/relationship.js"));
__export(__webpack_require__(/*! ./resource-identifier */ "./node_modules/type-mapping/dist/json-api-lib/resource-identifier.js"));
__export(__webpack_require__(/*! ./resource-linkage */ "./node_modules/type-mapping/dist/json-api-lib/resource-linkage.js"));
__export(__webpack_require__(/*! ./server-resource */ "./node_modules/type-mapping/dist/json-api-lib/server-resource.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/json-api-lib/json-api.js":
/*!*****************************************************************!*\
  !*** ./node_modules/type-mapping/dist/json-api-lib/json-api.js ***!
  \*****************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../fluent-lib */ "./node_modules/type-mapping/dist/fluent-lib/index.js");
var meta_1 = __webpack_require__(/*! ./meta */ "./node_modules/type-mapping/dist/json-api-lib/meta.js");
/**
 * https://jsonapi.org/format/1.0/#document-jsonapi-object
 *
 * A JSON:API document **MAY** include information about its implementation
 * under a top level `jsonapi` member. If present, the value of the `jsonapi`
 * member **MUST** be an object (a “jsonapi object”).
 *
 * The jsonapi object **MAY** contain a `version` member whose value
 * is a string indicating the highest JSON API version supported.
 * This object **MAY** also contain a `meta` member,
 * whose value is a meta object that contains non-standard meta-information.
 *
 * ```ts
 * {
 *   "jsonapi": {
 *     "version": "1.0"
 *   }
 * }
 * ```
 *
 * If the `version` member is not present,
 * clients should assume the server implements at least version 1.0 of the specification.
 *
 * > Note: Because JSON:API is committed to making additive changes only,
 * > the version string primarily indicates which new features a server may support.
 *
 *  @see {@link meta}
 *  @see {@link JsonApi}
 *  @see {@link ExpectedInputJsonApi}
 */
exports.jsonApi = function () { return fLib.object({
    version: fLib.literal("1.0").orNull().optional(),
    meta: meta_1.meta().orNull().optional(),
}); };
//# sourceMappingURL=json-api.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/json-api-lib/link-collection.js":
/*!************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/json-api-lib/link-collection.js ***!
  \************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../fluent-lib */ "./node_modules/type-mapping/dist/fluent-lib/index.js");
var link_1 = __webpack_require__(/*! ./link */ "./node_modules/type-mapping/dist/json-api-lib/link.js");
/**
 * https://jsonapi.org/format/1.0/#document-links
 *
 * Where specified, a `links` member can be used to represent links.
 * The value of each `links` member **MUST** be an object (a “links object”).
 *
 * Each member of a links object is a “link”.
 *
 * -----
 *
 * https://jsonapi.org/format/1.0/#document-top-level
 *
 * The top-level links object **MAY** contain the following members:
 *
 * + `self`: the link that generated the current response document.
 * + `related`: a related resource link when the primary data represents a resource relationship.
 * + pagination links for the primary data.
 *
 * -----
 *
 * https://jsonapi.org/format/1.0/#fetching-pagination
 *
 * A server **MAY** choose to limit the number of resources returned in a
 * response to a subset (“page”) of the whole set available.
 *
 * A server **MAY** provide links to traverse a paginated data set (“pagination links”).
 *
 * Pagination links **MUST** appear in the links object that corresponds to a collection.
 * To paginate the primary data, supply pagination links in the top-level `links` object.
 * To paginate an included collection returned in a compound document,
 * supply pagination links in the corresponding links object.
 *
 * The following keys **MUST** be used for pagination links:
 *
 * + `first`: the first page of data
 * + `last`: the last page of data
 * + `prev`: the previous page of data
 * + `next`: the next page of data
 *
 * Keys **MUST** either be omitted or have a `null` value to indicate that a particular link is unavailable.
 *
 * Concepts of order, as expressed in the naming of pagination links,
 * **MUST** remain consistent with JSON:API’s sorting rules.
 *
 * The `page` query parameter is reserved for pagination.
 * Servers and clients **SHOULD** use this key for pagination operations.
 *
 * -----
 *
 *  @see {@link link}
 *  @see {@link LinkCollection}
 *  @see {@link ExpectedInputLinkCollection}
 */
exports.linkCollection = function () { return fLib.stringIndexer(link_1.link().orNull()); };
//# sourceMappingURL=link-collection.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/json-api-lib/link.js":
/*!*************************************************************!*\
  !*** ./node_modules/type-mapping/dist/json-api-lib/link.js ***!
  \*************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../fluent-lib */ "./node_modules/type-mapping/dist/fluent-lib/index.js");
var metaLib = __webpack_require__(/*! ./meta */ "./node_modules/type-mapping/dist/json-api-lib/meta.js");
/**
 * http://jsonapi.org/format/1.0/#document-links
 *
 * A link MUST be represented as either:
 *
 * + a string containing the link’s URL.
 * + an object (“link object”) which can contain the following members:
 *     + `href`: a string containing the link’s URL.
 *     + `meta`: a meta object containing non-standard meta-information about the link.
 *
 * The following self link is simply a URL:
 *
 * ```ts
 * "links": {
 *     "self": "http://example.com/posts"
 * }
 * ```
 *
 * The following related link includes a URL as well as meta-information about a related resource collection:
 *
 * ```ts
 * "links": {
 *     "related": {
 *         "href": "http://example.com/articles/1/comments",
 *         "meta": {
 *             "count": 10
 *         }
 *     }
 * }
 * ```
 *
 *  @see {@link meta}
 *  @see {@link LinkObject}
 *  @see {@link ExpectedInputLinkObject}
 */
exports.linkObject = function () { return fLib.object({
    /** a string containing the link’s URL. */
    href: fLib.string(),
    /** a meta object containing non-standard meta-information about the link. */
    meta: metaLib.meta().orNull().optional(),
}); };
/**
 * Some description
 *
 * http://jsonapi.org/format/1.0/#document-links
 *
 * A link MUST be represented as either:
 *
 * + a string containing the link’s URL.
 * + an object (“link object”) which can contain the following members:
 *   + `href`: a string containing the link’s URL.
 *   + `meta`: a meta object containing non-standard meta-information about the link.
 *
 * The following self link is simply a URL:
 *
 * ```ts
 * "links": {
 *     "self": "http://example.com/posts"
 * }
 * ```
 *
 * The following related link includes a URL as well as meta-information about a related resource collection:
 *
 * ```ts
 * "links": {
 *     "related": {
 *         "href": "http://example.com/articles/1/comments",
 *         "meta": {
 *             "count": 10
 *         }
 *     }
 * }
 * ```
 *
 *  @see {@link meta}
 *  @see {@link linkObject}
 *  @see {@link Link}
 *  @see {@link ExpectedInputLink}
 */
exports.link = function () { return fLib.or(fLib.string(), exports.linkObject()); };
//# sourceMappingURL=link.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/json-api-lib/meta.js":
/*!*************************************************************!*\
  !*** ./node_modules/type-mapping/dist/json-api-lib/meta.js ***!
  \*************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../fluent-lib */ "./node_modules/type-mapping/dist/fluent-lib/index.js");
;
/**
 * Must be a plain-old-JavaScript-object in this implementation
 *
 * https://jsonapi.org/format/1.0/#document-meta
 *
 * Where specified, a `meta` member can be used to include non-standard meta-information.
 * The value of each `meta` member **MUST** be an object (a “meta object”).
 *
 * Any members **MAY** be specified within `meta` objects.
 *
 * For example:
 *
 * ```ts
 * {
 *     "meta": {
 *         "copyright": "Copyright 2015 Example Corp.",
 *         "authors": [
 *             "Yehuda Katz",
 *             "Steve Klabnik",
 *             "Dan Gebhardt",
 *             "Tyler Kellen"
 *         ]
 *     },
 *     "data": {
 *         // ...
 *     }
 * }
 * ```
 *
 *  @see {@link pojo}
 *
 */
exports.meta = fLib.pojo;
//# sourceMappingURL=meta.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/json-api-lib/non-error-document/__non-error-document-constraint-impl.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/json-api-lib/non-error-document/__non-error-document-constraint-impl.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../../fluent-lib */ "./node_modules/type-mapping/dist/fluent-lib/index.js");
/**
 * Implements the constraints outlined in https://jsonapi.org/format/1.0/#document-top-level
 *
 *  @see {@link serverDocument}
 *  @see {@link clientDocument}
 *  @see {@link __DocumentConstraintImplMapper}
 *  @see {@link __DocumentConstraintImpl}
 */
function __nonErrorDocumentConstraintImpl(args) {
    if (args.data == undefined) {
        if (args.meta == undefined) {
            throw new Error("No data and meta mapper specified");
        }
        else {
            return fLib.object({
                data: fLib.null().optional(),
                included: fLib.null().optional(),
                errors: fLib.null().optional(),
                meta: args.meta,
            });
        }
    }
    else if (args.meta == undefined) {
        return fLib.object({
            data: args.data,
            included: fLib.array(args.resource).orNull().optional(),
            errors: fLib.null().optional(),
            meta: fLib.null().optional(),
        });
    }
    else {
        return fLib.object({
            data: args.data,
            included: fLib.array(args.resource).orNull().optional(),
            errors: fLib.null().optional(),
            meta: args.meta,
        });
    }
}
exports.__nonErrorDocumentConstraintImpl = __nonErrorDocumentConstraintImpl;
//# sourceMappingURL=__non-error-document-constraint-impl.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/json-api-lib/non-error-document/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/json-api-lib/non-error-document/index.js ***!
  \*********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./__non-error-document-constraint-impl */ "./node_modules/type-mapping/dist/json-api-lib/non-error-document/__non-error-document-constraint-impl.js"));
__export(__webpack_require__(/*! ./non-error-client-document */ "./node_modules/type-mapping/dist/json-api-lib/non-error-document/non-error-client-document.js"));
__export(__webpack_require__(/*! ./non-error-server-document */ "./node_modules/type-mapping/dist/json-api-lib/non-error-document/non-error-server-document.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/json-api-lib/non-error-document/non-error-client-document.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/json-api-lib/non-error-document/non-error-client-document.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var __non_error_document_constraint_impl_1 = __webpack_require__(/*! ./__non-error-document-constraint-impl */ "./node_modules/type-mapping/dist/json-api-lib/non-error-document/__non-error-document-constraint-impl.js");
var json_api_1 = __webpack_require__(/*! ../json-api */ "./node_modules/type-mapping/dist/json-api-lib/json-api.js");
var link_collection_1 = __webpack_require__(/*! ../link-collection */ "./node_modules/type-mapping/dist/json-api-lib/link-collection.js");
var client_resource_1 = __webpack_require__(/*! ../client-resource */ "./node_modules/type-mapping/dist/json-api-lib/client-resource.js");
var fLib = __webpack_require__(/*! ../../fluent-lib */ "./node_modules/type-mapping/dist/fluent-lib/index.js");
/**
 * In this implementation, you have to specify one of the following,
 *
 * + `data`
 * + `meta`
 * + both `data` and `meta`
 *
 * If both `data` and `meta` are specified, all documents without `errors` must also contain both.
 *
 * -----
 *
 * https://jsonapi.org/format/1.0/#document-top-level
 *
 * JSON object **MUST** be at the root of every JSON:API request and response containing data.
 * This object defines a document’s “top level”.
 *
 * A document **MUST** contain at least one of the following top-level members:
 *
 * + `data`: the document’s “primary data”
 * + `errors`: an array of error objects
 * + `meta`: a meta object that contains non-standard meta-information.
 *
 * The members `data` and `errors` **MUST NOT** coexist in the same document.
 *
 * A document **MAY** contain any of these top-level members:
 *
 * + `jsonapi`: an object describing the client’s implementation
 * + `links`: a links object related to the primary data.
 * + `included`: an array of resource objects that are related to the primary data and/or each other (“included resources”).
 *
 * If a document does not contain a top-level `data` key, the `included` member **MUST NOT** be present either.
 *
 * The top-level links object **MAY** contain the following members:
 *
 * + `self`: the link that generated the current response document.
 * + `related`: a related resource link when the primary data represents a resource relationship.
 * + pagination links for the primary data.
 *
 * The document’s “primary data” is a representation of the resource or collection of resources targeted by a request.
 *
 * Primary data **MUST** be either:
 *
 * + a single resource object, a single resource identifier object,
 *   or `null`, for requests that target single resources
 * + an array of resource objects, an array of resource identifier objects,
 *   or an empty array (`[]`), for requests that target resource collections
 *
 * A logical collection of resources **MUST** be represented as an array, even if it only contains one item or is empty.
 *
 * @param args - The data, or meta mappers (or both)
 *
 *  @see {@link ClientDocumentMapper}
 *  @see {@link ClientDocument}
 *  @see {@link ExpectedInputClientDocument}
 *  @see {@link MappableInputClientDocument}
 */
function nonErrorClientDocument(args) {
    var clientDocumentBase = {
        resource: client_resource_1.clientResource(),
    };
    var impl = __non_error_document_constraint_impl_1.__nonErrorDocumentConstraintImpl(__assign({}, args, clientDocumentBase));
    var base = fLib.object({
        jsonapi: json_api_1.jsonApi().orNull().optional(),
        links: link_collection_1.linkCollection().orNull().optional(),
    });
    return fLib.deepMerge(impl, base);
}
exports.nonErrorClientDocument = nonErrorClientDocument;
//# sourceMappingURL=non-error-client-document.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/json-api-lib/non-error-document/non-error-server-document.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/json-api-lib/non-error-document/non-error-server-document.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var __non_error_document_constraint_impl_1 = __webpack_require__(/*! ./__non-error-document-constraint-impl */ "./node_modules/type-mapping/dist/json-api-lib/non-error-document/__non-error-document-constraint-impl.js");
var json_api_1 = __webpack_require__(/*! ../json-api */ "./node_modules/type-mapping/dist/json-api-lib/json-api.js");
var link_collection_1 = __webpack_require__(/*! ../link-collection */ "./node_modules/type-mapping/dist/json-api-lib/link-collection.js");
var server_resource_1 = __webpack_require__(/*! ../server-resource */ "./node_modules/type-mapping/dist/json-api-lib/server-resource.js");
var fLib = __webpack_require__(/*! ../../fluent-lib */ "./node_modules/type-mapping/dist/fluent-lib/index.js");
/**
 * In this implementation, you have to specify one of the following,
 *
 * + `data`
 * + `meta`
 * + both `data` and `meta`
 *
 * If both `data` and `meta` are specified, all documents without `errors` must also contain both.
 *
 * -----
 *
 * https://jsonapi.org/format/1.0/#document-top-level
 *
 * JSON object **MUST** be at the root of every JSON:API request and response containing data.
 * This object defines a document’s “top level”.
 *
 * A document **MUST** contain at least one of the following top-level members:
 *
 * + `data`: the document’s “primary data”
 * + `errors`: an array of error objects
 * + `meta`: a meta object that contains non-standard meta-information.
 *
 * The members `data` and `errors` **MUST NOT** coexist in the same document.
 *
 * A document **MAY** contain any of these top-level members:
 *
 * + `jsonapi`: an object describing the server’s implementation
 * + `links`: a links object related to the primary data.
 * + `included`: an array of resource objects that are related to the primary data and/or each other (“included resources”).
 *
 * If a document does not contain a top-level `data` key, the `included` member **MUST NOT** be present either.
 *
 * The top-level links object **MAY** contain the following members:
 *
 * + `self`: the link that generated the current response document.
 * + `related`: a related resource link when the primary data represents a resource relationship.
 * + pagination links for the primary data.
 *
 * The document’s “primary data” is a representation of the resource or collection of resources targeted by a request.
 *
 * Primary data **MUST** be either:
 *
 * + a single resource object, a single resource identifier object,
 *   or `null`, for requests that target single resources
 * + an array of resource objects, an array of resource identifier objects,
 *   or an empty array (`[]`), for requests that target resource collections
 *
 * A logical collection of resources **MUST** be represented as an array, even if it only contains one item or is empty.
 *
 * @param args - The data, or meta mappers (or both)
 *
 *  @see {@link ServerDocumentMapper}
 *  @see {@link ServerDocument}
 *  @see {@link ExpectedInputServerDocument}
 *  @see {@link MappableInputServerDocument}
 */
function nonErrorServerDocument(args) {
    var serverDocumentBase = {
        resource: server_resource_1.serverResource(),
    };
    var impl = __non_error_document_constraint_impl_1.__nonErrorDocumentConstraintImpl(__assign({}, args, serverDocumentBase));
    var base = fLib.object({
        jsonapi: json_api_1.jsonApi().orNull().optional(),
        links: link_collection_1.linkCollection().orNull().optional(),
    });
    return fLib.deepMerge(impl, base);
}
exports.nonErrorServerDocument = nonErrorServerDocument;
//# sourceMappingURL=non-error-server-document.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/json-api-lib/partial-relationship.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/json-api-lib/partial-relationship.js ***!
  \*****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../fluent-lib */ "./node_modules/type-mapping/dist/fluent-lib/index.js");
var link_collection_1 = __webpack_require__(/*! ./link-collection */ "./node_modules/type-mapping/dist/json-api-lib/link-collection.js");
var resource_linkage_1 = __webpack_require__(/*! ./resource-linkage */ "./node_modules/type-mapping/dist/json-api-lib/resource-linkage.js");
var meta_1 = __webpack_require__(/*! ./meta */ "./node_modules/type-mapping/dist/json-api-lib/meta.js");
/**
 * This is just a "partial" relationship because it does not
 * enforce the "at-least-one constraint"
 *
 * -----
 *
 *  @see {@link relationship}
 *  @see {@link linkCollection}
 *  @see {@link resourceLinkage}
 *  @see {@link meta}
 *  @see {@link PartialRelationship}
 *  @see {@link ExpectedInputPartialRelationship}
 */
exports.partialRelationship = function () { return fLib.object({
    links: link_collection_1.linkCollection().orNull().optional(),
    data: resource_linkage_1.resourceLinkage().orNull().optional(),
    meta: meta_1.meta().orNull().optional(),
}); };
//# sourceMappingURL=partial-relationship.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/json-api-lib/relationship.js":
/*!*********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/json-api-lib/relationship.js ***!
  \*********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../fluent-lib */ "./node_modules/type-mapping/dist/fluent-lib/index.js");
var partial_relationship_1 = __webpack_require__(/*! ./partial-relationship */ "./node_modules/type-mapping/dist/json-api-lib/partial-relationship.js");
var link_collection_1 = __webpack_require__(/*! ./link-collection */ "./node_modules/type-mapping/dist/json-api-lib/link-collection.js");
var resource_linkage_1 = __webpack_require__(/*! ./resource-linkage */ "./node_modules/type-mapping/dist/json-api-lib/resource-linkage.js");
var meta_1 = __webpack_require__(/*! ./meta */ "./node_modules/type-mapping/dist/json-api-lib/meta.js");
/**
 * https://jsonapi.org/format/1.0/#document-resource-object-relationships
 *
 * The value of the `relationships` key **MUST** be an object (a “relationships object”).
 * Members of the relationships object (“relationships”) represent references from the resource object
 * in which it’s defined to other resource objects.
 *
 * Relationships may be to-one or to-many.
 *
 * A “relationship object” **MUST** contain at least one of the following:
 *
 * + `links`: a links object containing at least one of the following:
 *   + `self`: a link for the relationship itself (a “relationship link”).
 *     This link allows the client to directly manipulate the relationship.
 *     For example, removing an `author` through an `article`’s relationship URL would disconnect
 *     the person from the `article` without deleting the `people` resource itself.
 *     When fetched successfully, this link returns the linkage for the related resources as its primary data.
 *     (See Fetching Relationships.)
 *   + `related`: a related resource link
 * + `data`: resource linkage
 * + `meta`: a meta object that contains non-standard meta-information about the relationship.
 *
 * A relationship object that represents a to-many relationship **MAY** also contain pagination links
 * under the `links` member, as described below.
 * Any pagination links in a relationship object **MUST** paginate the relationship data, not the related resources.
 *
 *  @see {@link partialRelationship}
 *  @see {@link Relationship}
 *  @see {@link ExpectedInputRelationship}
 */
exports.relationship = function () { return fLib.deepMerge(partial_relationship_1.partialRelationship(), fLib.or(fLib.object({ links: link_collection_1.linkCollection() }), fLib.object({ data: resource_linkage_1.resourceLinkage() }), fLib.object({ meta: meta_1.meta() }))); };
//# sourceMappingURL=relationship.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/json-api-lib/resource-identifier.js":
/*!****************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/json-api-lib/resource-identifier.js ***!
  \****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../fluent-lib */ "./node_modules/type-mapping/dist/fluent-lib/index.js");
var meta_1 = __webpack_require__(/*! ./meta */ "./node_modules/type-mapping/dist/json-api-lib/meta.js");
/**
 * https://jsonapi.org/format/1.0/#document-resource-identifier-objects
 *
 * A “resource identifier object” is an object that identifies an individual resource.
 *
 * A “resource identifier object” **MUST** contain `type` and `id` members.
 *
 * A “resource identifier object” **MAY** also include a `meta` member,
 * whose value is a meta object that contains non-standard meta-information.
 *
 *  @see {@link meta}
 *  @see {@link ResourceIdentifier}
 *  @see {@link ExpectedInputResourceIdentifier}
 */
exports.resourceIdentifier = function () { return fLib.object({
    type: fLib.string(),
    id: fLib.string(),
    meta: meta_1.meta().orNull().optional(),
}); };
//# sourceMappingURL=resource-identifier.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/json-api-lib/resource-linkage.js":
/*!*************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/json-api-lib/resource-linkage.js ***!
  \*************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../fluent-lib */ "./node_modules/type-mapping/dist/fluent-lib/index.js");
var resource_identifier_1 = __webpack_require__(/*! ./resource-identifier */ "./node_modules/type-mapping/dist/json-api-lib/resource-identifier.js");
/**
 * https://jsonapi.org/format/1.0/#document-resource-object-linkage
 *
 * Resource linkage in a compound document allows a client to link together
 * all of the included resource objects without having to `GET` any URLs via links.
 *
 * Resource linkage **MUST** be represented as one of the following:
 *
 * + `null` for empty to-one relationships.
 * + an empty array (`[]`) for empty to-many relationships.
 * + a single resource identifier object for non-empty to-one relationships.
 * + an array of resource identifier objects for non-empty to-many relationships.
 *
 * > Note: The spec does not impart meaning to order of resource identifier objects in linkage arrays of
 * > to-many relationships, although implementations may do that.
 * > Arrays of resource identifier objects may represent ordered or unordered relationships,
 * > and both types can be mixed in one response object.
 *
 *  @see {@link resourceIdentifier}
 */
exports.resourceLinkage = function () { return fLib.or(resource_identifier_1.resourceIdentifier(), fLib.array(resource_identifier_1.resourceIdentifier())); };
//# sourceMappingURL=resource-linkage.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/json-api-lib/server-resource.js":
/*!************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/json-api-lib/server-resource.js ***!
  \************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../fluent-lib */ "./node_modules/type-mapping/dist/fluent-lib/index.js");
var client_resource_1 = __webpack_require__(/*! ./client-resource */ "./node_modules/type-mapping/dist/json-api-lib/client-resource.js");
/**
 *  @see {@link clientResource}
 *  @see {@link ServerResource}
 *  @see {@link ExpectedInputServerResource}
 */
exports.serverResource = function () { return fLib.deepMerge(client_resource_1.clientResource(), fLib.object({
    id: fLib.string(),
})); };
//# sourceMappingURL=server-resource.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mapper/ctor.js":
/*!*******************************************************!*\
  !*** ./node_modules/type-mapping/dist/mapper/ctor.js ***!
  \*******************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
    The `ExpectedInput<>` and `MappableInput<>` parts
    of a `Mapper<>` are arbitrary metadata.

    However, they make returning `Mapper<>` functions
    with those parts difficult.

    This helper function makes it easier.

    Does not return a wrapper.

    -----

    TODO Handle `name`?
*/
function mapper(f) {
    return f;
}
exports.mapper = mapper;
//# sourceMappingURL=ctor.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mapper/debug/_debug-is-expected-input.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mapper/debug/_debug-is-expected-input.js ***!
  \*********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function _debugIsExpectedInput(_f, _x) {
}
exports._debugIsExpectedInput = _debugIsExpectedInput;
/*
import {unknown, optional} from "../../functional-lib";
import {withExpectedInput} from "../operation";
_debugIsExpectedInput(
    withExpectedInput(optional(unknown()))<number>(),
    {x : 2} as unknown
);
//*/ 
//# sourceMappingURL=_debug-is-expected-input.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mapper/debug/_debug-is-handled-input.js":
/*!********************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mapper/debug/_debug-is-handled-input.js ***!
  \********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function _debugIsHandledInput(_f, _x) {
}
exports._debugIsHandledInput = _debugIsHandledInput;
//# sourceMappingURL=_debug-is-handled-input.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mapper/debug/_debug-is-mappable-input.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mapper/debug/_debug-is-mappable-input.js ***!
  \*********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function _debugIsMappableInput(_f, _x) {
}
exports._debugIsMappableInput = _debugIsMappableInput;
//# sourceMappingURL=_debug-is-mappable-input.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mapper/debug/_debug-is-output.js":
/*!*************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mapper/debug/_debug-is-output.js ***!
  \*************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function _debugIsOutput(_f, _x) {
}
exports._debugIsOutput = _debugIsOutput;
//# sourceMappingURL=_debug-is-output.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mapper/debug/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mapper/debug/index.js ***!
  \**************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./_debug-is-expected-input */ "./node_modules/type-mapping/dist/mapper/debug/_debug-is-expected-input.js"));
__export(__webpack_require__(/*! ./_debug-is-handled-input */ "./node_modules/type-mapping/dist/mapper/debug/_debug-is-handled-input.js"));
__export(__webpack_require__(/*! ./_debug-is-mappable-input */ "./node_modules/type-mapping/dist/mapper/debug/_debug-is-mappable-input.js"));
__export(__webpack_require__(/*! ./_debug-is-output */ "./node_modules/type-mapping/dist/mapper/debug/_debug-is-output.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mapper/index.js":
/*!********************************************************!*\
  !*** ./node_modules/type-mapping/dist/mapper/index.js ***!
  \********************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./debug */ "./node_modules/type-mapping/dist/mapper/debug/index.js"));
__export(__webpack_require__(/*! ./operation */ "./node_modules/type-mapping/dist/mapper/operation/index.js"));
__export(__webpack_require__(/*! ./predicate */ "./node_modules/type-mapping/dist/mapper/predicate/index.js"));
__export(__webpack_require__(/*! ./query */ "./node_modules/type-mapping/dist/mapper/query/index.js"));
__export(__webpack_require__(/*! ./ctor */ "./node_modules/type-mapping/dist/mapper/ctor.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mapper/operation/copy-run-time-modifier.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mapper/operation/copy-run-time-modifier.js ***!
  \***********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var query_1 = __webpack_require__(/*! ../query */ "./node_modules/type-mapping/dist/mapper/query/index.js");
/**
    Modifies `dst` by setting `name`, `__optional`, `__runTimeRequired`.
    You should not need to call this, in general.
*/
function copyRunTimeModifier(src, dst) {
    type_util_1.setFunctionName(dst, query_1.getNameOrEmptyString(src));
    dst.__optional = query_1.getOptionalFlagOrFalse(src);
    dst.__runTimeRequired = query_1.getRunTimeRequiredFlagOrFalse(src);
    return dst;
}
exports.copyRunTimeModifier = copyRunTimeModifier;
/**
    Modifies `dst` by setting `name`.
    You should not need to call this, in general.
*/
function copyName(src, dst) {
    type_util_1.setFunctionName(dst, query_1.getNameOrEmptyString(src));
    return dst;
}
exports.copyName = copyName;
/**
    Modifies `dst` by setting `__optional`.
    You should not need to call this, in general.
*/
function copyOptional(src, dst) {
    dst.__optional = query_1.getOptionalFlagOrFalse(src);
    return dst;
}
exports.copyOptional = copyOptional;
/**
    Modifies `dst` by setting `__runTimeRequired`.
    You should not need to call this, in general.
*/
function copyRunTimeRequired(src, dst) {
    dst.__runTimeRequired = query_1.getRunTimeRequiredFlagOrFalse(src);
    return dst;
}
exports.copyRunTimeRequired = copyRunTimeRequired;
//# sourceMappingURL=copy-run-time-modifier.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mapper/operation/expect-mappable-input.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mapper/operation/expect-mappable-input.js ***!
  \**********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
    Makes the `ExpectedInput<>` of a `Mapper<>` the same as its
    `MappableInput<>`.

    Returns the same `Mapper<>`, DOES NOT create a new function.

    TODO Decide if it should return a wrapper.
*/
function expectMappableInput(f) {
    return f;
}
exports.expectMappableInput = expectMappableInput;
;
//# sourceMappingURL=expect-mappable-input.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mapper/operation/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mapper/operation/index.js ***!
  \******************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./copy-run-time-modifier */ "./node_modules/type-mapping/dist/mapper/operation/copy-run-time-modifier.js"));
__export(__webpack_require__(/*! ./expect-mappable-input */ "./node_modules/type-mapping/dist/mapper/operation/expect-mappable-input.js"));
__export(__webpack_require__(/*! ./map */ "./node_modules/type-mapping/dist/mapper/operation/map.js"));
__export(__webpack_require__(/*! ./try-map */ "./node_modules/type-mapping/dist/mapper/operation/try-map.js"));
__export(__webpack_require__(/*! ./with-expected-input */ "./node_modules/type-mapping/dist/mapper/operation/with-expected-input.js"));
__export(__webpack_require__(/*! ./with-mapper */ "./node_modules/type-mapping/dist/mapper/operation/with-mapper.js"));
__export(__webpack_require__(/*! ./with-name */ "./node_modules/type-mapping/dist/mapper/operation/with-name.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mapper/operation/map.js":
/*!****************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mapper/operation/map.js ***!
  \****************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
    Alias of `mapExpected<>()`
*/
function map(f, name, mixed) {
    return f(name, mixed);
}
exports.map = map;
;
function mapExpected(f, name, mixed) {
    return f(name, mixed);
}
exports.mapExpected = mapExpected;
;
function mapMappable(f, name, mixed) {
    return f(name, mixed);
}
exports.mapMappable = mapMappable;
;
/**
    You can just call `f(name, mixed)` directly.
    This is only provided for completeness.
*/
function mapHandled(f, name, mixed) {
    return f(name, mixed);
}
exports.mapHandled = mapHandled;
;
//# sourceMappingURL=map.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mapper/operation/try-map.js":
/*!********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mapper/operation/try-map.js ***!
  \********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
function tryMapImpl(f, name, mixed) {
    try {
        return {
            success: true,
            value: f(name, mixed),
        };
    }
    catch (err) {
        if (error_util_1.isMappingError(err)) {
            return {
                success: false,
                err: err,
                mappingError: err,
            };
        }
        else {
            return {
                success: false,
                err: err,
                mappingError: error_util_1.makeMappingError({
                    message: err.message,
                    inputName: name,
                    actualValue: mixed,
                    expected: undefined,
                    stack: err.stack,
                }),
            };
        }
    }
}
/**
    Alias of `tryMapExpected<>()`
*/
function tryMap(f, name, mixed) {
    return tryMapImpl(f, name, mixed);
}
exports.tryMap = tryMap;
;
function tryMapExpected(f, name, mixed) {
    return tryMapImpl(f, name, mixed);
}
exports.tryMapExpected = tryMapExpected;
;
function tryMapMappable(f, name, mixed) {
    return tryMapImpl(f, name, mixed);
}
exports.tryMapMappable = tryMapMappable;
;
function tryMapHandled(f, name, mixed) {
    return tryMapImpl(f, name, mixed);
}
exports.tryMapHandled = tryMapHandled;
;
//# sourceMappingURL=try-map.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mapper/operation/with-expected-input.js":
/*!********************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mapper/operation/with-expected-input.js ***!
  \********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
    Lets you modify the `ExpectedInput<>` of a `Mapper<>`.

    Returns the same `Mapper<>`, DOES NOT create a new function.

    TODO Decide if it should return a wrapper.

    -----

    ### Use Case

    Give a `Mapper<>` with the following properties,

    + `MappableInput<> = string|number`
    + `ExpectedInput<> = string`

    If we wish to change the `ExpectedInput<>` to `number`,
    we do the following,

    ```ts
    const otherMapper = withExpectedInput(mapper)<number>();
    ```
*/
function withExpectedInput(f) {
    return function () {
        return f;
    };
}
exports.withExpectedInput = withExpectedInput;
;
//# sourceMappingURL=with-expected-input.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mapper/operation/with-mapper.js":
/*!************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mapper/operation/with-mapper.js ***!
  \************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var query_1 = __webpack_require__(/*! ../query */ "./node_modules/type-mapping/dist/mapper/query/index.js");
var with_name_1 = __webpack_require__(/*! ./with-name */ "./node_modules/type-mapping/dist/mapper/operation/with-name.js");
function withMapper(f, newMapper) {
    return with_name_1.withName(newMapper, query_1.getNameOrEmptyString(f));
}
exports.withMapper = withMapper;
//# sourceMappingURL=with-mapper.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mapper/operation/with-name.js":
/*!**********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mapper/operation/with-name.js ***!
  \**********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var copy_run_time_modifier_1 = __webpack_require__(/*! ./copy-run-time-modifier */ "./node_modules/type-mapping/dist/mapper/operation/copy-run-time-modifier.js");
/**
    Lets you modify the `Name<>` of a `Mapper<>`.

    Returns a new `Mapper<>`.
*/
function withName(f, name) {
    var result = function (name, mixed) {
        return f(name, mixed);
    };
    return copy_run_time_modifier_1.copyRunTimeRequired(f, copy_run_time_modifier_1.copyOptional(f, type_util_1.setFunctionName(result, name)));
}
exports.withName = withName;
;
//# sourceMappingURL=with-name.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mapper/predicate/array.js":
/*!******************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mapper/predicate/array.js ***!
  \******************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function isEmptyArrayMappable(f) {
    try {
        f("", []);
        return true;
    }
    catch (_err) {
        return false;
    }
}
exports.isEmptyArrayMappable = isEmptyArrayMappable;
function canOutputEmptyArray(f) {
    try {
        /*
            Using idempotent property.

            (f(blah) === []) implies (f([]) === [])
        */
        var output = f("", []);
        return ((output instanceof Array) &&
            (output.length == 0));
    }
    catch (_err) {
        return false;
    }
}
exports.canOutputEmptyArray = canOutputEmptyArray;
//# sourceMappingURL=array.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mapper/predicate/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mapper/predicate/index.js ***!
  \******************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./array */ "./node_modules/type-mapping/dist/mapper/predicate/array.js"));
__export(__webpack_require__(/*! ./is-optional */ "./node_modules/type-mapping/dist/mapper/predicate/is-optional.js"));
__export(__webpack_require__(/*! ./missing-value */ "./node_modules/type-mapping/dist/mapper/predicate/missing-value.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mapper/predicate/is-optional.js":
/*!************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mapper/predicate/is-optional.js ***!
  \************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var query_1 = __webpack_require__(/*! ../query */ "./node_modules/type-mapping/dist/mapper/query/index.js");
var missing_value_1 = __webpack_require__(/*! ./missing-value */ "./node_modules/type-mapping/dist/mapper/predicate/missing-value.js");
//TODO Consider renaming to `isMappableInputOptional()`
function isOptional(f) {
    if (typeof f != "function") {
        return false;
    }
    if (!query_1.getOptionalFlagOrFalse(f)) {
        return false;
    }
    if (!missing_value_1.isUndefinedMappable(f)) {
        return false;
    }
    return true;
}
exports.isOptional = isOptional;
//# sourceMappingURL=is-optional.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mapper/predicate/missing-value.js":
/*!**************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mapper/predicate/missing-value.js ***!
  \**************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function isUndefinedMappable(f) {
    try {
        f("", undefined);
        return true;
    }
    catch (_err) {
        return false;
    }
}
exports.isUndefinedMappable = isUndefinedMappable;
function isNullMappable(f) {
    try {
        f("", null);
        return true;
    }
    catch (_err) {
        return false;
    }
}
exports.isNullMappable = isNullMappable;
function isMaybeMappable(f) {
    try {
        f("", null);
        f("", undefined);
        return true;
    }
    catch (_err) {
        return false;
    }
}
exports.isMaybeMappable = isMaybeMappable;
function canOutputUndefined(f) {
    try {
        /*
            Using idempotent property.

            (f(blah) === undefined) implies (f(undefined) === undefined)
        */
        return (f("", undefined) === undefined);
    }
    catch (_err) {
        return false;
    }
}
exports.canOutputUndefined = canOutputUndefined;
function canOutputNull(f) {
    try {
        /*
            Using idempotent property.

            (f(blah) === null) implies (f(null) === null)
        */
        return (f("", null) === null);
    }
    catch (_err) {
        return false;
    }
}
exports.canOutputNull = canOutputNull;
function canOutputMaybe(f) {
    try {
        /*
            Using idempotent property.

            (f(blah) === null) implies (f(null) === null)
            (f(blah) === undefined) implies (f(null) === undefined)
        */
        return ((f("", null) === null) &&
            (f("", undefined) === undefined));
    }
    catch (_err) {
        return false;
    }
}
exports.canOutputMaybe = canOutputMaybe;
//# sourceMappingURL=missing-value.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mapper/query/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mapper/query/index.js ***!
  \**************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./name-of */ "./node_modules/type-mapping/dist/mapper/query/name-of.js"));
__export(__webpack_require__(/*! ./optional-flag-of */ "./node_modules/type-mapping/dist/mapper/query/optional-flag-of.js"));
__export(__webpack_require__(/*! ./run-time-required-flag-of */ "./node_modules/type-mapping/dist/mapper/query/run-time-required-flag-of.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mapper/query/name-of.js":
/*!****************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mapper/query/name-of.js ***!
  \****************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function getNameOrEmptyString(f) {
    if (typeof f != "function") {
        return "";
    }
    var result = f.__name;
    return ((typeof result == "string") ?
        result :
        "");
}
exports.getNameOrEmptyString = getNameOrEmptyString;
//# sourceMappingURL=name-of.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mapper/query/optional-flag-of.js":
/*!*************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mapper/query/optional-flag-of.js ***!
  \*************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function getOptionalFlagOrFalse(f) {
    var result = f.__optional;
    return (result === true);
}
exports.getOptionalFlagOrFalse = getOptionalFlagOrFalse;
//# sourceMappingURL=optional-flag-of.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mapper/query/run-time-required-flag-of.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mapper/query/run-time-required-flag-of.js ***!
  \**********************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function getRunTimeRequiredFlagOrFalse(f) {
    var result = f.__runTimeRequired;
    return (result === true);
}
exports.getRunTimeRequiredFlagOrFalse = getRunTimeRequiredFlagOrFalse;
//# sourceMappingURL=run-time-required-flag-of.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mysql-lib/binary/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mysql-lib/binary/index.js ***!
  \******************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fluent_lib_1 = __webpack_require__(/*! ../../fluent-lib */ "./node_modules/type-mapping/dist/fluent-lib/index.js");
function bufferDelegate(dataTypeStr, maxLength) {
    var result = function (a, b) {
        if (a == undefined) {
            return fluent_lib_1.bufferLength({
                max: maxLength,
            });
        }
        else if (b == undefined) {
            a = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({
                gtEq: 1,
                ltEq: maxLength,
            }))(dataTypeStr + ".desiredLengthMax", a);
            return fluent_lib_1.bufferLength({
                max: a,
            });
        }
        else {
            a = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({
                gtEq: 0,
                ltEq: maxLength,
            }))(dataTypeStr + ".desiredLengthMin", a);
            b = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({
                gtEq: 1,
                ltEq: maxLength,
            }))(dataTypeStr + ".desiredLengthMax", b);
            if (a > b) {
                throw new Error(dataTypeStr + " minLength must be <= maxLength");
            }
            return fluent_lib_1.bufferLength({
                min: a,
                max: b,
            });
        }
    };
    result.maxLength = maxLength;
    return result;
}
exports.binary = bufferDelegate("BINARY", 255);
exports.varBinary = bufferDelegate("VARBINARY", 65535);
exports.tinyBlob = bufferDelegate("TINYBLOB", 255);
exports.blob = bufferDelegate("BLOB", 65535);
exports.mediumBlob = bufferDelegate("MEDIUMBLOB", 16777215);
exports.longBlob = bufferDelegate("LONGBLOB", 4294967295);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mysql-lib/boolean/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mysql-lib/boolean/index.js ***!
  \*******************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../../fluent-lib */ "./node_modules/type-mapping/dist/fluent-lib/index.js");
var TypeUtil = __webpack_require__(/*! ../../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
/**
    Converts some values to `boolean`.

    The values `0|1|"0"|"1"` were chosen because
    these values are most likely to show up from
    a MySQL driver to represent a `boolean`

    The values `"false"|"true"` were chosen because
    these values will show up in query strings.
*/
function boolean() {
    var BigInt = TypeUtil.getBigIntFactoryFunctionOrError();
    return fLib.or(fLib.boolean(), fLib.literal("0", "1", 0, 1, "false", "true", BigInt(0), BigInt(1)).pipe(function (name, v) {
        switch (v) {
            case "0": return false;
            case "1": return true;
            case 0: return false;
            case 1: return true;
            case "false": return false;
            case "true": return true;
            default: {
                var str = String(v);
                if (str == "0") {
                    return false;
                }
                else if (str == "1") {
                    return true;
                }
                //Shouldn't happen
                throw new Error("Expected " + name + " to be one of '0'|'1'|0|1|'false'|'true'|'0n'|'1n'");
            }
        }
    })).withExpectedInput();
}
exports.boolean = boolean;
/**
    Converts some values to `true`.

    The values `1|"1"` were chosen because
    these values are most likely to show up from
    a MySQL driver to represent a `boolean`

    The values `"true"` was chosen because
    it will show up in query strings.
*/
function toTrue() {
    var BigInt = TypeUtil.getBigIntFactoryFunctionOrError();
    return fLib.or(fLib.literal(true), fLib.literal("1", 1, "true", BigInt(1)).pipe(function (name, v) {
        switch (v) {
            case "1": return true;
            case 1: return true;
            case "true": return true;
            default: {
                var str = String(v);
                if (str == "1") {
                    return true;
                }
                //Shouldn't happen
                throw new Error("Expected " + name + " to be one of '1'|1|'true'");
            }
        }
    })).withExpectedInput();
}
exports.true = toTrue;
/**
    Converts some values to `false`.

    The values `0|"0"` were chosen because
    these values are most likely to show up from
    a MySQL driver to represent a `boolean`

    The values `"false"` was chosen because
    it will show up in query strings.
*/
function toFalse() {
    var BigInt = TypeUtil.getBigIntFactoryFunctionOrError();
    return fLib.or(fLib.literal(false), fLib.literal("0", 0, "false", BigInt(0)).pipe(function (name, v) {
        switch (v) {
            case "0": return false;
            case 0: return false;
            case "false": return false;
            default: {
                var str = String(v);
                if (str == "0") {
                    return false;
                }
                //Shouldn't happen
                throw new Error("Expected " + name + " to be one of '0'|0|'false'");
            }
        }
    })).withExpectedInput();
}
exports.false = toFalse;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mysql-lib/char/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mysql-lib/char/index.js ***!
  \****************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fluent_lib_1 = __webpack_require__(/*! ../../fluent-lib */ "./node_modules/type-mapping/dist/fluent-lib/index.js");
function stringDelegate(dataTypeStr, maxLength) {
    var result = function (a, b) {
        if (a == undefined) {
            return fluent_lib_1.stringLength({
                max: maxLength,
            });
        }
        else if (b == undefined) {
            a = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({
                gtEq: 1,
                ltEq: maxLength,
            }))(dataTypeStr + ".desiredLengthMax", a);
            return fluent_lib_1.stringLength({
                max: a,
            });
        }
        else {
            a = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({
                gtEq: 0,
                ltEq: maxLength,
            }))(dataTypeStr + ".desiredLengthMin", a);
            b = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({
                gtEq: 1,
                ltEq: maxLength,
            }))(dataTypeStr + ".desiredLengthMax", b);
            if (a > b) {
                throw new Error(dataTypeStr + " minLength must be <= maxLength");
            }
            return fluent_lib_1.stringLength({
                min: a,
                max: b,
            });
        }
    };
    result.maxLength = maxLength;
    return result;
}
exports.char = stringDelegate("CHAR", 255);
exports.varChar = stringDelegate("VARCHAR", 65535);
exports.tinyText = stringDelegate("TINYTEXT", 255);
exports.text = stringDelegate("TEXT", 65535);
exports.mediumText = stringDelegate("MEDIUMTEXT", 16777215);
exports.longText = stringDelegate("LONGTEXT", 4294967295);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mysql-lib/date-time/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mysql-lib/date-time/index.js ***!
  \*********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fluent_lib_1 = __webpack_require__(/*! ../../fluent-lib */ "./node_modules/type-mapping/dist/fluent-lib/index.js");
var DateTimeUtil = __webpack_require__(/*! ./util */ "./node_modules/type-mapping/dist/mysql-lib/date-time/util.js");
exports.DateTimeUtil = DateTimeUtil;
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
function dateTime(fractionalSecondPrecision) {
    if (fractionalSecondPrecision === void 0) { fractionalSecondPrecision = 0; }
    return fluent_lib_1.or(fluent_lib_1.string().pipe(function (name, str) {
        try {
            return DateTimeUtil.fromSqlUtc(str, fractionalSecondPrecision);
        }
        catch (err) {
            throw error_util_1.makeMappingError({
                message: name + " must be DATETIME(" + fractionalSecondPrecision + "); " + err.message,
                inputName: name,
                actualValue: str,
                expected: "DATETIME(" + fractionalSecondPrecision + ")",
            });
        }
    }), 
    //To work with JSON serialization
    fluent_lib_1.or(
    //Hopefully, it is a JSON date string
    fluent_lib_1.string(), 
    /*
        We turn the Date object into its JSON representation
        because the Date object may have a millisecond part
        when we do not allow it.

        For example,
        new Date().toJSON() //2019-01-01T00:00:00.123Z

        The above is not assignable to DATETIME(0)
        But is assignable to DATETIME(3)

        -----

        new Date().toJSON() //2019-01-01T00:00:00.120Z

        The above is not assignable to DATETIME(0)
        But is assignable to DATETIME(2) or DATETIME(3)
    */
    fluent_lib_1.instanceOfDate().pipe(function (_name, d) { return d.toJSON(); })).pipe(fluent_lib_1.match(/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d{1,3})?Z$/, function (name) {
        return {
            message: name + " must be in the format YYYY-MM-DDTHH:mm:ss.sssZ",
            expected: "YYYY-MM-DDTHH:mm:ss.sssZ",
        };
    }), function (name, str) {
        try {
            str = str.replace("T", " ").replace("Z", "");
            return DateTimeUtil.fromSqlUtc(str, fractionalSecondPrecision);
        }
        catch (err) {
            throw error_util_1.makeMappingError({
                message: name + " must be DATETIME(" + fractionalSecondPrecision + "); " + err.message,
                inputName: name,
                actualValue: str,
                expected: "DATETIME(" + fractionalSecondPrecision + ")",
            });
        }
    })).withExpectedInput();
}
exports.dateTime = dateTime;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mysql-lib/date-time/util.js":
/*!********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mysql-lib/date-time/util.js ***!
  \********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var string_util_1 = __webpack_require__(/*! ../../string-util */ "./node_modules/type-mapping/dist/string-util/index.js");
//Uses UTC
//Truncates if fractionSecondPrecision is too small.
function toSqlUtc(d, fractionalSecondPrecision /*|4|5|6*/) {
    if (!isFinite(d.getTime())) {
        throw new Error("Invalid date passed");
    }
    var year = string_util_1.zeroPad(d.getUTCFullYear(), 4);
    //getUTCMonth() returns [0, 11]
    //We want [1, 12]
    var month = string_util_1.zeroPad(d.getUTCMonth() + 1, 2);
    var day = string_util_1.zeroPad(d.getUTCDate(), 2);
    var hour = string_util_1.zeroPad(d.getUTCHours(), 2);
    var minute = string_util_1.zeroPad(d.getUTCMinutes(), 2);
    var second = string_util_1.zeroPad(d.getUTCSeconds(), 2);
    if (fractionalSecondPrecision == 0) {
        /*
            https://dev.mysql.com/doc/refman/8.0/en/date-and-time-literals.html

            The TIMESTAMP syntax produces a DATETIME value in MySQL
            because DATETIME has a range that more closely corresponds
            to the standard SQL TIMESTAMP type,
            which has a year range from 0001 to 9999.

            (The MySQL TIMESTAMP year range is 1970 to 2038.)
        */
        return [
            "(TIMESTAMP ",
            year + "-" + month + "-" + day + " " + hour + ":" + minute + ":" + second,
            ")"
        ].join("");
    }
    else {
        var ms = string_util_1.zeroPad(d.getUTCMilliseconds(), fractionalSecondPrecision).substr(0, fractionalSecondPrecision);
        /*
            https://dev.mysql.com/doc/refman/8.0/en/date-and-time-literals.html

            The TIMESTAMP syntax produces a DATETIME value in MySQL
            because DATETIME has a range that more closely corresponds
            to the standard SQL TIMESTAMP type,
            which has a year range from 0001 to 9999.

            (The MySQL TIMESTAMP year range is 1970 to 2038.)
        */
        return [
            "(TIMESTAMP ",
            year + "-" + month + "-" + day + " " + hour + ":" + minute + ":" + second + "." + ms,
            ")"
        ].join("");
    }
}
exports.toSqlUtc = toSqlUtc;
//Month is zero-based
//Day is one-based
function isValidDate(year, month, day) {
    /**
     * `year` might be [0, 99].
     * This causes the year to be [1900, 1999]. Not what we want.
     *
     * So, we use `.setFullYear()` below, to set the proper year.
     */
    var d = new Date(year, month, day);
    d.setFullYear(year);
    if (d.getFullYear() === year && d.getMonth() === month && d.getDate() === day) {
        return true;
    }
    return false;
}
var mySqlDateTimeRegex = /^(\d{4})-(\d{2})-(\d{2})( (\d{2}):(\d{2}):(\d{2})(\.(\d{1,6}))?)?$/;
//Assumes UTC
function fromSqlUtc(sql, fractionalSecondPrecision /*|4|5|6*/) {
    var match = mySqlDateTimeRegex.exec(sql);
    if (match == undefined) {
        throw new Error("Invalid MySQL DATETIME string");
    }
    var year = parseInt(match[1]);
    //1-based
    var month = parseInt(match[2]);
    //1-based
    var dayOfMonth = parseInt(match[3]);
    if (!isValidDate(year, month - 1, dayOfMonth)) {
        throw new Error("Invalid MySQL DATETIME string; month or day does not exist for given year");
    }
    var hour = (match[5] == undefined) ?
        0 :
        parseInt(match[5]);
    if (hour > 23) {
        throw new Error("Hour must be [0, 23]");
    }
    var minute = (match[6] == undefined) ?
        0 :
        parseInt(match[6]);
    if (minute > 59) {
        throw new Error("Minute must be [0, 59]");
    }
    var second = (match[7] == undefined) ?
        0 :
        parseInt(match[7]);
    if (second > 59) {
        throw new Error("Second must be [0, 59]");
    }
    var microsecondPart = (match[9] == undefined) ?
        0 :
        parseInt(string_util_1.trailingZeroPad(match[9], 6));
    if (microsecondPart > 999999) {
        throw new Error("Microsecond must be [0, 999999]");
    }
    var millisecond = Math.floor(microsecondPart / 1000);
    var microsecond = microsecondPart % 1000;
    /*
        With DATETIME(0),
        We have per-second precision.
        microsecondPart can only be zero.

        With DATETIME(1),
        We have 100ms precision, 100,000microsecond precision.
        6-1 = 5
        10^5 = 100,000
        By using %(modulo) 100,000, we ensure microsecondPart
        is a multiple of the precision we support.

        With DATETIME(2),
        We have 10ms precision, 10,000microsecond precision.
        6-2 = 4
        10^4 = 10,000
        By using %(modulo) 10,000, we ensure microsecondPart
        is a multiple of the precision we support.

        ...
        With DATETIME(6),
        We have 1microsecond precision.
        6-6 = 0
        10^0 = 1
        Any integer modulo one is zero.
    */
    if (microsecondPart % Math.pow(10, 6 - fractionalSecondPrecision) != 0) {
        throw new Error("Expected DATETIME(" + fractionalSecondPrecision + "), received DATETIME(" + match[9].length + ")");
    }
    /*if (
        match[9] != undefined &&
        match[9].length > fractionalSecondPrecision
    ) {
        throw new Error(`Expected DATETIME(${fractionalSecondPrecision}), received DATETIME(${match[9].length})`);
    }*/
    //TODO-FEATURE Microsecond support
    //JS Date just doesn't support microseconds
    //BEGIN TEMPORARY NON-SUPPORT FOR MICROSECOND
    if (microsecond != 0) {
        throw new Error("Microsecond support for DATETIME is not supported yet");
    }
    //END TEMPORARY NON-SUPPORT FOR MICROSECOND
    var utcMillisecondTimestamp = Date.UTC(year, 
    //Date.UTC() expects [0, 11]
    month - 1, dayOfMonth, hour, minute, second, millisecond);
    var result = new Date(utcMillisecondTimestamp);
    /**
     * `year` might be [0, 99].
     * This causes the year to be [1900, 1999]. Not what we want.
     *
     * So, we use `.setUTCFullYear()` below, to set the proper year.
     */
    result.setUTCFullYear(year);
    return result;
}
exports.fromSqlUtc = fromSqlUtc;
//# sourceMappingURL=util.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mysql-lib/decimal/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mysql-lib/decimal/index.js ***!
  \*******************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var functional_lib_1 = __webpack_require__(/*! ../../functional-lib */ "./node_modules/type-mapping/dist/functional-lib/index.js");
var fluent_lib_1 = __webpack_require__(/*! ../../fluent-lib */ "./node_modules/type-mapping/dist/fluent-lib/index.js");
var type_util_1 = __webpack_require__(/*! ../../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var FixedPointUtil = __webpack_require__(/*! ../../fixed-point-util */ "./node_modules/type-mapping/dist/fixed-point-util/index.js");
var BigIntUtil = __webpack_require__(/*! ../../bigint-util */ "./node_modules/type-mapping/dist/bigint-util/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
var error_code_1 = __webpack_require__(/*! ../../error-code */ "./node_modules/type-mapping/dist/error-code.js");
/**
 *
 * For now, returns a string.
 * Converting to a number risks losing precision.
 *
 * @deprecated
 */
function decimalDeprecated() {
    return fluent_lib_1.pipe(functional_lib_1.or(functional_lib_1.string(), functional_lib_1.finiteNumber(), functional_lib_1.bigInt()), function (_name, mixed) {
        return mixed.toString();
    }, functional_lib_1.floatingPointFormatString());
}
exports.decimalDeprecated = decimalDeprecated;
function assertValidDecimalPrecisionAndScale(
/**
 * + Min precision is `1`, even though MySQL allows min precision `0`.
 *   Precision `0` is not very meaningful, anyway, right?
 */
precision, 
/**
 * + The min scale is `0`.
 * + `scale` must be <= `precision`.
 */
scale) {
    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();
    var precisionMapper = fluent_lib_1.pipe(functional_lib_1.toBigInt(), functional_lib_1.bigIntGtEq(BigInt(1)));
    precision = precisionMapper("precision", precision);
    var scaleMapper = fluent_lib_1.pipe(functional_lib_1.toBigInt(), functional_lib_1.bigIntGtEq(BigInt(0)), functional_lib_1.bigIntLtEq(precision));
    scale = scaleMapper("scale", scale);
    return {
        precision: precision,
        scale: scale,
    };
}
function decimal(precision, scale) {
    if (precision == undefined) {
        return decimalDeprecated();
    }
    var _a = assertValidDecimalPrecisionAndScale(precision, scale), maxPrecision = _a.precision, maxScale = _a.scale;
    var expected = "DECIMAL(" + maxPrecision + ", " + maxScale + ")";
    return fluent_lib_1.pipe(functional_lib_1.or(functional_lib_1.string(), functional_lib_1.finiteNumber(), functional_lib_1.bigInt()), function (_name, mixed) {
        return mixed.toString();
    }, function (name, str) {
        var parsed = FixedPointUtil.tryParse(str);
        if (parsed == undefined) {
            throw error_util_1.makeMappingError({
                message: name + " must be " + expected,
                inputName: name,
                actualValue: str,
                expected: expected,
            });
        }
        var curScale = (parsed.getFixedPointFractionalPartString() == "0" ?
            0 :
            parsed.getFixedPointFractionalPartString().length);
        var curPrecision = (curScale +
            (parsed.getFixedPointIntegerPartString() == "0" ?
                0 :
                parsed.getFixedPointIntegerPartString().length));
        if (BigIntUtil.greaterThan(curPrecision, maxPrecision)) {
            throw error_util_1.makeMappingError({
                message: name + " must have precision less than, or equal to " + maxPrecision,
                inputName: name,
                actualValue: parsed.getFixedPointString(),
                expected: expected,
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_DECIMAL_PRECISION_LESS_THAN_OR_EQUAL_TO,
                    maxPrecision: maxPrecision,
                    maxScale: maxScale,
                    curPrecision: curPrecision,
                    curScale: curScale,
                },
            });
        }
        if (BigIntUtil.greaterThan(curScale, maxScale)) {
            throw error_util_1.makeMappingError({
                message: name + " must have scale less than, or equal to " + maxScale,
                inputName: name,
                actualValue: parsed.getFixedPointString(),
                expected: expected,
                expectedMeta: {
                    errorCode: error_code_1.ErrorCode.EXPECTED_DECIMAL_SCALE_LESS_THAN_OR_EQUAL_TO,
                    maxPrecision: maxPrecision,
                    maxScale: maxScale,
                    curPrecision: curPrecision,
                    curScale: curScale,
                },
            });
        }
        return parsed.getFixedPointString();
    });
}
exports.decimal = decimal;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mysql-lib/double/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mysql-lib/double/index.js ***!
  \******************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fluent_lib_1 = __webpack_require__(/*! ../../fluent-lib */ "./node_modules/type-mapping/dist/fluent-lib/index.js");
/**
    TS `number` type is actually a `double` type
*/
function double() {
    return fluent_lib_1.toFiniteNumber();
}
exports.double = double;
/**
    Alias for DOUBLE for now.
    JS doesn't have `float` type.

    This means that it is possible
    to send a value to MySQL and
    lose precision.
*/
function float() {
    return double();
}
exports.float = float;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mysql-lib/enum/case-sensitive-enum.js":
/*!******************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mysql-lib/enum/case-sensitive-enum.js ***!
  \******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fluent_lib_1 = __webpack_require__(/*! ../../fluent-lib */ "./node_modules/type-mapping/dist/fluent-lib/index.js");
/**
    TODO Handle case-insensitive enum collations

    -----

    https://dev.mysql.com/doc/refman/5.5/en/enum.html

    When retrieved, values stored into an ENUM column are displayed using the lettercase
    that was used in the column definition.

    Note that ENUM columns can be assigned a character set and collation.

    For binary or case-sensitive collations,
    lettercase is taken into account when assigning values to the column.
*/
function unsafeCaseSensitiveEnum() {
    var elements = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        elements[_i] = arguments[_i];
    }
    if (elements.length > 65535) {
        throw new Error("ENUM type can only have up to 65,535 elements");
    }
    return fluent_lib_1.unsafeLiteral.apply(void 0, elements);
}
exports.unsafeCaseSensitiveEnum = unsafeCaseSensitiveEnum;
/**
    TODO Handle case-insensitive enum collations

    -----

    https://dev.mysql.com/doc/refman/5.5/en/enum.html

    When retrieved, values stored into an ENUM column are displayed using the lettercase
    that was used in the column definition.

    Note that ENUM columns can be assigned a character set and collation.

    For binary or case-sensitive collations,
    lettercase is taken into account when assigning values to the column.
*/
function caseSensitiveEnum(element0) {
    var elements = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        elements[_i - 1] = arguments[_i];
    }
    return unsafeCaseSensitiveEnum.apply(void 0, [element0].concat(elements));
}
exports.caseSensitiveEnum = caseSensitiveEnum;
//# sourceMappingURL=case-sensitive-enum.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mysql-lib/enum/case-sensitive-set.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mysql-lib/enum/case-sensitive-set.js ***!
  \*****************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fluent_lib_1 = __webpack_require__(/*! ../../fluent-lib */ "./node_modules/type-mapping/dist/fluent-lib/index.js");
var error_util_1 = __webpack_require__(/*! ../../error-util */ "./node_modules/type-mapping/dist/error-util/index.js");
var type_util_1 = __webpack_require__(/*! ../../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
/**
    TODO Handle case-insensitive set collations

    -----

    https://dev.mysql.com/doc/refman/5.5/en/set.html

    When retrieved, values stored in a SET column are displayed using the lettercase
    that was used in the column definition.

    Note that SET columns can be assigned a character set and collation.

    For binary or case-sensitive collations,
    lettercase is taken into account when assigning values to the column.
*/
function caseSenstiveSet() {
    var elements = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        elements[_i] = arguments[_i];
    }
    if (elements.length > 64) {
        throw new Error("SET type can only have up to 64 elements");
    }
    fluent_lib_1.array(fluent_lib_1.notMatch(/\,/, function (name) { return name + " must not have comma"; }))("elements", elements);
    var expected = "SET(" + elements.map(function (e) { return type_util_1.toLiteralOrTypeStr(e); }).join(",") + ")";
    return fluent_lib_1.string().pipe(function (name, raw) {
        var arr = raw.split(",");
        for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {
            var e = arr_1[_i];
            if (elements.indexOf(e) < 0) {
                throw error_util_1.makeMappingError({
                    message: name + " has unknown set element; " + e,
                    inputName: name,
                    actualValue: e,
                    expected: expected,
                });
            }
        }
        return raw;
    });
}
exports.caseSenstiveSet = caseSenstiveSet;
//# sourceMappingURL=case-sensitive-set.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mysql-lib/enum/enum-value.js":
/*!*********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mysql-lib/enum/enum-value.js ***!
  \*********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fluent_mapper_1 = __webpack_require__(/*! ../../fluent-mapper */ "./node_modules/type-mapping/dist/fluent-mapper.js");
var fLib = __webpack_require__(/*! ../../functional-lib */ "./node_modules/type-mapping/dist/functional-lib/index.js");
function enumValue(e) {
    var result = fLib.or(fLib.enumValue(e), fLib.pipe(fLib.stringToFiniteNumber(), fLib.enumValue(e)));
    return fluent_mapper_1.fluentMapper(result);
}
exports.enumValue = enumValue;
//# sourceMappingURL=enum-value.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mysql-lib/enum/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mysql-lib/enum/index.js ***!
  \****************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./case-sensitive-enum */ "./node_modules/type-mapping/dist/mysql-lib/enum/case-sensitive-enum.js"));
__export(__webpack_require__(/*! ./case-sensitive-set */ "./node_modules/type-mapping/dist/mysql-lib/enum/case-sensitive-set.js"));
__export(__webpack_require__(/*! ./enum-value */ "./node_modules/type-mapping/dist/mysql-lib/enum/enum-value.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mysql-lib/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/type-mapping/dist/mysql-lib/index.js ***!
  \***********************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./binary */ "./node_modules/type-mapping/dist/mysql-lib/binary/index.js"));
__export(__webpack_require__(/*! ./boolean */ "./node_modules/type-mapping/dist/mysql-lib/boolean/index.js"));
__export(__webpack_require__(/*! ./char */ "./node_modules/type-mapping/dist/mysql-lib/char/index.js"));
__export(__webpack_require__(/*! ./date-time */ "./node_modules/type-mapping/dist/mysql-lib/date-time/index.js"));
__export(__webpack_require__(/*! ./decimal */ "./node_modules/type-mapping/dist/mysql-lib/decimal/index.js"));
__export(__webpack_require__(/*! ./double */ "./node_modules/type-mapping/dist/mysql-lib/double/index.js"));
__export(__webpack_require__(/*! ./enum */ "./node_modules/type-mapping/dist/mysql-lib/enum/index.js"));
__export(__webpack_require__(/*! ./int */ "./node_modules/type-mapping/dist/mysql-lib/int/index.js"));
__export(__webpack_require__(/*! ./json */ "./node_modules/type-mapping/dist/mysql-lib/json/index.js"));
__export(__webpack_require__(/*! ./uint-8-array-binary */ "./node_modules/type-mapping/dist/mysql-lib/uint-8-array-binary/index.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mysql-lib/int/bigint.js":
/*!****************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mysql-lib/int/bigint.js ***!
  \****************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var type_util_1 = __webpack_require__(/*! ../../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
var fLib = __webpack_require__(/*! ../../fluent-lib */ "./node_modules/type-mapping/dist/fluent-lib/index.js");
/**
    Does not restrict the min and max value
*/
function unsafeBigInt() {
    return fLib.toBigInt();
}
exports.unsafeBigInt = unsafeBigInt;
/**
    Only allows,
    [-9,223,372,036,854,775,808, 9,223,372,036,854,775,807]
*/
function bigIntSigned() {
    var bigIntFactory = type_util_1.getBigIntFactoryFunctionOrError();
    return unsafeBigInt().pipe(fLib.bigIntRange({
        gtEq: bigIntFactory("-9223372036854775808"),
        ltEq: bigIntFactory("9223372036854775807"),
    }));
}
exports.bigIntSigned = bigIntSigned;
/**
    Only allows,
    [0, 18,446,744,073,709,551,615]
*/
function bigIntUnsigned() {
    var bigIntFactory = type_util_1.getBigIntFactoryFunctionOrError();
    return unsafeBigInt().pipe(fLib.bigIntRange({
        gtEq: bigIntFactory("0"),
        ltEq: bigIntFactory("18446744073709551615"),
    }));
}
exports.bigIntUnsigned = bigIntUnsigned;
//# sourceMappingURL=bigint.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mysql-lib/int/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mysql-lib/int/index.js ***!
  \***************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./bigint */ "./node_modules/type-mapping/dist/mysql-lib/int/bigint.js"));
__export(__webpack_require__(/*! ./int */ "./node_modules/type-mapping/dist/mysql-lib/int/int.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mysql-lib/int/int.js":
/*!*************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mysql-lib/int/int.js ***!
  \*************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fLib = __webpack_require__(/*! ../../fluent-lib */ "./node_modules/type-mapping/dist/fluent-lib/index.js");
var functional_lib_1 = __webpack_require__(/*! ../../functional-lib */ "./node_modules/type-mapping/dist/functional-lib/index.js");
var type_util_1 = __webpack_require__(/*! ../../type-util */ "./node_modules/type-mapping/dist/type-util/index.js");
/**
    Uses `integerFormatString()` and `BigInt()` internally.
*/
function unsafeInt() {
    return fLib.toBigInt();
}
exports.unsafeInt = unsafeInt;
function intDelegate(min, max) {
    var bigIntFactory = type_util_1.getBigIntFactoryFunctionOrError();
    return unsafeInt().pipe(functional_lib_1.bigIntRange({
        gtEq: bigIntFactory(min),
        ltEq: bigIntFactory(max),
    }));
}
/**
    [-128, 127]
*/
function tinyIntSigned() {
    return intDelegate(-128, 127);
}
exports.tinyIntSigned = tinyIntSigned;
/**
    [-32,768, 32,767]
*/
function smallIntSigned() {
    return intDelegate(-32768, 32767);
}
exports.smallIntSigned = smallIntSigned;
/**
    [-8,388,608, 8,388,607]
*/
function mediumIntSigned() {
    return intDelegate(-8388608, 8388607);
}
exports.mediumIntSigned = mediumIntSigned;
/**
    [-2,147,483,648, 2,147,483,647]
*/
function intSigned() {
    return intDelegate(-2147483648, 2147483647);
}
exports.intSigned = intSigned;
/**
    [0, 255]
*/
function tinyIntUnsigned() {
    return intDelegate(0, 255);
}
exports.tinyIntUnsigned = tinyIntUnsigned;
/**
    [0, 65535]
*/
function smallIntUnsigned() {
    return intDelegate(0, 65535);
}
exports.smallIntUnsigned = smallIntUnsigned;
/**
    [0, 16777215]
*/
function mediumIntUnsigned() {
    return intDelegate(0, 16777215);
}
exports.mediumIntUnsigned = mediumIntUnsigned;
/**
    [0, 4294967295]
*/
function intUnsigned() {
    return intDelegate(0, 4294967295);
}
exports.intUnsigned = intUnsigned;
//# sourceMappingURL=int.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mysql-lib/json/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mysql-lib/json/index.js ***!
  \****************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fluent_lib_1 = __webpack_require__(/*! ../../fluent-lib */ "./node_modules/type-mapping/dist/fluent-lib/index.js");
var functional_lib_1 = __webpack_require__(/*! ../../functional-lib */ "./node_modules/type-mapping/dist/functional-lib/index.js");
function jsonDelegate(dataTypeStr, maxLength, defaultDesiredLengthMax) {
    if (maxLength < defaultDesiredLengthMax) {
        throw new Error("maxLength must be >= defaultDesiredLengthMax");
    }
    var result = function (a, b) {
        if (a == undefined) {
            return fluent_lib_1.stringLength({
                max: defaultDesiredLengthMax,
            }).pipe(functional_lib_1.jsonObjectString());
        }
        else if (b == undefined) {
            a = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({
                gtEq: 1,
                ltEq: maxLength,
            }))(dataTypeStr + ".desiredLengthMax", a);
            return fluent_lib_1.stringLength({
                max: a,
            }).pipe(functional_lib_1.jsonObjectString());
        }
        else {
            a = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({
                gtEq: 0,
                ltEq: maxLength,
            }))(dataTypeStr + ".desiredLengthMin", a);
            b = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({
                gtEq: 1,
                ltEq: maxLength,
            }))(dataTypeStr + ".desiredLengthMax", b);
            if (a > b) {
                throw new Error(dataTypeStr + " minLength must be <= maxLength");
            }
            return fluent_lib_1.stringLength({
                min: a,
                max: b,
            }).pipe(functional_lib_1.jsonObjectString());
        }
    };
    result.maxLength = maxLength;
    return result;
}
/**
 * The space required to store a `JSON` document is roughly
 * the same as for `LONGBLOB` or `LONGTEXT`.
 *
 * In addition, MySQL imposes a limit on the size of any `JSON`
 * document stored in a `JSON` column such that it cannot be any
 * larger than the value of `max_allowed_packet`.
 *
 * The default for `max_allowed_packet` is `4194304`, 4MB.
 *
 * The maximum is `1073741824`, 1GB.
 *
 * The value should be a multiple of `1024`;
 * nonmultiples are rounded down to the nearest multiple.
 *
 * -----
 *
 * I set the default to 1MB arbitrarily.
*/
exports.json = jsonDelegate("JSON", 4294967295, 1048576);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/mysql-lib/uint-8-array-binary/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/mysql-lib/uint-8-array-binary/index.js ***!
  \*******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var fluent_lib_1 = __webpack_require__(/*! ../../fluent-lib */ "./node_modules/type-mapping/dist/fluent-lib/index.js");
function uint8ArrayDelegate(dataTypeStr, maxLength) {
    var result = function (a, b) {
        if (a == undefined) {
            return fluent_lib_1.uint8ArrayLength({
                max: maxLength,
            });
        }
        else if (b == undefined) {
            a = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({
                gtEq: 1,
                ltEq: maxLength,
            }))(dataTypeStr + ".desiredLengthMax", a);
            return fluent_lib_1.uint8ArrayLength({
                max: a,
            });
        }
        else {
            a = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({
                gtEq: 0,
                ltEq: maxLength,
            }))(dataTypeStr + ".desiredLengthMin", a);
            b = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({
                gtEq: 1,
                ltEq: maxLength,
            }))(dataTypeStr + ".desiredLengthMax", b);
            if (a > b) {
                throw new Error(dataTypeStr + " minLength must be <= maxLength");
            }
            return fluent_lib_1.uint8ArrayLength({
                min: a,
                max: b,
            });
        }
    };
    result.maxLength = maxLength;
    return result;
}
exports.uint8ArrayBinary = uint8ArrayDelegate("BINARY", 255);
exports.uint8ArrayVarBinary = uint8ArrayDelegate("VARBINARY", 65535);
exports.uint8ArrayTinyBlob = uint8ArrayDelegate("TINYBLOB", 255);
exports.uint8ArrayBlob = uint8ArrayDelegate("BLOB", 65535);
exports.uint8ArrayMediumBlob = uint8ArrayDelegate("MEDIUMBLOB", 16777215);
exports.uint8ArrayLongBlob = uint8ArrayDelegate("LONGBLOB", 4294967295);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/string-util/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/type-mapping/dist/string-util/index.js ***!
  \*************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./string-ends-with */ "./node_modules/type-mapping/dist/string-util/string-ends-with.js"));
__export(__webpack_require__(/*! ./string-repeat */ "./node_modules/type-mapping/dist/string-util/string-repeat.js"));
__export(__webpack_require__(/*! ./to-property-access */ "./node_modules/type-mapping/dist/string-util/to-property-access.js"));
__export(__webpack_require__(/*! ./zero-pad */ "./node_modules/type-mapping/dist/string-util/zero-pad.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/string-util/string-ends-with.js":
/*!************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/string-util/string-ends-with.js ***!
  \************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function stringEndsWith(str, suffix) {
    if (str.length < suffix.length) {
        return false;
    }
    if (str.length == suffix.length) {
        return (str == suffix);
    }
    for (var i = 0; i < suffix.length; ++i) {
        var suffixChar = suffix[suffix.length - i - 1];
        var strChar = str[str.length - i - 1];
        if (suffixChar != strChar) {
            return false;
        }
    }
    return true;
}
exports.stringEndsWith = stringEndsWith;
//# sourceMappingURL=string-ends-with.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/string-util/string-repeat.js":
/*!*********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/string-util/string-repeat.js ***!
  \*********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function stringRepeat(str, count) {
    var result = "";
    for (var i = 0; i < count; ++i) {
        result += str;
    }
    return result;
}
exports.stringRepeat = stringRepeat;
//# sourceMappingURL=string-repeat.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/string-util/to-property-access.js":
/*!**************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/string-util/to-property-access.js ***!
  \**************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function toPropertyAccess(name) {
    if (typeof name == "number") {
        return "[" + name + "]";
    }
    if (/\s|\.|\-/.test(name)) {
        return "[" + JSON.stringify(name) + "]";
    }
    if (/^\d+$/.test(name)) {
        return "[" + name + "]";
    }
    if (/^\d+/.test(name)) {
        return "[" + JSON.stringify(name) + "]";
    }
    return "." + name;
}
exports.toPropertyAccess = toPropertyAccess;
//# sourceMappingURL=to-property-access.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/string-util/zero-pad.js":
/*!****************************************************************!*\
  !*** ./node_modules/type-mapping/dist/string-util/zero-pad.js ***!
  \****************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var string_repeat_1 = __webpack_require__(/*! ./string-repeat */ "./node_modules/type-mapping/dist/string-util/string-repeat.js");
/*
    zeroPad(1, 4)     === "0001"
    zeroPad(34, 4)    === "0034"
    zeroPad(678, 4)   === "0678"
    zeroPad(1337, 4)  === "1337"
    zeroPad(92678, 4) === "92678"
*/
function zeroPad(num, length) {
    var str = num.toString();
    if (str.length < length) {
        return string_repeat_1.stringRepeat("0", length - str.length) + str;
    }
    else {
        return str;
    }
}
exports.zeroPad = zeroPad;
function trailingZeroPad(num, length) {
    var str = num.toString();
    if (str.length < length) {
        return str + string_repeat_1.stringRepeat("0", length - str.length);
    }
    else {
        return str;
    }
}
exports.trailingZeroPad = trailingZeroPad;
//# sourceMappingURL=zero-pad.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/type-util/allows-instance-of.js":
/*!************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/type-util/allows-instance-of.js ***!
  \************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function allowsInstanceOf(ctor) {
    try {
        ({} instanceof ctor);
        return true;
    }
    catch (e) {
        return false;
    }
}
exports.allowsInstanceOf = allowsInstanceOf;
//# sourceMappingURL=allows-instance-of.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/type-util/buffer-ctor.js":
/*!*****************************************************************!*\
  !*** ./node_modules/type-mapping/dist/type-util/buffer-ctor.js ***!
  \*****************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(Buffer) {
Object.defineProperty(exports, "__esModule", { value: true });
function tryFindBufferCtor() {
    try {
        return Buffer;
    }
    catch (_err) {
        return undefined;
    }
}
var cachedBufferCtor = "uninitialized";
function tryGetBufferCtor() {
    if (cachedBufferCtor == "uninitialized") {
        cachedBufferCtor = tryFindBufferCtor();
    }
    return cachedBufferCtor;
}
exports.tryGetBufferCtor = tryGetBufferCtor;
function isInstanceOfBuffer(mixed) {
    var ctor = tryFindBufferCtor();
    if (ctor == undefined) {
        return false;
    }
    return (mixed instanceof ctor);
}
exports.isInstanceOfBuffer = isInstanceOfBuffer;
//# sourceMappingURL=buffer-ctor.js.map
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../buffer/index.js */ "./node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/type-mapping/dist/type-util/deep-merge.js":
/*!****************************************************************!*\
  !*** ./node_modules/type-mapping/dist/type-util/deep-merge.js ***!
  \****************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var to_type_str_1 = __webpack_require__(/*! ./to-type-str */ "./node_modules/type-mapping/dist/type-util/to-type-str.js");
var strict_equal_1 = __webpack_require__(/*! ./strict-equal */ "./node_modules/type-mapping/dist/type-util/strict-equal.js");
var is_primitive_1 = __webpack_require__(/*! ./is-primitive */ "./node_modules/type-mapping/dist/type-util/is-primitive.js");
function deepMergeImpl(a, b) {
    if (strict_equal_1.strictEqual(a, b)) {
        return a;
    }
    if (is_primitive_1.isPrimitive(a) || is_primitive_1.isPrimitive(b)) {
        throw new Error("Cannot merge " + to_type_str_1.toTypeStr(a) + " and " + to_type_str_1.toTypeStr(b) + "; they are not equal");
    }
    //We should have object types now.
    if ((typeof a == "function") || (typeof b == "function")) {
        throw new Error("Cannot merge " + to_type_str_1.toTypeStr(a) + " and " + to_type_str_1.toTypeStr(b) + "; they are not equal");
    }
    if ((a instanceof Date) || (b instanceof Date)) {
        if (!(a instanceof Date)) {
            throw new Error("Cannot merge " + to_type_str_1.toTypeStr(a) + " with Date");
        }
        if (!(b instanceof Date)) {
            throw new Error("Cannot merge Date with " + to_type_str_1.toTypeStr(b));
        }
        if (a.getTime() === b.getTime()) {
            return a;
        }
        else {
            throw new Error("Cannot merge dates; they must have the same value");
        }
    }
    if ((a instanceof Array) || (b instanceof Array)) {
        if (!(a instanceof Array)) {
            throw new Error("Cannot merge " + to_type_str_1.toTypeStr(a) + " with array");
        }
        if (!(b instanceof Array)) {
            throw new Error("Cannot merge array with " + to_type_str_1.toTypeStr(b));
        }
        if (a.length != b.length) {
            throw new Error("Cannot merge arrays of different lengths");
        }
        var newArray = [];
        for (var i = 0; i < a.length; ++i) {
            newArray.push(deepMergeImpl(a[i], b[i]));
        }
        return newArray;
    }
    var aKeys = Object.keys(a);
    var bKeys = Object.keys(b);
    var mergedKeys = {};
    var result = {};
    for (var _i = 0, aKeys_1 = aKeys; _i < aKeys_1.length; _i++) {
        var key = aKeys_1[_i];
        //We can skip a.hasOwnProperty() because Object.keys() ignores parent prototype
        if (mergedKeys[key] === true) {
            continue;
        }
        mergedKeys[key] = true;
        //We do not call `b.hasOwnProperty()` directly
        //because if `b = Object.create(null)`,
        //an `Error` will be thrown
        if (Object.prototype.hasOwnProperty.call(b, key)) {
            result[key] = deepMergeImpl(a[key], b[key]);
        }
        else {
            result[key] = a[key];
        }
    }
    for (var _a = 0, bKeys_1 = bKeys; _a < bKeys_1.length; _a++) {
        var key = bKeys_1[_a];
        //We can skip b.hasOwnProperty() because Object.keys() ignores parent prototype
        if (mergedKeys[key] === true) {
            continue;
        }
        mergedKeys[key] = true;
        //We do not call `a.hasOwnProperty()` directly
        //because if `a = Object.create(null)`,
        //an `Error` will be thrown
        if (Object.prototype.hasOwnProperty.call(a, key)) {
            result[key] = deepMergeImpl(a[key], b[key]);
        }
        else {
            result[key] = b[key];
        }
    }
    return result;
}
function deepMerge() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    if (args.length == 0) {
        throw new Error("Cannot deep merge zero arguments");
    }
    var result = args[0];
    for (var i = 1; i < args.length; ++i) {
        result = deepMergeImpl(result, args[i]);
    }
    return result;
}
exports.deepMerge = deepMerge;
//# sourceMappingURL=deep-merge.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/type-util/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/type-mapping/dist/type-util/index.js ***!
  \***********************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./allows-instance-of */ "./node_modules/type-mapping/dist/type-util/allows-instance-of.js"));
__export(__webpack_require__(/*! ./buffer-ctor */ "./node_modules/type-mapping/dist/type-util/buffer-ctor.js"));
__export(__webpack_require__(/*! ./deep-merge */ "./node_modules/type-mapping/dist/type-util/deep-merge.js"));
__export(__webpack_require__(/*! ./is-instance-of */ "./node_modules/type-mapping/dist/type-util/is-instance-of.js"));
__export(__webpack_require__(/*! ./is-bigint */ "./node_modules/type-mapping/dist/type-util/is-bigint.js"));
__export(__webpack_require__(/*! ./is-pojo */ "./node_modules/type-mapping/dist/type-util/is-pojo.js"));
__export(__webpack_require__(/*! ./is-primitive */ "./node_modules/type-mapping/dist/type-util/is-primitive.js"));
__export(__webpack_require__(/*! ./omit */ "./node_modules/type-mapping/dist/type-util/omit.js"));
__export(__webpack_require__(/*! ./pick */ "./node_modules/type-mapping/dist/type-util/pick.js"));
__export(__webpack_require__(/*! ./set-function-name */ "./node_modules/type-mapping/dist/type-util/set-function-name.js"));
__export(__webpack_require__(/*! ./strict-equal */ "./node_modules/type-mapping/dist/type-util/strict-equal.js"));
__export(__webpack_require__(/*! ./to-type-str */ "./node_modules/type-mapping/dist/type-util/to-type-str.js"));
__export(__webpack_require__(/*! ./try-deep-merge */ "./node_modules/type-mapping/dist/type-util/try-deep-merge.js"));
__export(__webpack_require__(/*! ./try-get-bigint-factory-function */ "./node_modules/type-mapping/dist/type-util/try-get-bigint-factory-function.js"));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/type-util/is-bigint.js":
/*!***************************************************************!*\
  !*** ./node_modules/type-mapping/dist/type-util/is-bigint.js ***!
  \***************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var try_get_bigint_factory_function_1 = __webpack_require__(/*! ./try-get-bigint-factory-function */ "./node_modules/type-mapping/dist/type-util/try-get-bigint-factory-function.js");
var buffer_ctor_1 = __webpack_require__(/*! ./buffer-ctor */ "./node_modules/type-mapping/dist/type-util/buffer-ctor.js");
function isBigIntNative(x) {
    return (typeof x == "bigint");
}
function isBigIntPolyfill(x) {
    if (typeof x == "bigint") {
        return true;
    }
    if (!(x instanceof Object)) {
        //It is a primitive type and not a bigint
        return false;
    }
    if ((x instanceof Number) ||
        (x instanceof String) ||
        buffer_ctor_1.isInstanceOfBuffer(x)) {
        //Sanity check.
        //These objects are most likely to pass the
        //numeric `.toString()` check below.
        return false;
    }
    if ((x instanceof Array) ||
        (x instanceof Date) ||
        (x instanceof Function)) {
        //Sanity check.
        //These objects are commonly used.
        return false;
    }
    var bigIntFactory = try_get_bigint_factory_function_1.tryGetBigIntFactoryFunction();
    if (bigIntFactory == undefined) {
        //No BigInt polyfill detected
        return false;
    }
    if (!bigIntFactory.possiblyInstanceOfBigInt(x)) {
        //Definitely not BigInt polyfilled object
        return false;
    }
    /*
        We now have,

        + An object
        + A BigInt factory
        + The object was possibly created by the BigInt factory
    */
    var xStr = String(x);
    if (!/^\-?\d+$/.test(xStr)) {
        //This object's string representation is not valid.
        return false;
    }
    //High confidence that this is a polyfilled BigInt object
    return true;
}
function isBigInt(x) {
    if (try_get_bigint_factory_function_1.isBigIntNativelySupported()) {
        return isBigIntNative(x);
    }
    else {
        return isBigIntPolyfill(x);
    }
}
exports.isBigInt = isBigInt;
//# sourceMappingURL=is-bigint.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/type-util/is-instance-of.js":
/*!********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/type-util/is-instance-of.js ***!
  \********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var try_get_bigint_factory_function_1 = __webpack_require__(/*! ./try-get-bigint-factory-function */ "./node_modules/type-mapping/dist/type-util/try-get-bigint-factory-function.js");
var is_bigint_1 = __webpack_require__(/*! ./is-bigint */ "./node_modules/type-mapping/dist/type-util/is-bigint.js");
/**
    Like using "regular" `instanceof` but
    bigint polyfill objects will never be an `instanceof Object`,
    or any other class.
*/
function isInstanceOf(mixed, ctor) {
    return ((mixed instanceof ctor) &&
        (try_get_bigint_factory_function_1.isBigIntNativelySupported() ||
            !is_bigint_1.isBigInt(mixed)));
}
exports.isInstanceOf = isInstanceOf;
//# sourceMappingURL=is-instance-of.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/type-util/is-pojo.js":
/*!*************************************************************!*\
  !*** ./node_modules/type-mapping/dist/type-util/is-pojo.js ***!
  \*************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var is_instance_of_1 = __webpack_require__(/*! ./is-instance-of */ "./node_modules/type-mapping/dist/type-util/is-instance-of.js");
/**
    Abbreviation for "Plain old JavasScript object".

    Meaning, an Object that isn't,

    + Date
    + Array
    + Function
    + An instance of some other class

    -----

    Will never consider a BigInt polyfill object a Pojo
*/
function isPojo(mixed) {
    if (!is_instance_of_1.isInstanceOf(mixed, Object)) {
        return false;
    }
    if (Object.getPrototypeOf(mixed) !== Object.prototype) {
        return false;
    }
    return true;
}
exports.isPojo = isPojo;
//# sourceMappingURL=is-pojo.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/type-util/is-primitive.js":
/*!******************************************************************!*\
  !*** ./node_modules/type-mapping/dist/type-util/is-primitive.js ***!
  \******************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var is_bigint_1 = __webpack_require__(/*! ./is-bigint */ "./node_modules/type-mapping/dist/type-util/is-bigint.js");
function isPrimitive(x) {
    if (x == undefined) {
        return true;
    }
    var t = typeof x;
    if (t != "object" && t != "function") {
        return true;
    }
    return is_bigint_1.isBigInt(x);
}
exports.isPrimitive = isPrimitive;
function isLiteral(x) {
    if (x == undefined) {
        return true;
    }
    var t = typeof x;
    if (t != "object" && t != "function" && t != "symbol") {
        return true;
    }
    return is_bigint_1.isBigInt(x);
}
exports.isLiteral = isLiteral;
//# sourceMappingURL=is-primitive.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/type-util/omit.js":
/*!**********************************************************!*\
  !*** ./node_modules/type-mapping/dist/type-util/omit.js ***!
  \**********************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Performs `Omit<>` on an `object` during run-time
 *
 * @param obj - The object to omit key-value pairs from
 * @param keys - The keys to omit
 */
function omit(obj) {
    var keys = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        keys[_i - 1] = arguments[_i];
    }
    var result = __assign({}, obj);
    for (var _a = 0, keys_1 = keys; _a < keys_1.length; _a++) {
        var k = keys_1[_a];
        delete result[k];
    }
    return result;
}
exports.omit = omit;
//# sourceMappingURL=omit.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/type-util/pick.js":
/*!**********************************************************!*\
  !*** ./node_modules/type-mapping/dist/type-util/pick.js ***!
  \**********************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Performs `Pick<>` on an `object` during run-time
 *
 * @param obj - The object to pick key-value pairs from
 * @param keys - The keys to pick
 */
function pick(obj) {
    var keys = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        keys[_i - 1] = arguments[_i];
    }
    var result = {};
    for (var _a = 0, keys_1 = keys; _a < keys_1.length; _a++) {
        var k = keys_1[_a];
        if (!Object.prototype.hasOwnProperty.call(obj, k)) {
            continue;
        }
        result[k] = obj[k];
    }
    return result;
}
exports.pick = pick;
//# sourceMappingURL=pick.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/type-util/set-function-name.js":
/*!***********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/type-util/set-function-name.js ***!
  \***********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
    Modifies `f` directly.
*/
function setFunctionName(f, name) {
    if (typeof name != "string") {
        name = "";
    }
    f.__name = name;
    return f;
}
exports.setFunctionName = setFunctionName;
//# sourceMappingURL=set-function-name.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/type-util/strict-equal.js":
/*!******************************************************************!*\
  !*** ./node_modules/type-mapping/dist/type-util/strict-equal.js ***!
  \******************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var is_bigint_1 = __webpack_require__(/*! ./is-bigint */ "./node_modules/type-mapping/dist/type-util/is-bigint.js");
var try_get_bigint_factory_function_1 = __webpack_require__(/*! ./try-get-bigint-factory-function */ "./node_modules/type-mapping/dist/type-util/try-get-bigint-factory-function.js");
function strictEqualNative(a, b) {
    return (a === b);
}
function strictEqualPolyfill(a, b) {
    if (a === b) {
        return true;
    }
    if (is_bigint_1.isBigInt(a) && is_bigint_1.isBigInt(b)) {
        return a.toString() === b.toString();
    }
    return false;
}
/**
    This library supports `bigint`.
    However, not all browsers support `bigint`.

    Some developers may polyfill it with a `BigInt` class.

    ```ts
    //With polyfill, this may be false
    BigInt(2) === BigInt(2)
    ```

    ```ts
    //We want a special case for `BigInt`
    //This must be true
    strictEqual(BigInt(2), BigInt(2))
    ```
*/
function strictEqual(a, b) {
    if (try_get_bigint_factory_function_1.isBigIntNativelySupported()) {
        return strictEqualNative(a, b);
    }
    else {
        return strictEqualPolyfill(a, b);
    }
}
exports.strictEqual = strictEqual;
//# sourceMappingURL=strict-equal.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/type-util/to-type-str.js":
/*!*****************************************************************!*\
  !*** ./node_modules/type-mapping/dist/type-util/to-type-str.js ***!
  \*****************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var is_bigint_1 = __webpack_require__(/*! ./is-bigint */ "./node_modules/type-mapping/dist/type-util/is-bigint.js");
var is_primitive_1 = __webpack_require__(/*! ./is-primitive */ "./node_modules/type-mapping/dist/type-util/is-primitive.js");
/**
    Intended to work better than `String(mixed)`.
*/
function toLiteralStr(mixed) {
    //We do not mind === here.
    if (mixed === null) {
        return "null";
        //We do not mind === here.
    }
    else if (mixed === undefined) {
        return "undefined";
    }
    else if (is_bigint_1.isBigInt(typeof mixed)) {
        return mixed.toString() + "n";
    }
    else if (typeof mixed == "string") {
        return JSON.stringify(mixed);
    }
    else {
        return String(mixed);
    }
}
exports.toLiteralStr = toLiteralStr;
function toLiteralUnionStr(arr) {
    return arr
        .map(toLiteralStr)
        .join("|");
}
exports.toLiteralUnionStr = toLiteralUnionStr;
function getCtorName(ctor) {
    if (!(ctor instanceof Object)) {
        return "[Not Ctor]";
    }
    var name = ctor.name;
    if (typeof name == "string") {
        return name;
    }
    return "[Unknown Name]";
}
exports.getCtorName = getCtorName;
/**
    Intended to work better than `typeof mixed`.
*/
function toTypeStr(mixed) {
    //We do not mind === here.
    if (mixed === null) {
        return "null";
    }
    //We do not mind === here.
    if (mixed === undefined) {
        return "undefined";
    }
    var str = (typeof mixed);
    if (str !== "object") {
        return str;
    }
    if (is_bigint_1.isBigInt(mixed)) {
        return "bigint";
    }
    var prototype = Object.getPrototypeOf(mixed);
    if (prototype == undefined) {
        return "[Unknown Type]";
    }
    var constructor = prototype.constructor;
    if (constructor == undefined) {
        return "[Unknown Prototype]";
    }
    return getCtorName(constructor);
}
exports.toTypeStr = toTypeStr;
function toLiteralOrTypeStr(mixed) {
    if (is_primitive_1.isLiteral(mixed)) {
        return toLiteralStr(mixed);
    }
    else {
        return toTypeStr(mixed);
    }
}
exports.toLiteralOrTypeStr = toLiteralOrTypeStr;
function toLiteralOrTypeUnionStr(arr) {
    return arr
        .map(toLiteralOrTypeStr)
        .join("|");
}
exports.toLiteralOrTypeUnionStr = toLiteralOrTypeUnionStr;
//# sourceMappingURL=to-type-str.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/type-util/try-deep-merge.js":
/*!********************************************************************!*\
  !*** ./node_modules/type-mapping/dist/type-util/try-deep-merge.js ***!
  \********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var to_type_str_1 = __webpack_require__(/*! ./to-type-str */ "./node_modules/type-mapping/dist/type-util/to-type-str.js");
var strict_equal_1 = __webpack_require__(/*! ./strict-equal */ "./node_modules/type-mapping/dist/type-util/strict-equal.js");
var is_primitive_1 = __webpack_require__(/*! ./is-primitive */ "./node_modules/type-mapping/dist/type-util/is-primitive.js");
var ArrayBufferUtil = __webpack_require__(/*! ../array-buffer-util */ "./node_modules/type-mapping/dist/array-buffer-util/index.js");
var buffer_ctor_1 = __webpack_require__(/*! ./buffer-ctor */ "./node_modules/type-mapping/dist/type-util/buffer-ctor.js");
function tryDeepMergeImpl(path, a, b) {
    if (strict_equal_1.strictEqual(a, b)) {
        return {
            success: true,
            value: a,
        };
    }
    if (is_primitive_1.isPrimitive(a) || is_primitive_1.isPrimitive(b)) {
        return {
            success: false,
            path: path,
            aValue: a,
            bValue: b,
            message: "Cannot merge " + to_type_str_1.toTypeStr(a) + " and " + to_type_str_1.toTypeStr(b) + "; they are not equal",
            expected: to_type_str_1.toTypeStr(a),
            actualValue: b,
        };
    }
    //We should have object types now.
    if ((typeof a == "function") || (typeof b == "function")) {
        return {
            success: false,
            path: path,
            aValue: a,
            bValue: b,
            message: "Cannot merge " + to_type_str_1.toTypeStr(a) + " and " + to_type_str_1.toTypeStr(b) + "; they are not equal",
            expected: to_type_str_1.toTypeStr(a),
            actualValue: b,
        };
    }
    if ((a instanceof Date) || (b instanceof Date)) {
        if (!(a instanceof Date)) {
            return {
                success: false,
                path: path,
                aValue: a,
                bValue: b,
                message: "Cannot merge " + to_type_str_1.toTypeStr(a) + " with Date",
                expected: to_type_str_1.toTypeStr(a),
                actualValue: b,
            };
        }
        if (!(b instanceof Date)) {
            return {
                success: false,
                path: path,
                aValue: a,
                bValue: b,
                message: "Cannot merge Date with " + to_type_str_1.toTypeStr(b),
                expected: to_type_str_1.toTypeStr(a),
                actualValue: b,
            };
        }
        if (a.getTime() === b.getTime()) {
            return {
                success: true,
                value: a,
            };
        }
        else {
            return {
                success: false,
                path: path,
                aValue: a,
                bValue: b,
                message: "Cannot merge dates; they must have the same value",
                expected: to_type_str_1.toTypeStr(a),
                actualValue: b,
            };
        }
    }
    if (buffer_ctor_1.isInstanceOfBuffer(a) || buffer_ctor_1.isInstanceOfBuffer(b)) {
        if (!buffer_ctor_1.isInstanceOfBuffer(a)) {
            return {
                success: false,
                path: path,
                aValue: a,
                bValue: b,
                message: "Cannot merge " + to_type_str_1.toTypeStr(a) + " with Buffer",
                expected: to_type_str_1.toTypeStr(a),
                actualValue: b,
            };
        }
        if (!buffer_ctor_1.isInstanceOfBuffer(b)) {
            return {
                success: false,
                path: path,
                aValue: a,
                bValue: b,
                message: "Cannot merge Buffer with " + to_type_str_1.toTypeStr(b),
                expected: to_type_str_1.toTypeStr(a),
                actualValue: b,
            };
        }
        if (!ArrayBufferUtil.equals(a, b)) {
            return {
                success: false,
                path: path,
                aValue: a,
                bValue: b,
                message: "Cannot merge Buffer; they are not equal",
                expected: to_type_str_1.toTypeStr(a),
                actualValue: b,
            };
        }
        return {
            success: true,
            value: a,
        };
    }
    if ((a instanceof Uint8Array) || (b instanceof Uint8Array)) {
        if (!(a instanceof Uint8Array)) {
            return {
                success: false,
                path: path,
                aValue: a,
                bValue: b,
                message: "Cannot merge " + to_type_str_1.toTypeStr(a) + " with Uint8Array",
                expected: to_type_str_1.toTypeStr(a),
                actualValue: b,
            };
        }
        if (!(b instanceof Uint8Array)) {
            return {
                success: false,
                path: path,
                aValue: a,
                bValue: b,
                message: "Cannot merge Uint8Array with " + to_type_str_1.toTypeStr(b),
                expected: to_type_str_1.toTypeStr(a),
                actualValue: b,
            };
        }
        if (!ArrayBufferUtil.equals(a, b)) {
            return {
                success: false,
                path: path,
                aValue: a,
                bValue: b,
                message: "Cannot merge Uint8Array; they are not equal",
                expected: to_type_str_1.toTypeStr(a),
                actualValue: b,
            };
        }
        return {
            success: true,
            value: a,
        };
    }
    if ((a instanceof Array) || (b instanceof Array)) {
        if (!(a instanceof Array)) {
            return {
                success: false,
                path: path,
                aValue: a,
                bValue: b,
                message: "Cannot merge " + to_type_str_1.toTypeStr(a) + " with array",
                expected: to_type_str_1.toTypeStr(a),
                actualValue: b,
            };
        }
        if (!(b instanceof Array)) {
            return {
                success: false,
                path: path,
                aValue: a,
                bValue: b,
                message: "Cannot merge array with " + to_type_str_1.toTypeStr(b),
                expected: to_type_str_1.toTypeStr(a),
                actualValue: b,
            };
        }
        if (a.length != b.length) {
            return {
                success: false,
                path: path,
                aValue: a,
                bValue: b,
                message: "Cannot merge arrays of different lengths",
                expected: to_type_str_1.toTypeStr(a),
                actualValue: b,
            };
        }
        var newArray = [];
        for (var i = 0; i < a.length; ++i) {
            var elementResult = tryDeepMergeImpl(path.concat([i.toString()]), a[i], b[i]);
            if (elementResult.success) {
                newArray.push(elementResult.value);
            }
            else {
                return elementResult;
            }
        }
        return {
            success: true,
            value: newArray
        };
    }
    var aKeys = Object.keys(a);
    var bKeys = Object.keys(b);
    var mergedKeys = {};
    var newObj = {};
    for (var _i = 0, aKeys_1 = aKeys; _i < aKeys_1.length; _i++) {
        var key = aKeys_1[_i];
        //We can skip a.hasOwnProperty() because Object.keys() ignores parent prototype
        if (mergedKeys[key] === true) {
            continue;
        }
        mergedKeys[key] = true;
        //We do not call `b.hasOwnProperty()` directly
        //because if `b = Object.create(null)`,
        //an `Error` will be thrown
        if (Object.prototype.hasOwnProperty.call(b, key)) {
            var valueResult = tryDeepMergeImpl(path.concat([key]), a[key], b[key]);
            if (valueResult.success) {
                newObj[key] = valueResult.value;
            }
            else {
                return valueResult;
            }
        }
        else {
            newObj[key] = a[key];
        }
    }
    for (var _a = 0, bKeys_1 = bKeys; _a < bKeys_1.length; _a++) {
        var key = bKeys_1[_a];
        //We can skip b.hasOwnProperty() because Object.keys() ignores parent prototype
        if (mergedKeys[key] === true) {
            continue;
        }
        mergedKeys[key] = true;
        //We do not call `a.hasOwnProperty()` directly
        //because if `a = Object.create(null)`,
        //an `Error` will be thrown
        if (Object.prototype.hasOwnProperty.call(a, key)) {
            var valueResult = tryDeepMergeImpl(path.concat([key]), a[key], b[key]);
            if (valueResult.success) {
                newObj[key] = valueResult.value;
            }
            else {
                return valueResult;
            }
        }
        else {
            newObj[key] = b[key];
        }
    }
    return {
        success: true,
        value: newObj,
    };
}
function tryDeepMerge() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    if (args.length == 0) {
        throw new Error("Cannot deep merge zero arguments");
    }
    var result = args[0];
    for (var i = 1; i < args.length; ++i) {
        var implResult = tryDeepMergeImpl([], result, args[i]);
        if (implResult.success) {
            result = implResult.value;
        }
        else {
            return __assign({}, implResult, { aRoot: result, bRoot: args[i] });
        }
    }
    return {
        success: true,
        value: result,
    };
}
exports.tryDeepMerge = tryDeepMerge;
//# sourceMappingURL=try-deep-merge.js.map

/***/ }),

/***/ "./node_modules/type-mapping/dist/type-util/try-get-bigint-factory-function.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/type-mapping/dist/type-util/try-get-bigint-factory-function.js ***!
  \*************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function createPossiblyInstanceOfBigInt(x) {
    if (x == undefined) {
        return function () { return false; };
    }
    try {
        var ctor_1 = Object.getPrototypeOf(x).constructor;
        if (typeof ctor_1 != "function") {
            return function () { return false; };
        }
        //Make sure `instanceof` checks don't throw
        ({} instanceof ctor_1);
        return function (x) {
            return (x instanceof ctor_1);
        };
    }
    catch (_err) {
        return function () { return false; };
    }
}
function tryFindBigIntFactoryFunction() {
    try {
        var unsafeFactory_1 = BigInt;
        if (typeof unsafeFactory_1 != "function") {
            return undefined;
        }
        try {
            var bigInt = unsafeFactory_1(0);
            var possiblyInstanceOfBigInt = createPossiblyInstanceOfBigInt(bigInt);
            var wrapper = (function (x) {
                return unsafeFactory_1(x);
            });
            wrapper.possiblyInstanceOfBigInt = possiblyInstanceOfBigInt;
            wrapper.bigIntNative = (typeof bigInt == "bigint");
            return wrapper;
        }
        catch (_err) {
        }
        try {
            var possiblyInstanceOfBigInt = createPossiblyInstanceOfBigInt(new unsafeFactory_1(0));
            var wrapper = (function (x) {
                return new unsafeFactory_1(x);
            });
            wrapper.possiblyInstanceOfBigInt = possiblyInstanceOfBigInt;
            //Had to use `new`; not supported
            wrapper.bigIntNative = false;
            return wrapper;
        }
        catch (_err) {
        }
        return undefined;
    }
    catch (_err) {
        //No BigInt, no polyfill
        return undefined;
    }
}
var cachedBigIntFactoryFunction = "uninitialized";
function tryGetBigIntFactoryFunction() {
    if (cachedBigIntFactoryFunction == "uninitialized") {
        cachedBigIntFactoryFunction = tryFindBigIntFactoryFunction();
    }
    return cachedBigIntFactoryFunction;
}
exports.tryGetBigIntFactoryFunction = tryGetBigIntFactoryFunction;
function getBigIntFactoryFunctionOrError() {
    var result = tryGetBigIntFactoryFunction();
    if (result == undefined) {
        throw new Error("No native or polyfilled bigint implementation found; set the `BigInt` variable on the `globalThis`/`window`/`global` scope to a polyfilled implementation");
    }
    return result;
}
exports.getBigIntFactoryFunctionOrError = getBigIntFactoryFunctionOrError;
function isBigIntNativelySupported() {
    var factory = tryGetBigIntFactoryFunction();
    if (factory == undefined) {
        return false;
    }
    return factory.bigIntNative;
}
exports.isBigIntNativelySupported = isBigIntNativelySupported;
//# sourceMappingURL=try-get-bigint-factory-function.js.map

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ })

}]);
//# sourceMappingURL=vendors.bundle.js.map