{"version":3,"sources":["webpack:///./node_modules/@squill/squill/dist/aliased-expr/aliased-expr-impl.js","webpack:///./node_modules/@squill/squill/dist/aliased-expr/index.js","webpack:///./node_modules/@squill/squill/dist/aliased-table/aliased-table.js","webpack:///./node_modules/@squill/squill/dist/aliased-table/array-util/index.js","webpack:///./node_modules/@squill/squill/dist/aliased-table/array-util/predicate/assert-no-duplicate-table-alias.js","webpack:///./node_modules/@squill/squill/dist/aliased-table/array-util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/aliased-table/array-util/query/duplicate-table-alias.js","webpack:///./node_modules/@squill/squill/dist/aliased-table/array-util/query/index.js","webpack:///./node_modules/@squill/squill/dist/aliased-table/index.js","webpack:///./node_modules/@squill/squill/dist/aliased-table/util/index.js","webpack:///./node_modules/@squill/squill/dist/aliased-table/util/query/candidate-keys.js","webpack:///./node_modules/@squill/squill/dist/aliased-table/util/query/delete-enabled.js","webpack:///./node_modules/@squill/squill/dist/aliased-table/util/query/index.js","webpack:///./node_modules/@squill/squill/dist/aliased-table/util/query/mutable-columns.js","webpack:///./node_modules/@squill/squill/dist/aliased-table/util/query/primary-key.js","webpack:///./node_modules/@squill/squill/dist/ast/case-condition-node/index.js","webpack:///./node_modules/@squill/squill/dist/ast/case-condition-node/util/index.js","webpack:///./node_modules/@squill/squill/dist/ast/case-condition-node/util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/ast/case-condition-node/util/predicate/is-case-condition-node.js","webpack:///./node_modules/@squill/squill/dist/ast/case-value-node/index.js","webpack:///./node_modules/@squill/squill/dist/ast/case-value-node/util/index.js","webpack:///./node_modules/@squill/squill/dist/ast/case-value-node/util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/ast/case-value-node/util/predicate/is-case-value-node.js","webpack:///./node_modules/@squill/squill/dist/ast/function-call.js","webpack:///./node_modules/@squill/squill/dist/ast/identifier-node.js","webpack:///./node_modules/@squill/squill/dist/ast/index.js","webpack:///./node_modules/@squill/squill/dist/ast/literal-value-node/index.js","webpack:///./node_modules/@squill/squill/dist/ast/literal-value-node/literal-value-node.js","webpack:///./node_modules/@squill/squill/dist/ast/literal-value-node/util/constructor/bigint-literal-node.js","webpack:///./node_modules/@squill/squill/dist/ast/literal-value-node/util/constructor/boolean-literal-node.js","webpack:///./node_modules/@squill/squill/dist/ast/literal-value-node/util/constructor/buffer-literal-node.js","webpack:///./node_modules/@squill/squill/dist/ast/literal-value-node/util/constructor/date-time-literal-node.js","webpack:///./node_modules/@squill/squill/dist/ast/literal-value-node/util/constructor/decimal-literal-node.js","webpack:///./node_modules/@squill/squill/dist/ast/literal-value-node/util/constructor/double-literal-node.js","webpack:///./node_modules/@squill/squill/dist/ast/literal-value-node/util/constructor/index.js","webpack:///./node_modules/@squill/squill/dist/ast/literal-value-node/util/constructor/null-literal-node.js","webpack:///./node_modules/@squill/squill/dist/ast/literal-value-node/util/constructor/string-literal-node.js","webpack:///./node_modules/@squill/squill/dist/ast/literal-value-node/util/index.js","webpack:///./node_modules/@squill/squill/dist/ast/literal-value-node/util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/ast/literal-value-node/util/predicate/is-literal-value-node.js","webpack:///./node_modules/@squill/squill/dist/ast/operator-node/index.js","webpack:///./node_modules/@squill/squill/dist/ast/operator-node/util/constructor/index.js","webpack:///./node_modules/@squill/squill/dist/ast/operator-node/util/constructor/operator-node-0.js","webpack:///./node_modules/@squill/squill/dist/ast/operator-node/util/constructor/operator-node-1-to-n.js","webpack:///./node_modules/@squill/squill/dist/ast/operator-node/util/constructor/operator-node-1.js","webpack:///./node_modules/@squill/squill/dist/ast/operator-node/util/constructor/operator-node-2-to-n.js","webpack:///./node_modules/@squill/squill/dist/ast/operator-node/util/constructor/operator-node-2.js","webpack:///./node_modules/@squill/squill/dist/ast/operator-node/util/constructor/operator-node-3.js","webpack:///./node_modules/@squill/squill/dist/ast/operator-node/util/constructor/operator-node.js","webpack:///./node_modules/@squill/squill/dist/ast/operator-node/util/index.js","webpack:///./node_modules/@squill/squill/dist/ast/operator-node/util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/ast/operator-node/util/predicate/is-operator-node.js","webpack:///./node_modules/@squill/squill/dist/ast/parentheses.js","webpack:///./node_modules/@squill/squill/dist/ast/sqlfier/index.js","webpack:///./node_modules/@squill/squill/dist/ast/sqlfier/not-implemented-sqlfier.js","webpack:///./node_modules/@squill/squill/dist/ast/util/index.js","webpack:///./node_modules/@squill/squill/dist/ast/util/insert-between.js","webpack:///./node_modules/@squill/squill/dist/ast/util/is-ast.js","webpack:///./node_modules/@squill/squill/dist/ast/util/to-sql-pretty.js","webpack:///./node_modules/@squill/squill/dist/ast/util/to-sql.js","webpack:///./node_modules/@squill/squill/dist/ast/util/try-extract-ast.js","webpack:///./node_modules/@squill/squill/dist/ast/util/try-unwrap-parentheses.js","webpack:///./node_modules/@squill/squill/dist/async-queue.js","webpack:///./node_modules/@squill/squill/dist/built-in-expr/index.js","webpack:///./node_modules/@squill/squill/dist/built-in-expr/util/constructor/from-custom-expr-map-correlated.js","webpack:///./node_modules/@squill/squill/dist/built-in-expr/util/constructor/from-value-expr.js","webpack:///./node_modules/@squill/squill/dist/built-in-expr/util/constructor/index.js","webpack:///./node_modules/@squill/squill/dist/built-in-expr/util/index.js","webpack:///./node_modules/@squill/squill/dist/built-in-expr/util/operation/build-ast.js","webpack:///./node_modules/@squill/squill/dist/built-in-expr/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/built-in-expr/util/operation/intersect-used-ref.js","webpack:///./node_modules/@squill/squill/dist/built-in-expr/util/predicate/assert-non-aggregate.js","webpack:///./node_modules/@squill/squill/dist/built-in-expr/util/predicate/assert-non-null.js","webpack:///./node_modules/@squill/squill/dist/built-in-expr/util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/built-in-expr/util/predicate/is-any-non-value-expr.js","webpack:///./node_modules/@squill/squill/dist/built-in-expr/util/predicate/is-any-subquery-expr.js","webpack:///./node_modules/@squill/squill/dist/built-in-expr/util/predicate/is-built-in-expr.js","webpack:///./node_modules/@squill/squill/dist/built-in-expr/util/query/index.js","webpack:///./node_modules/@squill/squill/dist/built-in-expr/util/query/is-aggregate.js","webpack:///./node_modules/@squill/squill/dist/built-in-expr/util/query/mapper.js","webpack:///./node_modules/@squill/squill/dist/built-in-expr/util/query/used-ref.js","webpack:///./node_modules/@squill/squill/dist/built-in-value-expr/array-util/index.js","webpack:///./node_modules/@squill/squill/dist/built-in-value-expr/array-util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/built-in-value-expr/array-util/predicate/is-built-in-value-expr-array.js","webpack:///./node_modules/@squill/squill/dist/built-in-value-expr/array-util/predicate/is-non-null-built-in-value-expr-array.js","webpack:///./node_modules/@squill/squill/dist/built-in-value-expr/index.js","webpack:///./node_modules/@squill/squill/dist/built-in-value-expr/util/index.js","webpack:///./node_modules/@squill/squill/dist/built-in-value-expr/util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/built-in-value-expr/util/predicate/is-built-in-value-expr.js","webpack:///./node_modules/@squill/squill/dist/built-in-value-expr/util/predicate/is-equal.js","webpack:///./node_modules/@squill/squill/dist/built-in-value-expr/util/predicate/is-non-null-built-in-value-expr.js","webpack:///./node_modules/@squill/squill/dist/candidate-key/index.js","webpack:///./node_modules/@squill/squill/dist/candidate-key/util/index.js","webpack:///./node_modules/@squill/squill/dist/candidate-key/util/query/index.js","webpack:///./node_modules/@squill/squill/dist/candidate-key/util/query/mapper.js","webpack:///./node_modules/@squill/squill/dist/column-identifier-map/index.js","webpack:///./node_modules/@squill/squill/dist/column-identifier-map/util/constructor/from-column-map.js","webpack:///./node_modules/@squill/squill/dist/column-identifier-map/util/constructor/index.js","webpack:///./node_modules/@squill/squill/dist/column-identifier-map/util/index.js","webpack:///./node_modules/@squill/squill/dist/column-identifier-map/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/column-identifier-map/util/operation/intersect.js","webpack:///./node_modules/@squill/squill/dist/column-identifier-map/util/predicate/has-column-identifier.js","webpack:///./node_modules/@squill/squill/dist/column-identifier-map/util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/column-identifier-map/util/query/extract-column-identifier.js","webpack:///./node_modules/@squill/squill/dist/column-identifier-map/util/query/index.js","webpack:///./node_modules/@squill/squill/dist/column-identifier-ref/index.js","webpack:///./node_modules/@squill/squill/dist/column-identifier-ref/util/constructor/from-column-map.js","webpack:///./node_modules/@squill/squill/dist/column-identifier-ref/util/constructor/from-column.js","webpack:///./node_modules/@squill/squill/dist/column-identifier-ref/util/constructor/from-join-array.js","webpack:///./node_modules/@squill/squill/dist/column-identifier-ref/util/constructor/from-select-clause.js","webpack:///./node_modules/@squill/squill/dist/column-identifier-ref/util/constructor/index.js","webpack:///./node_modules/@squill/squill/dist/column-identifier-ref/util/index.js","webpack:///./node_modules/@squill/squill/dist/column-identifier-ref/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/column-identifier-ref/util/operation/intersect.js","webpack:///./node_modules/@squill/squill/dist/column-identifier-ref/util/operation/left-intersect.js","webpack:///./node_modules/@squill/squill/dist/column-identifier-ref/util/operation/try-flatten.js","webpack:///./node_modules/@squill/squill/dist/column-identifier-ref/util/predicate/has-column-identifier.js","webpack:///./node_modules/@squill/squill/dist/column-identifier-ref/util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/column-identifier-ref/util/query/extract-column-identifier.js","webpack:///./node_modules/@squill/squill/dist/column-identifier-ref/util/query/index.js","webpack:///./node_modules/@squill/squill/dist/column-identifier/array-util/constructor/from-column-map.js","webpack:///./node_modules/@squill/squill/dist/column-identifier/array-util/constructor/from-column-ref.js","webpack:///./node_modules/@squill/squill/dist/column-identifier/array-util/constructor/index.js","webpack:///./node_modules/@squill/squill/dist/column-identifier/array-util/index.js","webpack:///./node_modules/@squill/squill/dist/column-identifier/array-util/predicate/assert-disjoint.js","webpack:///./node_modules/@squill/squill/dist/column-identifier/array-util/predicate/assert-no-duplicate.js","webpack:///./node_modules/@squill/squill/dist/column-identifier/array-util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/column-identifier/index.js","webpack:///./node_modules/@squill/squill/dist/column-identifier/util/constructor/from-column-map.js","webpack:///./node_modules/@squill/squill/dist/column-identifier/util/constructor/from-column-ref.js","webpack:///./node_modules/@squill/squill/dist/column-identifier/util/constructor/from-column.js","webpack:///./node_modules/@squill/squill/dist/column-identifier/util/constructor/from-expr-select-item.js","webpack:///./node_modules/@squill/squill/dist/column-identifier/util/constructor/from-select-clause.js","webpack:///./node_modules/@squill/squill/dist/column-identifier/util/constructor/from-select-item.js","webpack:///./node_modules/@squill/squill/dist/column-identifier/util/constructor/index.js","webpack:///./node_modules/@squill/squill/dist/column-identifier/util/index.js","webpack:///./node_modules/@squill/squill/dist/column-identifier/util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/column-identifier/util/predicate/is-column-identifier.js","webpack:///./node_modules/@squill/squill/dist/column-identifier/util/predicate/is-equal.js","webpack:///./node_modules/@squill/squill/dist/column-map/index.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/constructor/from-column-array.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/constructor/from-column-ref.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/constructor/from-column.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/constructor/from-expr-select-item.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/constructor/from-field-array.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/constructor/from-join.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/constructor/from-mapper-map.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/constructor/from-select-clause.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/constructor/from-select-item.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/constructor/index.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/index.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/operation/compound.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/operation/intersect.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/operation/left-compound.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/operation/left-intersect.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/operation/omit.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/operation/pick.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/operation/replace-column.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/operation/to-nullable.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/operation/with-table-alias.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/predicate/assert-is-null-safe-comparable.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/predicate/has-column-alias.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/predicate/is-column-map.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/predicate/is-null-safe-comparable.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/query/column-alias.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/query/extract-column-identifier.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/query/extract-non-nullable.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/query/extract-nullable.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/query/index.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/query/mapper.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/query/non-nullable-column-alias.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/query/nullable-column-alias.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/query/partial-mapper.js","webpack:///./node_modules/@squill/squill/dist/column-map/util/query/table-alias.js","webpack:///./node_modules/@squill/squill/dist/column-ref/index.js","webpack:///./node_modules/@squill/squill/dist/column-ref/util/constructor/from-column-array.js","webpack:///./node_modules/@squill/squill/dist/column-ref/util/constructor/from-column-map.js","webpack:///./node_modules/@squill/squill/dist/column-ref/util/constructor/from-column.js","webpack:///./node_modules/@squill/squill/dist/column-ref/util/constructor/from-from-clause.js","webpack:///./node_modules/@squill/squill/dist/column-ref/util/constructor/from-join-array.js","webpack:///./node_modules/@squill/squill/dist/column-ref/util/constructor/from-join.js","webpack:///./node_modules/@squill/squill/dist/column-ref/util/constructor/from-select-clause.js","webpack:///./node_modules/@squill/squill/dist/column-ref/util/constructor/index.js","webpack:///./node_modules/@squill/squill/dist/column-ref/util/index.js","webpack:///./node_modules/@squill/squill/dist/column-ref/util/operation/compound.js","webpack:///./node_modules/@squill/squill/dist/column-ref/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/column-ref/util/operation/intersect.js","webpack:///./node_modules/@squill/squill/dist/column-ref/util/operation/left-compound.js","webpack:///./node_modules/@squill/squill/dist/column-ref/util/operation/left-intersect.js","webpack:///./node_modules/@squill/squill/dist/column-ref/util/operation/try-flatten.js","webpack:///./node_modules/@squill/squill/dist/column-ref/util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/column-ref/util/predicate/is-column-ref.js","webpack:///./node_modules/@squill/squill/dist/column-ref/util/query/column-alias.js","webpack:///./node_modules/@squill/squill/dist/column-ref/util/query/duplicate-column-alias.js","webpack:///./node_modules/@squill/squill/dist/column-ref/util/query/extract-column-identifier.js","webpack:///./node_modules/@squill/squill/dist/column-ref/util/query/extract-non-nullable.js","webpack:///./node_modules/@squill/squill/dist/column-ref/util/query/extract-nullable.js","webpack:///./node_modules/@squill/squill/dist/column-ref/util/query/extract-with-type.js","webpack:///./node_modules/@squill/squill/dist/column-ref/util/query/index.js","webpack:///./node_modules/@squill/squill/dist/column/array-util/constructor/from-column-map.js","webpack:///./node_modules/@squill/squill/dist/column/array-util/constructor/index.js","webpack:///./node_modules/@squill/squill/dist/column/array-util/index.js","webpack:///./node_modules/@squill/squill/dist/column/column-impl.js","webpack:///./node_modules/@squill/squill/dist/column/index.js","webpack:///./node_modules/@squill/squill/dist/column/util/constructor/from-column-map.js","webpack:///./node_modules/@squill/squill/dist/column/util/constructor/from-column-ref.js","webpack:///./node_modules/@squill/squill/dist/column/util/constructor/from-expr-select-item.js","webpack:///./node_modules/@squill/squill/dist/column/util/constructor/from-join-array.js","webpack:///./node_modules/@squill/squill/dist/column/util/constructor/from-join.js","webpack:///./node_modules/@squill/squill/dist/column/util/constructor/from-select-clause.js","webpack:///./node_modules/@squill/squill/dist/column/util/constructor/from-select-item.js","webpack:///./node_modules/@squill/squill/dist/column/util/constructor/index.js","webpack:///./node_modules/@squill/squill/dist/column/util/index.js","webpack:///./node_modules/@squill/squill/dist/column/util/operation/as.js","webpack:///./node_modules/@squill/squill/dist/column/util/operation/asc.js","webpack:///./node_modules/@squill/squill/dist/column/util/operation/build-ast.js","webpack:///./node_modules/@squill/squill/dist/column/util/operation/desc.js","webpack:///./node_modules/@squill/squill/dist/column/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/column/util/operation/sort.js","webpack:///./node_modules/@squill/squill/dist/column/util/operation/to-non-nullable.js","webpack:///./node_modules/@squill/squill/dist/column/util/operation/to-nullable.js","webpack:///./node_modules/@squill/squill/dist/column/util/operation/with-table-alias.js","webpack:///./node_modules/@squill/squill/dist/column/util/operation/with-type.js","webpack:///./node_modules/@squill/squill/dist/column/util/operation/with-unaliased-ast.js","webpack:///./node_modules/@squill/squill/dist/column/util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/column/util/predicate/is-column.js","webpack:///./node_modules/@squill/squill/dist/column/util/query/extract-nullable.js","webpack:///./node_modules/@squill/squill/dist/column/util/query/index.js","webpack:///./node_modules/@squill/squill/dist/compound-query-clause/index.js","webpack:///./node_modules/@squill/squill/dist/compound-query-clause/util/index.js","webpack:///./node_modules/@squill/squill/dist/compound-query-clause/util/operation/compound-query.js","webpack:///./node_modules/@squill/squill/dist/compound-query-clause/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/compound-query-clause/util/predicate/assert-compatible.js","webpack:///./node_modules/@squill/squill/dist/compound-query-clause/util/predicate/assert-outer-query-joins-compatible.js","webpack:///./node_modules/@squill/squill/dist/compound-query-clause/util/predicate/assert-select-clause-compatible.js","webpack:///./node_modules/@squill/squill/dist/compound-query-clause/util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/compound-query-order-by-clause/index.js","webpack:///./node_modules/@squill/squill/dist/compound-query-order-by-clause/util/index.js","webpack:///./node_modules/@squill/squill/dist/compound-query-order-by-clause/util/operation/compound-query-order-by.js","webpack:///./node_modules/@squill/squill/dist/compound-query-order-by-clause/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/compound-query-order-by-clause/util/query/allowed-used-ref.js","webpack:///./node_modules/@squill/squill/dist/compound-query-order-by-clause/util/query/index.js","webpack:///./node_modules/@squill/squill/dist/compound-query/compound-query.js","webpack:///./node_modules/@squill/squill/dist/compound-query/index.js","webpack:///./node_modules/@squill/squill/dist/constants.js","webpack:///./node_modules/@squill/squill/dist/custom-expr/index.js","webpack:///./node_modules/@squill/squill/dist/custom-expr/util/index.js","webpack:///./node_modules/@squill/squill/dist/custom-expr/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/custom-expr/util/operation/map-non-correlated.js","webpack:///./node_modules/@squill/squill/dist/custom-expr/util/query/index.js","webpack:///./node_modules/@squill/squill/dist/custom-expr/util/query/is-aggregate.js","webpack:///./node_modules/@squill/squill/dist/custom-expr/util/query/used-ref.js","webpack:///./node_modules/@squill/squill/dist/data-type/built-in-value-expr/blob.js","webpack:///./node_modules/@squill/squill/dist/data-type/built-in-value-expr/boolean.js","webpack:///./node_modules/@squill/squill/dist/data-type/built-in-value-expr/date-time.js","webpack:///./node_modules/@squill/squill/dist/data-type/built-in-value-expr/double.js","webpack:///./node_modules/@squill/squill/dist/data-type/built-in-value-expr/index.js","webpack:///./node_modules/@squill/squill/dist/data-type/built-in-value-expr/integer.js","webpack:///./node_modules/@squill/squill/dist/data-type/built-in-value-expr/text.js","webpack:///./node_modules/@squill/squill/dist/data-type/index.js","webpack:///./node_modules/@squill/squill/dist/data-type/non-built-in-value-expr/decimal.js","webpack:///./node_modules/@squill/squill/dist/data-type/non-built-in-value-expr/index.js","webpack:///./node_modules/@squill/squill/dist/data-type/util/constructor/index.js","webpack:///./node_modules/@squill/squill/dist/data-type/util/constructor/make-data-type.js","webpack:///./node_modules/@squill/squill/dist/data-type/util/index.js","webpack:///./node_modules/@squill/squill/dist/data-type/util/operation/evaluate-candidate-key.js","webpack:///./node_modules/@squill/squill/dist/data-type/util/operation/evaluate-columns.js","webpack:///./node_modules/@squill/squill/dist/data-type/util/operation/evaluate-custom-expr.js","webpack:///./node_modules/@squill/squill/dist/data-type/util/operation/evaluate-insertable-candidate-key.js","webpack:///./node_modules/@squill/squill/dist/data-type/util/operation/evaluate-primary-key.js","webpack:///./node_modules/@squill/squill/dist/data-type/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/data-type/util/operation/intersect.js","webpack:///./node_modules/@squill/squill/dist/data-type/util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/data-type/util/predicate/is-data-type.js","webpack:///./node_modules/@squill/squill/dist/data-type/util/predicate/is-null-safe-equal.js","webpack:///./node_modules/@squill/squill/dist/date-time-util/index.js","webpack:///./node_modules/@squill/squill/dist/date-time-util/util.js","webpack:///./node_modules/@squill/squill/dist/date-util/index.js","webpack:///./node_modules/@squill/squill/dist/date-util/is-date.js","webpack:///./node_modules/@squill/squill/dist/derived-table-select-item/derived-table-select-item-impl.js","webpack:///./node_modules/@squill/squill/dist/derived-table-select-item/index.js","webpack:///./node_modules/@squill/squill/dist/derived-table/derived-table-impl.js","webpack:///./node_modules/@squill/squill/dist/derived-table/index.js","webpack:///./node_modules/@squill/squill/dist/derived-table/util/index.js","webpack:///./node_modules/@squill/squill/dist/derived-table/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/derived-table/util/operation/lateral.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-log/index.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-log/log-impl.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-log/util/constructor/00-log.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-log/util/constructor/01-set-owner.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-log/util/constructor/02-set-latest-order.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-log/util/constructor/03-set-tracked.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-log/util/constructor/04-set-do-not-copy.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-log/util/constructor/05-set-copy-defaults-delegate.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-log/util/constructor/06-set-tracked-defaults.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-log/util/constructor/index.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-log/util/correlated-subquery/exists.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-log/util/correlated-subquery/index.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-log/util/correlated-subquery/latest-value-or-default.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-log/util/correlated-subquery/latest-value.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-log/util/correlated-subquery/latest.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-log/util/execution/exists.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-log/util/execution/fetch-default.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-log/util/execution/fetch-latest-or-default.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-log/util/execution/fetch-latest-value-or-default.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-log/util/execution/fetch-latest-value.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-log/util/execution/fetch-latest.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-log/util/execution/index.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-log/util/execution/latest-by-primary-key.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-log/util/execution/track-or-insert.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-log/util/execution/track.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-log/util/execution/unsafe-track.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-log/util/index.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/index.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/table-per-type-impl.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/constructor/index.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/constructor/table-per-type.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/execution-impl/absorb-row.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/execution-impl/assert-exists-impl.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/execution-impl/delete-one-impl.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/execution-impl/delete-zero-or-one-impl.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/execution-impl/exists-impl.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/execution-impl/fetch-one-impl.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/execution-impl/from.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/execution-impl/index.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/execution-impl/invoke-assignment-delegate.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/execution-impl/update-and-fetch-one-impl.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/execution/delete-one-by-candidate-key.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/execution/delete-one-by-primary-key.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/execution/delete-one-by-super-key.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/execution/delete-zero-or-one-by-candidate-key.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/execution/delete-zero-or-one-by-primary-key.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/execution/delete-zero-or-one-by-super-key.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/execution/fetch-one-by-candidate-key.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/execution/fetch-one-by-primary-key.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/execution/fetch-one-by-super-key.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/execution/fetch-one.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/execution/index.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/execution/insert-and-fetch.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/execution/update-and-fetch-one-by-candidate-key.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/execution/update-and-fetch-one-by-primary-key.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/execution/update-and-fetch-one-by-super-key.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/execution/update-and-fetch-zero-or-one-by-candidate-key.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/execution/update-and-fetch-zero-or-one-by-primary-key.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/execution/update-and-fetch-zero-or-one-by-super-key.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/index.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/operation/add-parent.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/operation/eq-super-key.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/operation/remove-duplicate-parents.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/predicate/is-table-per-type.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/query/column-alias.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/query/column-type.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/query/explicit-default-value-column-alias.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/query/extract-all-tables-with-column-alias.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/query/extract-all-tables.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/query/extract-auto-increment.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/query/extract-child-table.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/query/extract-column-alias.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/query/extract-explicit-auto-increment-value-enabled.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/query/extract-insert-and-fetch-primary-key.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/query/extract-parent-tables.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/query/find-last-join-to-table.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/query/find-table-with-column-alias.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/query/find-table-with-generated-column-alias.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/query/generated-column-alias.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/query/implicit-auto-increment.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/query/index.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/query/mutable-column-alias.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/query/non-generated-column-alias.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/query/nullable-column-alias.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/query/optional-column-alias.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/query/parent-column-alias.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/query/primary-key-column-alias.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/query/required-column-alias.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/query/row.js","webpack:///./node_modules/@squill/squill/dist/design-pattern-table-per-type/util/query/super-key-mapper.js","webpack:///./node_modules/@squill/squill/dist/error/clean-insert-row/index.js","webpack:///./node_modules/@squill/squill/dist/error/clean-insert-row/missing-required-insert-column.js","webpack:///./node_modules/@squill/squill/dist/error/clean-insert-row/potential-null-in-required-insert-column.js","webpack:///./node_modules/@squill/squill/dist/error/execution/index.js","webpack:///./node_modules/@squill/squill/dist/error/execution/invalid-sql.js","webpack:///./node_modules/@squill/squill/dist/error/execution/row-not-found.js","webpack:///./node_modules/@squill/squill/dist/error/execution/too-many-rows-found.js","webpack:///./node_modules/@squill/squill/dist/error/expr/cannot-count.js","webpack:///./node_modules/@squill/squill/dist/error/expr/data-out-of-range.js","webpack:///./node_modules/@squill/squill/dist/error/expr/divide-by-zero.js","webpack:///./node_modules/@squill/squill/dist/error/expr/index.js","webpack:///./node_modules/@squill/squill/dist/error/expr/invalid-input.js","webpack:///./node_modules/@squill/squill/dist/error/index.js","webpack:///./node_modules/@squill/squill/dist/error/sql-error.js","webpack:///./node_modules/@squill/squill/dist/event/connection-event-emitter-collection.js","webpack:///./node_modules/@squill/squill/dist/event/connection-event-emitter.js","webpack:///./node_modules/@squill/squill/dist/event/delete-event.js","webpack:///./node_modules/@squill/squill/dist/event/event-base.js","webpack:///./node_modules/@squill/squill/dist/event/index.js","webpack:///./node_modules/@squill/squill/dist/event/insert-and-fetch-event.js","webpack:///./node_modules/@squill/squill/dist/event/insert-event.js","webpack:///./node_modules/@squill/squill/dist/event/insert-one-event.js","webpack:///./node_modules/@squill/squill/dist/event/insert-select-event.js","webpack:///./node_modules/@squill/squill/dist/event/pool-event-emitter.js","webpack:///./node_modules/@squill/squill/dist/event/replace-event.js","webpack:///./node_modules/@squill/squill/dist/event/replace-one-event.js","webpack:///./node_modules/@squill/squill/dist/event/replace-select-event.js","webpack:///./node_modules/@squill/squill/dist/event/update-and-fetch-event.js","webpack:///./node_modules/@squill/squill/dist/event/update-event.js","webpack:///./node_modules/@squill/squill/dist/execution/connection/component/index.js","webpack:///./node_modules/@squill/squill/dist/execution/connection/index.js","webpack:///./node_modules/@squill/squill/dist/execution/index.js","webpack:///./node_modules/@squill/squill/dist/execution/util/index.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation-delete/delete-one.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation-delete/delete-zero-or-one.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation-delete/delete.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation-delete/index.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation-insert-select/index.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation-insert-select/insert-ignore-select.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation-insert-select/insert-select.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation-insert-select/replace-select.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation-insert/index.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation-insert/insert-and-fetch.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation-insert/insert-ignore-many.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation-insert/insert-ignore-one.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation-insert/insert-many.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation-insert/insert-one.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation-insert/replace-many.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation-insert/replace-one.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation-update/index.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation-update/update-and-fetch-one-by-candidate-key.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation-update/update-and-fetch-one-by-primary-key.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation-update/update-and-fetch-one-by-super-key.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation-update/update-and-fetch-one-impl.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation-update/update-and-fetch-one.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation-update/update-and-fetch-zero-or-one-by-candidate-key.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation-update/update-and-fetch-zero-or-one-by-primary-key.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation-update/update-and-fetch-zero-or-one-by-super-key.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation-update/update-and-fetch-zero-or-one-impl.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation-update/update-and-fetch-zero-or-one.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation-update/update-one.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation-update/update-zero-or-one.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation-update/update.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/assert-exists.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/count.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/emulated-cursor/emulated-cursor-impl.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/emulated-cursor/emulated-cursor.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/emulated-cursor/index.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/exists.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/fetch-all-mapped.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/fetch-all-unmapped-flattened.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/fetch-all-unmapped.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/fetch-all.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/fetch-one-or-undefined.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/fetch-one-or.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/fetch-one.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/fetch-value-array.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/fetch-value-or-undefined.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/fetch-value-or.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/fetch-value.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/impl/ensure-one-or.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/impl/ensure-one.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/impl/exists-impl.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/impl/fetch-all-impl.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/impl/fetch-all-mapped-impl.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/impl/fetch-all-unmapped-flattened-impl.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/impl/fetch-all-unmapped-impl.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/impl/fetch-one-impl.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/impl/fetch-one-or-impl.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/impl/fetch-value-array-impl.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/impl/fetch-value-impl.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/impl/fetch-value-or-impl.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/impl/index.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/impl/try-set-limit-2.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/paginate/apply-paginate-args.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/paginate/index.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/paginate/paginate-args.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/paginate/paginate.js","webpack:///./node_modules/@squill/squill/dist/execution/util/operation/paginate/remove-paginate-args.js","webpack:///./node_modules/@squill/squill/dist/execution/util/predicate/can-flatten-unmapped-row.js","webpack:///./node_modules/@squill/squill/dist/execution/util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/expr-column/expr-column-impl.js","webpack:///./node_modules/@squill/squill/dist/expr-column/index.js","webpack:///./node_modules/@squill/squill/dist/expr-column/util/index.js","webpack:///./node_modules/@squill/squill/dist/expr-column/util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/expr-column/util/predicate/is-expr-column.js","webpack:///./node_modules/@squill/squill/dist/expr-library/aggregate-factory/index.js","webpack:///./node_modules/@squill/squill/dist/expr-library/aggregate-factory/make-aggregate-operator-0.js","webpack:///./node_modules/@squill/squill/dist/expr-library/aggregate-factory/make-aggregate-operator-1.js","webpack:///./node_modules/@squill/squill/dist/expr-library/aggregate-factory/make-aggregate-operator-2.js","webpack:///./node_modules/@squill/squill/dist/expr-library/aggregate-factory/make-aggregate-operator-3.js","webpack:///./node_modules/@squill/squill/dist/expr-library/aggregate/count-all.js","webpack:///./node_modules/@squill/squill/dist/expr-library/aggregate/count-expr.js","webpack:///./node_modules/@squill/squill/dist/expr-library/aggregate/index.js","webpack:///./node_modules/@squill/squill/dist/expr-library/assert/index.js","webpack:///./node_modules/@squill/squill/dist/expr-library/assert/throw-if-null.js","webpack:///./node_modules/@squill/squill/dist/expr-library/cast/bigint-signed-literal.js","webpack:///./node_modules/@squill/squill/dist/expr-library/cast/decimal-literal.js","webpack:///./node_modules/@squill/squill/dist/expr-library/cast/index.js","webpack:///./node_modules/@squill/squill/dist/expr-library/cast/unsafe-cast-as-bigint-signed.js","webpack:///./node_modules/@squill/squill/dist/expr-library/cast/unsafe-cast-as-binary.js","webpack:///./node_modules/@squill/squill/dist/expr-library/cast/unsafe-cast-as-decimal.js","webpack:///./node_modules/@squill/squill/dist/expr-library/cast/unsafe-cast-as-double.js","webpack:///./node_modules/@squill/squill/dist/expr-library/cast/unsafe-cast-as-json.js","webpack:///./node_modules/@squill/squill/dist/expr-library/cast/unsafe-cast-as-var-char.js","webpack:///./node_modules/@squill/squill/dist/expr-library/comparison/between.js","webpack:///./node_modules/@squill/squill/dist/expr-library/comparison/greatest.js","webpack:///./node_modules/@squill/squill/dist/expr-library/comparison/gt-eq.js","webpack:///./node_modules/@squill/squill/dist/expr-library/comparison/gt.js","webpack:///./node_modules/@squill/squill/dist/expr-library/comparison/index.js","webpack:///./node_modules/@squill/squill/dist/expr-library/comparison/least.js","webpack:///./node_modules/@squill/squill/dist/expr-library/comparison/lt-eq.js","webpack:///./node_modules/@squill/squill/dist/expr-library/comparison/lt.js","webpack:///./node_modules/@squill/squill/dist/expr-library/comparison/not-between.js","webpack:///./node_modules/@squill/squill/dist/expr-library/control-flow/case-condition/case-condition-builder-impl.js","webpack:///./node_modules/@squill/squill/dist/expr-library/control-flow/case-condition/case-condition.js","webpack:///./node_modules/@squill/squill/dist/expr-library/control-flow/case-condition/index.js","webpack:///./node_modules/@squill/squill/dist/expr-library/control-flow/case-condition/uninitialized-case-condition-builder-impl.js","webpack:///./node_modules/@squill/squill/dist/expr-library/control-flow/case-value/case-value-builder-impl.js","webpack:///./node_modules/@squill/squill/dist/expr-library/control-flow/case-value/case-value.js","webpack:///./node_modules/@squill/squill/dist/expr-library/control-flow/case-value/index.js","webpack:///./node_modules/@squill/squill/dist/expr-library/control-flow/case-value/uninitialized-case-value-builder-impl.js","webpack:///./node_modules/@squill/squill/dist/expr-library/control-flow/case.js","webpack:///./node_modules/@squill/squill/dist/expr-library/control-flow/coalesce.js","webpack:///./node_modules/@squill/squill/dist/expr-library/control-flow/if-is-null.js","webpack:///./node_modules/@squill/squill/dist/expr-library/control-flow/if-null.js","webpack:///./node_modules/@squill/squill/dist/expr-library/control-flow/if.js","webpack:///./node_modules/@squill/squill/dist/expr-library/control-flow/index.js","webpack:///./node_modules/@squill/squill/dist/expr-library/control-flow/null-if.js","webpack:///./node_modules/@squill/squill/dist/expr-library/custom-factory/index.js","webpack:///./node_modules/@squill/squill/dist/expr-library/custom-factory/make-custom-operator-0.js","webpack:///./node_modules/@squill/squill/dist/expr-library/custom-factory/make-custom-operator-1.js","webpack:///./node_modules/@squill/squill/dist/expr-library/date-time/current-date.js","webpack:///./node_modules/@squill/squill/dist/expr-library/date-time/current-timestamp.js","webpack:///./node_modules/@squill/squill/dist/expr-library/date-time/extract.js","webpack:///./node_modules/@squill/squill/dist/expr-library/date-time/index.js","webpack:///./node_modules/@squill/squill/dist/expr-library/date-time/last-day.js","webpack:///./node_modules/@squill/squill/dist/expr-library/date-time/timestamp-add.js","webpack:///./node_modules/@squill/squill/dist/expr-library/date-time/timestamp-diff.js","webpack:///./node_modules/@squill/squill/dist/expr-library/date-time/unix-timestamp-now.js","webpack:///./node_modules/@squill/squill/dist/expr-library/date-time/utc-string-to-timestamp.js","webpack:///./node_modules/@squill/squill/dist/expr-library/decimal/abs.js","webpack:///./node_modules/@squill/squill/dist/expr-library/decimal/add.js","webpack:///./node_modules/@squill/squill/dist/expr-library/decimal/aggregate/avg.js","webpack:///./node_modules/@squill/squill/dist/expr-library/decimal/aggregate/index.js","webpack:///./node_modules/@squill/squill/dist/expr-library/decimal/aggregate/max.js","webpack:///./node_modules/@squill/squill/dist/expr-library/decimal/aggregate/min.js","webpack:///./node_modules/@squill/squill/dist/expr-library/decimal/aggregate/sum.js","webpack:///./node_modules/@squill/squill/dist/expr-library/decimal/ceiling.js","webpack:///./node_modules/@squill/squill/dist/expr-library/decimal/decimal-mapper.js","webpack:///./node_modules/@squill/squill/dist/expr-library/decimal/exp.js","webpack:///./node_modules/@squill/squill/dist/expr-library/decimal/floor.js","webpack:///./node_modules/@squill/squill/dist/expr-library/decimal/fractional-div.js","webpack:///./node_modules/@squill/squill/dist/expr-library/decimal/index.js","webpack:///./node_modules/@squill/squill/dist/expr-library/decimal/ln.js","webpack:///./node_modules/@squill/squill/dist/expr-library/decimal/log.js","webpack:///./node_modules/@squill/squill/dist/expr-library/decimal/log10.js","webpack:///./node_modules/@squill/squill/dist/expr-library/decimal/log2.js","webpack:///./node_modules/@squill/squill/dist/expr-library/decimal/mul.js","webpack:///./node_modules/@squill/squill/dist/expr-library/decimal/neg.js","webpack:///./node_modules/@squill/squill/dist/expr-library/decimal/power.js","webpack:///./node_modules/@squill/squill/dist/expr-library/decimal/random.js","webpack:///./node_modules/@squill/squill/dist/expr-library/decimal/sign.js","webpack:///./node_modules/@squill/squill/dist/expr-library/decimal/sqrt.js","webpack:///./node_modules/@squill/squill/dist/expr-library/decimal/sub.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/abs.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/acos.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/add.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/aggregate/avg.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/aggregate/index.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/aggregate/max.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/aggregate/min.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/aggregate/stddev-pop.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/aggregate/stddev-samp.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/aggregate/sum.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/aggregate/var-pop.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/aggregate/var-samp.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/asin.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/atan.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/atan2.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/cbrt.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/ceiling.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/cos.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/cot.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/degrees.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/exp.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/floor.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/fractional-div.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/fractional-remainder.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/index.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/ln.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/log.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/log10.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/log2.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/mul.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/neg.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/pi.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/power.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/radians.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/random.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/sign.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/sin.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/sqrt.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/sub.js","webpack:///./node_modules/@squill/squill/dist/expr-library/double/tan.js","webpack:///./node_modules/@squill/squill/dist/expr-library/equation/eq-primary-key.js","webpack:///./node_modules/@squill/squill/dist/expr-library/equation/eq.js","webpack:///./node_modules/@squill/squill/dist/expr-library/equation/in-array.js","webpack:///./node_modules/@squill/squill/dist/expr-library/equation/in-query.js","webpack:///./node_modules/@squill/squill/dist/expr-library/equation/index.js","webpack:///./node_modules/@squill/squill/dist/expr-library/equation/not-eq.js","webpack:///./node_modules/@squill/squill/dist/expr-library/equation/not-in-array.js","webpack:///./node_modules/@squill/squill/dist/expr-library/equation/not-in-query.js","webpack:///./node_modules/@squill/squill/dist/expr-library/factory/index.js","webpack:///./node_modules/@squill/squill/dist/expr-library/factory/make-any-operator-1.js","webpack:///./node_modules/@squill/squill/dist/expr-library/factory/make-chainable-decimal-operator.js","webpack:///./node_modules/@squill/squill/dist/expr-library/factory/make-chainable-operator.js","webpack:///./node_modules/@squill/squill/dist/expr-library/factory/make-comparison-1-to-n.js","webpack:///./node_modules/@squill/squill/dist/expr-library/factory/make-comparison-2-to-n.js","webpack:///./node_modules/@squill/squill/dist/expr-library/factory/make-comparison-2.js","webpack:///./node_modules/@squill/squill/dist/expr-library/factory/make-comparison-3.js","webpack:///./node_modules/@squill/squill/dist/expr-library/factory/make-comparison-projection-2-to-n.js","webpack:///./node_modules/@squill/squill/dist/expr-library/factory/make-equation-1-to-n.js","webpack:///./node_modules/@squill/squill/dist/expr-library/factory/make-equation-2-to-n.js","webpack:///./node_modules/@squill/squill/dist/expr-library/factory/make-equation-2.js","webpack:///./node_modules/@squill/squill/dist/expr-library/factory/make-null-safe-comparison-1.js","webpack:///./node_modules/@squill/squill/dist/expr-library/factory/make-null-safe-comparison-2.js","webpack:///./node_modules/@squill/squill/dist/expr-library/factory/make-null-safe-equation-1.js","webpack:///./node_modules/@squill/squill/dist/expr-library/factory/make-null-safe-equation-2.js","webpack:///./node_modules/@squill/squill/dist/expr-library/factory/make-operator-0.js","webpack:///./node_modules/@squill/squill/dist/expr-library/factory/make-operator-1-double-elimination.js","webpack:///./node_modules/@squill/squill/dist/expr-library/factory/make-operator-1-idempotent.js","webpack:///./node_modules/@squill/squill/dist/expr-library/factory/make-operator-1-to-n.js","webpack:///./node_modules/@squill/squill/dist/expr-library/factory/make-operator-1.js","webpack:///./node_modules/@squill/squill/dist/expr-library/factory/make-operator-2-to-n.js","webpack:///./node_modules/@squill/squill/dist/expr-library/factory/make-operator-2.js","webpack:///./node_modules/@squill/squill/dist/expr-library/factory/make-operator-3.js","webpack:///./node_modules/@squill/squill/dist/expr-library/index.js","webpack:///./node_modules/@squill/squill/dist/expr-library/information/current-schema.js","webpack:///./node_modules/@squill/squill/dist/expr-library/information/current-user.js","webpack:///./node_modules/@squill/squill/dist/expr-library/information/index.js","webpack:///./node_modules/@squill/squill/dist/expr-library/integer/abs.js","webpack:///./node_modules/@squill/squill/dist/expr-library/integer/add.js","webpack:///./node_modules/@squill/squill/dist/expr-library/integer/aggregate/avg.js","webpack:///./node_modules/@squill/squill/dist/expr-library/integer/aggregate/index.js","webpack:///./node_modules/@squill/squill/dist/expr-library/integer/aggregate/max.js","webpack:///./node_modules/@squill/squill/dist/expr-library/integer/aggregate/min.js","webpack:///./node_modules/@squill/squill/dist/expr-library/integer/aggregate/sum-as-bigint.js","webpack:///./node_modules/@squill/squill/dist/expr-library/integer/aggregate/sum-as-decimal.js","webpack:///./node_modules/@squill/squill/dist/expr-library/integer/bitwise/bitwise-and.js","webpack:///./node_modules/@squill/squill/dist/expr-library/integer/bitwise/bitwise-left-shift.js","webpack:///./node_modules/@squill/squill/dist/expr-library/integer/bitwise/bitwise-not.js","webpack:///./node_modules/@squill/squill/dist/expr-library/integer/bitwise/bitwise-or.js","webpack:///./node_modules/@squill/squill/dist/expr-library/integer/bitwise/bitwise-right-shift.js","webpack:///./node_modules/@squill/squill/dist/expr-library/integer/bitwise/bitwise-xor.js","webpack:///./node_modules/@squill/squill/dist/expr-library/integer/bitwise/index.js","webpack:///./node_modules/@squill/squill/dist/expr-library/integer/index.js","webpack:///./node_modules/@squill/squill/dist/expr-library/integer/integer-div.js","webpack:///./node_modules/@squill/squill/dist/expr-library/integer/integer-remainder.js","webpack:///./node_modules/@squill/squill/dist/expr-library/integer/mul.js","webpack:///./node_modules/@squill/squill/dist/expr-library/integer/neg.js","webpack:///./node_modules/@squill/squill/dist/expr-library/integer/random-bigint-signed.js","webpack:///./node_modules/@squill/squill/dist/expr-library/integer/sign.js","webpack:///./node_modules/@squill/squill/dist/expr-library/integer/sub.js","webpack:///./node_modules/@squill/squill/dist/expr-library/logical-3/and-3.js","webpack:///./node_modules/@squill/squill/dist/expr-library/logical-3/index.js","webpack:///./node_modules/@squill/squill/dist/expr-library/logical-3/is-false.js","webpack:///./node_modules/@squill/squill/dist/expr-library/logical-3/is-not-false.js","webpack:///./node_modules/@squill/squill/dist/expr-library/logical-3/is-not-true.js","webpack:///./node_modules/@squill/squill/dist/expr-library/logical-3/is-not-unknown.js","webpack:///./node_modules/@squill/squill/dist/expr-library/logical-3/is-true.js","webpack:///./node_modules/@squill/squill/dist/expr-library/logical-3/is-unknown.js","webpack:///./node_modules/@squill/squill/dist/expr-library/logical-3/not-3.js","webpack:///./node_modules/@squill/squill/dist/expr-library/logical-3/or-3.js","webpack:///./node_modules/@squill/squill/dist/expr-library/logical-3/xor-3.js","webpack:///./node_modules/@squill/squill/dist/expr-library/logical/and.js","webpack:///./node_modules/@squill/squill/dist/expr-library/logical/index.js","webpack:///./node_modules/@squill/squill/dist/expr-library/logical/is-not-null-and.js","webpack:///./node_modules/@squill/squill/dist/expr-library/logical/is-null-or.js","webpack:///./node_modules/@squill/squill/dist/expr-library/logical/not.js","webpack:///./node_modules/@squill/squill/dist/expr-library/logical/or.js","webpack:///./node_modules/@squill/squill/dist/expr-library/logical/xor.js","webpack:///./node_modules/@squill/squill/dist/expr-library/null-safe-equation/eq-candidate-key-of-table/assert-null-safe-comparable-to-candidate-keys-of-table.js","webpack:///./node_modules/@squill/squill/dist/expr-library/null-safe-equation/eq-candidate-key-of-table/eq-candidate-key-of-table.js","webpack:///./node_modules/@squill/squill/dist/expr-library/null-safe-equation/eq-candidate-key-of-table/index.js","webpack:///./node_modules/@squill/squill/dist/expr-library/null-safe-equation/eq-candidate-key.js","webpack:///./node_modules/@squill/squill/dist/expr-library/null-safe-equation/eq-columns.js","webpack:///./node_modules/@squill/squill/dist/expr-library/null-safe-equation/eq-primary-key-of-table.js","webpack:///./node_modules/@squill/squill/dist/expr-library/null-safe-equation/eq-super-key.js","webpack:///./node_modules/@squill/squill/dist/expr-library/null-safe-equation/index.js","webpack:///./node_modules/@squill/squill/dist/expr-library/null-safe-equation/is-not-null.js","webpack:///./node_modules/@squill/squill/dist/expr-library/null-safe-equation/is-null.js","webpack:///./node_modules/@squill/squill/dist/expr-library/null-safe-equation/not-null-safe-eq.js","webpack:///./node_modules/@squill/squill/dist/expr-library/null-safe-equation/null-safe-eq.js","webpack:///./node_modules/@squill/squill/dist/expr-library/string/aggregate/group-concat.js","webpack:///./node_modules/@squill/squill/dist/expr-library/string/aggregate/index.js","webpack:///./node_modules/@squill/squill/dist/expr-library/string/ascii.js","webpack:///./node_modules/@squill/squill/dist/expr-library/string/bin.js","webpack:///./node_modules/@squill/squill/dist/expr-library/string/bit-length.js","webpack:///./node_modules/@squill/squill/dist/expr-library/string/char-length.js","webpack:///./node_modules/@squill/squill/dist/expr-library/string/concat-ws.js","webpack:///./node_modules/@squill/squill/dist/expr-library/string/concat.js","webpack:///./node_modules/@squill/squill/dist/expr-library/string/escape-like-pattern.js","webpack:///./node_modules/@squill/squill/dist/expr-library/string/from-base64.js","webpack:///./node_modules/@squill/squill/dist/expr-library/string/hex.js","webpack:///./node_modules/@squill/squill/dist/expr-library/string/in-str.js","webpack:///./node_modules/@squill/squill/dist/expr-library/string/index.js","webpack:///./node_modules/@squill/squill/dist/expr-library/string/l-pad.js","webpack:///./node_modules/@squill/squill/dist/expr-library/string/l-trim.js","webpack:///./node_modules/@squill/squill/dist/expr-library/string/like.js","webpack:///./node_modules/@squill/squill/dist/expr-library/string/lower.js","webpack:///./node_modules/@squill/squill/dist/expr-library/string/not-like.js","webpack:///./node_modules/@squill/squill/dist/expr-library/string/null-safe-concat.js","webpack:///./node_modules/@squill/squill/dist/expr-library/string/octet-length.js","webpack:///./node_modules/@squill/squill/dist/expr-library/string/position.js","webpack:///./node_modules/@squill/squill/dist/expr-library/string/r-pad.js","webpack:///./node_modules/@squill/squill/dist/expr-library/string/r-trim.js","webpack:///./node_modules/@squill/squill/dist/expr-library/string/repeat.js","webpack:///./node_modules/@squill/squill/dist/expr-library/string/replace.js","webpack:///./node_modules/@squill/squill/dist/expr-library/string/reverse.js","webpack:///./node_modules/@squill/squill/dist/expr-library/string/to-base64.js","webpack:///./node_modules/@squill/squill/dist/expr-library/string/trim.js","webpack:///./node_modules/@squill/squill/dist/expr-library/string/unhex.js","webpack:///./node_modules/@squill/squill/dist/expr-library/string/upper.js","webpack:///./node_modules/@squill/squill/dist/expr-library/subquery/exists.js","webpack:///./node_modules/@squill/squill/dist/expr-library/subquery/index.js","webpack:///./node_modules/@squill/squill/dist/expr-select-item/index.js","webpack:///./node_modules/@squill/squill/dist/expr-select-item/util/index.js","webpack:///./node_modules/@squill/squill/dist/expr-select-item/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/expr-select-item/util/operation/with-type.js","webpack:///./node_modules/@squill/squill/dist/expr-select-item/util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/expr-select-item/util/predicate/is-expr-select-item.js","webpack:///./node_modules/@squill/squill/dist/expr/expr-impl.js","webpack:///./node_modules/@squill/squill/dist/expr/index.js","webpack:///./node_modules/@squill/squill/dist/expr/util/constructor/from-built-in-expr.js","webpack:///./node_modules/@squill/squill/dist/expr/util/constructor/index.js","webpack:///./node_modules/@squill/squill/dist/expr/util/index.js","webpack:///./node_modules/@squill/squill/dist/expr/util/operation/aggregate-intersect.js","webpack:///./node_modules/@squill/squill/dist/expr/util/operation/as.js","webpack:///./node_modules/@squill/squill/dist/expr/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/expr/util/operation/intersect.js","webpack:///./node_modules/@squill/squill/dist/expr/util/operation/sort.js","webpack:///./node_modules/@squill/squill/dist/expr/util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/expr/util/predicate/is-expr.js","webpack:///./node_modules/@squill/squill/dist/formatter/Formatter.js","webpack:///./node_modules/@squill/squill/dist/formatter/Indentation.js","webpack:///./node_modules/@squill/squill/dist/formatter/InlineBlock.js","webpack:///./node_modules/@squill/squill/dist/formatter/Params.js","webpack:///./node_modules/@squill/squill/dist/formatter/SqlFormatter.js","webpack:///./node_modules/@squill/squill/dist/formatter/TokenType.js","webpack:///./node_modules/@squill/squill/dist/formatter/Tokenizer.js","webpack:///./node_modules/@squill/squill/dist/formatter/index.js","webpack:///./node_modules/@squill/squill/dist/from-clause/index.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/constructor/index.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/constructor/new-instance.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/index.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/operation/correlate.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/operation/cross-join.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/operation/from.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/operation/inner-join-using-candidate-key.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/operation/inner-join-using-primary-key.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/operation/inner-join.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/operation/left-join-using-candidate-key.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/operation/left-join-using-primary-key.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/operation/left-join.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/operation/require-nullable-outer-query-joins.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/operation/require-outer-query-joins-impl.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/operation/require-outer-query-joins.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/operation/where-eq-candidate-key.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/operation/where-eq-columns.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/operation/where-eq-inner-query-primary-key.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/operation/where-eq-outer-query-candidate-key.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/operation/where-eq-outer-query-primary-key.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/operation/where-eq-primary-key.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/operation/where-eq-super-key.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/operation/where-eq.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/operation/where-is-not-null.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/operation/where-is-null.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/operation/where-null-safe-eq.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/predicate/allowed-used-ref.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/predicate/assert-after-from-clause.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/predicate/assert-before-from-clause.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/predicate/assert-no-used-ref.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/predicate/assert-not-in-current-joins.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/predicate/assert-not-in-outer-query-joins.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/predicate/assert-not-lateral.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/predicate/assert-valid-current-join-base.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/predicate/assert-valid-outer-query-joins.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/predicate/is-after-from-clause.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/predicate/is-before-from-clause.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/predicate/is-from-clause.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/query/index.js","webpack:///./node_modules/@squill/squill/dist/from-clause/util/query/outer-query-table-alias.js","webpack:///./node_modules/@squill/squill/dist/group-by-clause/index.js","webpack:///./node_modules/@squill/squill/dist/group-by-clause/util/index.js","webpack:///./node_modules/@squill/squill/dist/group-by-clause/util/operation/group-by.js","webpack:///./node_modules/@squill/squill/dist/group-by-clause/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/group-by-clause/util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/group-by-clause/util/predicate/is-non-empty.js","webpack:///./node_modules/@squill/squill/dist/group-by-clause/util/query/allowed-used-ref.js","webpack:///./node_modules/@squill/squill/dist/group-by-clause/util/query/index.js","webpack:///./node_modules/@squill/squill/dist/having-clause/index.js","webpack:///./node_modules/@squill/squill/dist/having-clause/util/index.js","webpack:///./node_modules/@squill/squill/dist/having-clause/util/operation/having.js","webpack:///./node_modules/@squill/squill/dist/having-clause/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/having-clause/util/query/allowed-non-aggregate-used-ref.js","webpack:///./node_modules/@squill/squill/dist/having-clause/util/query/allowed-used-ref.js","webpack:///./node_modules/@squill/squill/dist/having-clause/util/query/index.js","webpack:///./node_modules/@squill/squill/dist/index.js","webpack:///./node_modules/@squill/squill/dist/insert-select/index.js","webpack:///./node_modules/@squill/squill/dist/insert-select/util/constructor/index.js","webpack:///./node_modules/@squill/squill/dist/insert-select/util/constructor/insert-select.js","webpack:///./node_modules/@squill/squill/dist/insert-select/util/index.js","webpack:///./node_modules/@squill/squill/dist/insert-select/util/operation/clean-insert-select-column.js","webpack:///./node_modules/@squill/squill/dist/insert-select/util/operation/clean-insert-select-row.js","webpack:///./node_modules/@squill/squill/dist/insert-select/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/insert/index.js","webpack:///./node_modules/@squill/squill/dist/insert/util/index.js","webpack:///./node_modules/@squill/squill/dist/insert/util/operation/clean-insert-column.js","webpack:///./node_modules/@squill/squill/dist/insert/util/operation/clean-insert-row.js","webpack:///./node_modules/@squill/squill/dist/insert/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/isolation-level.js","webpack:///./node_modules/@squill/squill/dist/join-map/index.js","webpack:///./node_modules/@squill/squill/dist/join-map/util/constructor/from-join-array.js","webpack:///./node_modules/@squill/squill/dist/join-map/util/constructor/index.js","webpack:///./node_modules/@squill/squill/dist/join-map/util/index.js","webpack:///./node_modules/@squill/squill/dist/join/array-util/index.js","webpack:///./node_modules/@squill/squill/dist/join/array-util/operation/append.js","webpack:///./node_modules/@squill/squill/dist/join/array-util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/join/array-util/operation/replace-column.js","webpack:///./node_modules/@squill/squill/dist/join/array-util/query/extract-with-candidate-key.js","webpack:///./node_modules/@squill/squill/dist/join/array-util/query/extract-with-null-safe-comparable-primary-key.js","webpack:///./node_modules/@squill/squill/dist/join/array-util/query/extract-with-primary-key.js","webpack:///./node_modules/@squill/squill/dist/join/array-util/query/index.js","webpack:///./node_modules/@squill/squill/dist/join/index.js","webpack:///./node_modules/@squill/squill/dist/join/join-impl.js","webpack:///./node_modules/@squill/squill/dist/join/join.js","webpack:///./node_modules/@squill/squill/dist/join/util/constructor/from-aliased-table.js","webpack:///./node_modules/@squill/squill/dist/join/util/constructor/index.js","webpack:///./node_modules/@squill/squill/dist/join/util/index.js","webpack:///./node_modules/@squill/squill/dist/join/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/join/util/operation/replace-column.js","webpack:///./node_modules/@squill/squill/dist/key/array-util/index.js","webpack:///./node_modules/@squill/squill/dist/key/array-util/operation/append.js","webpack:///./node_modules/@squill/squill/dist/key/array-util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/key/array-util/operation/remove-duplicates.js","webpack:///./node_modules/@squill/squill/dist/key/array-util/predicate/has-key.js","webpack:///./node_modules/@squill/squill/dist/key/array-util/predicate/has-sub-key.js","webpack:///./node_modules/@squill/squill/dist/key/array-util/predicate/has-super-key.js","webpack:///./node_modules/@squill/squill/dist/key/array-util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/key/array-util/predicate/is-disjoint.js","webpack:///./node_modules/@squill/squill/dist/key/array-util/predicate/is-key-array.js","webpack:///./node_modules/@squill/squill/dist/key/array-util/query/find-sub-key.js","webpack:///./node_modules/@squill/squill/dist/key/array-util/query/find-super-key.js","webpack:///./node_modules/@squill/squill/dist/key/array-util/query/index.js","webpack:///./node_modules/@squill/squill/dist/key/index.js","webpack:///./node_modules/@squill/squill/dist/key/util/constructor/from-column-array.js","webpack:///./node_modules/@squill/squill/dist/key/util/constructor/from-column.js","webpack:///./node_modules/@squill/squill/dist/key/util/constructor/index.js","webpack:///./node_modules/@squill/squill/dist/key/util/index.js","webpack:///./node_modules/@squill/squill/dist/key/util/operation/append.js","webpack:///./node_modules/@squill/squill/dist/key/util/operation/concat.js","webpack:///./node_modules/@squill/squill/dist/key/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/key/util/operation/remove-duplicates.js","webpack:///./node_modules/@squill/squill/dist/key/util/operation/remove.js","webpack:///./node_modules/@squill/squill/dist/key/util/operation/subtract.js","webpack:///./node_modules/@squill/squill/dist/key/util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/key/util/predicate/is-equal.js","webpack:///./node_modules/@squill/squill/dist/key/util/predicate/is-key.js","webpack:///./node_modules/@squill/squill/dist/key/util/predicate/is-sub-key.js","webpack:///./node_modules/@squill/squill/dist/limit-clause/index.js","webpack:///./node_modules/@squill/squill/dist/limit-clause/util/index.js","webpack:///./node_modules/@squill/squill/dist/limit-clause/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/limit-clause/util/operation/limit-bigint.js","webpack:///./node_modules/@squill/squill/dist/limit-clause/util/operation/limit-number.js","webpack:///./node_modules/@squill/squill/dist/limit-clause/util/operation/limit.js","webpack:///./node_modules/@squill/squill/dist/limit-clause/util/operation/offset-bigint.js","webpack:///./node_modules/@squill/squill/dist/limit-clause/util/operation/offset-number.js","webpack:///./node_modules/@squill/squill/dist/limit-clause/util/operation/offset.js","webpack:///./node_modules/@squill/squill/dist/map-delegate/index.js","webpack:///./node_modules/@squill/squill/dist/map-delegate/util/index.js","webpack:///./node_modules/@squill/squill/dist/map-delegate/util/operation/compose.js","webpack:///./node_modules/@squill/squill/dist/map-delegate/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/mapper-map/index.js","webpack:///./node_modules/@squill/squill/dist/mapper-map/util/index.js","webpack:///./node_modules/@squill/squill/dist/mapper-map/util/query/index.js","webpack:///./node_modules/@squill/squill/dist/mapper-map/util/query/nullable-key.js","webpack:///./node_modules/@squill/squill/dist/on-clause/index.js","webpack:///./node_modules/@squill/squill/dist/on-clause/util/index.js","webpack:///./node_modules/@squill/squill/dist/on-clause/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/on-clause/util/operation/on.js","webpack:///./node_modules/@squill/squill/dist/on-clause/util/predicate/assert-no-outer-query-used-ref.js","webpack:///./node_modules/@squill/squill/dist/on-clause/util/predicate/assert-valid-used-ref.js","webpack:///./node_modules/@squill/squill/dist/on-clause/util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/on-clause/util/query/allowed-used-ref.js","webpack:///./node_modules/@squill/squill/dist/on-clause/util/query/index.js","webpack:///./node_modules/@squill/squill/dist/operator-type.js","webpack:///./node_modules/@squill/squill/dist/order-by-clause/index.js","webpack:///./node_modules/@squill/squill/dist/order-by-clause/util/index.js","webpack:///./node_modules/@squill/squill/dist/order-by-clause/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/order-by-clause/util/operation/order-by.js","webpack:///./node_modules/@squill/squill/dist/order-by-clause/util/query/allowed-non-aggregate-used-ref.js","webpack:///./node_modules/@squill/squill/dist/order-by-clause/util/query/allowed-used-ref.js","webpack:///./node_modules/@squill/squill/dist/order-by-clause/util/query/index.js","webpack:///./node_modules/@squill/squill/dist/order/index.js","webpack:///./node_modules/@squill/squill/dist/order/util/constructor/from-raw-order.js","webpack:///./node_modules/@squill/squill/dist/order/util/constructor/index.js","webpack:///./node_modules/@squill/squill/dist/order/util/index.js","webpack:///./node_modules/@squill/squill/dist/order/util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/order/util/predicate/is-order.js","webpack:///./node_modules/@squill/squill/dist/order/util/predicate/is-sort-expr.js","webpack:///./node_modules/@squill/squill/dist/order/util/query/extract-sort-expr.js","webpack:///./node_modules/@squill/squill/dist/order/util/query/index.js","webpack:///./node_modules/@squill/squill/dist/partial-row/index.js","webpack:///./node_modules/@squill/squill/dist/partial-row/util/index.js","webpack:///./node_modules/@squill/squill/dist/partial-row/util/query/index.js","webpack:///./node_modules/@squill/squill/dist/partial-row/util/query/mapper.js","webpack:///./node_modules/@squill/squill/dist/primary-key/index.js","webpack:///./node_modules/@squill/squill/dist/primary-key/util/index.js","webpack:///./node_modules/@squill/squill/dist/primary-key/util/query/index.js","webpack:///./node_modules/@squill/squill/dist/primary-key/util/query/mapper.js","webpack:///./node_modules/@squill/squill/dist/promise-util/index.js","webpack:///./node_modules/@squill/squill/dist/promise-util/invoke-async-callback-safely.js","webpack:///./node_modules/@squill/squill/dist/query-base/index.js","webpack:///./node_modules/@squill/squill/dist/query-base/util/index.js","webpack:///./node_modules/@squill/squill/dist/query-base/util/operation/as.js","webpack:///./node_modules/@squill/squill/dist/query-base/util/operation/asc.js","webpack:///./node_modules/@squill/squill/dist/query-base/util/operation/coalesce.js","webpack:///./node_modules/@squill/squill/dist/query-base/util/operation/desc.js","webpack:///./node_modules/@squill/squill/dist/query-base/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/query-base/util/operation/sort.js","webpack:///./node_modules/@squill/squill/dist/query-base/util/operation/throw-if-null.js","webpack:///./node_modules/@squill/squill/dist/query-base/util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/query-base/util/predicate/is-after-from-clause.js","webpack:///./node_modules/@squill/squill/dist/query-base/util/predicate/is-after-select-clause.js","webpack:///./node_modules/@squill/squill/dist/query-base/util/predicate/is-before-compound-query-clause.js","webpack:///./node_modules/@squill/squill/dist/query-base/util/predicate/is-before-select-clause.js","webpack:///./node_modules/@squill/squill/dist/query-base/util/predicate/is-one-row.js","webpack:///./node_modules/@squill/squill/dist/query-base/util/predicate/is-one-select-item.js","webpack:///./node_modules/@squill/squill/dist/query-base/util/predicate/is-query.js","webpack:///./node_modules/@squill/squill/dist/query-base/util/predicate/is-zero-or-one-row-using-compound-query-limit.js","webpack:///./node_modules/@squill/squill/dist/query-base/util/predicate/is-zero-or-one-row-using-limit.js","webpack:///./node_modules/@squill/squill/dist/query-base/util/predicate/is-zero-or-one-row.js","webpack:///./node_modules/@squill/squill/dist/query-base/util/query/index.js","webpack:///./node_modules/@squill/squill/dist/query-base/util/query/mapper.js","webpack:///./node_modules/@squill/squill/dist/row/index.js","webpack:///./node_modules/@squill/squill/dist/row/util/index.js","webpack:///./node_modules/@squill/squill/dist/row/util/query/index.js","webpack:///./node_modules/@squill/squill/dist/row/util/query/mapper.js","webpack:///./node_modules/@squill/squill/dist/schema-validation/index.js","webpack:///./node_modules/@squill/squill/dist/schema-validation/schema-validation-error.js","webpack:///./node_modules/@squill/squill/dist/schema-validation/schema-validation-warning.js","webpack:///./node_modules/@squill/squill/dist/schema-validation/util/index.js","webpack:///./node_modules/@squill/squill/dist/schema-validation/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/schema-validation/util/operation/validate-column.js","webpack:///./node_modules/@squill/squill/dist/schema-validation/util/operation/validate-schema.js","webpack:///./node_modules/@squill/squill/dist/schema-validation/util/operation/validate-table.js","webpack:///./node_modules/@squill/squill/dist/select-clause/index.js","webpack:///./node_modules/@squill/squill/dist/select-clause/util/constructor/index.js","webpack:///./node_modules/@squill/squill/dist/select-clause/util/constructor/value-from-built-in-expr.js","webpack:///./node_modules/@squill/squill/dist/select-clause/util/index.js","webpack:///./node_modules/@squill/squill/dist/select-clause/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/select-clause/util/operation/left-compound.js","webpack:///./node_modules/@squill/squill/dist/select-clause/util/operation/select-value.js","webpack:///./node_modules/@squill/squill/dist/select-clause/util/operation/select.js","webpack:///./node_modules/@squill/squill/dist/select-clause/util/predicate/assert-valid-column-identifier.js","webpack:///./node_modules/@squill/squill/dist/select-clause/util/predicate/assert-valid-used-ref-aggregate.js","webpack:///./node_modules/@squill/squill/dist/select-clause/util/predicate/assert-valid-used-ref-non-aggregate.js","webpack:///./node_modules/@squill/squill/dist/select-clause/util/predicate/assert-valid-used-ref.js","webpack:///./node_modules/@squill/squill/dist/select-clause/util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/select-clause/util/query/allowed-non-aggregate-used-ref.js","webpack:///./node_modules/@squill/squill/dist/select-clause/util/query/allowed-used-ref.js","webpack:///./node_modules/@squill/squill/dist/select-clause/util/query/duplicate-column-alias.js","webpack:///./node_modules/@squill/squill/dist/select-clause/util/query/index.js","webpack:///./node_modules/@squill/squill/dist/select-item/index.js","webpack:///./node_modules/@squill/squill/dist/select-item/util/index.js","webpack:///./node_modules/@squill/squill/dist/select-item/util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/select-item/util/predicate/is-single-value-select-item.js","webpack:///./node_modules/@squill/squill/dist/select-item/util/query/column-alias.js","webpack:///./node_modules/@squill/squill/dist/select-item/util/query/index.js","webpack:///./node_modules/@squill/squill/dist/sort-direction/index.js","webpack:///./node_modules/@squill/squill/dist/sort-direction/sort-direction.js","webpack:///./node_modules/@squill/squill/dist/sort-direction/util/index.js","webpack:///./node_modules/@squill/squill/dist/sort-direction/util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/sort-direction/util/predicate/is-sort-direction.js","webpack:///./node_modules/@squill/squill/dist/sqlstring/index.js","webpack:///./node_modules/@squill/squill/dist/string-util/index.js","webpack:///./node_modules/@squill/squill/dist/string-util/zero-pad.js","webpack:///./node_modules/@squill/squill/dist/super-key/index.js","webpack:///./node_modules/@squill/squill/dist/super-key/util/index.js","webpack:///./node_modules/@squill/squill/dist/super-key/util/query/index.js","webpack:///./node_modules/@squill/squill/dist/super-key/util/query/mapper.js","webpack:///./node_modules/@squill/squill/dist/table-where/index.js","webpack:///./node_modules/@squill/squill/dist/table-where/table-where.js","webpack:///./node_modules/@squill/squill/dist/table/index.js","webpack:///./node_modules/@squill/squill/dist/table/table-impl.js","webpack:///./node_modules/@squill/squill/dist/table/util/constructor/from-table-alias.js","webpack:///./node_modules/@squill/squill/dist/table/util/constructor/from-table.js","webpack:///./node_modules/@squill/squill/dist/table/util/constructor/index.js","webpack:///./node_modules/@squill/squill/dist/table/util/execution/assert-exists.js","webpack:///./node_modules/@squill/squill/dist/table/util/execution/exists.js","webpack:///./node_modules/@squill/squill/dist/table/util/execution/fetch-one.js","webpack:///./node_modules/@squill/squill/dist/table/util/execution/fetch-value.js","webpack:///./node_modules/@squill/squill/dist/table/util/execution/index.js","webpack:///./node_modules/@squill/squill/dist/table/util/index.js","webpack:///./node_modules/@squill/squill/dist/table/util/operation/add-all-mutable.js","webpack:///./node_modules/@squill/squill/dist/table/util/operation/add-candidate-key.js","webpack:///./node_modules/@squill/squill/dist/table/util/operation/add-columns-from-field-array.js","webpack:///./node_modules/@squill/squill/dist/table/util/operation/add-columns-from-mapper-map.js","webpack:///./node_modules/@squill/squill/dist/table/util/operation/add-columns.js","webpack:///./node_modules/@squill/squill/dist/table/util/operation/add-explicit-default-value.js","webpack:///./node_modules/@squill/squill/dist/table/util/operation/add-generated.js","webpack:///./node_modules/@squill/squill/dist/table/util/operation/add-mutable.js","webpack:///./node_modules/@squill/squill/dist/table/util/operation/as.js","webpack:///./node_modules/@squill/squill/dist/table/util/operation/disable-delete.js","webpack:///./node_modules/@squill/squill/dist/table/util/operation/disable-insert.js","webpack:///./node_modules/@squill/squill/dist/table/util/operation/enable-explicit-auto-increment-value.js","webpack:///./node_modules/@squill/squill/dist/table/util/operation/enable-insert.js","webpack:///./node_modules/@squill/squill/dist/table/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/table/util/operation/pick-columns.js","webpack:///./node_modules/@squill/squill/dist/table/util/operation/remove-all-mutable.js","webpack:///./node_modules/@squill/squill/dist/table/util/operation/remove-explicit-default-value.js","webpack:///./node_modules/@squill/squill/dist/table/util/operation/remove-generated.js","webpack:///./node_modules/@squill/squill/dist/table/util/operation/remove-mutable.js","webpack:///./node_modules/@squill/squill/dist/table/util/operation/set-auto-increment.js","webpack:///./node_modules/@squill/squill/dist/table/util/operation/set-id.js","webpack:///./node_modules/@squill/squill/dist/table/util/operation/set-primary-key.js","webpack:///./node_modules/@squill/squill/dist/table/util/operation/set-schema-name.js","webpack:///./node_modules/@squill/squill/dist/table/util/operation/set-table-alias.js","webpack:///./node_modules/@squill/squill/dist/table/util/predicate/assert-delete-enabled.js","webpack:///./node_modules/@squill/squill/dist/table/util/predicate/assert-has-candidate-key.js","webpack:///./node_modules/@squill/squill/dist/table/util/predicate/assert-has-column-identifiers.js","webpack:///./node_modules/@squill/squill/dist/table/util/predicate/assert-has-null-safe-comparable-primary-key.js","webpack:///./node_modules/@squill/squill/dist/table/util/predicate/assert-insert-enabled.js","webpack:///./node_modules/@squill/squill/dist/table/util/predicate/has-null-safe-comparable-primary-key.js","webpack:///./node_modules/@squill/squill/dist/table/util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/table/util/predicate/is-table.js","webpack:///./node_modules/@squill/squill/dist/table/util/query/column-alias.js","webpack:///./node_modules/@squill/squill/dist/table/util/query/explicit-auto-increment.js","webpack:///./node_modules/@squill/squill/dist/table/util/query/extract-candidate-keys-with-column-alias-in-table.js","webpack:///./node_modules/@squill/squill/dist/table/util/query/index.js","webpack:///./node_modules/@squill/squill/dist/table/util/query/insertable-column-alias.js","webpack:///./node_modules/@squill/squill/dist/table/util/query/optional-column-alias.js","webpack:///./node_modules/@squill/squill/dist/table/util/query/required-column-alias.js","webpack:///./node_modules/@squill/squill/dist/table/util/query/try-get-schema-name.js","webpack:///./node_modules/@squill/squill/dist/transaction-access-mode.js","webpack:///./node_modules/@squill/squill/dist/tuple-util/index.js","webpack:///./node_modules/@squill/squill/dist/type-hint.js","webpack:///./node_modules/@squill/squill/dist/type-map/index.js","webpack:///./node_modules/@squill/squill/dist/type-map/util/index.js","webpack:///./node_modules/@squill/squill/dist/type-ref/index.js","webpack:///./node_modules/@squill/squill/dist/type-ref/util/index.js","webpack:///./node_modules/@squill/squill/dist/type-util/assert-same-own-enumerable-keys.js","webpack:///./node_modules/@squill/squill/dist/type-util/index.js","webpack:///./node_modules/@squill/squill/dist/type-util/is-object-with-own-enumerable-keys.js","webpack:///./node_modules/@squill/squill/dist/type-util/omit-own-enumerable.js","webpack:///./node_modules/@squill/squill/dist/type-util/pick-own-enumerable.js","webpack:///./node_modules/@squill/squill/dist/unified-query/convenience.js","webpack:///./node_modules/@squill/squill/dist/unified-query/index.js","webpack:///./node_modules/@squill/squill/dist/unified-query/query-impl.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/constructor/index.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/constructor/new-instance.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/index.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/compound-query-limit/compound-query-limit.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/compound-query-limit/index.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/compound-query-offset/compound-query-offset.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/compound-query-offset/index.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/compound-query-order-by.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/compound-query.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/correlate.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/cross-join.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/distinct.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/from.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/group-by.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/having.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/inner-join-using-candidate-key.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/inner-join-using-primary-key.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/inner-join.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/left-join-using-candidate-key.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/left-join-using-primary-key.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/left-join.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/limit/index.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/limit/limit.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/map/index.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/map/map-compose.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/map/map-initial.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/map/map.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/offset/index.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/offset/offset.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/order-by.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/require-nullable-outer-query-joins.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/require-outer-query-joins.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/select-value.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/select.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/where-eq-candidate-key.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/where-eq-columns.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/where-eq-inner-query-primary-key.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/where-eq-outer-query-primary-key.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/where-eq-primary-key.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/where-eq-super-key.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/where-eq.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/where-is-not-null.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/where-is-null.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/where-null-safe-eq.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/operation/where.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/predicate/assert-valid-current-join.js","webpack:///./node_modules/@squill/squill/dist/unified-query/util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/update/index.js","webpack:///./node_modules/@squill/squill/dist/update/util/index.js","webpack:///./node_modules/@squill/squill/dist/update/util/operation/clean-assignment-map.js","webpack:///./node_modules/@squill/squill/dist/update/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/update/util/operation/set.js","webpack:///./node_modules/@squill/squill/dist/used-ref/index.js","webpack:///./node_modules/@squill/squill/dist/used-ref/util/constructor/from-column-map.js","webpack:///./node_modules/@squill/squill/dist/used-ref/util/constructor/from-column-ref.js","webpack:///./node_modules/@squill/squill/dist/used-ref/util/constructor/from-column.js","webpack:///./node_modules/@squill/squill/dist/used-ref/util/constructor/from-from-clause.js","webpack:///./node_modules/@squill/squill/dist/used-ref/util/constructor/from-join-array.js","webpack:///./node_modules/@squill/squill/dist/used-ref/util/constructor/index.js","webpack:///./node_modules/@squill/squill/dist/used-ref/util/index.js","webpack:///./node_modules/@squill/squill/dist/used-ref/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/used-ref/util/operation/intersect.js","webpack:///./node_modules/@squill/squill/dist/used-ref/util/predicate/assert-allowed.js","webpack:///./node_modules/@squill/squill/dist/used-ref/util/predicate/assert-empty.js","webpack:///./node_modules/@squill/squill/dist/used-ref/util/predicate/index.js","webpack:///./node_modules/@squill/squill/dist/used-ref/util/predicate/is-used-ref.js","webpack:///./node_modules/@squill/squill/dist/used-ref/util/query/extract-column-identifier.js","webpack:///./node_modules/@squill/squill/dist/used-ref/util/query/index.js","webpack:///./node_modules/@squill/squill/dist/value-expr/index.js","webpack:///./node_modules/@squill/squill/dist/value-expr/util/index.js","webpack:///./node_modules/@squill/squill/dist/where-clause/index.js","webpack:///./node_modules/@squill/squill/dist/where-clause/util/index.js","webpack:///./node_modules/@squill/squill/dist/where-clause/util/operation/index.js","webpack:///./node_modules/@squill/squill/dist/where-clause/util/operation/where.js","webpack:///./node_modules/@squill/squill/dist/where-clause/util/query/allowed-used-ref.js","webpack:///./node_modules/@squill/squill/dist/where-clause/util/query/index.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/type-mapping/dist/accessor-util/index.js","webpack:///./node_modules/type-mapping/dist/array-buffer-util/equals.js","webpack:///./node_modules/type-mapping/dist/array-buffer-util/index.js","webpack:///./node_modules/type-mapping/dist/array-util/array-fill.js","webpack:///./node_modules/type-mapping/dist/array-util/index.js","webpack:///./node_modules/type-mapping/dist/array-util/remove-duplicate-elements.js","webpack:///./node_modules/type-mapping/dist/bigint-util/arithmetic.js","webpack:///./node_modules/type-mapping/dist/bigint-util/as-int-n.js","webpack:///./node_modules/type-mapping/dist/bigint-util/as-uint-n.js","webpack:///./node_modules/type-mapping/dist/bigint-util/bitwise-operation.js","webpack:///./node_modules/type-mapping/dist/bigint-util/comparison.js","webpack:///./node_modules/type-mapping/dist/bigint-util/index.js","webpack:///./node_modules/type-mapping/dist/bigint-util/jsbi.js","webpack:///./node_modules/type-mapping/dist/bigint-util/to-number.js","webpack:///./node_modules/type-mapping/dist/bigint-util/to-string.js","webpack:///./node_modules/type-mapping/dist/decorator/func.js","webpack:///./node_modules/type-mapping/dist/decorator/index.js","webpack:///./node_modules/type-mapping/dist/decorator/method.js","webpack:///./node_modules/type-mapping/dist/decorator/prop.js","webpack:///./node_modules/type-mapping/dist/decorator/setter.js","webpack:///./node_modules/type-mapping/dist/enum-util/index.js","webpack:///./node_modules/type-mapping/dist/error-code.js","webpack:///./node_modules/type-mapping/dist/error-util/flatten-union-errors.js","webpack:///./node_modules/type-mapping/dist/error-util/indent-error-message.js","webpack:///./node_modules/type-mapping/dist/error-util/index.js","webpack:///./node_modules/type-mapping/dist/error-util/is-mapping-error.js","webpack:///./node_modules/type-mapping/dist/error-util/make-mapping-error.js","webpack:///./node_modules/type-mapping/dist/error-util/make-normalized-union-error.js","webpack:///./node_modules/type-mapping/dist/error-util/try-get-property-error.js","webpack:///./node_modules/type-mapping/dist/field-map/ctor.js","webpack:///./node_modules/type-mapping/dist/field-map/index.js","webpack:///./node_modules/type-mapping/dist/fixed-point-util/index.js","webpack:///./node_modules/type-mapping/dist/fixed-point-util/is-equal.js","webpack:///./node_modules/type-mapping/dist/fixed-point-util/try-parse.js","webpack:///./node_modules/type-mapping/dist/floating-point-util/index.js","webpack:///./node_modules/type-mapping/dist/floating-point-util/to-integer-and-exponent.js","webpack:///./node_modules/type-mapping/dist/floating-point-util/try-parse.js","webpack:///./node_modules/type-mapping/dist/fluent-lib/field-map-ctor.js","webpack:///./node_modules/type-mapping/dist/fluent-lib/generic.js","webpack:///./node_modules/type-mapping/dist/fluent-lib/index.js","webpack:///./node_modules/type-mapping/dist/fluent-lib/non-generic.js","webpack:///./node_modules/type-mapping/dist/fluent-mapper.js","webpack:///./node_modules/type-mapping/dist/functional-lib/any/index.js","webpack:///./node_modules/type-mapping/dist/functional-lib/any/unsafe-any.js","webpack:///./node_modules/type-mapping/dist/functional-lib/array-like/array-like.js","webpack:///./node_modules/type-mapping/dist/functional-lib/array-like/implements-array-like.js","webpack:///./node_modules/type-mapping/dist/functional-lib/array-like/index.js","webpack:///./node_modules/type-mapping/dist/functional-lib/array-like/length.js","webpack:///./node_modules/type-mapping/dist/functional-lib/array/array.js","webpack:///./node_modules/type-mapping/dist/functional-lib/array/cast/array-like-to-array.js","webpack:///./node_modules/type-mapping/dist/functional-lib/array/cast/index.js","webpack:///./node_modules/type-mapping/dist/functional-lib/array/index.js","webpack:///./node_modules/type-mapping/dist/functional-lib/array/instance-of-array.js","webpack:///./node_modules/type-mapping/dist/functional-lib/bigint/bigint.js","webpack:///./node_modules/type-mapping/dist/functional-lib/bigint/cast.js","webpack:///./node_modules/type-mapping/dist/functional-lib/bigint/comparison.js","webpack:///./node_modules/type-mapping/dist/functional-lib/bigint/index.js","webpack:///./node_modules/type-mapping/dist/functional-lib/boolean/boolean.js","webpack:///./node_modules/type-mapping/dist/functional-lib/boolean/cast.js","webpack:///./node_modules/type-mapping/dist/functional-lib/boolean/index.js","webpack:///./node_modules/type-mapping/dist/functional-lib/buffer/buffer.js","webpack:///./node_modules/type-mapping/dist/functional-lib/buffer/index.js","webpack:///./node_modules/type-mapping/dist/functional-lib/date/cast.js","webpack:///./node_modules/type-mapping/dist/functional-lib/date/index.js","webpack:///./node_modules/type-mapping/dist/functional-lib/date/instance-of-date.js","webpack:///./node_modules/type-mapping/dist/functional-lib/enum/cast-enum-flyweight.js","webpack:///./node_modules/type-mapping/dist/functional-lib/enum/cast.js","webpack:///./node_modules/type-mapping/dist/functional-lib/enum/enum.js","webpack:///./node_modules/type-mapping/dist/functional-lib/enum/index.js","webpack:///./node_modules/type-mapping/dist/functional-lib/index.js","webpack:///./node_modules/type-mapping/dist/functional-lib/json-object/cast.js","webpack:///./node_modules/type-mapping/dist/functional-lib/json-object/index.js","webpack:///./node_modules/type-mapping/dist/functional-lib/json-object/json-object.js","webpack:///./node_modules/type-mapping/dist/functional-lib/literal/index.js","webpack:///./node_modules/type-mapping/dist/functional-lib/literal/literal.js","webpack:///./node_modules/type-mapping/dist/functional-lib/literal/tuple-literal.js","webpack:///./node_modules/type-mapping/dist/functional-lib/never/index.js","webpack:///./node_modules/type-mapping/dist/functional-lib/never/never.js","webpack:///./node_modules/type-mapping/dist/functional-lib/non-maybe/index.js","webpack:///./node_modules/type-mapping/dist/functional-lib/non-maybe/non-maybe.js","webpack:///./node_modules/type-mapping/dist/functional-lib/null/cast.js","webpack:///./node_modules/type-mapping/dist/functional-lib/null/index.js","webpack:///./node_modules/type-mapping/dist/functional-lib/null/null.js","webpack:///./node_modules/type-mapping/dist/functional-lib/number/cast.js","webpack:///./node_modules/type-mapping/dist/functional-lib/number/comparison.js","webpack:///./node_modules/type-mapping/dist/functional-lib/number/index.js","webpack:///./node_modules/type-mapping/dist/functional-lib/number/number.js","webpack:///./node_modules/type-mapping/dist/functional-lib/object/derive-map.js","webpack:///./node_modules/type-mapping/dist/functional-lib/object/derive.js","webpack:///./node_modules/type-mapping/dist/functional-lib/object/index.js","webpack:///./node_modules/type-mapping/dist/functional-lib/object/instance-of-object.js","webpack:///./node_modules/type-mapping/dist/functional-lib/object/instance-of.js","webpack:///./node_modules/type-mapping/dist/functional-lib/object/object-from-array.js","webpack:///./node_modules/type-mapping/dist/functional-lib/object/object-from-map.js","webpack:///./node_modules/type-mapping/dist/functional-lib/object/object.js","webpack:///./node_modules/type-mapping/dist/functional-lib/object/partial-derive-map.js","webpack:///./node_modules/type-mapping/dist/functional-lib/object/partial-object-from-array.js","webpack:///./node_modules/type-mapping/dist/functional-lib/object/partial-object-from-map.js","webpack:///./node_modules/type-mapping/dist/functional-lib/object/partial-object.js","webpack:///./node_modules/type-mapping/dist/functional-lib/object/partial-rename-map.js","webpack:///./node_modules/type-mapping/dist/functional-lib/object/pojo.js","webpack:///./node_modules/type-mapping/dist/functional-lib/object/rename-map.js","webpack:///./node_modules/type-mapping/dist/functional-lib/object/rename.js","webpack:///./node_modules/type-mapping/dist/functional-lib/object/string-indexer.js","webpack:///./node_modules/type-mapping/dist/functional-lib/object/to-empty-object.js","webpack:///./node_modules/type-mapping/dist/functional-lib/operator/cache.js","webpack:///./node_modules/type-mapping/dist/functional-lib/operator/cast.js","webpack:///./node_modules/type-mapping/dist/functional-lib/operator/deep-merge.js","webpack:///./node_modules/type-mapping/dist/functional-lib/operator/discriminated-union.js","webpack:///./node_modules/type-mapping/dist/functional-lib/operator/exclude-literal.js","webpack:///./node_modules/type-mapping/dist/functional-lib/operator/index.js","webpack:///./node_modules/type-mapping/dist/functional-lib/operator/missing-value.js","webpack:///./node_modules/type-mapping/dist/functional-lib/operator/or.js","webpack:///./node_modules/type-mapping/dist/functional-lib/operator/pipe.js","webpack:///./node_modules/type-mapping/dist/functional-lib/string/cast.js","webpack:///./node_modules/type-mapping/dist/functional-lib/string/index.js","webpack:///./node_modules/type-mapping/dist/functional-lib/string/ip-address.js","webpack:///./node_modules/type-mapping/dist/functional-lib/string/ip-v4-mapped-ip-v6.js","webpack:///./node_modules/type-mapping/dist/functional-lib/string/ip-v4.js","webpack:///./node_modules/type-mapping/dist/functional-lib/string/ip-v6.js","webpack:///./node_modules/type-mapping/dist/functional-lib/string/number-string.js","webpack:///./node_modules/type-mapping/dist/functional-lib/string/string.js","webpack:///./node_modules/type-mapping/dist/functional-lib/type/deferred.js","webpack:///./node_modules/type-mapping/dist/functional-lib/type/index.js","webpack:///./node_modules/type-mapping/dist/functional-lib/uint-8-array/byte-length.js","webpack:///./node_modules/type-mapping/dist/functional-lib/uint-8-array/index.js","webpack:///./node_modules/type-mapping/dist/functional-lib/uint-8-array/uint-8-array.js","webpack:///./node_modules/type-mapping/dist/functional-lib/undefined/cast.js","webpack:///./node_modules/type-mapping/dist/functional-lib/undefined/index.js","webpack:///./node_modules/type-mapping/dist/functional-lib/undefined/undefined.js","webpack:///./node_modules/type-mapping/dist/functional-lib/unknown/index.js","webpack:///./node_modules/type-mapping/dist/functional-lib/unknown/unknown.js","webpack:///./node_modules/type-mapping/dist/index.js","webpack:///./node_modules/type-mapping/dist/json-api-lib/attribute-collection.js","webpack:///./node_modules/type-mapping/dist/json-api-lib/client-resource.js","webpack:///./node_modules/type-mapping/dist/json-api-lib/document/__document-constraint-impl.js","webpack:///./node_modules/type-mapping/dist/json-api-lib/document/client-document.js","webpack:///./node_modules/type-mapping/dist/json-api-lib/document/index.js","webpack:///./node_modules/type-mapping/dist/json-api-lib/document/server-document.js","webpack:///./node_modules/type-mapping/dist/json-api-lib/error-link-collection.js","webpack:///./node_modules/type-mapping/dist/json-api-lib/error-object.js","webpack:///./node_modules/type-mapping/dist/json-api-lib/error-source.js","webpack:///./node_modules/type-mapping/dist/json-api-lib/index.js","webpack:///./node_modules/type-mapping/dist/json-api-lib/json-api.js","webpack:///./node_modules/type-mapping/dist/json-api-lib/link-collection.js","webpack:///./node_modules/type-mapping/dist/json-api-lib/link.js","webpack:///./node_modules/type-mapping/dist/json-api-lib/meta.js","webpack:///./node_modules/type-mapping/dist/json-api-lib/non-error-document/__non-error-document-constraint-impl.js","webpack:///./node_modules/type-mapping/dist/json-api-lib/non-error-document/index.js","webpack:///./node_modules/type-mapping/dist/json-api-lib/non-error-document/non-error-client-document.js","webpack:///./node_modules/type-mapping/dist/json-api-lib/non-error-document/non-error-server-document.js","webpack:///./node_modules/type-mapping/dist/json-api-lib/partial-relationship.js","webpack:///./node_modules/type-mapping/dist/json-api-lib/relationship.js","webpack:///./node_modules/type-mapping/dist/json-api-lib/resource-identifier.js","webpack:///./node_modules/type-mapping/dist/json-api-lib/resource-linkage.js","webpack:///./node_modules/type-mapping/dist/json-api-lib/server-resource.js","webpack:///./node_modules/type-mapping/dist/mapper/ctor.js","webpack:///./node_modules/type-mapping/dist/mapper/debug/_debug-is-expected-input.js","webpack:///./node_modules/type-mapping/dist/mapper/debug/_debug-is-handled-input.js","webpack:///./node_modules/type-mapping/dist/mapper/debug/_debug-is-mappable-input.js","webpack:///./node_modules/type-mapping/dist/mapper/debug/_debug-is-output.js","webpack:///./node_modules/type-mapping/dist/mapper/debug/index.js","webpack:///./node_modules/type-mapping/dist/mapper/index.js","webpack:///./node_modules/type-mapping/dist/mapper/operation/copy-run-time-modifier.js","webpack:///./node_modules/type-mapping/dist/mapper/operation/expect-mappable-input.js","webpack:///./node_modules/type-mapping/dist/mapper/operation/index.js","webpack:///./node_modules/type-mapping/dist/mapper/operation/map.js","webpack:///./node_modules/type-mapping/dist/mapper/operation/try-map.js","webpack:///./node_modules/type-mapping/dist/mapper/operation/with-expected-input.js","webpack:///./node_modules/type-mapping/dist/mapper/operation/with-mapper.js","webpack:///./node_modules/type-mapping/dist/mapper/operation/with-name.js","webpack:///./node_modules/type-mapping/dist/mapper/predicate/array.js","webpack:///./node_modules/type-mapping/dist/mapper/predicate/index.js","webpack:///./node_modules/type-mapping/dist/mapper/predicate/is-optional.js","webpack:///./node_modules/type-mapping/dist/mapper/predicate/missing-value.js","webpack:///./node_modules/type-mapping/dist/mapper/query/index.js","webpack:///./node_modules/type-mapping/dist/mapper/query/name-of.js","webpack:///./node_modules/type-mapping/dist/mapper/query/optional-flag-of.js","webpack:///./node_modules/type-mapping/dist/mapper/query/run-time-required-flag-of.js","webpack:///./node_modules/type-mapping/dist/mysql-lib/binary/index.js","webpack:///./node_modules/type-mapping/dist/mysql-lib/boolean/index.js","webpack:///./node_modules/type-mapping/dist/mysql-lib/char/index.js","webpack:///./node_modules/type-mapping/dist/mysql-lib/date-time/index.js","webpack:///./node_modules/type-mapping/dist/mysql-lib/date-time/util.js","webpack:///./node_modules/type-mapping/dist/mysql-lib/decimal/index.js","webpack:///./node_modules/type-mapping/dist/mysql-lib/double/index.js","webpack:///./node_modules/type-mapping/dist/mysql-lib/enum/case-sensitive-enum.js","webpack:///./node_modules/type-mapping/dist/mysql-lib/enum/case-sensitive-set.js","webpack:///./node_modules/type-mapping/dist/mysql-lib/enum/enum-value.js","webpack:///./node_modules/type-mapping/dist/mysql-lib/enum/index.js","webpack:///./node_modules/type-mapping/dist/mysql-lib/index.js","webpack:///./node_modules/type-mapping/dist/mysql-lib/int/bigint.js","webpack:///./node_modules/type-mapping/dist/mysql-lib/int/index.js","webpack:///./node_modules/type-mapping/dist/mysql-lib/int/int.js","webpack:///./node_modules/type-mapping/dist/mysql-lib/json/index.js","webpack:///./node_modules/type-mapping/dist/mysql-lib/uint-8-array-binary/index.js","webpack:///./node_modules/type-mapping/dist/string-util/index.js","webpack:///./node_modules/type-mapping/dist/string-util/string-ends-with.js","webpack:///./node_modules/type-mapping/dist/string-util/string-repeat.js","webpack:///./node_modules/type-mapping/dist/string-util/to-property-access.js","webpack:///./node_modules/type-mapping/dist/string-util/zero-pad.js","webpack:///./node_modules/type-mapping/dist/type-util/allows-instance-of.js","webpack:///./node_modules/type-mapping/dist/type-util/buffer-ctor.js","webpack:///./node_modules/type-mapping/dist/type-util/deep-merge.js","webpack:///./node_modules/type-mapping/dist/type-util/index.js","webpack:///./node_modules/type-mapping/dist/type-util/is-bigint.js","webpack:///./node_modules/type-mapping/dist/type-util/is-instance-of.js","webpack:///./node_modules/type-mapping/dist/type-util/is-pojo.js","webpack:///./node_modules/type-mapping/dist/type-util/is-primitive.js","webpack:///./node_modules/type-mapping/dist/type-util/omit.js","webpack:///./node_modules/type-mapping/dist/type-util/pick.js","webpack:///./node_modules/type-mapping/dist/type-util/set-function-name.js","webpack:///./node_modules/type-mapping/dist/type-util/strict-equal.js","webpack:///./node_modules/type-mapping/dist/type-util/to-type-str.js","webpack:///./node_modules/type-mapping/dist/type-util/try-deep-merge.js","webpack:///./node_modules/type-mapping/dist/type-util/try-get-bigint-factory-function.js","webpack:///./node_modules/type-mapping/fluent.js","webpack:///(webpack)/buildin/global.js"],"names":[],"mappings":";;;;;;;;;;;AAAa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,iEAAS;AACha;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,iGAAqB;AACtC,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;;AC5Ba;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,mGAAa;AAC9B,SAAS,mBAAO,CAAC,2FAAS;AAC1B,iC;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,4FAAU;AAClC;AACA;AACA;AACA,2DAA2D,GAAG,sBAAsB;AACpF;AACA;AACA;AACA,2D;;;;;;;;;;;;;ACVa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,mJAAmC;AACpD,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA,2BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iD;;;;;;;;;;;;;AChBa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,2HAAyB;AAC1C,iC;;;;;;;;;;;;;ACNa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,0FAAiB;AAClC,8BAA8B,mBAAO,CAAC,0FAAc;AACpD;AACA,yBAAyB,mBAAO,CAAC,8EAAQ;AACzC;AACA,iC;;;;;;;;;;;;;ACVa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,qFAAS;AAC1B,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;;ACZa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;;ACZa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,uGAAkB;AACnC,SAAS,mBAAO,CAAC,uGAAkB;AACnC,SAAS,mBAAO,CAAC,yGAAmB;AACpC,SAAS,mBAAO,CAAC,iGAAe;AAChC,iC;;;;;;;;;;;;;ACTa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2C;;;;;;;;;;;;;ACZa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;;ACZa;AACb,8CAA8C,cAAc;AAC5D,8BAA8B,mBAAO,CAAC,wFAAQ;AAC9C;AACA,iC;;;;;;;;;;;;;ACJa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,uGAAa;AAC9B,iC;;;;;;;;;;;;;ACNa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,qIAA0B;AAC3C,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,oFAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kD;;;;;;;;;;;;;ACda;AACb,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,oFAAQ;AAC1C;AACA,iC;;;;;;;;;;;;;ACJa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,mGAAa;AAC9B,iC;;;;;;;;;;;;;ACNa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,yHAAsB;AACvC,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,oFAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8C;;;;;;;;;;;;;ACfa;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,4EAAe;AAC7C,gBAAgB,mBAAO,CAAC,oEAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,kBAAkB,GAAG,QAAQ;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;;AC/Ea;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,2EAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2C;;;;;;;;;;;;;AC3Ba;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,kGAAuB;AACxC,SAAS,mBAAO,CAAC,0FAAmB;AACpC,SAAS,mBAAO,CAAC,gGAAsB;AACvC,SAAS,mBAAO,CAAC,sFAAiB;AAClC,SAAS,mBAAO,CAAC,0EAAW;AAC5B,SAAS,mBAAO,CAAC,gFAAiB;AAClC,SAAS,mBAAO,CAAC,oFAAmB;AACpC,SAAS,mBAAO,CAAC,4EAAe;AAChC,gBAAgB,mBAAO,CAAC,oEAAQ;AAChC;AACA,iC;;;;;;;;;;;;;ACfa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,6GAAsB;AACvC,6BAA6B,mBAAO,CAAC,uFAAQ;AAC7C;AACA,iC;;;;;;;;;;;;;ACRa;AACb,UAAU,iBAAiB;AAC3B;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+EAA+E;AAChF;AACA,8C;;;;;;;;;;;;;AC5Da;AACb,8CAA8C,cAAc;AAC5D,6BAA6B,mBAAO,CAAC,iHAA0B;AAC/D,WAAW,mBAAO,CAAC,+DAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF;AAChF;AACA;AACA;AACA,+C;;;;;;;;;;;;;ACzDa;AACb,8CAA8C,cAAc;AAC5D,6BAA6B,mBAAO,CAAC,iHAA0B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gD;;;;;;;;;;;;;ACXa;AACb,8CAA8C,cAAc;AAC5D,6BAA6B,mBAAO,CAAC,iHAA0B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+C;;;;;;;;;;;;;ACXa;AACb,8CAA8C,cAAc;AAC5D,6BAA6B,mBAAO,CAAC,iHAA0B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kD;;;;;;;;;;;;;ACXa;AACb,8CAA8C,cAAc;AAC5D,WAA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A8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,mHAAoB;AACrC,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,oFAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4C;;;;;;;;;;;;;ACfa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,oEAAQ;AAChC,wBAAwB,mBAAO,CAAC,gFAAiB;AACjD,0BAA0B,mBAAO,CAAC,oFAAmB;AACrD,6BAA6B,mBAAO,CAAC,gGAAsB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+BAA+B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;;AChGa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,4GAA2B;AAC5C,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,6BAA6B,mBAAO,CAAC,iGAAuB;AAC5D;AACA;AACA;AACA;AACA,uCAAuC,0BAA0B;AACjE;AACA;AACA,uCAAuC,kCAAkC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,IAAI;AACT;AACA;AACA;AACA;AACA;AACA,KAAK,IAAI;AACT;AACA;AACA;AACA;AACA,mD;;;;;;;;;;;;;AC/Ba;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,uFAAkB;AACnC,SAAS,mBAAO,CAAC,uEAAU;AAC3B,SAAS,mBAAO,CAAC,qFAAiB;AAClC,SAAS,mBAAO,CAAC,uEAAU;AAC3B,SAAS,mBAAO,CAAC,yFAAmB;AACpC,SAAS,mBAAO,CAAC,uGAA0B;AAC3C,iC;;;;;;;;;;;;;ACXa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;;ACba;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,6EAAgB;AAC9C,wBAAwB,mBAAO,CAAC,iFAAkB;AAClD,wBAAwB,mBAAO,CAAC,uFAAkB;AAClD,0BAA0B,mBAAO,CAAC,qFAAoB;AACtD,qBAAqB,mBAAO,CAAC,gFAAkB;AAC/C,6BAA6B,mBAAO,CAAC,iGAAuB;AAC5D,0BAA0B,mBAAO,CAAC,2FAAoB;AACtD,8BAA8B,mBAAO,CAAC,mGAAwB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;;ACtDa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,8EAAiB;AAC7C,iBAAiB,mBAAO,CAAC,uEAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;;ACxBa;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,6EAAgB;AAC9C,wBAAwB,mBAAO,CAAC,iFAAkB;AAClD,wBAAwB,mBAAO,CAAC,uFAAkB;AAClD,0BAA0B,mBAAO,CAAC,qFAAoB;AACtD,qBAAqB,mBAAO,CAAC,gFAAkB;AAC/C,6BAA6B,mBAAO,CAAC,iGAAuB;AAC5D,0BAA0B,mBAAO,CAAC,2FAAoB;AACtD,8BAA8B,mBAAO,CAAC,mGAAwB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kBAAkB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;;AC9Da;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,6EAAgB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2C;;;;;;;;;;;;;AC9Ca;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,6EAAgB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kD;;;;;;;;;;;;;ACZa;AACb,8CAA8C,cAAc;AAC5D,uBAAuB,mBAAO,CAAC,gFAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,EAAE,SAAS,EAAE;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;;AC5Ja;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,8EAAQ;AACxC;AACA,iC;;;;;;;;;;;;;ACJa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,8FAAc;AAC1C,mBAAmB,mBAAO,CAAC,+EAAmB;AAC9C,gBAAgB,mBAAO,CAAC,sFAAU;AAClC,0BAA0B,mBAAO,CAAC,+GAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2D;;;;;;;;;;;;;ACtBa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,8BAA8B,mBAAO,CAAC,qGAA8B;AACpE,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB,EAAE,mBAAmB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,y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iB;AAClC,SAAS,mBAAO,CAAC,wGAAkB;AACnC,SAAS,mBAAO,CAAC,oFAAQ;AACzB,SAAS,mBAAO,CAAC,oFAAQ;AACzB,SAAS,mBAAO,CAAC,wGAAkB;AACnC,SAAS,mBAAO,CAAC,kGAAe;AAChC,SAAS,mBAAO,CAAC,4GAAoB;AACrC,iC;;;;;;;;;;;;;ACda;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,wGAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;ACnBa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;;ACxBa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;;ACxBa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;;ACZa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;;ACZa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;;AChBa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;;ACXa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4C;;;;;;;;;;;;;ACXa;AACb,8CAA8C,cAAc;AAC5D,kCAAkC,mBAAO,CAAC,0HAA2B;AACrE,gBAAgB,mBAAO,CAAC,mFAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,aAAa,IAAI,gBAAgB,mCAAmC,gBAAgB,IAAI,mBAAmB;AACtI;AACA;AACA;AACA,0D;;;;;;;;;;;;;ACjBa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,4C;;;;;;;;;;;;;ACPa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,wIAAkC;AACnD,SAAS,mBAAO,CAAC,4GAAoB;AACrC,SAAS,mBAAO,CAAC,sGAAiB;AAClC,SAAS,mBAAO,CAAC,0HAA2B;AAC5C,iC;;;;;;;;;;;;;ACTa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;;AChBa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mD;;;;;;;;;;;;;ACrCa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qD;;;;;;;;;;;;;ACfa;AACb,8CAA8C,cAAc;AAC5D,oCAAoC,mBAAO,CAAC,0HAA6B;AACzE;AACA;AACA;AACA;AACA;AACA;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;;;;;;;;;;;ACTa;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,sGAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;;ACnBa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,4FAAY;AAC7B,SAAS,mBAAO,CAAC,8FAAa;AAC9B,SAAS,mBAAO,CAAC,kGAAe;AAChC,iC;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,wGAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;ACnBa;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;;ACjBa;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;;ACjBa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;;ACZa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,sGAAiB;AAClC,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;;AChBa;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;;ACXa;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kD;;;;;;;;;;;;;AC7Ba;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qD;;;;;;;;;;;;;ACda;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gD;;;;;;;;;;;;;ACXa;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4C;;;;;;;;;;;;;ACXa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6C;;;;;;;;;;;;;ACZa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,gGAAgB;AACjC,SAAS,mBAAO,CAAC,oHAA0B;AAC3C,SAAS,mBAAO,CAAC,0HAA6B;AAC9C,SAAS,mBAAO,CAAC,gHAAwB;AACzC,SAAS,mBAAO,CAAC,wGAAoB;AACrC,SAAS,mBAAO,CAAC,0GAAqB;AACtC,iC;;;;;;;;;;;;;ACXa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2C;;;;;;;;;;;;;ACpBa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,8GAAmB;AACpC,iC;;;;;;;;;;;;;ACNa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,gGAAe;AAChC,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,uEAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;;ACzEa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,+EAAe;AAChC,wBAAwB,mBAAO,CAAC,mFAAc;AAC9C;AACA,mBAAmB,mBAAO,CAAC,uEAAQ;AACnC;AACA,iC;;;;;;;;;;;;;ACVa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2C;;;;;;;;;;;;;ACVa;AACb,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,wGAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2C;;;;;;;;;;;;;ACZa;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,qFAAsB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,iD;;;;;;;;;;;;;ACba;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,4FAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2C;;;;;;;;;;;;;ACXa;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD,0BAA0B,mBAAO,CAAC,wGAAmB;AACrD;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;ACTa;AACb,8CAA8C,cAAc;AAC5D,2BAA2B,mBAAO,CAAC,0GAAoB;AACvD;AACA;A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;;;;;;ACba;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,qBAAqB,mBAAO,CAAC,2EAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;;ACzHa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,qBAAqB,mBAAO,CAAC,2EAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;;;;;;;;ACda;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,qBAAqB,mBAAO,CAAC,2EAAS;AACtC,8BAA8B,mBAAO,CAAC,kGAA2B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA,qC;;;;;;;;;;;;;AC1Ba;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,qBAAqB,mBAAO,CAAC,2EAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;;ACvCa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,wFAAQ;AACzB,SAAS,mBAAO,CAAC,8FAAW;AAC5B,SAAS,mBAAO,CAAC,kGAAa;AAC9B,SAAS,mBAAO,CAAC,4FAAU;AAC3B,SAAS,mBAAO,CAAC,8FAAW;AAC5B,SAAS,mBAAO,CAAC,wFAAQ;AACzB,iC;;;;;;;;;;;;;ACXa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,qBAAqB,mBAAO,CAAC,2EAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,qCAAqC;AACrC;AACA;AACA,mC;;;;;;;;;;;;;ACpEa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,qBAAqB,mBAAO,CAAC,2EAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;;AC5Ga;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,gHAA2B;AAC5C,SAAS,mBAAO,CAAC,wGAAuB;AACxC,qBAAqB,mBAAO,CAAC,0EAAQ;AACrC;AACA,iC;;;;;;;;;;;;;ACTa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,qBAAqB,mBAAO,CAAC,2EAAS;AACtC,gBAAgB,mBAAO,CAAC,oFAAoB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;;;;;;;;ACnEa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,kGAAW;AAC5B,iC;;;;;;;;;;;;;ACNa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,yGAAkB;AACnC,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;;AC3Ca;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,6FAAe;AAChC,SAAS,mBAAO,CAAC,yFAAa;AAC9B,SAAS,mBAAO,CAAC,yFAAa;AAC9B,iC;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,2BAA2B,mBAAO,CAAC,2GAAoB;AACvD,+BAA+B,mBAAO,CAAC,mHAAwB;AAC/D;AACA;AACA;AACA,iGAAiG,YAAY;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,YAAY;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kD;;;;;;;;;;;;;ACjCa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,wBAAwB,mBAAO,CAAC,yFAAwB;AACxD,eAAe,mBAAO,CAAC,uEAAe;AACtC,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,0BAA0B;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4C;;;;;;;;;;;;;AC3Da;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,yFAAwB;AACxD,eAAe,mBAAO,CAAC,mGAA6B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,kBAAkB,GAAG,mBAAmB;AACxF;AACA;AACA,wDAAwD,kBAAkB,GAAG,mBAAmB;AAChG;AACA;AACA;AACA,gD;;;;;;;;;;;;;AC7Ba;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,2BAA2B,mBAAO,CAAC,2GAAoB;AACvD,+BAA+B,mBAAO,CAAC,mHAAwB;AAC/D,cAAc,mBAAO,CAAC,qEAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iGAAiG,YAAY;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,YAAY;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6D;;;;;;;;;;;;;ACzCa;AACb,8CAA8C,cAAc;AAC5D,2BAA2B,mBAAO,CAAC,2GAAoB;AACvD;AACA,uEAAuE,YAAY;AACnF;AACA;AACA,gD;;;;;;;;;;;;;ACPa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,uHAA0B;AAC3C,SAAS,mBAAO,CAAC,2GAAoB;AACrC,SAAS,mBAAO,CAAC,mHAAwB;AACzC,SAAS,mBAAO,CAAC,6IAAqC;AACtD,SAAS,mBAAO,CAAC,mHAAwB;AACzC,SAAS,mBAAO,CAAC,6FAAa;AAC9B,iC;;;;;;;;;;;;;ACXa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,oBAAoB,mBAAO,CAAC,0FAAc;AAC1C,sBAAsB,mBAAO,CAAC,8FAAgB;AAC9C,wBAAwB,mBAAO,CAAC,yFAAwB;AACxD,8BAA8B,mBAAO,CAAC,qGAA8B;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,SAAS,QAAQ,SAAS;AAClE,sCAAsC,mBAAmB;AACzD;AACA,yEAAyE,SAAS;AAClF,6CAA6C,SAAS;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,KAAK,SAAS,+BAA+B;AACjF;AACA;AACA,qCAAqC,+BAA+B;AACpE;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,KAAK,GAAG,+BAA+B;AAC3E;AACA;AACA,qCAAqC,+BAA+B;AACpE;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,KAAK,SAAS,+BAA+B;AACjF;AACA;AACA,qCAAqC,+BAA+B;AACpE;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,KAAK,SAAS,+BAA+B;AACjF;AACA;AACA,qCAAqC,+BAA+B;AACpE;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,KAAK,SAAS,+BAA+B;AACzF;AACA;AACA,6CAA6C,+BAA+B;AAC5E;AACA;AACA;AACA,iCAAiC;AACjC,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,KAAK,SAAS,+BAA+B;AACrF;AACA;AACA,yCAAyC,+BAA+B;AACxE;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,KAAK,SAAS,+BAA+B;AACrF;AACA;AACA,yCAAyC,+BAA+B;AACxE;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,KAAK,SAAS,+BAA+B,GAAG,+BAA+B,wBAAwB;AAC/I;AACA;AACA,yCAAyC,+BAA+B,GAAG,+BAA+B;AAC1G;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;ACjSa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,mGAAgB;AACjC,SAAS,mBAAO,CAAC,+GAAsB;AACvC,iC;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;;ACjBa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,uBAAuB,mBAAO,CAAC,mGAAgB;AAC/C,8BAA8B,mBAAO,CAAC,qGAA8B;AACpE,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8C;;;;;;;;;;;;;AClCa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,yEAAQ;AACzB,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAO,CAAC,+EAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,KAAK,GAAG,MAAM,GAAG,IAAI,GAAG,KAAK,GAAG,OAAO,GAAG,OAAO;AACnE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,KAAK,GAAG,MAAM,GAAG,IAAI,GAAG,KAAK,GAAG,OAAO,GAAG,OAAO,GAAG,GAAG;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,IAAI;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,0BAA0B,uBAAuB,gBAAgB;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;;ACvHa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,0EAAW;AAC5B,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,mC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,mFAAkB;AAClD,eAAe,mBAAO,CAAC,iEAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0D;;;;;;;;;;;;;AChFa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,wIAAkC;AACnD,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,8EAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8C;;;;;;;;;;;;;AC1Ea;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,oGAAsB;AACvC,yBAAyB,mBAAO,CAAC,8EAAQ;AACzC;AACA,iC;;;;;;;;;;;;;ACRa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,6FAAa;AAC9B,iC;;;;;;;;;;;;;ACNa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,6FAAW;AAC5B,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,6BAA6B,mBAAO,CAAC,wGAA0B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,mC;;;;;;;;;;;;;ACtDa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,qFAAY;AAC7B,gBAAgB,mBAAO,CAAC,mFAAQ;AAChC;AACA,eAAe,mBAAO,CAAC,mFAAQ;AAC/B;AACA,iC;;;;;;;;;;;;;ACVa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,mFAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;;ACjEa;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,8GAAgB;AAChD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,QAAQ,MAAM;AACd;AACA,QAAQ,aAAa;AACrB,QAAQ,SAAS;AACjB,QAAQ,6BAA6B;AACrC,QAAQ,oBAAoB;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA,kC;;;;;;;;;;;;;ACzFa;AACb,8CAA8C,cAAc;AAC5D,+BAA+B,mBAAO,CAAC,4HAAuB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,wC;;;;;;;;;;;;;ACfa;AACb,8CAA8C,cAAc;AAC5D,cAAc,mBAAO,CAAC,qEAAc;AACpC,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD,gCAAgC,mBAAO,CAAC,yGAAgC;AACxE,0BAA0B,mBAAO,CAAC,kHAAkB;AACpD;AACA,WAAW,uBAAuB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,+C;;;;;;;;;;;;;ACjCa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD,gCAAgC,mBAAO,CAAC,yGAAgC;AACxE,8BAA8B,mBAAO,CAAC,0HAAsB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,0C;;;;;;;;;;;;;AC5Ca;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD,gCAAgC,mBAAO,CAAC,yGAAgC;AACxE,mCAAmC,mBAAO,CAAC,oIAA2B;AACtE,yCAAyC,mBAAO,CAAC,gJAAiC;AAClF;AACA;AACA;AACA;AACA,WAAW,8CAA8C;AACzD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8C;;;;;;;;;;;;;ACrDa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,sBAAsB,mBAAO,CAAC,qFAAsB;AACpD,sBAAsB,mBAAO,CAAC,qFAAsB;AACpD,mBAAmB,mBAAO,CAAC,+EAAmB;AAC9C,mCAAmC,mBAAO,CAAC,oIAA2B;AACtE,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,qBAAqB;AACzG,SAAS;AACT;AACA;AACA;AACA;AACA,wDAAwD,mBAAmB,GAAG,YAAY;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+DAA+D;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yD;;;;;;;;;;;;;ACrEa;AAC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C/C;AACA;AACA;AACA;AACA,2C;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,8GAAiB;AACjD,uBAAuB,mBAAO,CAAC,4GAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;ACTa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,kCAAkC,mBAAO,CAAC,kIAA2B;AACrE,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,wBAAwB,mBAAO,CAAC,yFAAwB;AACxD,0BAA0B,mBAAO,CAAC,uFAA0B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,iEAAiE,GAAG,iEAAiE;AACrM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,iEAAiE,GAAG,mEAAmE;AACnM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wC;;;;;;;;;;;;;ACnGa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,sGAAe;AAChC,SAAS,mBAAO,CAAC,kGAAa;AAC9B;AACA,2BAA2B,mBAAO,CAAC,sHAAuB;AAC1D;AACA,iC;;;;;;;;;;;;;ACVa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,sHAAuB;AACxC,yBAAyB,mBAAO,CAAC,8FAAQ;AACzC;AACA;AACA,iC;;;;;;;;;;;;;ACTa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,8FAAQ;AACzC,gBAAgB,mBAAO,CAAC,iFAAiB;AACzvHa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,6HAAkB;AACnC,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,8BAA8B,mBAAO,CAAC,0HAA2B;AACjE,gBAAgB,mBAAO,CAAC,sGAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,0C;;;;;;;;;;;;;ACda;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,yFAAwB;AACxD,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,YAAY,GAAG,YAAY;AAC5E;AACA;AACA;AACA,qHAAqH,sBAAsB,YAAY,GAAG,YAAY;AACtK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;;AClEa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,eAAe,mBAAO,CAAC,4GAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA,8C;;;;;;;;;;;;;ACTa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,gBAAgB,mBAAO,CAAC,sGAAU;AAClC,gBAAgB,mBAAO,CAAC,uFAAuB;AAC/C,yBAAyB,mBAAO,CAAC,wHAAmB;AACpD,0BAA0B,mBAAO,CAAC,uFAA0B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,2C;;;;;;;;;;;;;ACvDa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,0BAA0B,mBAAO,CAAC,kIAAmB;AACrD,sBAAsB,mBAAO,CAAC,0HAAe;AAC7C,0BAA0B,mBAAO,CAAC,uFAA0B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,mD;;;;;;;;;;;;;ACxCa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,eAAe,mBAAO,CAAC,4GAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;;ACTa;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,yHAAwC;AACtE,wBAAwB,mBAAO,CAAC,yFAAwB;AACxD,gBAAgB,mBAAO,CAAC,sGAAU;AAClC,eAAe,mBAAO,CAAC,4GAAQ;AAC/B,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA,+BAA+B,mBAAmB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,iBAAiB,IAAI,YAAY,IAAI,YAAY;AACvG;AACA;AACA;AACA,gDAAgD,YAAY,GAAG,YAAY,OAAO,iBAAiB,GAAG,YAAY;AAClH;AACA;AACA;AACA;AACA;AACA,2DAA2D,YAAY,IAAI,iBAAiB,IAAI,YAAY;AAC5G;AACA;AACA;AACA,gDAAgD,iBAAiB,GAAG,YAAY,OAAO,YAAY,GAAG,YAAY;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;;AC7Ga;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,yFAAwB;AACxD,gBAAgB,mBAAO,CAAC,sGAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;;AC/Ba;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,wHAAc;AAC/B,SAAS,mBAAO,CAAC,wIAAsB;AACvC,SAAS,mBAAO,CAAC,kIAAmB;AACpC,SAAS,mBAAO,CAAC,kJAA2B;AAC5C,SAAS,mBAAO,CAAC,0HAAe;AAChC,SAAS,mBAAO,CAAC,gIAAkB;AACnC,SAAS,mBAAO,CAAC,4GAAQ;AACzB,SAAS,mBAAO,CAAC,wJAA8B;AAC/C,SAAS,mBAAO,CAAC,sJAA6B;AAC9C,iC;;;;;;;;;;;;;ACda;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C,yBAAyB,mBAAO,CAAC,wHAAmB;AACpD,gBAAgB,mBAAO,CAAC,sGAAU;AAClC,wBAAwB,mBAAO,CAAC,yFAAwB;AACxD,eAAe,mBAAO,CAAC,uEAAe;AACtC,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,sD;;;;;;;;;;;;;ACjEa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,qBAAqB,mBAAO,CAAC,wHAAc;AAC3C,0BAA0B,mBAAO,CAAC,uFAA0B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,qD;;;;;;;;;;;;;ACvDa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,uFAAuB;AAC/C,yBAAyB,mBAAO,CAAC,wHAAmB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uD;;;;;;;;;;;;;ACba;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,uFAAuB;AAC/C,yBAAyB,mBAAO,CAAC,wHAAmB;AACpD;AACA;AACA;AACA;AACA,qD;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,wHAAmB;AACpD,oBAAoB,mBAAO,CAAC,8GAAc;AAC1C;AACA;AACA;AACA;AACA,mD;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,uFAAuB;AAC/C,yBAAyB,mBAAO,CAAC,wHAAmB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+D;;;;;;;;;;;;;ACba;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,uFAAuB;AAC/C,yBAAyB,mBAAO,CAAC,wHAAmB;AACpD;AACA;AACA;AACA;AACA,6D;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,wHAAmB;AACpD,oBAAoB,mBAAO,CAAC,8GAAc;AAC1C;AACA;AACA;AACA;AACA,2D;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,uFAAuB;AAC/C,oBAAoB,mBAAO,CAAC,iHAAa;AACzC;AACA;AACA;AACA;AACA,sD;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,uFAAuB;AAC/C,oBAAoB,mBAAO,CAAC,iHAAa;AACzC;AACA;AACA;AACA;AACA,oD;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,iHAAa;AACzC,oBAAoB,mBAAO,CAAC,8GAAc;AAC1C;AACA;AACA;AACA;AACA,kD;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,wHAAmB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,MAAM;AACtC;AACA;AACA;AACA,gCAAgC,EAAE;AAClC,6CAA6C,MAAM;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;AC5Ca;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,qJAA+B;AAChD,SAAS,mBAAO,CAAC,iJAA6B;AAC9C,SAAS,mBAAO,CAAC,6IAA2B;AAC5C,SAAS,mBAAO,CAAC,qKAAuC;AACxD,SAAS,mBAAO,CAAC,iKAAqC;AACtD,SAAS,mBAAO,CAAC,6JAAmC;AACpD,SAAS,mBAAO,CAAC,mJAA8B;AAC/C,SAAS,mBAAO,CAAC,+IAA4B;AAC7C,SAAS,mBAAO,CAAC,2IAA0B;AAC3C,SAAS,mBAAO,CAAC,iHAAa;AAC9B,SAAS,mBAAO,CAAC,+HAAoB;AACrC,SAAS,mBAAO,CAAC,yKAAyC;AAC1D,SAAS,mBAAO,CAAC,qKAAuC;AACxD,SAAS,mBAAO,CAAC,iKAAqC;AACtD,SAAS,mBAAO,CAAC,yLAAiD;AAClE,SAAS,mBAAO,CAAC,qLAA+C;AAChE,SAAS,mBAAO,CAAC,iLAA6C;AAC9D,iC;;;;;;;;;;;;;ACtBa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,gBAAgB,mBAAO,CAAC,sGAAU;AAClC,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,eAAe,mBAAO,CAAC,uEAAe;AACtC,mBAAmB,mBAAO,CAAC,+EAAmB;AAC9C,yBAAyB,mBAAO,CAAC,wHAAmB;AACpD,0BAA0B,mBAAO,CAAC,uFAA0B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,YAAY,GAAG,YAAY;AACnF;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,4C;;;;;;;;;;;;;AC/Ea;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,gBAAgB,mBAAO,CAAC,uFAAuB;AAC/C,yBAAyB,mBAAO,CAAC,wHAAmB;AACpD,0BAA0B,mBAAO,CAAC,uFAA0B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,iE;;;;;;;;;;;;;ACjCa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,gBAAgB,mBAAO,CAAC,uFAAuB;AAC/C,yBAAyB,mBAAO,CAAC,wHAAmB;AACpD,0BAA0B,mBAAO,CAAC,uFAA0B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,+D;;;;;;;;;;;;;AC3Ba;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,oBAAoB,mBAAO,CAAC,8GAAc;AAC1C,yBAAyB,mBAAO,CAAC,wHAAmB;AACpD,0BAA0B,mBAAO,CAAC,uFAA0B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,6D;;;;;;;;;;;;;ACtCa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,gBAAgB,mBAAO,CAAC,uFAAuB;AAC/C,gDAAgD,mBAAO,CAAC,yKAAyC;AACjG,wBAAwB,mBAAO,CAAC,yFAAwB;AACxD,0BAA0B,mBAAO,CAAC,uFAA0B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,yE;;;;;;;;;;;;;AC5Ca;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,gBAAgB,mBAAO,CAAC,uFAAuB;AAC/C,wBAAwB,mBAAO,CAAC,yFAAwB;AACxD,8CAA8C,mBAAO,CAAC,qKAAuC;AAC7F,0BAA0B,mBAAO,CAAC,uFAA0B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,uE;;;;;;;;;;;;;ACtCa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,oBAAoB,mBAAO,CAAC,8GAAc;AAC1C,4CAA4C,mBAAO,CAAC,iKAAqC;AACzF,yBAAyB,mBAAO,CAAC,wHAAmB;AACpD,0BAA0B,mBAAO,CAAC,uFAA0B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,qE;;;;;;;;;;;;;ACnCa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,iHAAe;AAChC,SAAS,mBAAO,CAAC,6GAAa;AAC9B,SAAS,mBAAO,CAAC,uHAAkB;AACnC,SAAS,mBAAO,CAAC,6GAAa;AAC9B,SAAS,mBAAO,CAAC,qGAAS;AAC1B,iC;;;;;;;;;;;;;ACVa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,gBAAgB,mBAAO,CAAC,sGAAU;AAClC,8BAA8B,mBAAO,CAAC,0HAA2B;AACjE,mCAAmC,mBAAO,CAAC,+IAA4B;AACvE,oBAAoB,mBAAO,CAAC,8GAAc;AAC1C,cAAc,mBAAO,CAAC,qEAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,sC;;;;;;;;;;;;;AC9Ea;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,sGAAU;AAClC,gBAAgB,mBAAO,CAAC,uFAAuB;AAC/C,wBAAwB,mBAAO,CAAC,yFAAwB;AACxD;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD,wC;;;;;;;;;;;;;ACxBa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,mHAAc;AAC/B,SAAS,mBAAO,CAAC,uHAAgB;AACjC,SAAS,mBAAO,CAAC,+IAA4B;AAC7C,iC;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oD;;;;;;;;;;;;;AClBa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,iIAAqB;AACtC,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6C;;;;;;;;;;;;;AC3Ca;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,cAAc,mBAAO,CAAC,qEAAc;AACpC,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;;ACzBa;AACb,8CAA8C,cAAc;AAC5D,+CAA+C,mBAAO,CAAC,mKAAwC;AAC/F,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD;AACA;AACA;AACA;AACA,wDAAwD,qBAAqB,8BAA8B,YAAY;AACvH;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;;ACpBa;AACb,8CAA8C,cAAc;AAC5D,uBAAuB,mBAAO,CAAC,mHAAgB;AAC/C,8BAA8B,mBAAO,CAAC,iIAAuB;AAC7D,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+D;;;;;;;;;;;;;AC9Ba;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gE;;;;;;;;;;;;;AChBa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,oBAAoB,mBAAO,CAAC,8GAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8C;;;;;;;;;;;;;ACnBa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,oBAAoB,mBAAO,CAAC,8GAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kD;;;;;;;;;;;;;AClBa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+C;;;;;;;;;;;;;ACZa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,uBAAuB,mBAAO,CAAC,mHAAgB;AAC/C,oBAAoB,mBAAO,CAAC,8GAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gD;;;;;;;;;;;;;ACjBa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,oBAAoB,mBAAO,CAAC,8GAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yE;;;;;;;;;;;;;ACtBa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,oBAAoB,mBAAO,CAAC,8GAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gE;;;;;;;;;;;;;ACnBa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iD;;;;;;;;;;;;;ACZa;AACb,8CAA8C,cAAc;AAC5D;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;AACA;AACA,kCAA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AS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0D;;;;;;;;;;;;;AChBa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,2EAAc;AAC1C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oE;;;;;;;;;;;;;AChBa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,wFAAe;AAChC,SAAS,mBAAO,CAAC,4FAAiB;AAClC,SAAS,mBAAO,CAAC,wGAAuB;AACxC,iC;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,2EAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;;ACjBa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,2EAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;;ACZa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,2EAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+C;;;;;;;;;;;;;ACZa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,2EAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;;ACXa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,2EAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6C;;;;;;;;;;;;;ACpBa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,2EAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;;ACnBa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,qFAAgB;AACjC,SAAS,mBAAO,CAAC,+FAAqB;AACtC,SAAS,mBAAO,CAAC,yFAAkB;AACnC,SAAS,mBAAO,CAAC,uFAAiB;AAClC,iC;;;;;;;;;;;;;ACTa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,2EAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;;ACnBa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,8FAAoB;AACrC,SAAS,mBAAO,CAAC,gFAAa;AAC9B,SAAS,mBAAO,CAAC,sEAAQ;AACzB,SAAS,mBAAO,CAAC,0EAAa;AAC9B,iC;;;;;;;;;;;;;ACTa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,sBAAsB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;AClCa;AACb,8CAA8C,cAAc;AAC5D,mCAAmC,mBAAO,CAAC,wGAA4B;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,+D;;;;;;;;;;;;;ACxHa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oD;;;;;;;;;;;;;AC5Ba;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,4EAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;;ACfa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,sC;;;;;;;;;;;;;AC3Ea;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,8HAAuC;AACxD,SAAS,mBAAO,CAAC,wGAA4B;AAC7C,SAAS,mBAAO,CAAC,gFAAgB;AACjC,SAAS,mBAAO,CAAC,4EAAc;AAC/B,SAAS,mBAAO,CAAC,oGAA0B;AAC3C,SAAS,mBAAO,CAAC,gFAAgB;AACjC,SAAS,mBAAO,CAAC,wFAAoB;AACrC,SAAS,mBAAO,CAAC,8FAAuB;AACxC,SAAS,mBAAO,CAAC,4FAAsB;AACvC,SAAS,mBAAO,CAAC,kFAAiB;AAClC,SAAS,mBAAO,CAAC,0FAAqB;AACtC,SAAS,mBAAO,CAAC,gGAAwB;AACzC,SAAS,mBAAO,CAAC,oGAA0B;AAC3C,SAAS,mBAAO,CAAC,gFAAgB;AACjC,iC;;;;;;;;;;;;;ACnBa;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,4EAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kD;;;;;;;;;;;;;AChBa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,gBAAgB,mBAAO,CAAC,mEAAU;AAClC,wBAAwB,mBAAO,CAAC,mFAAkB;AAClD,gBAAgB,mBAAO,CAAC,iFAAiB;AACzC,qBAAqB,mBAAO,CAAC,4EAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,iBAAiB;AACxF;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,MAAM,kBAAkB,MAAM;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;;AChDa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,gBAAgB,mBAAO,CAAC,mEAAU;AAClC,wBAAwB,mBAAO,CAAC,mFAAkB;AAClD,gBAAgB,mBAAO,CAAC,iFAAiB;AACzC,qBAAqB,mBAAO,CAAC,4EAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gIAAgI,iBAAiB;AACjJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4C;;;;;;;;;;;;;AC1Ca;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,4EAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+C;;;;;;;;;;;;;AChBa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8C;;;;;;;;;;;;;ACxCa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,gBAAgB,mBAAO,CAAC,mEAAU;AAClC,wBAAwB,mBAAO,CAAC,mFAAkB;AAClD,gBAAgB,mBAAO,CAAC,iFAAiB;AACzC,qBAAqB,mBAAO,CAAC,4EAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,iBAAiB;AACxF;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,MAAM,kBAAkB,MAAM;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;;AChDa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,gBAAgB,mBAAO,CAAC,mEAAU;AAClC,wBAAwB,mBAAO,CAAC,mFAAkB;AAClD,gBAAgB,mBAAO,CAAC,iFAAiB;AACzC,qBAAqB,mBAAO,CAAC,4EAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gIAAgI,iBAAiB;AACjJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6C;;;;;;;;;;;;;AC1Ca;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,4EAAc;AAC3C;AACA;AACA;AACA;AACA;AAC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C,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,0BAA0B,mBAAO,CAAC,uFAA0B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uCAAuC;AACtD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,mBAAmB,+BAA+B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA,4C;;;;;;;;;;;;;AC3Fa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,8C;;;;;;;;;;;;;ACrDa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C,qBAAqB,mBAAO,CAAC,sGAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,2DAA2D,YAAY;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,YAAY;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,2BAA2B;AAC1C;AACA;AACA;AACA,uBAAuB,+BAA+B;AACtD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,6C;;;;;;;;;;;;;ACtHa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA,uC;;;;;;;;;;;;;ACnDa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,qDAAqD,YAAY;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,YAAY,GAAG,oBAAoB;AACnH;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,2BAA2B;AAC1C;AACA;AACA,mBAAmB,+BAA+B;AAClD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,sC;;;;;;;;;;;;;AC7Ha;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA,wC;;;;;;;;;;;;;ACpDa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,sDAAsD,YAAY;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,YAAY,GAAG,oBAAoB;AACnH;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4BAA4B;AAC3C;AACA;AACA,mBAAmB,iCAAiC;AACpD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,uC;;;;;;;;;;;;;ACjIa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,4JAAyC;AAC1D,SAAS,mBAAO,CAAC,wJAAuC;AACxD,SAAS,mBAAO,CAAC,oJAAqC;AACtD,SAAS,mBAAO,CAAC,oIAA6B;AAC9C,SAAS,mBAAO,CAAC,0HAAwB;AACzC,SAAS,mBAAO,CAAC,4KAAiD;AAClE,SAAS,mBAAO,CAAC,wKAA+C;AAChE,SAAS,mBAAO,CAAC,oKAA6C;AAC9D,SAAS,mBAAO,CAAC,oJAAqC;AACtD,SAAS,mBAAO,CAAC,0IAAgC;AACjD,SAAS,mBAAO,CAAC,sGAAc;AAC/B,SAAS,mBAAO,CAAC,sHAAsB;AACvC,SAAS,mBAAO,CAAC,8FAAU;AAC3B,iC;;;;;;;;;;;;;AClBa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,wBAAwB,mBAAO,CAAC,yFAAwB;AACxD,wBAAwB,mBAAO,CAAC,yFAAwB;AACxD,gBAAgB,mBAAO,CAAC,uFAAuB;AAC/C,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,oCAAoC,mBAAO,CAAC,oIAA6B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,YAAY;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,YAAY,GAAG,qBAAqB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,sGAAsG,YAAY,GAAG,qBAAqB;AAC1I;AACA;AACA,sGAAsG,YAAY,GAAG,qBAAqB;AAC1I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mDAAmD;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iE;;;;;;;;;;;;;ACjGa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,gBAAgB,mBAAO,CAAC,uFAAuB;AAC/C,sBAAsB,mBAAO,CAAC,qFAAsB;AACpD,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,wBAAwB,mBAAO,CAAC,yFAAwB;AACxD,oCAAoC,mBAAO,CAAC,oIAA6B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,YAAY;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,YAAY,GAAG,mBAAmB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG,YAAY,GAAG,mBAAmB;AAClI;AACA;AACA,gGAAgG,YAAY,GAAG,mBAAmB;AAClI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+CAA+C;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,+D;;;;;;;;;;;;;AC/Fa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,gBAAgB,mBAAO,CAAC,uFAAuB;AAC/C,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,wBAAwB,mBAAO,CAAC,yFAAwB;AACxD,oCAAoC,mBAAO,CAAC,oIAA6B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,YAAY;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,YAAY,GAAG,iBAAiB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F,YAAY,GAAG,iBAAiB;AAC1H;AACA;AACA,0FAA0F,YAAY,GAAG,iBAAiB;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,2CAA2C;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,6D;;;;;;;;;;;;;AClGa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,qBAAqB,mBAAO,CAAC,sGAAc;AAC3C,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,0BAA0B,mBAAO,CAAC,uFAA0B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kDAAkD;AACjE;AACA,uBAAuB,0DAA0D;AACjF,uBAAuB,iEAAiE;AACxF;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA,qD;;;;;;;;;;;;;ACnDa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,gBAAgB,mBAAO,CAAC,uFAAuB;AAC/C,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,oCAAoC,mBAAO,CAAC,oIAA6B;AACzE,wBAAwB,mBAAO,CAAC,yFAAwB;AACxD,YAAY,mBAAO,CAAC,oEAAO;AAC3B,gDAAgD,mBAAO,CAAC,4JAAyC;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mDAAmD;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,gD;;;;;;;;;;;;;ACzEa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,uFAAuB;AAC/C,gDAAgD,mBAAO,CAAC,4JAAyC;AACjG,4CAA4C,mBAAO,CAAC,oJAAqC;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mDAAmD;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,yE;;;;;;;;;;;;;AChCa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,uFAAuB;AAC/C,8CAA8C,mBAAO,CAAC,wJAAuC;AAC7F,4CAA4C,mBAAO,CAAC,oJAAqC;AACzF;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+CAA+C;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,uE;;;;;;;;;;;;;AC/Ba;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,uFAAuB;AAC/C,4CAA4C,mBAAO,CAAC,oJAAqC;AACzF,4CAA4C,mBAAO,CAAC,oJAAqC;AACzF;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,2CAA2C;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,qE;;;;;;;;;;;;;AC/Ba;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,6BAA6B,mBAAO,CAAC,sHAAsB;AAC3D,0BAA0B,mBAAO,CAAC,uFAA0B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,uBAAuB,0DAA0D;AACjF,uBAAuB,uEAAuE;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,eAAe,kDAAkD;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,6D;;;;;;;;;;;;;ACnGa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,uFAAuB;AAC/C,4CAA4C,mBAAO,CAAC,oJAAqC;AACzF,+BAA+B,mBAAO,CAAC,0HAAwB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mDAAmD;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wD;;;;;;;;;;;;;AC/Ba;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,aAAa,mBAAO,CAAC,8FAAU;AAC/B,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,0BAA0B,mBAAO,CAAC,uFAA0B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D;AACA;AACA,4DAA4D,aAAa,SAAS,2BAA2B;AAC7G;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,aAAa,WAAW,6BAA6B;AAClI;AACA;AACA;AACA,wDAAwD,aAAa,SAAS,2BAA2B;AACzG;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,4CAA4C;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA,sC;;;;;;;;;;;;;AC5Da;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,aAAa,mBAAO,CAAC,8FAAU;AAC/B,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,0BAA0B,mBAAO,CAAC,uFAA0B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,aAAa,WAAW,6BAA6B;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,aAAa,WAAW,6BAA6B;AAClI;AACA;AACA;AACA,wDAAwD,aAAa,SAAS,2BAA2B;AACzG;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,4CAA4C;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,8C;;;;;;;;;;;;;ACrEa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,uBAAuB,mBAAO,CAAC,uFAAuB;AACtD,sBAAsB,mBAAO,CAAC,qFAAsB;AACpD,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4CAA4C;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,kC;;;;;;;;;;;;;ACrCa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,eAAe,mBAAO,CAAC,yFAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,mCAAmC,4CAA4C;AAC/E;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;;ACtBa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD,wBAAwB,mBAAO,CAAC,yFAAwB;AACxD,sBAAsB,mBAAO,CAAC,iGAAe;AAC7C,wBAAwB,mBAAO,CAAC,yFAAwB;AACxD,gBAAgB,mBAAO,CAAC,uFAAuB;AAC/C,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,cAAc,mBAAO,CAAC,qEAAc;AACpC,eAAe,mBAAO,CAAC,uEAAe;AACtC,mBAAmB,mBAAO,CAAC,+EAAmB;AAC9C,mBAAmB,mBAAO,CAAC,iGAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gDAAgD,4CAA4C;AAC5F;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;AC1Ea;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,mBAAmB,mBAAO,CAAC,kGAAa;AACxC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F,wBAAwB;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gD;;;;;;;;;;;;;ACzGa;AACb,8CAA8C,cAAc;AAC5D,+BAA+B,mBAAO,CAAC,mIAAwB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,MAAM;AACN;AACA;AACA,MAAM;AACN,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,MAAM;AACN;AACA;AACA,MAAM,YAAY;AAClB,MAAM;AACN;AACA;AACA,MAAM;AACN,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,2C;;;;;;;;;;;;;AC5Ia;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,mIAAwB;AACzC,SAAS,mBAAO,CAAC,yHAAmB;AACpC,iC;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,yFAAQ;AAC/B;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA,kC;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,yFAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA,4C;;;;;;;;;;;;;ACba;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,yFAAQ;AAC/B;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA,wD;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,yFAAQ;AAC/B;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA,8C;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,yFAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA,qC;;;;;;;;;;;;;ACXa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,yFAAQ;AAC/B;AACA;AACA,gBAAgB,MAAM;AACtB;AACA;AACA,kD;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,yFAAQ;AAC/B;AACA;AACA,gBAAgB,MAAM;AACtB;AACA;AACA,wC;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,yFAAQ;AAC/B;AACA;AACA;AACA,gCAAgC,MAAM;AACtC;AACA;AACA;AACA,gCAAgC,EAAE;AAClC,6CAA6C,MAAM;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;ACtCa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,yFAAQ;AAC/B;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA,6C;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,yFAAQ;AAC/B;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA,oD;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,yFAAQ;AAC/B;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA,0C;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,yFAAQ;AAC/B;AACA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA,gCAAgC,EAAE;AAClC,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;;ACtCa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,4EAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,0DAA0D,4CAA4C;AACtG;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;;AC9Ba;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,4EAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kDAAkD,4CAA4C;AAC9F;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kDAAkD,4CAA4C;AAC9F;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;;ACzCa;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,4FAA2B;AAC3D,gBAAgB,mBAAO,CAAC,0FAA0B;AAClD,2BAA2B,mBAAO,CAAC,gHAAoB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;;ACda;AACb,8CAA8C,cAAc;AAC5D,4CAA4C,mBAAO,CAAC,kJAAqC;AACzF,gCAAgC,mBAAO,CAAC,0HAAyB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;;ACba;AACb,8CAA8C,cAAc;AAC5D,kCAAkC,mBAAO,CAAC,8HAA2B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iD;;;;;;;;;;;;;ACxBa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,6FAAiB;AAC7C,kCAAkC,mBAAO,CAAC,8HAA2B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,6D;;;;;;;;;;;;;AC5Ba;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,sFAAwB;AACrD,oBAAoB,mBAAO,CAAC,8EAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,WAAW,GAAG,YAAY;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mD;;;;;;;;;;;;;ACrEa;AACb,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,8GAAmB;AACrD,yBAAyB,mBAAO,CAAC,4GAAkB;AACnD,qBAAqB,mBAAO,CAAC,oGAAc;AAC3C,wBAAwB,mBAAO,CAAC,0GAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;;ACrDa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,4GAAkB;AACnD;AACA;AACA;AACA;AACA;AACA,6C;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,sFAAwB;AACrD,kCAAkC,mBAAO,CAAC,8HAA2B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kD;;;;;;;;;;;;;AC7Ba;AACb,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,8GAAmB;AACrD,iCAAiC,mBAAO,CAAC,4HAA0B;AACnE,qBAAqB,mBAAO,CAAC,oGAAc;AAC3C,wBAAwB,mBAAO,CAAC,0GAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,4C;;;;;;;;;;;;;ACrDa;AACb,8CAA8C,cAAc;AAC5D,2BAA2B,mBAAO,CAAC,gHAAoB;AACvD;AACA;AACA;AACA;AACA;AACA,+C;;;;;;;;;;;;;ACRa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,0GAAiB;AAClC,SAAS,mBAAO,CAAC,oGAAc;AAC/B,SAAS,mBAAO,CAAC,sGAAe;AAChC,SAAS,mBAAO,CAAC,0HAAyB;AAC1C,SAAS,mBAAO,CAAC,kJAAqC;AACtD,SAAS,mBAAO,CAAC,8HAA2B;AAC5C,SAAS,mBAAO,CAAC,4GAAkB;AACnC,SAAS,mBAAO,CAAC,kHAAqB;AACtC,SAAS,mBAAO,CAAC,4GAAkB;AACnC,SAAS,mBAAO,CAAC,4HAA0B;AAC3C,SAAS,mBAAO,CAAC,sHAAuB;AACxC,SAAS,mBAAO,CAAC,gHAAoB;AACrC,SAAS,mBAAO,CAAC,8GAAmB;AACpC,iC;;;;;;;;;;;;;AClBa;AACb,8CAA8C,cAAc;AAC5D,uBAAuB,mBAAO,CAAC,0FAA0B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2C;;;;;;;;;;;;;AClDa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,+GAAmB;AACpC,SAAS,mBAAO,CAAC,yFAAQ;AACzB,SAAS,mBAAO,CAAC,iGAAY;AAC7B,SAAS,mBAAO,CAAC,qGAAiB;AAClC,SAAS,mBAAO,CAAC,qFAAS;AAC1B,SAAS,mBAAO,CAAC,uFAAU;AAC3B,SAAS,mBAAO,CAAC,2GAAoB;AACrC,SAAS,mBAAO,CAAC,mIAAgC;AACjD,SAAS,mBAAO,CAAC,+GAAsB;AACvC,SAAS,mBAAO,CAAC,6FAAa;AAC9B,SAAS,mBAAO,CAAC,uHAA0B;AAC3C,SAAS,mBAAO,CAAC,mGAAgB;AACjC,SAAS,mBAAO,CAAC,6FAAa;AAC9B,SAAS,mBAAO,CAAC,6GAAqB;AACtC,SAAS,mBAAO,CAAC,2HAA4B;AAC7C,SAAS,mBAAO,CAAC,uGAAkB;AACnC,SAAS,mBAAO,CAAC,iGAAe;AAChC,iC;;;;;;;;;;;;;ACtBa;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,8GAAiB;AACjD,uBAAuB,mBAAO,CAAC,0FAA0B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+C;;;;;;;;;;;;;ACrBa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,0HAAuB;AACxC,SAAS,mBAAO,CAAC,8GAAiB;AAClC,SAAS,mBAAO,CAAC,oGAAY;AAC7B,SAAS,mBAAO,CAAC,4HAAwB;AACzC,iC;;;;;;;;;;;;;ACTa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;;ACjEa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,0FAAS;AAChC,wBAAwB,mBAAO,CAAC,8GAAiB;AACjD,8BAA8B,mBAAO,CAAC,0HAAuB;AAC7D,gBAAgB,mBAAO,CAAC,sFAAU;AAClC,+BAA+B,mBAAO,CAAC,4HAAwB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;;AC7Ba;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gD;;;;;;;;;;;;;AClBa;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,yFAAwB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oD;;;;;;;;;;;;;ACpBa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,2HAA4B;AAC7C,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,qEAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4C;;;;;;;;;;;;;AC3Da;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,8FAAoB;AACrC,uBAAuB,mBAAO,CAAC,4EAAQ;AACvC;AACA,iC;;;;;;;;;;;;;ACRa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,2FAAa;AAC9B,iC;;;;;;;;;;;;;ACNa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,yGAAkB;AACnC,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,cAAc,mBAAO,CAAC,qEAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;;ACtBa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,mIAA6B;AAC9C,SAAS,mBAAO,CAAC,mIAA6B;AAC9C,SAAS,mBAAO,CAAC,mIAA6B;AAC9C,SAAS,mBAAO,CAAC,mIAA6B;AAC9C,iC;;;;;;;;;;;;;ACTa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,oEAAY;AACnC,cAAc,mBAAO,CAAC,kEAAW;AACjC,mBAAmB,mBAAO,CAAC,4EAAgB;AAC3C;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,qD;;;;;;;;;;;;;AChBa;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,sFAAqB;AACrD,eAAe,mBAAO,CAAC,oEAAY;AACnC,cAAc,mBAAO,CAAC,kEAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qD;;;;;;;;;;;;;ACda;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,sFAAqB;AACrD,eAAe,mBAAO,CAAC,oEAAY;AACnC,cAAc,mBAAO,CAAC,kEAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qD;;;;;;;;;;;;;ACfa;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,sFAAqB;AACrD,eAAe,mBAAO,CAAC,oEAAY;AACnC,cAAc,mBAAO,CAAC,kEAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qD;;;;;;;;;;;;;AChBa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,4BAA4B,mBAAO,CAAC,wGAAsB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;AC1Ba;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,4BAA4B,mBAAO,CAAC,wGAAsB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;;ACxDa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,2FAAa;AAC9B,SAAS,mBAAO,CAAC,6FAAc;AAC/B,iC;;;;;;;;;;;;;ACPa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,gGAAiB;AAClC,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,sFAAqB;AACrD,eAAe,mBAAO,CAAC,oEAAY;AACnC,cAAc,mBAAO,CAAC,kEAAW;AACjC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;;ACba;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,mBAAmB,mBAAO,CAAC,4EAAgB;AAC3C,6BAA6B,mBAAO,CAAC,wGAA8B;AACnE,oBAAoB,mBAAO,CAAC,kFAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA,KAAK;AACL;AACA;AACA,iD;;;;;;;;;;;;;ACnBa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,mBAAmB,mBAAO,CAAC,4EAAgB;AAC3C,6BAA6B,mBAAO,CAAC,wGAA8B;AACnE,oBAAoB,mBAAO,CAAC,kFAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA,KAAK;AACL;AACA;AACA,2C;;;;;;;;;;;;;ACtCa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,8GAAyB;AAC1C,SAAS,mBAAO,CAAC,gHAA0B;AAC3C;AACA,SAAS,mBAAO,CAAC,kGAAmB;AACpC,SAAS,mBAAO,CAAC,4HAAgC;AACjD,SAAS,mBAAO,CAAC,8GAAyB;AAC1C,SAAS,mBAAO,CAAC,8GAAyB;AAC1C,SAAS,mBAAO,CAAC,0GAAuB;AACxC,SAAS,mBAAO,CAAC,kHAA2B;AAC5C,iC;;;;;;;;;;;;;ACda;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wD;;;;;;;;;;;;;AC/Ba;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,kEAAqB;AACxC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iD;;;;;;;;;;;;;AC9Ba;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,kEAAqB;AACxC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,wBAAwB,mBAAO,CAAC,sFAAqB;AACrD,eAAe,mBAAO,CAAC,oEAAY;AACnC,cAAc,mBAAO,CAAC,kEAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,kD;;;;;;;;;;;;;AC5Da;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iD;;;;;;;;;;;;;AClCa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB,uBAAuB,SAAS;AAC/D;AACA;AACA,eAAe,gBAAgB,uBAAuB,QAAQ;AAC9D;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,eAAe,gBAAgB,eAAe,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,+C;;;;;;;;;;;;;ACpCa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mD;;;;;;;;;;;;;AC/Ba;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;;AChEa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,wEAAc;AACvC,6BAA6B,mBAAO,CAAC,0GAAuB;AAC5D,eAAe,mBAAO,CAAC,gFAAM;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,sC;;;;;;;;;;;;;AChCa;AACb,8CAA8C,cAAc;AAC5D;AACA,wBAAwB,mBAAO,CAAC,sFAAqB;AACrD,mBAAmB,mBAAO,CAAC,4FAAY;AACvC,eAAe,mBAAO,CAAC,oEAAY;AACnC,cAAc,mBAAO,CAAC,kEAAW;AACjC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;;;;;;;;ACvCa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,sFAAqB;AACrD,cAAc,mBAAO,CAAC,kEAAW;AACjC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,eAAe,mBAAO,CAAC,oEAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8B;;;;;;;;;;;;;AClCa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,8GAAkB;AACnC,SAAS,mBAAO,CAAC,sGAAc;AAC/B,SAAS,mBAAO,CAAC,oFAAQ;AACzB,SAAS,mBAAO,CAAC,4FAAY;AAC7B,SAAS,mBAAO,CAAC,gGAAc;AAC/B,SAAS,mBAAO,CAAC,0FAAW;AAC5B,SAAS,mBAAO,CAAC,gFAAM;AACvB,SAAS,mBAAO,CAAC,0FAAW;AAC5B,iC;;;;;;;;;;;;;ACba;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,sFAAqB;AACrD,eAAe,mBAAO,CAAC,oEAAY;AACnC,cAAc,mBAAO,CAAC,kEAAW;AACjC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;;;;;;;;ACvDa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,0HAA0B;AAC3C,SAAS,mBAAO,CAAC,0HAA0B;AAC3C,iC;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,oEAAY;AACnC,mBAAmB,mBAAO,CAAC,4EAAgB;AAC3C;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,kD;;;;;;;;;;;;;ACfa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,oEAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kD;;;;;;;;;;;;;ACVa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;;ACxBa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6C;;;;;;;;;;;;;AC9Ea;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C;AACA,sEAAsE;AACtmC;;;;;;;;;;;;;AC3Ma;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,iGAAgB;AACjC;AACA,SAAS,mBAAO,CAAC,2GAAqB;AACtC,SAAS,mBAAO,CAAC,uFAAW;AAC5B,SAAS,mBAAO,CAAC,yFAAY;AAC7B;AACA,SAAS,mBAAO,CAAC,mGAAiB;AAClC,SAAS,mBAAO,CAAC,qGAAkB;AACnC,SAAS,mBAAO,CAAC,6GAAsB;AACvC,SAAS,mBAAO,CAAC,uHAA2B;AAC5C,iC;;;;;;;;;;;;;ACfa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;;AC5Ca;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,gDAAgD;AAChD;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;;ACjNa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAia;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8C;;;;;;;;;;;;;AC3Ba;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,kBAAkB,mBAAO,CAAC,oFAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mD;;;;;;;;;;;;;AC9Ca;AACb,8CAA8C,cA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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+B;;;;;;;;;;;;;ACvEa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,sFAAO;AACxB,SAAS,mBAAO,CAAC,sFAAO;AACxB,SAAS,mBAAO,CAAC,sFAAO;AACxB,SAAS,mBAAO,CAAC,oGAAc;AAC/B,SAAS,mBAAO,CAAC,sGAAe;AAChC,SAAS,mBAAO,CAAC,sFAAO;AACxB,SAAS,mBAAO,CAAC,8FAAW;AAC5B,SAAS,mBAAO,CAAC,gGAAY;AAC7B,iC;;;;;;;;;;;;;ACba;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,mFAAwB;AACxD,oBAAoB,mBAAO,CAAC,2EAAoB;AAChD,4BAA4B,mBAAO,CAAC,2GAAyB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+B;;;;;;;;;;;;;ACtBa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,mFAAwB;AACxD,oBAAoB,mBAAO,CAAC,2EAAoB;AAChD,4BAA4B,mBAAO,CAAC,2GAAyB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+B;;;;;;;;;;;;;ACtBa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,mFAAwB;AACxD,oBAAoB,mBAAO,CAAC,2EAAoB;AAChD,4BAA4B,mBAAO,CAAC,2GAAyB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;;AC1Ca;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,mFAAwB;AACxD,oBAAoB,mBAAO,CAAC,2EAAoB;AAChD,4BAA4B,mBAAO,CAAC,2GAAyB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;;AC5Ca;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,mFAAwB;AACxD,oBAAoB,mBAAO,CAAC,2EAAoB;AAChD,4BAA4B,mBAAO,CAAC,2GAAyB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+B;;;;;;;;;;;;;ACvEa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,mFAAwB;AACxD,oBAAoB,mBAAO,CAAC,2EAAoB;AAChD,4BAA4B,mBAAO,CAAC,2GAAyB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;;;;;;;;ACvCa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,mFAAwB;AACxD,oBAAoB,mBAAO,CAAC,2EAAoB;AAChD,4BAA4B,mBAAO,CAAC,2GAAyB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;;ACzCa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;;AC1Ba;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;;ACnBa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;AC5Ba;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C,kBAAkB,mBAAO,CAAC,oFAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;;ACzCa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C,kBAAkB,mBAAO,CAAC,oFAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;;;;;;;;ACnCa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C,kBAAkB,mBAAO,CAAC,oFAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+B;;;;;;;;;;;;;ACzBa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C,kBAAkB,mBAAO,CAAC,oFAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+B;;;;;;;;;;;;;AC9Ba;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C,kBAAkB,mBAAO,CAAC,oFAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;;;;;;;;AC1Ba;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C,kBAAkB,mBAAO,CAAC,oFAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+B;;;;;;;;;;;;;ACzBa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C,kBAAkB,mBAAO,CAAC,oFAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;ACnCa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C,kBAAkB,mBAAO,CAAC,oFAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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B;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C,kBAAkB,mBAAO,CAAC,oFAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;AC7Ca;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C,kBAAkB,mBAAO,CAAC,oFAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;;;;;;;;AC1Ba;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;;ACpCa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C,kBAAkB,mBAAO,CAAC,oFAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;;AC5Ba;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C,kBAAkB,mBAAO,CAAC,oFAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+B;;;;;;;;;;;;;ACzBa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C,kBAAkB,mBAAO,CAAC,oFAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;;AC3Ba;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+B;;;;;;;;;;;;;ACrCa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C,kBAAkB,mBAAO,CAAC,oFAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+B;;;;;;;;;;;;;ACzBa;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,kFAAmB;AACjD,aAAa,mBAAO,CAAC,4EAAM;AAC3B,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,qBAAqB,mBAAO,CAAC,gFAAkB;AAC/C,wBAAwB,mBAAO,CAAC,sFAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,qDAAqD;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;;AC1Da;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,8B;;;;;;;;;;;;;ACZa;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,eAAe,mBAAO,CAAC,oEAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;;ACnDa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,qBAAqB,mBAAO,CAAC,gFAAkB;AAC/C,eAAe,mBAAO,CAAC,oEAAY;AACnC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,wBAAwB,mBAAO,CAAC,sFAAqB;AACrD,cAAc,mBAAO,CAAC,kEAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;;ACzEa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,oGAAkB;AACnC,SAAS,mBAAO,CAAC,4EAAM;AACvB,SAAS,mBAAO,CAAC,wFAAY;AAC7B,SAAS,mBAAO,CAAC,wFAAY;AAC7B,SAAS,mBAAO,CAAC,oFAAU;AAC3B,SAAS,mBAAO,CAAC,gGAAgB;AACjC,SAAS,mBAAO,CAAC,gGAAgB;AACjC,iC;;;;;;;;;;;;;ACZa;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,kC;;;;;;;;;;;;;ACba;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,eAAe,mBAAO,CAAC,oEAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;;ACvDa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,WAAW,mBAAO,CAAC,+DAAc;AACjC,qBAAqB,mBAAO,CAAC,gFAAkB;AAC/C,eAAe,mBAAO,CAAC,oEAAY;AACnC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,wBAAwB,mBAAO,CAAC,sFAAqB;AACrD,cAAc,mBAAO,CAAC,kEAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;;AC7Ea;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,6GAAuB;AACxC,SAAS,mBAAO,CAAC,qIAAmC;AACpD,SAAS,mBAAO,CAAC,qHAA2B;AAC5C,SAAS,mBAAO,CAAC,mHAA0B;AAC3C,SAAS,mBAAO,CAAC,mHAA0B;AAC3C,SAAS,mBAAO,CAAC,yGAAqB;AACtC,SAAS,mBAAO,CAAC,yGAAqB;AACtC,SAAS,mBAAO,CAAC,yIAAqC;AACtD,SAAS,mBAAO,CAAC,+GAAwB;AACzC,SAAS,mBAAO,CAAC,+GAAwB;AACzC,SAAS,mBAAO,CAAC,qGAAmB;AACpC,SAAS,mBAAO,CAAC,6HAA+B;AAChD,SAAS,mBAAO,CAAC,6HAA+B;AAChD,SAAS,mBAAO,CAAC,yHAA6B;AAC9C,SAAS,mBAAO,CAAC,yHAA6B;AAC9C,SAAS,mBAAO,CAAC,qGAAmB;AACpC,SAAS,mBAAO,CAAC,2IAAsC;AACvD,SAAS,mBAAO,CAAC,2HAA8B;AAC/C,SAAS,mBAAO,CAAC,+GAAwB;AACzC,SAAS,mBAAO,CAAC,qGAAmB;AACpC,SAAS,mBAAO,CAAC,+GAAwB;AACzC,SAAS,mBAAO,CAAC,qGAAmB;AACpC,SAAS,mBAAO,CAAC,qGAAmB;AACpC,iC;;;;;;;;;;;;;AC5Ba;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,sFAAqB;AACrD,eAAe,mBAAO,CAAC,oEAAY;AACnC,cAAc,mBAAO,CAAC,kEAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+C;;;;;;;;;;;;;ACda;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,sFAAqB;AACrD,eAAe,mBAAO,CAAC,oEAAY;AACnC,cAAc,mBAAO,CAAC,kEAAW;AACjC,6BAA6B,mBAAO,CAAC,wGAA8B;AACnE,8BAA8B,mBAAO,CAAC,kGAA2B;AACjE,yBAAyB,mBAAO,CAAC,4GAA2B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,mBAAmB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2D;;;;;;;;;;;;;AC7Ga;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,sFAAqB;AACrD,eAAe,mBAAO,CAAC,oEAAY;AACnC,cAAc,mBAAO,CAAC,kEAAW;AACjC,6BAA6B,mBAAO,CAAC,wGAA8B;AACnE,8BAA8B,mBAAO,CAAC,kGAA2B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mD;;;;;;;;;;;;;ACzFa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,+BAA+B,mBAAO,CAAC,+GAAwB;AAC/D;AACA;AACA;AACA;AACA,kD;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,+BAA+B,mBAAO,CAAC,+GAAwB;AAC/D;AACA;AACA;AACA;AACA,kD;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,eAAe,mBAAO,CAAC,oEAAY;AACnC,wBAAwB,mBAAO,CAAC,sFAAqB;AACrD,cAAc,mBAAO,CAAC,kEAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6C;;;;;;;;;;;;;ACvBa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,eAAe,mBAAO,CAAC,oEAAY;AACnC,wBAAwB,mBAAO,CAAC,sFAAqB;AACrD,cAAc,mBAAO,CAAC,kEAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6C;;;;;;;;;;;;;ACzBa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,sFAAqB;AACrD,eAAe,mBAAO,CAAC,oEAAY;AACnC,cAAc,mBAAO,CAAC,kEAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6D;;;;;;;;;;;;;ACxBa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,+BAA+B,mBAAO,CAAC,+GAAwB;AAC/D;AACA;AACA;AACA;AACA,gD;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,+BAA+B,mBAAO,CAAC,+GAAwB;AAC/D;AACA;AACA;AACA;AACA,gD;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,eAAe,mBAAO,CAAC,oEAAY;AACnC,wBAAwB,mBAAO,CAAC,sFAAqB;AACrD,cAAc,mBAAO,CAAC,kEAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2C;;;;;;;;;;;;;ACvBa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,eAAe,mBAAO,CAAC,oEAAY;AACnC,wBAAwB,mBAAO,CAAC,sFAAqB;AACrD,cAAc,mBAAO,CAAC,kEAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uD;;;;;;;;;;;;;AClBa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,eAAe,mBAAO,CAAC,oEAAY;AACnC,wBAAwB,mBAAO,CAAC,sFAAqB;AACrD,cAAc,mBAAO,CAAC,kEAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uD;;;;;;;;;;;;;ACrBa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,eAAe,mBAAO,CAAC,oEAAY;AACnC,wBAAwB,mBAAO,CAAC,sFAAqB;AACrD,cAAc,mBAAO,CAAC,kEAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qD;;;;;;;;;;;;;AClBa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,eAAe,mBAAO,CAAC,oEAAY;AACnC,wBAAwB,mBAAO,CAAC,sFAAqB;AACrD,cAAc,mBAAO,CAAC,kEAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qD;;;;;;;;;;;;;ACrBa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,oEAAY;AACnC,cAAc,mBAAO,CAAC,kEAAW;AACjC,mBAAmB,mBAAO,CAAC,4EAAgB;AAC3C;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,2C;;;;;;;;;;;;;AChBa;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,sFAAqB;AACrD,eAAe,mBAAO,CAAC,oEAAY;AACnC,cAAc,mBAAO,CAAC,kEAAW;AACjC,eAAe,mBAAO,CAAC,4EAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8D;;;;;;;;;;;;;ACrBa;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,sFAAqB;AACrD,eAAe,mBAAO,CAAC,oEAAY;AACnC,cAAc,mBAAO,CAAC,kEAAW;AACjC,eAAe,mBAAO,CAAC,4EAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sD;;;;;;;;;;;;;ACnBa;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,sFAAqB;AACrD,eAAe,mBAAO,CAAC,oEAAY;AACnC,cAAc,mBAAO,CAAC,kEAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gD;;;;;;;;;;;;;ACfa;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,sFAAqB;AACrD,eAAe,mBAAO,CAAC,oEAAY;AACnC,cAAc,mBAAO,CAAC,kEAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2C;;;;;;;;;;;;;ACda;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,sFAAqB;AACrD,eAAe,mBAAO,CAAC,oEAAY;AACnC,cAAc,mBAAO,CAAC,kEAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gD;;;;;;;;;;;;;AChBa;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,sFAAqB;AACrD,eAAe,mBAAO,CAAC,oEAAY;AACnC,cAAc,mBAAO,CAAC,kEAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2C;;;;;;;;;;;;;ACfa;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,sFAAqB;AACrD,eAAe,mBAAO,CAAC,oEAAY;AACnC,cAAc,mBAAO,CAAC,kEAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2C;;;;;;;;;;;;;AChBa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,uFAAa;AAC9B,SAAS,mBAAO,CAAC,uGAAqB;AACtC,SAAS,mBAAO,CAAC,iFAAU;AAC3B,SAAS,mBAAO,CAAC,6EAAQ;AACzB,SAAS,mBAAO,CAAC,yFAAc;AAC/B,SAAS,mBAAO,CAAC,6FAAgB;AACjC,SAAS,mBAAO,CAAC,iGAAkB;AACnC,SAAS,mBAAO,CAAC,uFAAa;AAC9B,SAAS,mBAAO,CAAC,qFAAY;AAC7B,SAAS,mBAAO,CAAC,mFAAW;AAC5B,SAAS,mBAAO,CAAC,2FAAe;AAChC,SAAS,mBAAO,CAAC,mFAAW;AAC5B,SAAS,mBAAO,CAAC,uFAAa;AAC9B,SAAS,mBAAO,CAAC,yGAAsB;AACvC,SAAS,mBAAO,CAAC,iFAAU;AAC3B,SAAS,mBAAO,CAAC,qFAAY;AAC7B,gBAAgB,mBAAO,CAAC,mFAAW;AACnC;AACA,eAAe,mBAAO,CAAC,iFAAU;AACjC;AACA,gBAAgB,mBAAO,CAAC,mFAAW;AACnC;AACA,iC;;;;;;;;;;;;;AC3Ba;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;;AC5Ba;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;;ACpCa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,uGAAkB;AACnC,SAAS,mBAAO,CAAC,mGAAgB;AACjC,iC;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+B;;;;;;;;;;;;;ACpBa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+B;;;;;;;;;;;;;ACjEa;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,mFAAwB;AACxD,oBAAoB,mBAAO,CAAC,2EAAoB;AAChD,4BAA4B,mBAAO,CAAC,2GAAyB;AAC7D,yBAAyB,mBAAO,CAAC,+GAA8B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+B;;;;;;;;;;;;;ACzFa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,uFAAO;AACxB,SAAS,mBAAO,CAAC,uFAAO;AACxB,SAAS,mBAAO,CAAC,uFAAO;AACxB,SAAS,mBAAO,CAAC,2GAAiB;AAClC,SAAS,mBAAO,CAAC,6GAAkB;AACnC,iC;;;;;;;;;;;;;ACVa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,mFAAwB;AACxD,oBAAoB,mBAAO,CAAC,2EAAoB;AAChD,4BAA4B,mBAAO,CAAC,2GAAyB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+B;;;;;;;;;;;;;ACtBa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,mFAAwB;AACxD,oBAAoB,mBAAO,CAAC,2EAAoB;AAChD,4BAA4B,mBAAO,CAAC,2GAAyB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+B;;;;;;;;;;;;;ACtBa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,mFAAwB;AACxD,oBAAoB,mBAAO,CAAC,2EAAoB;AAChD,4BAA4B,mBAAO,CAAC,2GAAyB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;;ACvEa;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,mFAAwB;AACxD,oBAAoB,mBAAO,CAAC,2EAAoB;AAChD,4BAA4B,mBAAO,CAAC,2GAAyB;AAC7D,yBAAyB,mBAAO,CAAC,+GAA8B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+B;;;;;;;;;;;;;ACjEa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C,kBAAkB,mBAAO,CAAC,oFAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,uCAAuC;AACvC;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+B;;;;;;;;;;;;;AC3Ha;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gD;;;;;;;;;;;;;AClCa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC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ACA;AACA,4C;;;;;;;;;;;;;ACjBa;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,wC;;;;;;;;;;;;;ACjBa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,mFAAwB;AACxD,oBAAoB,mBAAO,CAAC,2EAAoB;AAChD,4BAA4B,mBAAO,CAAC,2GAAyB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;;ACrDa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,wGAAgB;AACjC,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;ACvCa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+B;;;;;;;;;;;;;AC/Ba;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;;ACrCa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;;AChCa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;ACzBa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;;ACrCa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,8EAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+C;;;;;;;;;;;;;AC1Ba;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;;AC5Ba;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+B;;;;;;;;;;;;;ACpBa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;;AChCa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,8FAAa;AAC9B,SAAS,mBAAO,CAAC,gFAAS;AAC1B,SAAS,mBAAO,CAAC,4EAAO;AACxB,SAAS,mBAAO,CAAC,0FAAc;AAC/B,SAAS,mBAAO,CAAC,4FAAe;AAChC,SAAS,mBAAO,CAAC,wFAAa;AAC9B,SAAS,mBAAO,CAAC,kFAAU;AAC3B,SAAS,mBAAO,CAAC,4GAAuB;AACxC,SAAS,mBAAO,CAAC,4FAAe;AAChC,SAAS,mBAAO,CAAC,4EAAO;AACxB,SAAS,mBAAO,CAAC,kFAAU;AAC3B,SAAS,mBAAO,CAAC,gFAAS;AAC1B,SAAS,mBAAO,CAAC,kFAAU;AAC3B,SAAS,mBAAO,CAAC,8EAAQ;AACzB,SAAS,mBAAO,CAAC,gFAAS;AAC1B,SAAS,mBAAO,CAAC,sFAAY;AAC7B,SAAS,mBAAO,CAAC,sGAAoB;AACrC,SAAS,mBAAO,CAAC,8FAAgB;AACjC,SAAS,mBAAO,CAAC,sFAAY;AAC7B;AACA,SAAS,mBAAO,CAAC,gFAAS;AAC1B,SAAS,mBAAO,CAAC,kFAAU;AAC3B,SAAS,mBAAO,CAAC,kFAAU;AAC3B,SAAS,mBAAO,CAAC,oFAAW;AAC5B,SAAS,mBAAO,CAAC,oFAAW;AAC5B,SAAS,mBAAO,CAAC,wFAAa;AAC9B,SAAS,mBAAO,CAAC,8EAAQ;AACzB,SAAS,mBAAO,CAAC,gFAAS;AAC1B,SAAS,mBAAO,CAAC,gFAAS;AAC1B,iC;;;;;;;;;;;;;AClCa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C,wBAAwB,mBAAO,CAAC,sFAAqB;AACrD,eAAe,mBAAO,CAAC,oEAAY;AACnC,cAAc,mBAAO,CAAC,kEAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA,+BAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;AC3Fa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;;ACxBa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C,0BAA0B,mBAAO,CAAC,8GAA4B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;;ACjDa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;ACpBa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C,0BAA0B,mBAAO,CAAC,8GAA4B;AAC9D,eAAe,mBAAO,CAAC,8EAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;;AC9Ca;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4C;;;;;;;;;;;;;ACnCa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;;ACrCa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;;AChCa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C,wBAAwB,mBAAO,CAAC,sFAAqB;AACrD,eAAe,mBAAO,CAAC,oEAAY;AACnC,cAAc,mBAAO,CAAC,kEAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA,+BAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;AC3Fa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;;ACxBa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,kBAAkB,mBAAO,CAAC,oFAAY;AACtC,wBAAwB,mBAAO,CAAC,gFAAqB;AACrD,oBAAoB,mBAAO,CAAC,wEAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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AyD;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;ACda;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,wHAAuB;AACxC,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,UAAU,YAAY;AACtB,UAAU,QAAQ;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+C;;;;;;;;;;;;;AChCa;AACb,8CAA8C,cAAc;AAC5D,cAAc,mBAAO,CAAC,+DAAQ;AAC9B,iBAAiB,mBAAO,CAAC,qEAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;ACpEa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,yEAAa;AAC9B,iBAAiB,mBAAO,CAAC,qEAAQ;AACjC;AACA,iC;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,6EAAiB;AAC7C,wBAAwB,mBAAO,CAAC,yFAAwB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8C;;;;;;;;;;;;;AC/Ba;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,4GAAsB;AACvC,iC;;;;;;;;;;;;;ACNa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,wFAAe;AAChC,SAAS,mBAAO,CAAC,oFAAa;AAC9B,SAAS,mBAAO,CAAC,oFAAa;AAC9B,iC;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,yFAAwB;AACxD,oBAAoB,mBAAO,CAAC,6EAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,+C;;;;;;;;;;;;;AChBa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,2EAAoB;AAChD,uBAAuB,mBAAO,CAAC,uFAAuB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,8B;;;;;;;;;;;;;ACfa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,4GAAuB;AACxC,SAAS,mBAAO,CAAC,0EAAM;AACvB,SAAS,mBAAO,CAAC,wFAAa;AAC9B,SAAS,mBAAO,CAAC,8EAAQ;AACzB,iC;;;;;;;;;;;;;ACTa;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,yFAAwB;AACxD,oBAAoB,mBAAO,CAAC,6EAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,qC;;;;;;;;;;;;;ACZa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,2FAAyB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;;ACfa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,oFAAW;AAC5B,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,UAAU,YAAY;AACtB,UAAU,QAAQ;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;;;;;;;;AC5Ba;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,8EAAa;AACzC,sBAAsB,mBAAO,CAAC,kFAAe;AAC7C,sBAAsB,mBAAO,CAAC,kFAAe;AAC7C,iBAAiB,mBAAO,CAAC,wEAAU;AACnC;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,eAAe,UAAU;AACzB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,WAAW,WAAW,OAAO;AACrF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;AC1Na;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;;ACzEa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,8EAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,SAAS;AACzB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,mBAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,cAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,uC;;;;;;;;;;;;;ACzFa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,gBAAgB,OAAO;AACvB;AACA,SAAS,aAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;;AC5Ca;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,8EAAa;AACzC,oBAAoB,mBAAO,CAAC,8EAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;;ACrIa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0DAA0D;AAC3D,qC;;;;;;;;;;;;;ACnBa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,8EAAa;AACzC;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB,SAAS;AACzB,gBAAgB,SAAS;AACzB,gBAAgB,SAAS;AACzB,gBAAgB,SAAS;AACzB,gBAAgB,SAAS;AACzB,gBAAgB,SAAS;AACzB,gBAAgB,SAAS;AACzB,gBAAgB,SAAS;AACzB,gBAAgB,SAAS;AACzB,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,qDAAqD;AACvF;AACA;AACA;AACA,+BAA+B,qBAAqB;AACpD;AACA;AACA,mCAAmC,sBAAsB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,WAAW,MAAM,QAAQ;AAC3D;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB,SAAS;AACzB,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxgCAAgC,yBAAyB;AACzD,iDAAiD,wDAAwD;AACzG;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iBAAiB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;A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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,0D;;;;;;;;;;;;;AC/Ca;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,4FAAc;AAC1C,mBAAmB,mBAAO,CAAC,+EAAmB;AAC9C,qBAAqB,mBAAO,CAAC,iGAAc;AAC3C,gBAAgB,mBAAO,CAAC,uFAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,wD;;;;;;;;;;;;;AC1Ca;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,4FAAc;AAC1C,eAAe,mBAAO,CAAC,uEAAe;AACtC,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;;ACvBa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,4FAAc;AAC1C,mBAAmB,mBAAO,CAAC,+EAAmB;AAC9C,oBAAoB,mBAAO,CAAC,+FAAa;AACzC,gBAAgB,mBAAO,CAAC,uFAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,yD;;;;;;;;;;;;;AC/Ca;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,4FAAc;AAC1C,mBAAmB,mBAAO,CAAC,+EAAmB;AAC9C,oBAAoB,mBAAO,CAAC,+FAAa;AACzC,gBAAgB,mBAAO,CAAC,uFAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uD;;;;;;;;;;;;;AC1Ca;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,4FAAc;AAC1C,eAAe,mBAAO,CAAC,uEAAe;AACtC,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;ACvBa;AACb,8CAA8C,cAAc;AAC5D,yCAAyC,mBAAO,CAAC,yIAAkC;AACnF;AACA;AACA;AACA;AACA,8D;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,uEAAe;AACtC,oBAAoB,mBAAO,CAAC,4FAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0D;;;;;;;;;;;;;AC5Ba;AACb,8CAA8C,cAAc;AAC5D,yCAAyC,mBAAO,CAAC,yIAAkC;AACnF;AACA;AACA;AACA;AACA,qD;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,uEAAe;AACtC,uBAAuB,mBAAO,CAAC,uFAAuB;AACtD,mBAAmB,mBAAO,CAAC,+EAAmB;AAC9C,gBAAgB,mBAAO,CAAC,uFAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kD;;;;;;;;;;;;;AC9Da;AACb,8CAA8C,cAAc;AAC5D,uBAAuB,mBAAO,CAAC,uFAAuB;AACtD,mBAAmB,mBAAO,CAAC,+EAAmB;AAC9C,gBAAgB,mBAAO,CAAC,uFAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4C;;;;;;;;;;;;;ACzDa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,uEAAe;AACtC,uBAAuB,mBAAO,CAAC,uFAAuB;AACtD,gBAAgB,mBAAO,CAAC,uFAAuB;AAC/C,mBAAmB,mBAAO,CAAC,+EAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4D;;;;;;;;;;;;;ACnCa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,uEAAe;AACtC,uBAAuB,mBAAO,CAAC,uFAAuB;AACtD,mBAAmB,mBAAO,CAAC,+EAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8D;;;;;;;;;;;;;AC5Ca;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,uEAAe;AACtC,uBAAuB,mBAAO,CAAC,uFAAuB;AACtD,gBAAgB,mBAAO,CAAC,uFAAuB;AAC/C,mBAAmB,mBAAO,CAAC,+EAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4D;;;;;;;;;;;;;AC/Ca;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,uEAAe;AACtC,uBAAuB,mBAAO,CAAC,uFAAuB;AACtD,gBAAgB,mBAAO,CAAC,uFAAuB;AAC/C,mBAAmB,mBAAO,CAAC,+EAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gD;;;;;;;;;;;;;ACtDa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,uEAAe;AACtC,uBAAuB,mBAAO,CAAC,uFAAuB;AACtD,mBAAmB,mBAAO,CAAC,+EAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8C;;;;;;;;;;;;;ACtDa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C,eAAe,mBAAO,CAAC,uEAAe;AACtC,uBAAuB,mBAAO,CAAC,uFAAuB;AACtD,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD,gCAAgC,mBAAO,CAAC,yGAAgC;AACxE,gBAAgB,mBAAO,CAAC,uFAAuB;AAC/C,wBAAwB,mBAAO,CAAC,yFAAwB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;;ACrEa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C,eAAe,mBAAO,CAAC,uEAAe;AACtC,uBAAuB,mBAAO,CAAC,uFAAuB;AACtD,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD,gBAAgB,mBAAO,CAAC,uFAAuB;AAC/C,gCAAgC,mBAAO,CAAC,yGAAgC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6C;;;;;;;;;;;;;AC5Ca;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C,eAAe,mBAAO,CAAC,uEAAe;AACtC,uBAAuB,mBAAO,CAAC,uFAAuB;AACtD,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD,gBAAgB,mBAAO,CAAC,uFAAuB;AAC/C,gCAAgC,mBAAO,CAAC,yGAAgC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;;AC5Ca;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C,eAAe,mBAAO,CAAC,uEAAe;AACtC,uBAAuB,mBAAO,CAAC,uFAAuB;AACtD,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD,gBAAgB,mBAAO,CAAC,uFAAuB;AAC/C,gCAAgC,mBAAO,CAAC,yGAAgC;AACxE,wBAAwB,mBAAO,CAAC,yFAAwB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8C;;;;;;;;;;;;;ACrEa;AACb,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,+EAAmB;AAC9C,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD,gCAAgC,mBAAO,CAAC,yGAAgC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4C;;;;;;;;;;;;;AC5Ba;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,oD;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,qD;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA,yCAAyC,mBAAmB;AAC5D;AACA;AACA;AA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CA;AACA;AACA;AACA,qDAAqD;AACrD,qDAAqD;AACrD,qDAAqD;AACrgBAAgB;AAC9C,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,UAAU,GAAG,MAAM;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,mEAAmE;AACpE,yC;;;;;;;;;;;;;ACjoGa;AACb,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,gFAAQ;AAC1C;AACA,iC;;;;;;;;;;;;;ACJa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,+FAAa;AAC9B,SAAS,mBAAO,CAAC,uFAAS;AAC1B,iC;;;;;;;;;;;;;ACPa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,iGAAY;AAC7B,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD,gBAAgB,mBAAO,CAAC,wFAAU;AAClC,mBAAmB,mBAAO,CAAC,+EAAmB;AAC9C,gBAAgB,mBAAO,CAAC,yEAAgB;AACxC,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C,gCAAgC,mBAAO,CAAC,yGAAgC;AACxE,wBAAwB,mBAAO,CAAC,yFAAwB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,UAAU;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,UAAU;AACpE;AACA;AACA,0DAA0D,+BAA+B;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;;AC5Da;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD,mBAAmB,mBAAO,CAAC,+EAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0D;;;;;;;;;;;;;ACpBa;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD,mBAAmB,mBAAO,CAAC,+EAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4C;;;;;;;;;;;;;AChCa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,yIAAkC;AACnD,SAAS,mBAAO,CAAC,6GAAoB;AACrC,iC;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,sEAAQ;AAClC;AACA,iC;;;;;;;;;;;;;ACJa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,2FAAyB;AAC1D,oBAAoB,mBAAO,CAAC,sFAAc;AAC1C;AACA;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CA;AACA,CAAC,0GAA0G;AAC3G,mD;;;;;;;;;;;;;ACxBa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gHAAgH;AACjH,qD;;;;;;;;;;;;;ACrBa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,iGAAa;AAC9B,iC;;;;;;;;;;;;;ACNa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,iHAAmB;AACpC,SAAS,mBAAO,CAAC,iHAAmB;AACpC,SAAS,mBAAO,CAAC,+GAAkB;AACnC,iC;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,kCAAkC,mBAAO,CAAC,sHAA+B;AACzE,oCAAoC,mBAAO,CAAC,0HAAiC;AAC7E,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,qEAAqE,GAAG,4EAA4E,6BAA6B,qEAAqE,GAAG,qEAAqE;AACtX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qEAAqE,GAAG,4EAA4E,8BAA8B;AACzN;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,qEAAqE,GAAG,4EAA4E,iCAAiC;AAChO;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,2CAA2C,qEAAqE,GAAG,4EAA4E,iCAAiC;AAChO;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,2CAA2C,qEAAqE,GAAG,4EAA4E,iCAAiC;AAChO;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,qEAAqE,GAAG,4EAA4E,+BAA+B;AAC9N;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,2CAA2C,qEAAqE,GAAG,4EAA4E,+BAA+B;AAC9N;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,2CAA2C,qEAAqE,GAAG,4EAA4E,+BAA+B;AAC9N;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,qEAAqE,GAAG,4EAA4E;AAC/L;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,qEAAqE,GAAG,4EAA4E,kCAAkC;AACrO;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,qEAAqE,GAAG,4EAA4E,kCAAkC;AACzO;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,mDAAmD,qEAAqE,GAAG,4EAA4E,kCAAkC;AACzO;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qEAAqE,GAAG,4EAA4E;AAC3L;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,qEAAqE,GAAG,4EAA4E,gDAAgD;AAC/O;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,qEAAqE,GAAG,4EAA4E,gDAAgD;AACnP;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,+CAA+C,qEAAqE,GAAG,4EAA4E,gDAAgD;AACnP;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2C;;;;;;;;;;;;;AC1Ta;AACb,8CAA8C,cAAc;AAC5D,oCAAoC,mBAAO,CAAC,0HAAiC;AAC7E,yBAAyB,mBAAO,CAAC,+GAAkB;AACnD,kCAAkC,mBAAO,CAAC,sHAA+B;AACzE,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,kCAAkC,qEAAqE,GAAG,mEAAmE;AAC7K;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,kCAAkC,qEAAqE,4BAA4B,uBAAuB,qEAAqE;AAC/N;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2C;;;;;;;;;;;;;AC9Ca;AACb,8CAA8C,cAAc;AAC5D,kCAAkC,mBAAO,CAAC,sHAA+B;AACzE,cAAc,mBAAO,CAAC,qEAAc;AACpC,oCAAoC,mBAAO,CAAC,0HAAiC;AAC7E,0BAA0B,mBAAO,CAAC,iHAAmB;AACrD,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,qEAAqE,4BAA4B,mEAAmE;AAC3N;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,qEAAqE;AAC3G;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,sCAAsC,qEAAqE,oBAAoB,yFAAyF;AACxN;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,qEAAqE,oBAAoB,gGAAgG;AAC/N;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,qEAAqE,oBAAoB,yFAAyF,iCAAiC,gGAAgG;AAC7V;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,kCAAkC,qEAAqE,sBAAsB,wFAAwF;AACrN;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,kCAAkC,qEAAqE,sBAAsB,0EAA0E;AACvM;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,qEAAqE;AACvG;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,qEAAqE,GAAG,6EAA6E,uCAAuC;AACvO;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,2CAA2C,qEAAqE,GAAG,6EAA6E,uCAAuC;AACvO;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qEAAqE,GAAG,kFAAkF;AACjM;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,qEAAqE,GAAG,6EAA6E,qCAAqC,qEAAqE,GAAG,kFAAkF,aAAa;AAChZ;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,+CAA+C,qEAAqE,GAAG,6EAA6E,qCAAqC,qEAAqE,GAAG,kFAAkF,aAAa;AAChZ;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD,gEAAgE;AAChE;AACA,yEAAyE;AACzE;AACA;AACA;AACA;AACA,+CAA+C,mEAAmE,GAAG,qEAAqE,yBAAyB;AACnN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,gEAAgE;AAChE;AACA,yEAAyE;AACzE;AACA;AACA;AACA;AACA,+CAA+C,mEAAmE,GAAG,qEAAqE,yBAAyB;AACnN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D,4DAA4D;AAC5D;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA,2CAA2C,mEAAmE,GAAG,qEAAqE,yBAAyB;AAC/M;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qEAAqE,GAAG,4EAA4E;AAC3L;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;;ACjVa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,8EAAQ;AACzC;AACA,iC;;;;;;;;;;;;;ACJa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,iIAA4B;AAC7C,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,uEAAe;AACtC,2BAA2B,mBAAO,CAAC,+FAA2B;AAC9D,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oD;;;;;;;;;;;;;ACjBa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,iGAAe;AAChC,SAAS,mBAAO,CAAC,6FAAa;AAC9B,SAAS,mBAAO,CAAC,6FAAa;AAC9B,SAAS,mBAAO,CAAC,qFAAS;AAC1B,iC;;;;;;;;;;;;;ACTa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,yGAAiB;AAClC,SAAS,mBAAO,CAAC,uGAAgB;AACjC,SAAS,mBAAO,CAAC,2FAAU;AAC3B,iC;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C,2BAA2B,mBAAO,CAAC,+FAA2B;AAC9D,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,EAAE;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,EAAE;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,EAAE;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,EAAE;AACpD;AACA;AACA;AACA,4DAA4D,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;;ACtDa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,2FAAU;AACnC,sBAAsB,mBAAO,CAAC,kGAAgB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;;ACrBa;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD,gBAAgB,mBAAO,CAAC,sFAAU;AAClC,2BAA2B,mBAAO,CAAC,+FAA2B;AAC9D,oBAAoB,mBAAO,CAAC,8FAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;;ACxCa;AACb,8CAA8C,cAAc;AAC5D,4BAA4B,mBAAO,CAAC,iGAA4B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0D;;;;;;;;;;;;;ACZa;AACb,8CAA8C,cAAc;AAC5D,2BAA2B,mBAAO,CAAC,+FAA2B;AAC9D,mBAAmB,mBAAO,CAAC,+EAAmB;AAC9C,gBAAgB,mBAAO,CAAC,sFAAU;AAClC;AACA;AACA;AACA;AACA;AACA,sDAAsD,UAAU;AAChE;AACA;AACA;AACA;AACA;AACA,2D;;;;;;;;;;;;;AChBa;AACb,8CAA8C,cAAc;AAC5D,2BAA2B,mBAAO,CAAC,+FAA2B;AAC9D,mBAAmB,mBAAO,CAAC,+EAAmB;AAC9C,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD,gBAAgB,mBAAO,CAAC,sFAAU;AAClC,gCAAgC,mBAAO,CAAC,yGAAgC;AACxE;AACA;AACA;AACA;AACA;AACA,sDAAsD,UAAU;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,UAAU;AAC5D;AACA;AACA,kDAAkD,UAAU;AAC5D;AACA;AACA;AACA;AACA,+D;;;;;;;;;;;;;AC5Ba;AACb,8CAA8C,cAAc;AAC5D,2BAA2B,mBAAO,CAAC,+FAA2B;AAC9D,mBAAmB,mBAAO,CAAC,+EAAmB;AAC9C,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD,gBAAgB,mBAAO,CAAC,sFAAU;AAClC,gCAAgC,mBAAO,CAAC,yGAAgC;AACxE;AACA;AACA;AACA;AACA,kDAAkD,UAAU;AAC5D;AACA;AACA;AACA;AACA;AACA,kDAAkD,UAAU;AAC5D;AACA;AACA,kDAAkD,UAAU;AAC5D;AACA;AACA;AACA;AACA,iD;;;;;;;;;;;;;AC1Ba;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,2IAAkC;AACnD,SAAS,mBAAO,CAAC,6IAAmC;AACpD,SAAS,mBAAO,CAAC,qJAAuC;AACxD,SAAS,mBAAO,CAAC,yHAAyB;AAC1C,iC;;;;;;;;;;;;;ACTa;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD,mBAAmB,mBAAO,CAAC,+EAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0D;;;;;;;;;;;;;AClBa;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,qFAAsB;AACpD;AACA,sEAAsE,kBAAkB;AACxF;AACA;AACA;AACA,oEAAoE,kBAAkB;AACtF;AACA;AACA,4C;;;;;;;;;;;;;ACXa;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,qFAAsB;AACpD,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kD;;;;;;;;;;;;;AClDa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,uIAAkC;AACnD,SAAS,mBAAO,CAAC,2GAAoB;AACrC,SAAS,mBAAO,CAAC,uHAA0B;AAC3C,iC;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,uBAAuB,mBAAO,CAAC,4EAAQ;AACvC;AACA,iC;;;;;;;;;;;;;ACJa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,2FAAa;AAC9B,SAAS,mBAAO,CAAC,mFAAS;AAC1B,iC;;;;;;;;;;;;;ACPa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,mIAA+B;AAChD,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C,2BAA2B,mBAAO,CAAC,+FAA2B;AAC9D;AACA;AACA;AACA;AACA;AACA,uD;;;;;;;;;;;;;ACTa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C,2BAA2B,mBAAO,CAAC,+FAA2B;AAC9D,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;;ACxBa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,iGAAgB;AACjC,iC;;;;;;;;;;;;;ACNa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,6FAAkB;AACnC,0BAA0B,mBAAO,CAAC,+EAAQ;AAC1C;AACA,iC;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE;AACvE;AACA,0C;;;;;;;;;;;;;ACjBa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,8FAAa;AAC9B,iC;;;;;;;;;;;;;ACNa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,kHAAqB;AACtC,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,iGAAsB;AACvD;AACA;AACA;AACA;AACA;AACA,6C;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E;AAC3E,2EAA2E;AAC3E,2EAA2E;AAC3E;AACA;AACA;AACA;AACA,6EAA6E;AAC7E,6EAA6E;AAC7E,6EAA6E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD,iDAAiD;AACjD,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,gBAAgB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,SAAS;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;AC1Na;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,8EAAY;AAC7B,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;;AC7Ba;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,0EAAQ;AACrC;AACA,iC;;;;;;;;;;;;;ACJa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,iFAAS;AAC1B,iC;;;;;;;;;;;;;ACNa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,mFAAU;AAC3B,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,kC;;;;;;;;;;;;;AClBa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,oFAAe;AAChC,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,2EAAc;AAC1C,gBAAgB,mBAAO,CAAC,mEAAU;AAClC,gBAAgB,mBAAO,CAAC,iFAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;;AChGa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,4EAAc;AAC/B,kBAAkB,mBAAO,CAAC,sEAAQ;AAClC;AACA,eAAe,mBAAO,CAAC,sEAAQ;AAC/B;AACA,iC;;;;;;;;;;;;;ACVa;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,sEAAQ;AAClC,oBAAoB,mBAAO,CAAC,2EAAc;AAC1C,gBAAgB,mBAAO,CAAC,iFAAiB;AACzC,sBAAsB,mBAAO,CAAC,+EAAgsC;;;;;;;;;;;;;AC1Ra;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,gFAAkB;AAC/C,mBAAmB,mBAAO,CAAC,+EAAmB;AAC9C,cAAc,mBAAO,CAAC,qEAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,4C;;;;;;;;;;;;;AC/Ba;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,gFAAkB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;;ACba;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,yGAAoB;AACrC,SAAS,mBAAO,CAAC,6FAAc;AAC/B,iC;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,yFAAwB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;;ACVa;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,yFAAwB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;;ACVa;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,yFAAwB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;ACjDa;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,yFAAwB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;;AC7Ba;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,iGAAiB;AAClC,SAAS,mBAAO,CAAC,mFAAU;AAC3B,SAAS,mBAAO,CAAC,yFAAa;AAC9B,SAAS,mBAAO,CAAC,6FAAe;AAChC,iC;;;;;;;;;;;;;ACTa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,yFAAe;AAChC,SAAS,mBAAO,CAAC,qFAAa;AAC9B,SAAS,mBAAO,CAAC,qFAAa;AAC9B,SAAS,mBAAO,CAAC,qFAAa;AAC9B,SAAS,mBAAO,CAAC,6EAAS;AAC1B,iC;;;;;;;;;;;;;ACVa;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,gFAAkB;AAC/C,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C,cAAc,mBAAO,CAAC,qEAAc;AACpC,gBAAgB,mBAAO,CAAC,8EAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,WAAW;AACX;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,2C;;;;;;;;;;;;;AC7Ca;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,gFAAkB;AAC/C,cAAc,mBAAO,CAAC,qEAAc;AACpC,oBAAoB,mBAAO,CAAC,sFAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,cAAc,mBAAmB,uBAAuB;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,cAAc,qBAAqB,qBAAqB;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,sJAAsJ;AACtJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,6C;;;;;;;;;;;;;AC3Ea;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,gFAAkB;AAC/C,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,wD;;;;;;;;;;;;;AC7Ca;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,gFAAkB;AAC/C,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uD;;;;;;;;;;;;;ACvBa;AACb,8CAA8C,cAAc;AAC5D,uCAAuC,mBAAO,CAAC,+HAAgC;AAC/E,sCAAsC,mBAAO,CAAC,6HAA+B;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;;ACba;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,gFAAkB;AAC/C,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C,cAAc,mBAAO,CAAC,qEAAc;AACpC,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,gCAAgC,mBAAO,CAAC,yGAAgC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,sD;;;;;;;;;;;;;ACjEa;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,gFAAkB;AAC/C,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C,cAAc,mBAAO,CAAC,qEAAc;AACpC,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,gCAAgC,mBAAO,CAAC,yGAAgC;AACxE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,yC;;;;;;;;;;;;;AC3Da;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,gFAAkB;AAC/C,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C,cAAc,mBAAO,CAAC,qEAAc;AACpC,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,gCAAgC,mBAAO,CAAC,yGAAgC;AACxE,gBAAgB,mBAAO,CAAC,8EAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uC;;;;;;;;;;;;;ACrDa;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD,qBAAqB,mBAAO,CAAC,gFAAkB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,sNAAsN;AACtN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,8B;;;;;;;;;;;;;ACtCa;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,gFAAkB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wHAAwH;AACxH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,0C;;;;;;;;;;;;;AClCa;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,gFAAkB;AAC/C;AACA;AACA;AACA;A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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,sGAAsG;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,4C;;;;;;;;;;;;;AClDa;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,gFAAkB;AAC/C,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C,cAAc,mBAAO,CAAC,qEAAc;AACpC,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,gCAAgC,mBAAO,CAAC,yGAAgC;AACxE;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,0C;;;;;;;;;;;;;ACpDa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,qBAAqB,mBAAO,CAAC,gFAAkB;AAC/C,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C,cAAc,mBAAO,CAAC,qEAAc;AACpC,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,0BAA0B,mBAAO,CAAC,qGAAmB;AACrD,gCAAgC,mBAAO,CAAC,yGAAgC;AACxE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,8C;;;;;;;;;;;;;AC5Ea;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,qBAAqB,mBAAO,CAAC,gFAAkB;AAC/C,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C,cAAc,mBAAO,CAAC,qEAAc;AACpC,0BAA0B,mBAAO,CAAC,qGAAmB;AACrD,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,gCAAgC,mBAAO,CAAC,yGAAgC;AACxE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,sJAAsJ;AACtJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,kC;;;;;;;;;;;;;ACjEa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+DAAc;AACjC,qBAAqB,mBAAO,CAAC,gFAAkB;AAC/C,iBAAiB,mBAAO,CAAC,2EAAiB;AAC1C,4BAA4B,mBAAO,CAAC,yGAAqB;AACzD,cAAc,mBAAO,CAAC,qEAAc;AACpC,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,kBAAkB,GAAG,mBAAmB,iCAAiC;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,sJAAsJ;AACtJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,2C;;;;;;;;;;;;;AClEa;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,gFAAkB;AAC/C,cAAc,mBAAO,CAAC,qEAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qOAAqO;AAChP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,2C;;;;;;;;;;;;;AC/Ca;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,gFAAkB;AAC/C,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD,cAAc,mBAAO,CAAC,qEAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,6MAA6M;AAC7M;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2C;;;;;;;;;;;;;AClDa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,YAAY;AACvE;AACA;AACA;AACA,iD;;;;;;;;;;;;;ACZa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA,2BAA2B,YAAY;AACvC;AACA;AACA;AACA,oD;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,gCAAgC,mBAAO,CAAC,yGAAgC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yD;;;;;;;;;;;;;AClBa;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD,+CAA+C,mBAAO,CAAC,+IAAwC;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,aAAa,gBAAgB,aAAa,mCAAmC,gBAAgB,IAAI,mBAAmB;AAC/I;AACA;AACA;AACA,uE;;;;;;;;;;;;;ACjBa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,YAAY;AAC1D;AACA;AACA;AACA,iD;;;;;;;;;;;;;ACZa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gE;;;;;;;;;;;;;AC9Ca;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,iHAAyB;AAC1C,SAAS,mBAAO,CAAC,uHAA4B;AAC7C,SAAS,mBAAO,CAAC,iIAAiC;AAClD,SAAS,mBAAO,CAAC,6JAA+C;AAChE,SAAS,mBAAO,CAAC,iHAAyB;AAC1C,SAAS,mBAAO,CAAC,+IAAwC;AACzD,SAAS,mBAAO,CAAC,uFAAY;AAC7B,iC;;;;;;;;;;;;;ACZa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;;AC7Ba;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;;ACXa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mD;;;;;;;;;;;;;ACpBa;AACb,8CAA8C,cAAc;AAC5D,cAAc,mBAAO,CAAC,qEAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6E;;;;;;;;;;;;;ACda;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,2FAAgB;AACjC,SAAS,mBAAO,CAAC,iHAA2B;AAC5C,SAAS,mBAAO,CAAC,qKAAqD;AACtE,SAAS,mBAAO,CAAC,iHAA2B;AAC5C,SAAS,mBAAO,CAAC,6GAAyB;AAC1C,SAAS,mBAAO,CAAC,6GAAyB;AAC1C,SAAS,mBAAO,CAAC,yGAAuB;AACxC,iC;;;;;;;;;;;;;ACZa;AACb,8CAA8C,cAAc;AAC5D,uBAAuB,mBAAO,CAAC,2FAAgB;AAC/C,kCAAkC,mBAAO,CAAC,iHAA2B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mD;;;;;;;;;;;;;ACfa;AACb,8CAA8C,cAAc;AAC5D,uBAAuB,mBAAO,CAAC,2FAAgB;AAC/C,kCAAkC,mBAAO,CAAC,iHAA2B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iD;;;;;;;;;;;;;ACfa;AACb,8CAA8C,cAAc;AAC5D,uBAAuB,mBAAO,CAAC,2FAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iD;;;;;;;;;;;;;AChBa;AACb,8CAA8C,cAAc;AAC5D,cAAc,mBAAO,CAAC,qEAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+C;;;;;;;;;;;;;ACVa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0GAA0G;AAC3G,mD;;;;;;;;;;;;;AC5Ba;AACb,8CAA8C,cAAc;AAC5D,iC;;;;;;;;;;;;;ACFa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,uDAAuD;AACxD,qC;;;;;;;;;;;;;ACba;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,yEAAQ;AACpC;AACA,iC;;;;;;;;;;;;;ACJa;AACb,8CAA8C,cAAc;AAC5D,iC;;;;;;;;;;;;;ACFa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,yEAAQ;AACpC;AACA,iC;;;;;;;;;;;;;ACJa;AACb,8CAA8C,cAAc;AAC5D,iC;;;;;;;;;;;;;ACFa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,qBAAqB,uBAAuB,sBAAsB;AACnH;AACA;AACA,iDAAiD,oBAAoB;AACrE;AACA;AACA;AACA;AACA,mDAAmD,sBAAsB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2D;;;;;;;;;;;;;ACzBa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,0HAAmC;AACpD,SAAS,mBAAO,CAAC,gIAAsC;AACvD,SAAS,mBAAO,CAAC,kGAAuB;AACxC,SAAS,mBAAO,CAAC,kGAAuB;AACxC,iC;;;;;;;;;;;;;ACTa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8D;;;;;;;;;;;;;ACtBa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+C;;;;;;;;;;;;;ACba;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+C;;;;;;;;;;;;;ACba;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,8EAAQ;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;;AC5Ba;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,sFAAe;AAChC,SAAS,mBAAO,CAAC,oFAAc;AAC/B,kBAAkB,mBAAO,CAAC,8EAAQ;AAClC;AACA,iC;;;;;;;;;;;;;ACTa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA,kBAAkB,mBAAO,CAAC,8EAAQ;AAClC,qBAAqB,mBAAO,CAAC,6EAAe;AAC5C,yBAAyB,mBAAO,CAAC,qFAAmB;AACpD,oBAAoB,mBAAO,CAAC,2EAAcgBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;;ACnWa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,yGAAgB;AACjC,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,qFAAsB;AACpD,qBAAqB,mBAAO,CAAC,wFAAkB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,wC;;;;;;;;;;;;;ACvBa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,iGAAe;AAChC,SAAS,mBAAO,CAAC,6FAAa;AAC9B,SAAS,mBAAO,CAAC,6FAAa;AAC9B,iC;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,uBAAuB,mBAAO,CAAC,0FAA0B;AACzD,qBAAqB,mBAAO,CAAC,2FAAqB;AAClD;AACA;AACA,WAAW;AACX;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gD;;;;;;;;;;;;;ACrBa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,4IAAwB;AACzC,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,uBAAuB,mBAAO,CAAC,0FAA0B;AACzD,qBAAqB,mBAAO,CAAC,2FAAqB;AAClD;AACA;AACA,WAAW;AACX;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,iD;;;;;;;;;;;;;ACrBa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,+IAAyB;AAC1C,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,yCAAyC,mBAAO,CAAC,2HAAyC;AAC1F,qBAAqB,mBAAO,CAAC,wFAAkB;AAC/C;AACA;AACA,WAAW;AACX;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,mD;;;;;;;;;;;;;AC3Ba;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,wFAAkB;AAC/C,gCAAgC,mBAAO,CAAC,yGAAgC;AACxE;AACA,WAAW,qCAAqC;AAChD,WAAW;AACX;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,0C;;;;;;;;;;;;;ACvBa;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,qFAAsB;AACpD,qBAAqB,mBAAO,CAAC,wFAAkB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,qC;;;;;;;;;;;;;ACjCa;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,qFAAsB;AACpD,qBAAqB,mBAAO,CAAC,wFAAkB;AAC/C,oBAAoB,mBAAO,CAAC,8FAAc;AAC1C;AACA;AACA,W;AACA;AACA,2GAA2G;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,sC;;;;;;;;;;;;;ACtBa;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,wFAAkB;AAC/C;AACA,WAAW,0LAA0L;AACrM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oC;;;;;;;;;;;;;AC9Ba;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,qFAAsB;AACpD,qBAAqB,mBAAO,CAAC,wFAAkB;AAC/C,oBAAoB,mBAAO,CAAC,8FAAc;AAC1C;AACA;AACA,W;AACA;AACA,2GAA2G;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gC;;;;;;;;;;;;;ACtBa;AACb,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,6FAA0B;AAC5D,qBAAqB,mBAAO,CAAC,wFAAkB;AAC/C;AACA;AACA,WAAW,uLAAuL;AAClM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oC;;;;;;;;;;;;;ACzBa;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,yFAAwB;AACxD,qBAAqB,mBAAO,CAAC,wFAAkB;AAC/C;AACA;AACA,WAAW,wLAAwL;AACnM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,kC;;;;;;;;;;;;;ACzBa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,6HAAwB;AACzC,SAAS,mBAAO,CAAC,+HAAyB;AAC1C,SAAS,mBAAO,CAAC,+FAAS;AAC1B,SAAS,mBAAO,CAAC,2FAAO;AACxB,SAAS,mBAAO,CAAC,iGAAU;AAC3B,SAAS,mBAAO,CAAC,6HAA2B;AAC5C,SAAS,mBAAO,CAAC,2GAAkB;AACnC,SAAS,mBAAO,CAAC,iGAAa;AAC9B,SAAS,mBAAO,CAAC,mGAAc;AAC/B,SAAS,mBAAO,CAAC,+FAAY;AAC7B,SAAS,mBAAO,CAAC,uFAAQ;AACzB,SAAS,mBAAO,CAAC,+FAAY;AAC7B,SAAS,mBAAO,CAAC,2FAAU;AAC3B,SAAS,mBAAO,CAAC,2IAAkC;AACnD,SAAS,mBAAO,CAAC,uIAAgC;AACjD,SAAS,mBAAO,CAAC,mGAAc;AAC/B,SAAS,mBAAO,CAAC,yIAAiC;AAClD,SAAS,mBAAO,CAAC,qIAA+B;AAChD,SAAS,mBAAO,CAAC,iGAAa;AAC9B,SAAS,mBAAO,CAAC,+FAAY;AAC7B,SAAS,mBAAO,CAAC,mJAAsC;AACvD,SAAS,mBAAO,CAAC,iIAA6B;AAC9C,SAAS,mBAAO,CAAC,uGAAgB;AACjC,SAAS,mBAAO,CAAC,2FAAU;AAC3B,SAAS,mBAAO,CAAC,2HAA0B;AAC3C,SAAS,mBAAO,CAAC,+GAAoB;AACrC,SAAS,mBAAO,CAAC,+IAAoC;AACrD,SAAS,mBAAO,CAAC,+IAAoC;AACrD,SAAS,mBAAO,CAAC,uHAAwB;AACzC,SAAS,mBAAO,CAAC,mHAAsB;AACvC,SAAS,mBAAO,CAAC,+FAAY;AAC7B,SAAS,mBAAO,CAAC,iHAAqB;AACtC,SAAS,mBAAO,CAAC,yGAAiB;AAClC,SAAS,mBAAO,CAAC,mHAAsB;AACvC,SAAS,mBAAO,CAAC,yFAAS;AAC1B,iC;;;;;;;;;;;;;ACxCa;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,qFAAsB;AACpD,qBAAqB,mBAAO,CAAC,wFAAkB;AAC/C,oBAAoB,mBAAO,CAAC,8FAAc;AAC1C;AACA;AACA,W;AACA;AACA,2GAA2G;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,0D;;;;;;;;;;;;;ACtBa;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,qFAAsB;AACpD,qBAAqB,mBAAO,CAAC,wFAAkB;AAC/C,oBAAoB,mBAAO,CAAC,8FAAc;AAC1C;AACA;AACA,W;AACA;AACA,2GAA2G;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,wD;;;;;;;;;;;;;ACtBa;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,qFAAsB;AACpD,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,qBAAqB,mBAAO,CAAC,wFAAkB;AAC/C,oBAAoB,mBAAO,CAAC,8FAAc;AAC1C;AACA;AACA,W;AACA;AACA,2GAA2G;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,sC;;;;;;;;;;;;;AC/Ba;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,qFAAsB;AACpD,qBAAqB,mBAAO,CAAC,wFAAkB;AAC/C,oBAAoB,mBAAO,CAAC,8FAAc;AAC1C;AACA;AACA,W;AACA;AACA,2GAA2G;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,yD;;;;;;;;;;;;;ACtBa;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,qFAAsB;AACpD,qBAAqB,mBAAO,CAAC,wFAAkB;AAC/C,oBAAoB,mBAAO,CAAC,8FAAc;AAC1C;AACA;AACA,W;AACA;AACA,2GAA2G;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uD;;;;;;;;;;;;;ACtBa;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,qFAAsB;AACpD,oBAAoB,mBAAO,CAAC,iFAAoB;AAChD,qBAAqB,mBAAO,CAAC,wFAAkB;AAC/C,oBAAoB,mBAAO,CAAC,8FAAc;AAC1C;AACA;AACA,W;AACA;AACA,2GAA2G;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,qC;;;;;;;;;;;;;AC/Ba;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,+FAAS;AAC1B,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,uBAAuB,mBAAO,CAAC,0FAA0B;AACzD,qBAAqB,mBAAO,CAAC,2FAAqB;AAClD;AACA;AACA,WAAW;AACX;AACA,gFAAgF;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,iC;;;;;;;;;;;;;ACrBa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,yGAAe;AAChC,SAAS,mBAAO,CAAC,yGAAe;AAChC,SAAS,mBAAO,CAAC,yFAAO;AACxB,iC;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,2FAAqB;AAClD,uBAAuB,mBAAO,CAAC,0FAA0B;AACzD;AACA,WAAW;AACX;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uC;;;;;;;;;;;;;ACxBa;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,2FAAqB;AAClD;AACA,WAAW;AACX;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uC;;;;;;;;;;;;;ACnBa;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,yGAAe;AAC7C,sBAAsB,mBAAO,CAAC,yGAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+B;;;;;;;;;;;;;AClBa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,kGAAU;AAC3B,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,uBAAuB,mBAAO,CAAC,0FAA0B;AACzD,qBAAqB,mBAAO,CAAC,2FAAqB;AAClD;AACA;AACA,WAAW;AACX;AACA,gFAAgF;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,kC;;;;;;;;;;;;;ACrBa;AACb,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,6FAA0B;AAC5D,qBAAqB,mBAAO,CAAC,wFAAkB;AAC/C,oBAAoB,mBAAO,CAAC,iGAAa;AACzC;AACA;AACA;AACA,KAAK;AACL,WAAW,uLAAuL;AAClM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oC;;;;;;;;;;;;;AC5Ba;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,qFAAsB;AACpD,qBAAqB,mBAAO,CAAC,wFAAkB;AAC/C;AACA,W;AACA;AACA,2GAA2G;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,8D;;;;;;;;;;;;;ACpBa;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,qFAAsB;AACpD,qBAAqB,mBAAO,CAAC,wFAAkB;AAC/C;AACA,W;AACA;AACA,2GAA2G;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,qD;;;;;;;;;;;;;ACpBa;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,yFAAwB;AACxD,iBAAiB,mBAAO,CAAC,2FAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;;ACXa;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,yFAAwB;AACxD,qBAAqB,mBAAO,CAAC,mFAAqB;AAClD,qBAAqB,mBAAO,CAAC,wFAAkB;AAC/C,oBAAoB,mBAAO,CAAC,iGAAa;AACzC,wBAAwB,mBAAO,CAAC,yFAAwB;AACxD;AACA;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA;AACA,KAAK;AACL,WAAW;AACX;AACA,6FAA6F;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,kC;;;;;;;;;;;;;ACrCa;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,qFAAsB;AACpD,qBAAqB,mBAAO,CAAC,wFAAkB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC,W;AACA;AACA,gLAAgL;AAChL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,kD;;;;;;;;;;;;;ACtCa;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,qFAAsB;AACpD,qBAAqB,mBAAO,CAAC,wFAAkB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC,W;AACA;AACA,gLAAgL;AAChL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,4C;;;;;;;;;;;;;ACtCa;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,qFAAsB;AACpD,qBAAqB,mBAAO,CAAC,wFAAkB;AAC/C;AACA,WAAW,2BAA2B;AACtC,W;AACA;AACA,gLAAgL;AAChL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,4D;;;;;;;;;;;;;AC3Ba;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,qFAAsB;AACpD,qBAAqB,mBAAO,CAAC,wFAAkB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC,W;AACA;AACA,gLAAgL;AAChL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,4D;;;;;;;;;;;;;ACvCa;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,qFAAsB;AACpD,qBAAqB,mBAAO,CAAC,wFAAkB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC,W;AACA;AACA,gLAAgL;AAChL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gD;;;;;;;;;;;;;ACtCa;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,qFAAsB;AACpD,qBAAqB,mBAAO,CAAC,wFAAkB;AAC/C,uBAAuB,mBAAO,CAAC,uFAAuB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC,W;AACA;AACA,gLAAgL;AAChL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,8C;;;;;;;;;;;;;ACvCa;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,qFAAsB;AACpD,qBAAqB,mBAAO,CAAC,wFAAkB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC,W;AACA;AACA,gLAAgL;AAChL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oC;;;;;;;;;;;;;ACtCa;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,qFAAsB;AACpD,qBAAqB,mBAAO,CAAC,wFAAkB;AAC/C;AACA,WAAW,2BAA2B;AACtC,W;AACA;AACA,gLAAgL;AAChL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,6C;;;;;;;;;;;;;AC3Ba;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,qFAAsB;AACpD,qBAAqB,mBAAO,CAAC,wFAAkB;AAC/C;AACA,WAAW,2BAA2B;AACtC,W;AACA;AACA,gLAAgL;AAChL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,yC;;;;;;;;;;;;;AC3Ba;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,qFAAsB;AACpD,qBAAqB,mBAAO,CAAC,wFAAkB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC,W;AACA;AACA,gLAAgL;AAChL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,8C;;;;;;;;;;;;;ACtCa;AACb,8CAA8C,cAAc;AAC5D,uBAAuB,mBAAO,CAAC,uFAAuB;AACtD,qBAAqB,mBAAO,CAAC,wFAAkB;AAC/C;AACA;AACA,WAAW,yLAAyL;AACpM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,iC;;;;;;;;;;;;;ACzBa;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,qFAAsB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,qD;;;;;;;;;;;;;ACTa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,iIAA6B;AAC9C,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,uEAAQ;AACnC;AACA,iC;;;;;;;;;;;;;ACJa;AACb;AACA;AACA;AAC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Xa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,0GAAoB;AACrC,iC;;;;;;;;;;;;;ACNY;;AAEZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC,SAAS;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,UAAU;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ,aAAa,mBAAO,CAAC,oDAAW;AAChC,cAAc,mBAAO,CAAC,gDAAS;AAC/B,cAAc,mBAAO,CAAC,gDAAS;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,mDAAmD;AACxE;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD,EAAE;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,wBAAwB,QAAQ;AAChC;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA,GAAG;AACH;AACA,eAAe,SAAS;AACxB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;AC5vDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,QAAQ,WAAW;;AAEnB;AACA;AACA,QAAQ,UAAU;;AAElB;AACA;;;;;;;;;;;;;ACnFA,iBAAiB;;AAEjB;AACA;AACA;;;;;;;;;;;;;;ACJa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,mBAAmB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;AC7Da;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;;ACzBa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,8EAAU;AAC3B,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;;ACZa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,+EAAc;AAC/B,SAAS,mBAAO,CAAC,6GAA6B;AAC9C,iC;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,yEAAc;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4CAA4C,EAAE;AACpF;AACA;AACA;AACA;AACA,iCAAiC,mBAAmB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,qD;;;;;;;;;;;;;AClCa;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,yEAAc;AACxC,aAAa,mBAAO,CAAC,oEAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA,mCAAmC,oBAAoB;AACvsC;;;;;;;;;;;;;ACzIa;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,yEAAc;AACxC,aAAa,mBAAO,CAAC,oEAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;;ACTa;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,yEAAc;AACxC,aAAa,mBAAO,CAAC,oEAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;ACTa;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,yEAAc;AACxC,aAAa,mBAAO,CAAC,oa;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,yEAAc;AACxC,aAAa,mBAAO,CAAC,oEAAQ;AAC7B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,oBAAoB,EAAE;AACjD,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,oBAAoB,EAAE;AACjD;AACA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;;ACnIa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,gFAAc;AAC/B,SAAS,mBAAO,CAAC,4EAAY;AAC7B,SAAS,mBAAO,CAAC,8EAAa;AAC9B,SAAS,mBAAO,CAAC,8FAAqB;AACtC,SAAS,mBAAO,CAAC,gFAAc;AAC/B,SAAS,mBAAO,CAAC,8EAAa;AAC9B,SAAS,mBAAO,CAAC,8EAAa;AAC9B,iC;;;;;;;;;;;;;ACZa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,0DAA0D;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB;AACncAAc,gBAAgB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE,gBAAgB,EAAE;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE,4BAA4B,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,aAAa,0BAA0B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,iBAAiB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,4BAA4B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,MAAM;AAC1D,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,iBAAiB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB,EAAE;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,kBAAkB;AAC9C;AACA;AACA;AACA;AACA;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA,cAAc,kBAAkB;AAChC;AACA;AACA;AACA;AACA;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA,cAAc,aAAa;AAC3B;AACA;AACA,cAAc,kBAAkB;AAChC;AACA;AACA;AACA;AACA;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA,cAAc,aAAa;AAC3B;AACA;AACA,cAAc,kBAAkB;AAChC;AACA;AACA;AACA;AACA;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA,cAAc,aAAa;AAC3B;AACA;AACA,cAAc,kBAAkB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,oDAAoD;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,eAAe;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,UAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C;AACA,2BAA2B,YAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,YAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,UAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kBAAkB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,UAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,UAAU;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,gC;;;;;;;;;;;;;ACjkEa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;AC/Ba;AACb,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,oEAAQ;AAC7B;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;;ACxCa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,kEAAQ;AACzB,SAAS,mBAAO,CAAC,sEAAU;AAC3B,SAAS,mBAAO,CAAC,kEAAQ;AACzB,SAAS,mBAAO,CAAC,sEAAU;AAC3B,iC;;;;;;;;;;;;;ACTa;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,yEAAc;AACxC;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;;AChFa;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,iFAAkB;AAChD,kBAAkB,mBAAO,CAAC,yEAAc;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;;AC7Fa;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,yEAAc;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;;ACzCa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA,CAAC,2CAA2C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,wCAAwC,aAAa,EAAE;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iC;;;;;;;;;;;;;AC/Ba;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA,KAAK,IAAI;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;;AC/Ea;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA,iCAAiC,mBAAmB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gD;;;;;;;;;;;;;AChBa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA,6BAA6B,mBAAmB,EAAE;AAClD;AACA;AACA;AACA;AACA,gD;;;;;;;;;;;;;ACVa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,mGAAwB;AACzC,SAAS,mBAAO,CAAC,mGAAwB;AACzC,SAAS,mBAAO,CAAC,2FAAoB;AACrC,SAAS,mBAAO,CAAC,+FAAsB;AACvC,SAAS,mBAAO,CAAC,iHAA+B;AAChD,SAAS,mBAAO,CAAC,uGAA0B;AAC3C,iC;;;;;;;;;;;;;ACXa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4C;;;;;;;;;;;;;AC5Ca;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,8C;;;;;;;;;;;;;AC/Ca;AACb,8CAA8C,cAAc;AAC5D,6BAA6B,mBAAO,CAAC,mGAAwB;AAC7D,mBAAmB,mBAAO,CAAC,2EAAe;AAC1C,2BAA2B,mBAAO,CAAC,+FAAsB;AACzD,kBAAkB,mBAAO,CAAC,yEAAc;AACxC,6BAA6B,mBAAO,CAAC,mGAAwB;AAC7D;AACA,qCAAqC,sFAAsF,EAAE;AAC7H;AACA;AACA,qCAAqC,oFAAoF,EAAE;AAC3H;AACA;AACA;AACA;AACA,2BAA2B,mBAAmB,EAAE;AAChD,8BAA8B,6BAA6B,EAAE;AAC7D;AACA;AACA,iCAAiC,wBAAwB,EAAE;AAC3D;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6DAA6D,EAAE,uBAAuB,wBAAwB,EAAE;AAC/I;AACA,iCAAiC,wBAAwB,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,uD;;;;;;;;;;;;;AChEa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,sDAAsD,gBAAgB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kD;;;;;;;;;;;;;ACfa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,mEAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;;ACjBa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,kEAAQ;AACzB,iC;;;;;;;;;;;;;ACNa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,iFAAY;AAC7B,SAAS,mBAAO,CAAC,mFAAa;AAC9B,iC;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,6EAAgB;AACzC;AACA;AACA;AACA;AACA,CAAC,8FAA8F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;;ACpCa;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,6FAAwB;AACxD,kBAAkB,mBAAO,CAAC,yEAAc;AACxC,iBAAiB,mBAAO,CAAC,6EAAgB;AACzC,oBAAoB,mBAAO,CAAC,6EAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,YAAY;AACxE,+DAA+D,YAAY;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,4FAA4F,EAAE;AACnK,+DAA+D,YAAY;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,yBAAyB;AACzF,mEAAmE,4BAA4B;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,cAAc;AAC9E,mEAAmE,4BAA4B;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,cAAc;AAC9E,4EAA4E;AAC5E,qCAAqC,EAAE;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;AC7Ka;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,kHAA2B;AAC5C,SAAS,mBAAO,CAAC,sFAAa;AAC9B,iC;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,yEAAc;AACxC,iBAAiB,mBAAO,CAAC,6EAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mD;;;;;;;;;;;;;AC1Ba;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,yEAAc;AACxC,iBAAiB,mBAAO,CAAC,6EAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;ACvDa;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,2EAAkB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;;AClBa;AACb,8CAA8C,cAAc;AAC5D,QAAQ,mBAAO,CAAC,mFAAmB;AACnC,sBAAsB,mBAAO,CAAC,2EAAkB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;;;;;;;;AClSa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA,oBAAoB,mBAAO,CAAC,iFAAe;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,mBAAO,CAAC,iFAAemBAAO,CAAC,yEAAW;AAC5B,SAAS,mBAAO,CAAC,uFAAkB;AACnC,sBAAsB,mBAAO,CAAC,yFAAsB;AACpD;AACA,eAAe,mBAAO,CAAC,yEAAc;AACrC;AACA,iBAAiB,mBAAO,CAAC,6EAAgB;AACzC;AACA,qBAAqB,mBAAO,CAAC,uFAAqB;AAClD;AACA,wBAAwB,mBAAO,CAAC,6FAAwB;AACxD;AACA,SAAS,mBAAO,CAAC,yEAAc;AAC/B,gBAAgB,mBAAO,CAAC,2EAAe;AACvC;AACA,cAAc,mBAAO,CAAC,+EAAiB;AACvC;AACA,SAAS,mBAAO,CAAC,mEAAW;AAC5B,YAAY,mBAAO,CAAC,yEAAc;AAClC;AACA,eAAe,mBAAO,CAAC,yEAAc;AACrC;AACA,SAAS,mBAAO,CAAC,qEAAe;AAChC,SAAS,mBAAO,CAAC,2EAAkB;AACnC,iC;;;;;;;;;;;;;ACjJa;AACb;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,mBAAO,CAAC,mFAAmB;AACnC,sBAAsB,mBAAO,CAAC,2EAAkB;AAChD;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA,4BAA4B;AAC5B,mCAAmC,oBAAoB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;;ACrDa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,kEAAU;AACjC,uBAAuB,mBAAO,CAAC,kFAAkB;AACjD,kBAAkB,mBAAO,CAAC,wEAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AAC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;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;;AChLa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,kFAAU;AAC3B,SAAS,mBAAO,CAAC,8EAAQ;AACzB,SAAS,mBAAO,CAAC,0FAAc;AAC/B,iC;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,4EAAiB;AAC3C,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C,mBAAmB,mBAAO,CAAC,wEAAkB;AAC7C;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,mC;;;;;;;;;;;;;ACtBa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,sFAAa;AACtC,eAAe,mBAAO,CAAC,kFAAW;AAClC,gBAAgB,mBAAO,CAAC,qFAAW;AACnC,eAAe,mBAAO,CAAC,kFAAW;AAClC,iBAAiB,mBAAO,CAAC,sFAAa;AACtC,gBAAgB,mBAAO,CAAC,oFAAY;AACpC;AACA;AACA;AACA;AACA;AACA,oEAAoE,mBAAmB,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8DAA8D,oDAAoD,EAAE;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;;ACtFa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,qFAAW;AAC5B,SAAS,mBAAO,CAAC,+EAAQ;AACzB,iC;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,4EAAiB;AAC3C,iBAAiB,mBAAO,CAAC,sFAAa;AACtC,qBAAqB,mBAAO,CAAC,8FAAiB;AAC9C,oBAAoB,mBAAO,CAAC,8FAA6B;AACzD,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C,mBAAmB,mBAAO,CAAC,wEAAkB;AAC7C;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,kC;;;;;;;;;;;;;ACpCa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,kFAAU;AAC3B,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,sFAAa;AACtC,eAAe,mBAAO,CAAC,kFAAW;AAClC,yBAAyB,mBAAO,CAAC,oGAAoB;AACrD,eAAe,mBAAO,CAAC,kFAAW;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,sBAAsB,EAAE;AACtF;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,8DAA8D,wBAAwB,EAAE;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6BAA6B,EAAE;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,sBAAsB,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,uCAAuC,EAAE;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,oBAAoB,EAAE;AACpG;AACA;AACA,gC;;;;;;;;;;;;;AC1Ea;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,4EAAQ;AACzB,SAAS,mBAAO,CAAC,oGAAoB;AACrC,iC;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,4EAAiB;AAC3C,eAAe,mBAAO,CAAC,kFAAW;AAClC,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C,mBAAmB,mBAAO,CAAC,wEAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4C;;;;;;;;;;;;;AC/Ba;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,4EAAiB;AAC3C,aAAa,mBAAO,CAAC,4EAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,+C;;;;;;;;;;;;;ACnBa;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,4EAAiB;AAC3C,iBAAiB,mBAAO,CAAC,sFAAa;AACtC,eAAe,mBAAO,CAAC,sEAAc;AACrC,gBAAgB,mBAAO,CAAC,oFAAY;AACpC,kBAAkB,mBAAO,CAAC,4EAAiB;AAC3C,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C,mBAAmB,mBAAO,CAAC,wEAAkB;AAC7C;AACA;AACA,6CAA6C,wCAAwC,EAAE;AACvF;AACA;AACA,yGAAyG,gBAAgB,EAAE;AAC3H;AACA;AACA,6CAA6C,uBAAuB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA,8DAA8D,kBAAkB,EAAE;AAClF,4DAA4D,oBAAoB,EAAE;AAClF;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,6CAA6C,0CAA0C,EAAE;AACzF;AACA;AACA,yGAAyG,cAAc,EAAE;AACzH;AACA;AACA,6CAA6C,uBAAuB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA,8DAA8D,oBAAoB,EAAE;AACpF,4DAA4D,kBAAkB,EAAE;AAChF;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,oCAAoC,EAAE;AACtC,+BAA+B,kBAAkB,EAAE;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,yBAAyB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,qBAAqB,EAAE;AACvB,2BAA2B,cAAc,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,yBAAyB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA,gC;;;;;;;;;;;;;ACjJa;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,4EAAiB;AAC3C,gBAAgB,mBAAO,CAAC,oFAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;;ACZa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,0GAAuB;AACxC,SAAS,mBAAO,CAAC,4EAAQ;AACzB,SAAS,mBAAO,CAAC,4EAAQ;AACzB,iC;;;;;;;;;;;;;ACRa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,2EAAO;AACxB,SAAS,mBAAO,CAAC,+EAAS;AAC1B,SAAS,mBAAO,CAAC,yFAAc;AAC/B,SAAS,mBAAO,CAAC,iFAAU;AAC3B,SAAS,mBAAO,CAAC,mFAAW;AAC5B,SAAS,mBAAO,CAAC,iFAAU;AAC3B,SAAS,mBAAO,CAAC,6EAAQ;AACzB,SAAS,mBAAO,CAAC,6EAAQ;AACzB,SAAS,mBAAO,CAAC,2FAAe;AAChC,SAAS,mBAAO,CAAC,mFAAW;AAC5B,SAAS,mBAAO,CAAC,+EAAS;AAC1B,SAAS,mBAAO,CAAC,uFAAa;AAC9B,SAAS,mBAAO,CAAC,6EAAQ;AACzB,SAAS,mBAAO,CAAC,iFAAU;AAC3B,SAAS,mBAAO,CAAC,iFAAU;AAC3B,SAAS,mBAAO,CAAC,qFAAY;AAC7B,SAAS,mBAAO,CAAC,iFAAU;AAC3B,SAAS,mBAAO,CAAC,6EAAQ;AACzB,SAAS,mBAAO,CAAC,6FAAgB;AACjC,SAAS,mBAAO,CAAC,uFAAa;AAC9B,SAAS,mBAAO,CAAC,mFAAW;AAC5B,iC;;;;;;;;;;;;;AC1Ba;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,4EAAiB;AAC3C,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;;ACvDa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,mFAAQ;AACzB,SAAS,mBAAO,CAAC,iGAAe;AAChC,iC;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,4EAAiB;AAC3C,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;;ACpCa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,qFAAW;AAC5B,SAAS,mBAAO,CAAC,iGAAiB;AAClC,iC;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,4EAAiB;AAC3C,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,mBAAmB;AACxD;AACA;AACA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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,gC;;;;;;;;;;;;;ACzIa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,sFAAa;AACtC,eAAe,mBAAO,CAAC,kFAAU;AACjC,gBAAgB,mBAAO,CAAC,oFAAY;AACpC,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C,mBAAmB,mBAAO,CAAC,wEAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;;ACzKa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,8EAAQ;AACzB,SAAS,mBAAO,CAAC,0FAAc;AAC/B,SAAS,mBAAO,CAAC,kFAAU;AAC3B,iC;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,4EAAiB;AAC3C,iBAAiB,mBAAO,CAAC,sFAAa;AACtC,mBAAmB,mBAAO,CAAC,0FAAc;AACzC,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C,mBAAmB,mBAAO,CAAC,wEAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;;AC7Ea;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,sEAAc;AACrC,iBAAiB,mBAAO,CAAC,sFAAa;AACtC,eAAe,mBAAO,CAAC,kFAAU;AACjC,wBAAwB,mBAAO,CAAC,oGAAmB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,OAAO;AACf,QAAQ,4BAA4B;AACpC,QAAQ,sCAAsC;AAC9C,QAAQ,SAAS;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,sC;;;;;;;;;;;;;ACnDa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,sEAAc;AACrC,iBAAiB,mBAAO,CAAC,sFAAa;AACtC,2BAA2B,mBAAO,CAAC,0GAAsB;AACzD,oBAAoB,mBAAO,CAAC,gFAAmB;AAC/C,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kC;;;;;;;;;;;;;ACrHa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,0FAAc;AAC/B,SAAS,mBAAO,CAAC,kFAAU;AAC3B,SAAS,mBAAO,CAAC,oGAAmB;AACpC,SAAS,mBAAO,CAAC,0GAAsB;AACvC,SAAS,mBAAO,CAAC,4FAAe;AAChC,SAAS,mBAAO,CAAC,wGAAqB;AACtC,SAAS,mBAAO,CAAC,oGAAmB;AACpC,SAAS,mBAAO,CAAC,kFAAU;AAC3B,SAAS,mBAAO,CAAC,0GAAsB;AACvC,SAAS,mBAAO,CAAC,wHAA6B;AAC9C,SAAS,mBAAO,CAAC,oHAA2B;AAC5C,SAAS,mBAAO,CAAC,kGAAkB;AACnC,SAAS,mBAAO,CAAC,0GAAsB;AACvC,SAAS,mBAAO,CAAC,8EAAQ;AACzB,SAAS,mBAAO,CAAC,0FAAc;AAC/B,SAAS,mBAAO,CAAC,kFAAU;AAC3B,SAAS,mBAAO,CAAC,kGAAkB;AACnC,iC;;;;;;;;;;;;;ACtBa;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,4EAAiB;AAC3C,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,8C;;;;;;;;;;;;;ACzBa;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,4EAAiB;AAC3C,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;;AChCa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,sEAAc;AACrC,iBAAiB,mBAAO,CAAC,sFAAa;AACtC,wBAAwB,mBAAO,CAAC,oGAAmB;AACnD,wBAAwB,mBAAO,CAAC,oGAAmB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,mBAAmB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6C;;;;;;;;;;;;;ACxDa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,sEAAc;AACrC,2BAA2B,mBAAO,CAAC,0GAAsB;AACzD,iBAAiB,mBAAO,CAAC,sFAAa;AACtC,wBAAwB,mBAAO,CAAC,oGAAmB;AACnD,oBAAoB,mBAAO,CAAC,gFAAmB;AAC/C,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oBAAoB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,oBAAoB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA,QAAQ,sBAAsB;AAC9B,QAAQ,gBAAgB;;AAExB;AACA;AACA;AACA,CAAC;AACD;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2C;;;;;;;;;;;;;AC3Fa;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,oGAAmB;AACnD,0BAA0B,mBAAO,CAAC,wGAAqB;AACvD;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;;ACjBa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,sEAAc;AACrC,iBAAiB,mBAAO,CAAC,sFAAa;AACtC,eAAe,mBAAO,CAAC,kFAAU;AACjC,wBAAwB,mBAAO,CAAC,oGAAmB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8C;;;;;;;;;;;;;ACrBa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,sEAAc;AACrC,iBAAiB,mBAAO,CAAC,sFAAa;AACtC,wBAAwB,mBAAO,CAAC,oGAAmB;AACnD,gCAAgC,mBAAO,CAAC,oHAA2B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,mBAAmB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qD;;;;;;;;;;;;;ACxDa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,sEAAc;AACrC,2BAA2B,mBAAO,CAAC,0GAAsB;AACzD,iBAAiB,mBAAO,CAAC,sFAAa;AACtC,wBAAwB,mBAAO,CAAC,oGAAmB;AACnD;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oBAAoB;AACvD;AACA;AACA;AACA;AACA;AACA,uCAAuC,oBAAoB;AAC3D;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,mD;;;;;;;;;;;;;ACrCa;AACb,8CAA8C,cAAc;AAC5D,gCAAgC,mBAAO,CAAC,oHAA2B;AACnE,kCAAkC,mBAAO,CAAC,wHAA6B;AACvE;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;;ACjBa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,sEAAc;AACrC,iBAAiB,mBAAO,CAAC,sFAAa;AACtC,eAAe,mBAAO,CAAC,kFAAU;AACjC,wBAAwB,mBAAO,CAAC,oGAAmB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8C;;;;;;;;;;;;;ACrBa;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,4EAAiB;AAC3C,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;;AC5Ba;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,sEAAc;AACrC,iBAAiB,mBAAO,CAAC,sFAAa;AACtC,eAAe,mBAAO,CAAC,kFAAU;AACjC,wBAAwB,mBAAO,CAAC,oGAAmB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;;ACrBa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,sEAAc;AACrC,iBAAiB,mBAAO,CAAC,sFAAa;AACtC,2BAA2B,mBAAO,CAAC,0GAAsB;AACzD,oBAAoB,mBAAO,CAAC,gFAAmB;AAC/C,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kC;;;;;;;;;;;;;AC9Ha;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,sEAAc;AACrC,iBAAiB,mBAAO,CAAC,sFAAa;AACtC,2BAA2B,mBAAO,CAAC,0GAAsB;AACzD,oBAAoB,mBAAO,CAAC,gFAAmB;AAC/C,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA,0C;;;;;;;;;;;;;ACxEa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2C;;;;;;;;;;;;;ACZa;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,0FAAwB;AAClD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;ACXa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,sEAAc;AACrC,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,wFAAwF;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA,gC;;;;;;;;;;;;;ACzFa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,sEAAc;AACrC,eAAe,mBAAO,CAAC,4EAAiB;AACxC,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C,oBAAoB,mBAAO,CAAC,gFAAmB;AAC/C;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,mBAAmB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mDAAmD,EAAE;AACxF;AACA,mCAAmC,mBAAmB,EAAE;AACxD,sCAAsC,6BAA6B,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,wBAAwB,EAAE;AAC3E;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA,iCAAiC,8CAA8C;AAC/E,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;;AChEa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,sEAAc;AACrC,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,mBAAmB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8B;;;;;;;;;;;;;AC3Ca;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,sEAAc;AACrC;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;;ACnDa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,sFAAa;AACtC,eAAe,mBAAO,CAAC,kFAAW;AAClC,sBAAsB,mBAAO,CAAC,gGAAiB;AAC/C,kBAAkB,mBAAO,CAAC,4EAAiB;AAC3C,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C;AACA,oEAAoE,uBAAuB,EAAE;AAC7F;AACA;AACA;AACA,+DAA+D,uBAAuB,EAAE;AACxF;AACA;AACA;AACA,uEAAuE,uBAAuB,EAAE;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;;ACvEa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,8EAAQ;AACzB,SAAS,mBAAO,CAAC,0FAAc;AAC/B,SAAS,mBAAO,CAAC,0GAAsB;AACvC,SAAS,mBAAO,CAAC,gFAAS;AAC1B,SAAS,mBAAO,CAAC,gFAAS;AAC1B,SAAS,mBAAO,CAAC,gGAAiB;AAClC,SAAS,mBAAO,CAAC,kFAAU;AAC3B,iC;;;;;;;;;;;;;ACZa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,sFAAa;AACtC,cAAc,mBAAO,CAAC,gFAAS;AAC/B,cAAc,mBAAO,CAAC,gFAAS;AAC/B,2BAA2B,mBAAO,CAAC,0GAAsB;AACzD;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;;ACVa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,sFAAa;AACtC,eAAe,mBAAO,CAAC,kFAAU;AACjC,cAAc,mBAAO,CAAC,gFAAS;AAC/B,cAAc,mBAAO,CAAC,gFAAS;AAC/B,oBAAoB,mBAAO,CAAC,gFAAmB;AAC/C,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,8C;;;;;;;;;;;;;AClDa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,sFAAa;AACtC,eAAe,mBAAO,CAAC,kFAAW;AAClC,eAAe,mBAAO,CAAC,kFAAU;AACjC,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,yCAAyC,qDAAqD,EAAE;AAChG;AACA,KAAK;AACL;AACA;AACA,iC;;;;;;;;;;;;;AC/Ca;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,sFAAa;AACtC,eAAe,mBAAO,CAAC,kFAAU;AACjC,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,+CAA+C,qEAAqE,EAAE;AACtH;AACA;AACA;AACA;AACA,qFAAqF,gBAAgB,EAAE;AACvG,qFAAqF,gBAAgB,EAAE;AACvG;AACA;AACA;AACA,sHAAsH;AACtH;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,+CAA+C,qEAAqE,EAAE;AACtH;AACA;AACA,+CAA+C,yFAAyF,EAAE;AAC1I;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;AChKa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,sFAAa;AACtC,eAAe,mBAAO,CAAC,kFAAW;AAClC,eAAe,mBAAO,CAAC,kFAAU;AACjC,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C,qBAAqB,mBAAO,CAAC,0FAAwB;AACrD,wBAAwB,mBAAO,CAAC,gGAA2B;AAC3D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,yC;;;;;;;;;;;;;AC3Ia;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,4EAAiB;AAC3C,iBAAiB,mBAAO,CAAC,sFAAa;AACtC,mBAAmB,mBAAO,CAAC,0FAAe;AAC1C,oBAAoB,mBAAO,CAAC,gFAAmB;AAC/C,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,mCAAmC,oBAAoB;AACvD;AACA;AACA;AACA,wDAAwD,gCAAgC,EAAE;AAC1F;AACA,mDAAmD,oCAAoC,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,yBAAyB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,mCAAmC,oCAAoC,EAAE;AAChK;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,kC;;;;;;;;;;;;;AC/Pa;AACb,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;;ACzBa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,oFAAY;AAC7B,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,sFAAa;AACtC,eAAe,mBAAO,CAAC,kFAAW;AAClC,eAAe,mBAAO,CAAC,kFAAW;AAClC,eAAe,mBAAO,CAAC,sEAAc;AACrC,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C,mBAAmB,mBAAO,CAAC,wEAAkB;AAC7C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,uC;;;;;;;;;;;;;AC9Ca;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,kGAAe;AAChC,SAAS,mBAAO,CAAC,oGAAgB;AACjC,iC;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,4EAAiB;AAC3C,iBAAiB,mBAAO,CAAC,sFAAa;AACtC,oBAAoB,mBAAO,CAAC,kGAAe;AAC3C,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C,mBAAmB,mBAAO,CAAC,wEAAkB;AAC7C;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wC;;;;;;;;;;;;;ACnCa;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,4EAAiB;AAC3C,iBAAiB,mBAAO,CAAC,sFAAa;AACtC,gBAAgB,mBAAO,CAAC,oFAAY;AACpC,kBAAkB,mBAAO,CAAC,2FAAa;AACvC,eAAe,mBAAO,CAAC,kFAAW;AAClC,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,+DAA+D,kBAAkB,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,gBAAgB,kBAAkB,EAAE;AACzC;AACA;AACA,gC;;;;;;;;;;;;;AC3Ca;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,iFAAQ;AACzB,SAAS,mBAAO,CAAC,2FAAa;AAC9B,iC;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,4EAAiB;AAC3C,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,qC;;;;;;;;;;;;;ACvBa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,qFAAW;AAC5B,iC;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;;;;;;;;ACRa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA,sBAAsB,mBAAO,CAAC,wFAAqB;AACnD;AACA,eAAe,mBAAO,CAAC,wEAAa;AACpC;AACA,iBAAiB,mBAAO,CAAC,4EAAe;AACxC;AACA,qBAAqB,mBAAO,CAAC,sFAAoB;AACjD;AACA,wBAAwB,mBAAO,CAAC,4FAAuB;AACvD;AACA,SAAS,mBAAO,CAAC,wEAAa;AAC9B,gBAAgB,mBAAO,CAAC,0EAAc;AACtC;AACA,SAAS,mBAAO,CAAC,wEAAa;AAC9B,SAAS,mBAAO,CAAC,kFAAkB;AACnC,cAAc,mBAAO,CAAC,8EAAgB;AACtC;AACA,SAAS,mBAAO,CAAC,kEAAU;AAC3B,YAAY,mBAAO,CAAC,wEAAa;AACjC;AACA,eAAe,mBAAO,CAAC,wEAAa;AACpC;AACA,SAAS,mBAAO,CAAC,oEAAc;AAC/B,SAAS,mBAAO,CAAC,0EAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;ACvCa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,2EAAe;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA,UAAU;AACV,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gD;;;;;;;;;;;;;ACjHa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,2EAAe;AAClC,6BAA6B,mBAAO,CAAC,qGAAwB;AAC7D,qBAAqB,mBAAO,CAAC,qFAAgB;AAC7C,wBAAwB,mBAAO,CAAC,2FAAmB;AACnD,aAAa,mBAAO,CAAC,qEAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAE;AACH,2C;;;;;;;;;;;;;AC3Ca;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,8EAAkB;AACrC;AACA;AACA;AACA,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,sD;;;;;;;;;;;;;AC/Da;AACb;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,mCAAmC,mBAAO,CAAC,0HAA8B;AACzE,iBAAiB,mBAAO,CAAC,8EAAa;AACtC,wBAAwB,mBAAO,CAAC,4FAAoB;AACpD,qBAAqB,mBAAO,CAAC,sFAAiB;AAC9C,wBAAwB,mBAAO,CAAC,4FAAoB;AACpD,WAAW,mBAAO,CAAC,8EAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF;AAChF;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,2C;;;;;;;;;;;;;ACxFa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,0HAA8B;AAC/C,SAAS,mBAAO,CAAC,oGAAmB;AACpC,SAAS,mBAAO,CAAC,oGAAmB;AACpC,iC;;;;;;;;;;;;;ACRa;AACb;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,mCAAmC,mBAAO,CAAC,0HAA8B;AACzE,iBAAiB,mBAAO,CAAC,8EAAa;AACtC,wBAAwB,mBAAO,CAAC,4FAAoB;AACpD,qBAAqB,mBAAO,CAAC,sFAAiB;AAC9C,wBAAwB,mBAAO,CAAC,4FAAoB;AACpD,WAAW,mBAAO,CAAC,8EAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF;AAChF;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,2C;;;;;;;;;;;;;ACxFa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,2EAAe;AAClC,wBAAwB,mBAAO,CAAC,2FAAmB;AACnD,aAAa,mBAAO,CAAC,qEAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV;AACA,2CAA2C;AAC3C;AACA,CAAC,GAAG;AACJ,iD;;;;;;;;;;;;;ACxBa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,2EAAe;AAClC,8BAA8B,mBAAO,CAAC,uGAAyB;AAC/D,qBAAqB,mBAAO,CAAC,qFAAgB;AAC7C,aAAa,mBAAO,CAAC,qEAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAE;AACH,wC;;;;;;;;;;;;;AC9Ca;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,2EAAe;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,UAAU;AACV,UAAU;AACV;AACA,mCAAmC;AACnC;AACA;AACA,CAAC,EAAE;AACH,wC;;;;;;;;;;;;;ACzBa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,mFAAY;AAC7B,SAAS,mBAAO,CAAC,uGAAsB;AACvC,SAAS,mBAAO,CAAC,qGAAwB;AACzC,SAAS,mBAAO,CAAC,2FAAmB;AACpC,SAAS,mBAAO,CAAC,uGAAyB;AAC1C,SAAS,mBAAO,CAAC,qFAAgB;AACjC,SAAS,mBAAO,CAAC,qFAAgB;AACjC,SAAS,mBAAO,CAAC,6EAAY;AAC7B,SAAS,mBAAO,CAAC,2FAAmB;AACpC,SAAS,mBAAO,CAAC,qEAAQ;AACzB,SAAS,mBAAO,CAAC,qEAAQ;AACzB,SAAS,mBAAO,CAAC,qGAAwB;AACzC,SAAS,mBAAO,CAAC,qFAAgB;AACjC,SAAS,mBAAO,CAAC,mGAAuB;AACxC,SAAS,mBAAO,CAAC,6FAAoB;AACrC,SAAS,mBAAO,CAAC,2FAAmB;AACpC,iC;;;;;;;;;;;;;ACrBa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,2EAAe;AAClC,aAAa,mBAAO,CAAC,qEAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,UAAU;AACV,UAAU;AACV;AACA,+BAA+B;AAC/B;AACA;AACA,CAAC,EAAE;AACH,oC;;;;;;;;;;;;;ACtCa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,2EAAe;AAClC,aAAa,mBAAO,CAAC,qEAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,UAAU;AACV,UAAU;AACV;AACA,sCAAsC,mDAAmD;AACzF,2C;;;;;;;;;;;;;AC1Da;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,2EAAe;AAClC,cAAc,mBAAO,CAAC,qEAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,UAAU;AACV,UAAU;AACV;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA,CAAC,EAAE;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV;AACA,4BAA4B,qDAAqD;AACjF,gC;;;;;;;;;;;;;ACpFa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,2EAAe;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,gC;;;;;;;;;;;;;ACrCa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,8EAAkB;AACrC;AACA;AACA;AACA,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gE;;;;;;;;;;;;;AC3Ca;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,wJAAwC;AACzD,SAAS,mBAAO,CAAC,kIAA6B;AAC9C,SAAS,mBAAO,CAAC,kIAA6B;AAC9C,iC;;;;;;;;;;;;;ACRa;AACb;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,6CAA6C,mBAAO,CAAC,wJAAwC;AAC7F,iBAAiB,mBAAO,CAAC,8EAAa;AACtC,wBAAwB,mBAAO,CAAC,4FAAoB;AACpD,wBAAwB,mBAAO,CAAC,4FAAoB;AACpD,WAAW,mBAAO,CAAC,8EAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,kGAAkG;AAClG;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,qD;;;;;;;;;;;;;ACtFa;AACb;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,6CAA6C,mBAAO,CAAC,wJAAwC;AAC7F,iBAAiB,mBAAO,CAAC,8EAAa;AACtC,wBAAwB,mBAAO,CAAC,4FAAoB;AACpD,wBAAwB,mBAAO,CAAC,4FAAoB;AACpD,WAAW,mBAAO,CAAC,8EAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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AAU;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kD;;;;;;;;;;;;;AC1Ca;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iD;;;;;;;;;;;;;ACfa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,6GAA0B;AAC3C,SAAS,mBAAO,CAAC,2GAAyB;AAC1C,SAAS,mBAAO,CAAC,uEAAO;AACxB,SAAS,mBAAO,CAAC,+EAAW;AAC5B,SAAS,mBAAO,CAAC,uGAAuB;AACxC,SAAS,mBAAO,CAAC,uFAAe;AAChC,SAAS,mBAAO,CAAC,mFAAa;AAC9B,iC;;;;;;;;;;;;;ACZa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+B;;;;;;;;;;;;;AC7Ba;AACb,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;;;;;;;;ACxDa;AACb,8CAA8C,cAAc;AAC5D;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+C;;;;;;;;;;;;;AChCa;AACb,8CAA8C,cAAc;AAC5D,cAAc,mBAAO,CAAC,wEAAU;AAChC,kBAAkB,mBAAO,CAAC,mFAAa;AACvC;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,4EAAiB;AAC3C,+BAA+B,mBAAO,CAAC,6GAA0B;AACjE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;ACjBa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;AC5Ba;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,2EAAS;AAC1B,SAAS,mBAAO,CAAC,uFAAe;AAChC,SAAS,mBAAO,CAAC,2FAAiB;AAClC,iC;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,cAAc,mBAAO,CAAC,wEAAU;AAChC,sBAAsB,mBAAO,CAAC,2FAAiB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;;AClBa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;;AC7Ea;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,2EAAW;AAC5B,SAAS,mBAAO,CAAC,6FAAoB;AACrC,SAAS,mBAAO,CAAC,+GAA6B;AAC9C,iC;;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;;;;;;;;ACZa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,4C;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,qD;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;AC9Ca;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,8EAAkB;AACrC,eAAe,mBAAO,CAAC,4EAAiB;AACxC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iC;;;;;;;;;;;;;ACjGa;AACb,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;AC9Ca;AACb,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C,mBAAmB,mBAAO,CAAC,4EAAQ;AACnC;AACA,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C;AACA,+CAA+C,+BAA+B;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF;AACtF;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,4DAA4D,mBAAmB,EAAE,gCAAgC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,IAAI;AAC3J;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF;AACtF;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,iC;;;;;;;;;;;;;AChEa;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,gFAAmB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,IAAI;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,0BAA0B,uBAAuB,gBAAgB;AAC9G,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;;ACvKa;AACb,8CAA8C,cAAc;AAC5D,uBAAuB,mBAAO,CAAC,sFAAsB;AACrD,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C,kBAAkB,mBAAO,CAAC,4EAAiB;AAC3C,qBAAqB,mBAAO,CAAC,0FAAwB;AACrD,iBAAiB,mBAAO,CAAC,gFAAmB;AAC5C,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C,mBAAmB,mBAAO,CAAC,wEAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA,iC;;;;;;;;;;;;;ACtGa;AACb,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;ACtBa;AACb,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA,+C;;;;;;;;;;;;;ACpDa;AACb,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C,kBAAkB,mBAAO,CAAC,4EAAiB;AAC3C;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA,oEAAoE,sCAAsC,EAAE;AAC5G,uDAAuD,0CAA0C,EAAE;AACnG;AACA;AACA,qCAAqC,mBAAmB;AACxD;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,8C;;;;;;;;;;;;;AC/Ca;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,8EAAqB;AACnD,WAAW,mBAAO,CAAC,sFAAsB;AACzC;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;;ACTa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,qGAAuB;AACxC,SAAS,mBAAO,CAAC,mGAAsB;AACvC,SAAS,mBAAO,CAAC,mFAAc;AAC/B,iC;;;;;;;;;;;;;ACRa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,4EAAU;AAC3B,SAAS,mBAAO,CAAC,8EAAW;AAC5B,SAAS,mBAAO,CAAC,wEAAQ;AACzB,SAAS,mBAAO,CAAC,kFAAa;AAC9B,SAAS,mBAAO,CAAC,8EAAW;AAC5B,SAAS,mBAAO,CAAC,4EAAU;AAC3B,SAAS,mBAAO,CAAC,wEAAQ;AACzB,SAAS,mBAAO,CAAC,sEAAO;AACxB,SAAS,mBAAO,CAAC,wEAAQ;AACzB,SAAS,mBAAO,CAAC,sGAAuB;AACxC,iC;;;;;;;;;;;;;ACfa;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,4EAAiB;AAC3C,WAAW,mBAAO,CAAC,8EAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,kC;;;;;;;;;;;;;ACnCa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,0EAAU;AAC3B,SAAS,mBAAO,CAAC,oEAAO;AACxB,iC;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,8EAAkB;AACrC,uBAAuB,mBAAO,CAAC,sFAAsB;AACrD,kBAAkB,mBAAO,CAAC,4EAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+B;;;;;;;;;;;;;AC3Ea;AACb,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C,uBAAuB,mBAAO,CAAC,sFAAsB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;AChEa;AACb,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,8EAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;AC9Ca;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,4FAAoB;AACrC,SAAS,mBAAO,CAAC,sFAAiB;AAClC,SAAS,mBAAO,CAAC,gGAAsB;AACvC,SAAS,mBAAO,CAAC,4EAAY;AAC7B,iC;;;;;;;;;;;;;ACTa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4C;;;;;;;;;;;;;ACnBa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;;ACVa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8C;;;;;;;;;;;;;AClBa;AACb,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,sFAAiB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;;AC9Ba;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8C;;;;;;;;;;;;;ACZA,8CAAa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;;;AC1Ba;AACb,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,gFAAe;AAC3C,qBAAqB,mBAAO,CAAC,kFAAgB;AAC7C,qBAAqB,mBAAO,CAAC,kFAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA,gHAAgH;AAChH;AACA;AACA;AACA,gHAAgH;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,qBAAqB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,qBAAqB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;;ACrGa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,8FAAsB;AACvC,SAAS,mBAAO,CAAC,gFAAe;AAChC,SAAS,mBAAO,CAAC,8EAAc;AAC/B,SAAS,mBAAO,CAAC,sFAAkB;AACnC,SAAS,mBAAO,CAAC,4EAAa;AAC9B,SAAS,mBAAO,CAAC,wEAAW;AAC5B,SAAS,mBAAO,CAAC,kFAAgB;AACjC,SAAS,mBAAO,CAAC,kEAAQ;AACzB,SAAS,mBAAO,CAAC,kEAAQ;AACzB,SAAS,mBAAO,CAAC,4FAAqB;AACtC,SAAS,mBAAO,CAAC,kFAAgB;AACjC,SAAS,mBAAO,CAAC,gFAAe;AAChC,SAAS,mBAAO,CAAC,sFAAkB;AACnC,SAAS,mBAAO,CAAC,wHAAmC;AACpD,iC;;;;;;;;;;;;;ACnBa;AACb,8CAA8C,cAAc;AAC5D,wCAAwC,mBAAO,CAAC,wHAAmC;AACnF,oBAAoB,mBAAO,CAAC,gFAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;AC/Da;AACb,8CAA8C,cAAc;AAC5D,wCAAwC,mBAAO,CAAC,wHAAmC;AACnF,kBAAkB,mBAAO,CAAC,4EAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;;ACfa;AACb,8CAA8C,cAAc;AAC5D,uBAAuB,mBAAO,CAAC,sFAAkB;AACjD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;;;;;;;;AC3Ba;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,4EAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;;ACzBa;AACb;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA,4BAA4B;AAC5B,mCAAmC,oBAAoB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;;AChCa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA,mCAAmC,oBAAoB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;;ACxBa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6C;;;;;;;;;;;;;ACba;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,4EAAa;AACvC,wCAAwC,mBAAO,CAAC,wHAAmC;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;;AC1Ca;AACb,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,4EAAa;AACvC,qBAAqB,mBAAO,CAAC,kFAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;;ACzFa;AACb;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,gFAAe;AAC3C,qBAAqB,mBAAO,CAAC,kFAAgB;AAC7C,qBAAqB,mBAAO,CAAC,kFAAgB;AAC7C,sBAAsB,mBAAO,CAAC,yFAAsB;AACpD,oBAAoB,mBAAO,CAAC,gFAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6GAA6G;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6GAA6G;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,qBAAqB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,qBAAqB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA,8BAA8B,eAAe,gCAAgC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;;ACvSa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA,4BAA4B,cAAc;AAC1C;AACA;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,4BAA4B,cAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2D;;;;;;;;;;;;;AClFa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,+EAAmB,G;;;;;;;;;;;;ACLpC;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C","file":"vendors.bundle.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst expr_1 = require(\"../expr\");\n/**\n * An aliased expression\n *\n * ```sql\n *  SELECT\n *      (1+2) AS x --This is an `AliasedExpr`\n * ```\n *\n * -----\n *\n * ### Using `AliasedExpr` as \"normal\" expression\n *\n * Normally, you cannot use an aliased expression as a \"normal\" expression.\n *\n * This is usually invalid,\n * ```sql\n *  SELECT\n *      (((1+2) AS x) + 3) AS y\n * ```\n *\n * However, `tsql` allows this!\n *\n * When the query is generated, it extracts the inner unaliased expression,\n *\n * ```sql\n *  SELECT\n *      ((1+2) + 3) AS y\n * ```\n *\n * -----\n *\n * Allowing the above lets us write composable expressions that\n * can also be used in `SELECT` clauses more consistently!\n *\n * For example,\n * ```ts\n *  function x () {\n *      return tsql.add(1, 2).as(\"x\");\n *  }\n *  //SELECT (1+2) AS x, (1+2+3) AS y\n *  tsql.select(() => [\n *      x(),\n *      tsql.add(x(), 3).as(\"y\"),\n *  ]);\n *  //SELECT (1+2) AS x, (1+2+3+4+5) AS y\n *  tsql.select(() => [\n *      x(),\n *      tsql.add(x(), 3, 4, 5).as(\"y\"),\n *  ]);\n * ```\n *\n * If we did not allow aliased expressions to be used as \"normal\" expressions,\n * we would have an increased risk of typos,\n *\n * ```ts\n *  function x () {\n *      //Removed `.as(\"x\")`\n *      return tsql.add(1, 2);\n *  }\n *  //SELECT (1+2) AS x, (1+2+3) AS y\n *  tsql.select(() => [\n *      x().as(\"x\"),\n *      tsql.add(x(), 3).as(\"y\"),\n *  ]);\n *  //Intended: SELECT (1+2) AS x, (1+2+3+4+5) AS y\n *  //Actual  : SELECT (1+2) AS typo, (1+2+3+4+5) AS y\n *  tsql.select(() => [\n *      x().as(\"typo\"),\n *      tsql.add(x(), 3, 4, 5).as(\"y\"),\n *  ]);\n * ```\n *\n * -----\n *\n * ### Re-aliasing\n *\n * Normally, you can only alias an expression once,\n * ```sql\n *  SELECT\n *      (1+2) AS x AS y --Error: Cannot alias an expression more than once!\n * ```\n *\n * However, `tsql` allows this!\n *\n * When the query is generated, it uses the **last** set alias,\n * ```sql\n *  SELECT\n *      (1+2) AS y\n * ```\n *\n * -----\n *\n * With re-aliasing, you can set a **default alias** for your composable expressions.\n * Then, when you want a different alias, you can change it.\n *\n * For example,\n * ```ts\n *  function x () {\n *      //Default alias is `x`\n *      return tsql.add(1, 2).as(\"x\");\n *  }\n *  //SELECT (1+2) AS x, (1+2+3) AS y\n *  tsql.select(() => [\n *      x(),\n *      tsql.add(x(), 3).as(\"y\"),\n *  ]);\n *  //SELECT (1+2) AS realiased, (1+2+3+4+5) AS y\n *  tsql.select(() => [\n *      x().as(\"realiased\"),\n *      tsql.add(x(), 3, 4, 5).as(\"y\"),\n *  ]);\n * ```\n *\n */\nclass AliasedExpr extends expr_1.ExprImpl {\n    constructor(data, ast) {\n        super(data, ast);\n        this.tableAlias = data.tableAlias;\n        this.alias = data.alias;\n        this.unaliasedAst = ast;\n    }\n}\nexports.AliasedExpr = AliasedExpr;\n//# sourceMappingURL=aliased-expr-impl.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./aliased-expr-impl\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A table can be aliased,\n *\n * ```sql\n * SELECT\n *  *\n * FROM\n *  myTable\n * CROSS JOIN\n *  (\n *      myTable\n *  ) AS otherTable --This is an `AliasedTable`\n * ```\n *\n * For aliasing a query (derived tables), @see {@link DerivedTable}\n */\nclass AliasedTable {\n    constructor(data, unaliasedAst) {\n        this.isLateral = data.isLateral;\n        this.alias = data.alias;\n        this.columns = data.columns;\n        this.usedRef = data.usedRef;\n        this.unaliasedAst = unaliasedAst;\n    }\n}\nexports.AliasedTable = AliasedTable;\n//# sourceMappingURL=aliased-table.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./predicate\"));\n__export(require(\"./query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst query_1 = require(\"../query\");\nfunction assertNoDuplicateTableAlias(arr) {\n    const duplicates = query_1.duplicateTableAlias(arr);\n    if (duplicates.length > 0) {\n        throw new Error(`Duplicate table alias not allowed; ${duplicates.join(\", \")}`);\n    }\n}\nexports.assertNoDuplicateTableAlias = assertNoDuplicateTableAlias;\n//# sourceMappingURL=assert-no-duplicate-table-alias.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./assert-no-duplicate-table-alias\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction duplicateTableAlias(arr) {\n    const result = [];\n    for (let i = 0; i < arr.length; ++i) {\n        const cur = arr[i].alias;\n        for (let j = i + 1; j < arr.length; ++j) {\n            const nxt = arr[j].alias;\n            if (cur == nxt && !result.includes(cur)) {\n                result.push(cur);\n            }\n        }\n    }\n    return result;\n}\nexports.duplicateTableAlias = duplicateTableAlias;\n//# sourceMappingURL=duplicate-table-alias.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./duplicate-table-alias\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./aliased-table\"));\nconst AliasedTableArrayUtil = require(\"./array-util\");\nexports.AliasedTableArrayUtil = AliasedTableArrayUtil;\nconst AliasedTableUtil = require(\"./util\");\nexports.AliasedTableUtil = AliasedTableUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_1 = require(\"../../../table\");\nfunction candidateKeys(aliasedTable) {\n    if (table_1.TableUtil.isTable(aliasedTable)) {\n        return aliasedTable.candidateKeys;\n    }\n    else {\n        return [];\n    }\n}\nexports.candidateKeys = candidateKeys;\n//# sourceMappingURL=candidate-keys.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_1 = require(\"../../../table\");\nfunction deleteEnabled(aliasedTable) {\n    if (table_1.TableUtil.isTable(aliasedTable)) {\n        return aliasedTable.deleteEnabled;\n    }\n    else {\n        return false;\n    }\n}\nexports.deleteEnabled = deleteEnabled;\n//# sourceMappingURL=delete-enabled.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./candidate-keys\"));\n__export(require(\"./delete-enabled\"));\n__export(require(\"./mutable-columns\"));\n__export(require(\"./primary-key\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_1 = require(\"../../../table\");\nfunction mutableColumns(aliasedTable) {\n    if (table_1.TableUtil.isTable(aliasedTable)) {\n        return aliasedTable.mutableColumns;\n    }\n    else {\n        return [];\n    }\n}\nexports.mutableColumns = mutableColumns;\n//# sourceMappingURL=mutable-columns.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_1 = require(\"../../../table\");\nfunction primaryKey(aliasedTable) {\n    if (table_1.TableUtil.isTable(aliasedTable)) {\n        return aliasedTable.primaryKey;\n    }\n    else {\n        return undefined;\n    }\n}\nexports.primaryKey = primaryKey;\n//# sourceMappingURL=primary-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst CaseConditionNodeUtil = require(\"./util\");\nexports.CaseConditionNodeUtil = CaseConditionNodeUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./predicate\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./is-case-condition-node\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst type_util_1 = require(\"../../../../type-util\");\nfunction isCaseConditionNode(mixed) {\n    if (!type_util_1.isObjectWithOwnEnumerableKeys()(mixed, [\n        \"type\",\n        \"branches\",\n        \"else\"\n    ])) {\n        return false;\n    }\n    return (mixed.type === \"CaseCondition\");\n}\nexports.isCaseConditionNode = isCaseConditionNode;\n//# sourceMappingURL=is-case-condition-node.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst CaseValueNodeUtil = require(\"./util\");\nexports.CaseValueNodeUtil = CaseValueNodeUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./predicate\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./is-case-value-node\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst type_util_1 = require(\"../../../../type-util\");\nfunction isCaseValueNode(mixed) {\n    if (!type_util_1.isObjectWithOwnEnumerableKeys()(mixed, [\n        \"type\",\n        \"value\",\n        \"cases\",\n        \"else\"\n    ])) {\n        return false;\n    }\n    return (mixed.type === \"CaseValue\");\n}\nexports.isCaseValueNode = isCaseValueNode;\n//# sourceMappingURL=is-case-value-node.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst parentheses_1 = require(\"./parentheses\");\nconst AstUtil = require(\"./util\");\nclass FunctionArg {\n    constructor(ast) {\n        this.type = \"FunctionArg\";\n        this.toSql = (sqlfier) => {\n            return AstUtil.toSql(this.ast, sqlfier);\n        };\n        if (parentheses_1.Parentheses.IsParentheses(ast) && ast.canUnwrap) {\n            //No need to wrap arguments in parentheses...\n            //Unless the argument is a sub-query...\n            this.ast = ast.ast;\n        }\n        else {\n            this.ast = ast;\n        }\n    }\n    static IsFunctionArg(x) {\n        if (x instanceof FunctionArg) {\n            return true;\n        }\n        if (x == undefined) {\n            return false;\n        }\n        const mixed = x;\n        return ((mixed.type == \"FunctionArg\") &&\n            /**\n             * @todo Debate if this is necessary.\n             * Safer, but slower.\n             */\n            //AstUtil.isAst(mixed.ast) &&\n            (typeof mixed.toSql == \"function\"));\n    }\n}\nexports.FunctionArg = FunctionArg;\nclass FunctionCall {\n    constructor(functionName, args) {\n        this.type = \"FunctionCall\";\n        this.toSql = (sqlfier) => {\n            const argsSql = this.args\n                .map(arg => arg.toSql(sqlfier))\n                .join(\", \");\n            return `${this.functionName}(${argsSql})`;\n        };\n        this.functionName = functionName;\n        this.args = args;\n    }\n    static IsFunctionCall(x) {\n        if (x instanceof FunctionCall) {\n            return true;\n        }\n        if (x == undefined) {\n            return false;\n        }\n        const mixed = x;\n        return ((mixed.type == \"FunctionCall\") &&\n            (typeof mixed.functionName == \"string\") &&\n            /**\n             * @todo Debate if we should check each element is `FunctionArg`\n             * Safer, but slower.\n             */\n            (Array.isArray(mixed.args)) &&\n            (typeof mixed.toSql == \"function\"));\n    }\n}\nexports.FunctionCall = FunctionCall;\nfunction functionArg(ast) {\n    if (FunctionArg.IsFunctionArg(ast)) {\n        return ast;\n    }\n    return new FunctionArg(ast);\n}\nexports.functionArg = functionArg;\nfunction functionCall(functionName, args) {\n    return new FunctionCall(functionName, args.map(functionArg));\n}\nexports.functionCall = functionCall;\n//# sourceMappingURL=function-call.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst type_util_1 = require(\"../type-util\");\nfunction identifierNode(...identifiers) {\n    return {\n        type: \"Identifier\",\n        identifiers,\n    };\n}\nexports.identifierNode = identifierNode;\n/**\n * Does not check that each element of the `identifiers` property is a `string`\n *\n * @param mixed\n */\nfunction isIdentifierNode(mixed) {\n    if (!type_util_1.isObjectWithOwnEnumerableKeys()(mixed, [\n        \"type\",\n        \"identifiers\",\n    ])) {\n        return false;\n    }\n    return (mixed.type === \"Identifier\" &&\n        Array.isArray(mixed.identifiers) &&\n        mixed.identifiers.length >= 1);\n}\nexports.isIdentifierNode = isIdentifierNode;\n//# sourceMappingURL=identifier-node.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./case-condition-node\"));\n__export(require(\"./case-value-node\"));\n__export(require(\"./literal-value-node\"));\n__export(require(\"./operator-node\"));\n__export(require(\"./sqlfier\"));\n__export(require(\"./function-call\"));\n__export(require(\"./identifier-node\"));\n__export(require(\"./parentheses\"));\nconst AstUtil = require(\"./util\");\nexports.AstUtil = AstUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./literal-value-node\"));\nconst LiteralValueNodeUtil = require(\"./util\");\nexports.LiteralValueNodeUtil = LiteralValueNodeUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\n//import {BuiltInValueExpr} from \"../../built-in-value-expr\";\n//import * as tm from \"type-mapping\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LiteralValueType;\n(function (LiteralValueType) {\n    /**\n     * Can only be created using the `decimalLiteral()` function\n     */\n    LiteralValueType[\"DECIMAL\"] = \"DECIMAL\";\n    /**\n     * ```ts\n     * typeof x == \"string\"\n     * ```\n     */\n    LiteralValueType[\"STRING\"] = \"STRING\";\n    /**\n     * ```ts\n     * typeof x == \"number\"\n     * ```\n     */\n    LiteralValueType[\"DOUBLE\"] = \"DOUBLE\";\n    /**\n     * ```ts\n     * tm.TypeUtil.isBigInt(x) &&\n     * //bigint signed minimum value\n     * tm.BigIntUtil.greaterThanOrEqual(x, BigInt(\"-9223372036854775808\")) &&\n     * //bigint signed maximum value\n     * tm.BigIntUtil.lessThanOrEqual(x, BigInt(\"9223372036854775807\"))\n     * ```\n     */\n    LiteralValueType[\"BIGINT_SIGNED\"] = \"BIGINT_SIGNED\";\n    /**\n     * ```ts\n     * typeof x == \"boolean\"\n     * ```\n     */\n    LiteralValueType[\"BOOLEAN\"] = \"BOOLEAN\";\n    /**\n     * An unsigned char array (8-bit unsigned integer)\n     * ```ts\n     * x instanceof Uint8Array\n     * ```\n     * @todo Rename this to `UINT8ARRAY`?\n     */\n    LiteralValueType[\"BUFFER\"] = \"BUFFER\";\n    /**\n     * ```ts\n     * x === null\n     * ```\n     */\n    LiteralValueType[\"NULL\"] = \"NULL\";\n    /**\n     * ```ts\n     * DateUtil.isDate(x)\n     * ```\n     */\n    LiteralValueType[\"DATE_TIME\"] = \"DATE_TIME\";\n})(LiteralValueType = exports.LiteralValueType || (exports.LiteralValueType = {}));\nexports.literalValueTypeElements = Object.values(LiteralValueType);\n//# sourceMappingURL=literal-value-node.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst literal_value_node_1 = require(\"../../literal-value-node\");\nconst tm = require(\"type-mapping\");\nfunction isBigIntSigned(x) {\n    const BigInt = tm.TypeUtil.getBigIntFactoryFunctionOrError();\n    return (\n    //bigint signed minimum value\n    tm.BigIntUtil.greaterThanOrEqual(x, BigInt(\"-9223372036854775808\")) &&\n        //bigint signed maximum value\n        tm.BigIntUtil.lessThanOrEqual(x, BigInt(\"9223372036854775807\")));\n}\nexports.isBigIntSigned = isBigIntSigned;\n/**\n * @todo Remove\n * @deprecated\n */\nfunction isBigIntUnsigned(x) {\n    const BigInt = tm.TypeUtil.getBigIntFactoryFunctionOrError();\n    return (\n    //bigint unsigned minimum value\n    tm.BigIntUtil.greaterThanOrEqual(x, BigInt(\"0\")) &&\n        //bigint unsigned maximum value\n        tm.BigIntUtil.lessThanOrEqual(x, BigInt(\"18446744073709551615\")));\n}\nexports.isBigIntUnsigned = isBigIntUnsigned;\nfunction isBigIntSignedLiteral(x) {\n    return isBigIntSigned(x);\n}\nexports.isBigIntSignedLiteral = isBigIntSignedLiteral;\n/**\n * @todo Remove\n * @deprecated\n */\nfunction isBigIntUnsignedLiteral(x) {\n    const BigInt = tm.TypeUtil.getBigIntFactoryFunctionOrError();\n    return (\n    //bigint signed maximum value + 1\n    tm.BigIntUtil.greaterThanOrEqual(x, BigInt(\"9223372036854775808\")) &&\n        //bigint unsigned maximum value\n        tm.BigIntUtil.lessThanOrEqual(x, BigInt(\"18446744073709551615\")));\n}\nexports.isBigIntUnsignedLiteral = isBigIntUnsignedLiteral;\nfunction bigIntSignedLiteralNode(literalValue) {\n    if (isBigIntSignedLiteral(literalValue)) {\n        return {\n            type: \"LiteralValue\",\n            literalValueType: literal_value_node_1.LiteralValueType.BIGINT_SIGNED,\n            literalValue,\n        };\n    }\n    else {\n        //Can only really be an `BIGINT UNSIGNED` or `DECIMAL` value\n        throw new Error(`Literal value is too small/large to be a signed bigint; consider using BIGINT UNSIGNED or DECIMAL`);\n    }\n}\nexports.bigIntSignedLiteralNode = bigIntSignedLiteralNode;\n//# sourceMappingURL=bigint-literal-node.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst literal_value_node_1 = require(\"../../literal-value-node\");\nfunction booleanLiteralNode(literalValue) {\n    return {\n        type: \"LiteralValue\",\n        literalValueType: literal_value_node_1.LiteralValueType.BOOLEAN,\n        literalValue,\n    };\n}\nexports.booleanLiteralNode = booleanLiteralNode;\n//# sourceMappingURL=boolean-literal-node.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst literal_value_node_1 = require(\"../../literal-value-node\");\nfunction bufferLiteralNode(literalValue) {\n    return {\n        type: \"LiteralValue\",\n        literalValueType: literal_value_node_1.LiteralValueType.BUFFER,\n        literalValue,\n    };\n}\nexports.bufferLiteralNode = bufferLiteralNode;\n//# sourceMappingURL=buffer-literal-node.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst literal_value_node_1 = require(\"../../literal-value-node\");\nfunction dateTimeLiteralNode(literalValue) {\n    return {\n        type: \"LiteralValue\",\n        literalValueType: literal_value_node_1.LiteralValueType.DATE_TIME,\n        literalValue,\n    };\n}\nexports.dateTimeLiteralNode = dateTimeLiteralNode;\n//# sourceMappingURL=date-time-literal-node.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst literal_value_node_1 = require(\"../../literal-value-node\");\nconst ExprLib = require(\"../../../../expr-library\");\nfunction decimalLiteralNode(rawDecimalLiteral, \n/**\n * + MySQL's max precision is `65`\n * + PostgreSQL's min precision is `1`\n */\nprecision, \n/**\n * + MySQL's max scale is `30`.\n * + The min scale is `0`.\n * + `scale` must be <= `precision`.\n */\nscale) {\n    const mapper = tm.mysql.decimal(precision, scale);\n    const decimalDefinition = ExprLib.assertValidDecimalPrecisionAndScale(precision, scale);\n    const literalValue = mapper(\"rawDecimalLiteral\", rawDecimalLiteral).toString();\n    return {\n        type: \"LiteralValue\",\n        literalValueType: literal_value_node_1.LiteralValueType.DECIMAL,\n        literalValue,\n        precision: decimalDefinition.precision,\n        scale: decimalDefinition.scale,\n    };\n}\nexports.decimalLiteralNode = decimalLiteralNode;\n//# sourceMappingURL=decimal-literal-node.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst literal_value_node_1 = require(\"../../literal-value-node\");\nfunction doubleLiteralNode(literalValue) {\n    /**\n     * The SQL standard forbids NaN, Infinity, -Infinity.\n     * However, SQLite supports infinities.\n     *\n     * The job of throwing on these 3 values will have to\n     * fall to the sqlfiers.\n     */\n    /*\n    if (!isFinite(literalValue)) {\n        throw new Error(`Double literal must be finite`);\n    }\n    */\n    return {\n        type: \"LiteralValue\",\n        literalValueType: literal_value_node_1.LiteralValueType.DOUBLE,\n        literalValue,\n    };\n}\nexports.doubleLiteralNode = doubleLiteralNode;\n//# sourceMappingURL=double-literal-node.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./bigint-literal-node\"));\n__export(require(\"./boolean-literal-node\"));\n__export(require(\"./buffer-literal-node\"));\n__export(require(\"./date-time-literal-node\"));\n__export(require(\"./decimal-literal-node\"));\n__export(require(\"./double-literal-node\"));\n__export(require(\"./null-literal-node\"));\n__export(require(\"./string-literal-node\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst literal_value_node_1 = require(\"../../literal-value-node\");\nfunction nullLiteralNode(literalValue) {\n    return {\n        type: \"LiteralValue\",\n        literalValueType: literal_value_node_1.LiteralValueType.NULL,\n        literalValue,\n    };\n}\nexports.nullLiteralNode = nullLiteralNode;\n//# sourceMappingURL=null-literal-node.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst literal_value_node_1 = require(\"../../literal-value-node\");\nfunction stringLiteralNode(literalValue) {\n    return {\n        type: \"LiteralValue\",\n        literalValueType: literal_value_node_1.LiteralValueType.STRING,\n        literalValue,\n    };\n}\nexports.stringLiteralNode = stringLiteralNode;\n//# sourceMappingURL=string-literal-node.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./constructor\"));\n__export(require(\"./predicate\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./is-literal-value-node\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst literal_value_node_1 = require(\"../../literal-value-node\");\nconst type_util_1 = require(\"../../../../type-util\");\n/**\n * Does not check for `precision` and `scale` for `DecimalLiteralNode`.\n * Just assumes it exists.\n */\nfunction isLiteralValueNode(mixed) {\n    if (!type_util_1.isObjectWithOwnEnumerableKeys()(mixed, [\n        \"type\",\n        \"literalValueType\",\n        \"literalValue\"\n    ])) {\n        return false;\n    }\n    return (mixed.type === \"LiteralValue\" &&\n        literal_value_node_1.literalValueTypeElements.includes(mixed.literalValueType));\n}\nexports.isLiteralValueNode = isLiteralValueNode;\n//# sourceMappingURL=is-literal-value-node.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst OperatorNodeUtil = require(\"./util\");\nexports.OperatorNodeUtil = OperatorNodeUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./operator-node-0\"));\n__export(require(\"./operator-node-1-to-n\"));\n__export(require(\"./operator-node-1\"));\n__export(require(\"./operator-node-2-to-n\"));\n__export(require(\"./operator-node-2\"));\n__export(require(\"./operator-node-3\"));\n__export(require(\"./operator-node\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction operatorNode0(operatorType, typeHint) {\n    return {\n        type: \"Operator\",\n        operatorType,\n        operands: [],\n        typeHint,\n    };\n}\nexports.operatorNode0 = operatorNode0;\n//# sourceMappingURL=operator-node-0.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction operatorNode1ToN(operatorType, operands, typeHint) {\n    return {\n        type: \"Operator\",\n        operatorType,\n        operands: operands,\n        typeHint,\n    };\n}\nexports.operatorNode1ToN = operatorNode1ToN;\n//# sourceMappingURL=operator-node-1-to-n.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction operatorNode1(operatorType, operands, typeHint) {\n    return {\n        type: \"Operator\",\n        operatorType,\n        operands: operands,\n        typeHint,\n    };\n}\nexports.operatorNode1 = operatorNode1;\n//# sourceMappingURL=operator-node-1.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction operatorNode2ToN(operatorType, operands, typeHint) {\n    return {\n        type: \"Operator\",\n        operatorType,\n        operands: operands,\n        typeHint,\n    };\n}\nexports.operatorNode2ToN = operatorNode2ToN;\n//# sourceMappingURL=operator-node-2-to-n.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction operatorNode2(operatorType, operands, typeHint) {\n    return {\n        type: \"Operator\",\n        operatorType,\n        operands: operands,\n        typeHint,\n    };\n}\nexports.operatorNode2 = operatorNode2;\n//# sourceMappingURL=operator-node-2.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction operatorNode3(operatorType, operands, typeHint) {\n    return {\n        type: \"Operator\",\n        operatorType,\n        operands: operands,\n        typeHint,\n    };\n}\nexports.operatorNode3 = operatorNode3;\n//# sourceMappingURL=operator-node-3.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction operatorNode(operatorType, operands, typeHint) {\n    return {\n        type: \"Operator\",\n        operatorType,\n        operands,\n        typeHint,\n    };\n}\nexports.operatorNode = operatorNode;\n//# sourceMappingURL=operator-node.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./constructor\"));\n__export(require(\"./predicate\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./is-operator-node\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst type_util_1 = require(\"../../../../type-util\");\nfunction isOperatorNode(mixed) {\n    if (!type_util_1.isObjectWithOwnEnumerableKeys()(mixed, [\n        \"type\",\n        \"operatorType\",\n        \"operands\",\n        \"typeHint\"\n    ])) {\n        return false;\n    }\n    return (mixed.type === \"Operator\");\n}\nexports.isOperatorNode = isOperatorNode;\n//# sourceMappingURL=is-operator-node.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst AstUtil = require(\"./util\");\nconst function_call_1 = require(\"./function-call\");\nconst identifier_node_1 = require(\"./identifier-node\");\nconst literal_value_node_1 = require(\"./literal-value-node\");\nfunction shouldWrap(ast, canUnwrap) {\n    if (Parentheses.IsParentheses(ast)) {\n        if (!canUnwrap && ast.canUnwrap) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    if (function_call_1.FunctionCall.IsFunctionCall(ast)) {\n        return false;\n    }\n    if (literal_value_node_1.LiteralValueNodeUtil.isLiteralValueNode(ast)) {\n        return false;\n    }\n    if (identifier_node_1.isIdentifierNode(ast)) {\n        return false;\n    }\n    if (typeof ast == \"string\") {\n        return false;\n    }\n    if (Array.isArray(ast)) {\n        if (ast.length == 0) {\n            throw new Error(`Attempt to add parentheses around empty query tree`);\n        }\n        else if (ast.length == 1) {\n            return shouldWrap(ast[0], canUnwrap);\n        }\n        else {\n            return true;\n        }\n    }\n    return true;\n}\nclass Parentheses {\n    constructor(ast, canUnwrap) {\n        this.type = \"Parentheses\";\n        this.toSql = (sqlfier) => {\n            /**\n             * @todo Investigate this logic\n             */\n            const sqlAst = (sqlfier.parenthesesSqlfier == undefined ?\n                AstUtil.toSqlAst(this.ast, sqlfier) :\n                sqlfier.parenthesesSqlfier(this, (ast2) => AstUtil.toSql(ast2, sqlfier), sqlfier));\n            if (!this.canUnwrap || shouldWrap(sqlAst, this.canUnwrap)) {\n                return `(${AstUtil.toSql(sqlAst, sqlfier)})`;\n            }\n            else {\n                return AstUtil.toSql(sqlAst, sqlfier);\n            }\n        };\n        this.ast = ast;\n        this.canUnwrap = canUnwrap;\n    }\n    static IsParentheses(x) {\n        if (x instanceof Parentheses) {\n            return true;\n        }\n        if (x == undefined) {\n            return false;\n        }\n        const mixed = x;\n        return ((mixed.type == \"Parentheses\") &&\n            /**\n             * @todo Debate if this is necessary.\n             * Safer, but slower.\n             */\n            //AstUtil.isAst(mixed.ast) &&\n            (typeof mixed.canUnwrap == \"boolean\") &&\n            (typeof mixed.toSql == \"function\"));\n    }\n    static Create(ast, canUnwrap = true) {\n        if (shouldWrap(ast, canUnwrap)) {\n            if (Parentheses.IsParentheses(ast)) {\n                return new Parentheses(ast.ast, canUnwrap);\n            }\n            else {\n                return new Parentheses(ast, canUnwrap);\n            }\n        }\n        else {\n            return ast;\n        }\n    }\n}\nexports.Parentheses = Parentheses;\nfunction parentheses(ast, canUnwrap) {\n    return Parentheses.Create(ast, canUnwrap);\n}\nexports.parentheses = parentheses;\n//# sourceMappingURL=parentheses.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./not-implemented-sqlfier\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst operator_type_1 = require(\"../../operator-type\");\nconst literal_value_node_1 = require(\"../literal-value-node\");\nconst notImplemented = () => {\n    throw new Error(`Not implemented`);\n};\nconst operatorNotImplemented = (operatorNode) => {\n    throw new Error(`Not implemented ${operatorNode.operatorType}`);\n};\nconst literalValueNotImplemented = (literalValueNode) => {\n    throw new Error(`Not implemented ${literalValueNode.literalValueType}`);\n};\nexports.notImplementedSqlfier = {\n    identifierSqlfier: notImplemented,\n    literalValueSqlfier: Object\n        .values(literal_value_node_1.LiteralValueType)\n        .reduce((memo, literalValueType) => {\n        memo[literalValueType] = literalValueNotImplemented;\n        return memo;\n    }, {}),\n    operatorSqlfier: Object\n        .values(operator_type_1.OperatorType)\n        .reduce((memo, operatorType) => {\n        memo[operatorType] = operatorNotImplemented;\n        return memo;\n    }, {}),\n    queryBaseSqlfier: notImplemented,\n    caseValueSqlfier: notImplemented,\n    caseConditionSqlfier: notImplemented,\n};\n//# sourceMappingURL=not-implemented-sqlfier.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./insert-between\"));\n__export(require(\"./is-ast\"));\n__export(require(\"./to-sql-pretty\"));\n__export(require(\"./to-sql\"));\n__export(require(\"./try-extract-ast\"));\n__export(require(\"./try-unwrap-parentheses\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction insertBetween(operands, insertElement) {\n    const result = [];\n    for (const operand of operands) {\n        if (result.length > 0) {\n            result.push(insertElement);\n        }\n        result.push(operand);\n    }\n    return result;\n}\nexports.insertBetween = insertBetween;\n//# sourceMappingURL=insert-between.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst parentheses_1 = require(\"../parentheses\");\nconst function_call_1 = require(\"../function-call\");\nconst operator_node_1 = require(\"../operator-node\");\nconst identifier_node_1 = require(\"../identifier-node\");\nconst query_base_1 = require(\"../../query-base\");\nconst literal_value_node_1 = require(\"../literal-value-node\");\nconst case_value_node_1 = require(\"../case-value-node\");\nconst case_condition_node_1 = require(\"../case-condition-node\");\n/**\n * A type guard for the `Ast` type\n *\n * @param raw\n */\nfunction isAst(raw) {\n    if (typeof raw == \"string\") {\n        return true;\n    }\n    if (parentheses_1.Parentheses.IsParentheses(raw)) {\n        return true;\n    }\n    if (function_call_1.FunctionCall.IsFunctionCall(raw)) {\n        return true;\n    }\n    if (operator_node_1.OperatorNodeUtil.isOperatorNode(raw)) {\n        return true;\n    }\n    if (identifier_node_1.isIdentifierNode(raw)) {\n        return true;\n    }\n    if (literal_value_node_1.LiteralValueNodeUtil.isLiteralValueNode(raw)) {\n        return true;\n    }\n    if (Array.isArray(raw)) {\n        for (const item of raw) {\n            if (!isAst(item)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    if (query_base_1.QueryBaseUtil.isQuery(raw)) {\n        return true;\n    }\n    if (case_value_node_1.CaseValueNodeUtil.isCaseValueNode(raw)) {\n        return true;\n    }\n    if (case_condition_node_1.CaseConditionNodeUtil.isCaseConditionNode(raw)) {\n        return true;\n    }\n    return false;\n}\nexports.isAst = isAst;\n//# sourceMappingURL=is-ast.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst formatter_1 = require(\"../../formatter\");\nconst to_sql_1 = require(\"./to-sql\");\n/**\n * Converts an AST to a SQL string.\n *\n * Prettifies the output.\n *\n * -----\n *\n * Perfomance is generally \"okay\" but when queries become\n * hundreds of thousands of characters long,\n * it can take a long time.\n *\n * Use this with caution.\n *\n * @param ast\n */\nfunction toSqlPretty(ast, sqlfier, tokenizerConfig) {\n    const sql = to_sql_1.toSql(ast, sqlfier);\n    return new formatter_1.SqlFormatter(undefined, tokenizerConfig).format(sql);\n}\nexports.toSqlPretty = toSqlPretty;\n//# sourceMappingURL=to-sql-pretty.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst parentheses_1 = require(\"../parentheses\");\nconst function_call_1 = require(\"../function-call\");\nconst operator_node_1 = require(\"../operator-node\");\nconst identifier_node_1 = require(\"../identifier-node\");\nconst query_base_1 = require(\"../../query-base\");\nconst literal_value_node_1 = require(\"../literal-value-node\");\nconst case_value_node_1 = require(\"../case-value-node\");\nconst case_condition_node_1 = require(\"../case-condition-node\");\nfunction toSqlAst(ast, sqlfier) {\n    if (typeof ast == \"string\") {\n        return ast;\n    }\n    else if (parentheses_1.Parentheses.IsParentheses(ast)) {\n        return ast.toSql(sqlfier);\n    }\n    else if (function_call_1.FunctionCall.IsFunctionCall(ast)) {\n        return ast.toSql(sqlfier);\n    }\n    else if (operator_node_1.OperatorNodeUtil.isOperatorNode(ast)) {\n        return sqlfier.operatorSqlfier[ast.operatorType](ast, (ast2) => toSql(ast2, sqlfier), sqlfier);\n    }\n    else if (identifier_node_1.isIdentifierNode(ast)) {\n        return sqlfier.identifierSqlfier(ast);\n    }\n    else if (query_base_1.QueryBaseUtil.isQuery(ast)) {\n        return sqlfier.queryBaseSqlfier(ast, (ast2) => toSql(ast2, sqlfier), sqlfier);\n    }\n    else if (literal_value_node_1.LiteralValueNodeUtil.isLiteralValueNode(ast)) {\n        return sqlfier.literalValueSqlfier[ast.literalValueType](ast, (ast2) => toSql(ast2, sqlfier), sqlfier);\n    }\n    else if (case_value_node_1.CaseValueNodeUtil.isCaseValueNode(ast)) {\n        return sqlfier.caseValueSqlfier(ast, (ast2) => toSql(ast2, sqlfier), sqlfier);\n    }\n    else if (case_condition_node_1.CaseConditionNodeUtil.isCaseConditionNode(ast)) {\n        return sqlfier.caseConditionSqlfier(ast, (ast2) => toSql(ast2, sqlfier), sqlfier);\n    }\n    else {\n        return ast.map(subAst => toSql(subAst, sqlfier)).join(\" \");\n    }\n}\nexports.toSqlAst = toSqlAst;\n/**\n * Converts an AST to a SQL string.\n *\n * **DOES NOT** prettify the output.\n *\n * @see {@link toSqlPretty} for prettified output.\n *\n * @param ast\n */\nfunction toSql(ast, sqlfier) {\n    const result = toSqlAst(ast, sqlfier);\n    if (typeof result == \"string\") {\n        return result;\n    }\n    else {\n        return toSql(result, sqlfier);\n    }\n}\nexports.toSql = toSql;\n//# sourceMappingURL=to-sql.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst parentheses_1 = require(\"../parentheses\");\n/**\n * + If the AST satisfies the predicate, it is returned.\n * + If the AST is a `Parentheses` that contains an AST satisfying the predicate,\n * the `Parentheses` is returned.\n * + Else, `undefined` is returned.\n */\nfunction tryExtractAst(operand, extractDelegate) {\n    const extractResult = extractDelegate(operand);\n    if (extractResult != undefined) {\n        if (typeof extractResult == \"boolean\") {\n            //eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n            if (extractResult) {\n                return operand;\n            }\n        }\n        else {\n            return extractResult;\n        }\n    }\n    if (parentheses_1.Parentheses.IsParentheses(operand) && operand.canUnwrap) {\n        return tryExtractAst(operand.ast, extractDelegate);\n    }\n    return undefined;\n}\nexports.tryExtractAst = tryExtractAst;\nfunction tryExtractAstOr(operand, extractDelegate, noMatchDelegate) {\n    const extractResult = extractDelegate(operand);\n    if (extractResult != undefined) {\n        if (typeof extractResult == \"boolean\") {\n            if (extractResult) {\n                return operand;\n            }\n        }\n        else {\n            return extractResult;\n        }\n    }\n    if (parentheses_1.Parentheses.IsParentheses(operand) && operand.canUnwrap) {\n        return tryExtractAstOr(operand.ast, extractDelegate, noMatchDelegate);\n    }\n    return noMatchDelegate(operand);\n}\nexports.tryExtractAstOr = tryExtractAstOr;\n//# sourceMappingURL=try-extract-ast.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst parentheses_1 = require(\"../parentheses\");\nfunction tryUnwrapParentheses(ast) {\n    if (parentheses_1.Parentheses.IsParentheses(ast) && ast.canUnwrap) {\n        return ast.ast;\n    }\n    else {\n        return ast;\n    }\n}\nexports.tryUnwrapParentheses = tryUnwrapParentheses;\n//# sourceMappingURL=try-unwrap-parentheses.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst promise_util_1 = require(\"./promise-util\");\nconst emptyPromise = Promise.resolve();\nclass AsyncQueueStoppingError extends Error {\n    constructor(message) {\n        super(message);\n        Object.setPrototypeOf(this, AsyncQueueStoppingError.prototype);\n    }\n}\nexports.AsyncQueueStoppingError = AsyncQueueStoppingError;\nAsyncQueueStoppingError.prototype.name = \"AsyncQueueStoppingError\";\n/**\n * Only one `ItemT` can be allocated at a time.\n * Only one enqueued callback can be running at a time.\n *\n * This can be used to implement `IConnection.lock()`\n */\nclass AsyncQueue {\n    constructor(allocateDelegate) {\n        this.shouldStop = false;\n        this.lastPromise = emptyPromise;\n        this.deallocateErr = undefined;\n        /**\n         * Enqueues a callback that will be run asynchronously.\n         *\n         * Only one callback will be running at any given time.\n         */\n        this.enqueue = (callback) => {\n            if (this.shouldStop) {\n                return Promise.reject(new AsyncQueueStoppingError(\"The async queue is stopping, or has stopped\"));\n            }\n            if (this.deallocateErr != undefined) {\n                /**\n                 * We should not enqueue anymore callbacks,\n                 * our allocator/deallocator has run into problems.\n                 */\n                return Promise.reject(this.deallocateErr);\n            }\n            const tryResetQueue = () => {\n                if (this.lastPromise == callbackPromise) {\n                    this.lastPromise = emptyPromise;\n                }\n            };\n            const runCallback = () => {\n                /**\n                 * It's okay if this throws because we execute\n                 * `runCallback` inside of a `.then()`\n                 */\n                const { item, deallocate } = this.allocateDelegate();\n                return promise_util_1.invokeAsyncCallbackSafely(() => callback(item), (result) => {\n                    return promise_util_1.invokeAsyncCallbackSafely(deallocate, () => {\n                        tryResetQueue();\n                        return result;\n                    }, (deallocateErr) => {\n                        tryResetQueue();\n                        this.deallocateErr = deallocateErr;\n                        return result;\n                    });\n                }, (callbackErr) => {\n                    return promise_util_1.invokeAsyncCallbackSafely(deallocate, () => {\n                        tryResetQueue();\n                        return Promise.reject(callbackErr);\n                    }, (deallocateErr) => {\n                        tryResetQueue();\n                        this.deallocateErr = deallocateErr;\n                        return Promise.reject(callbackErr);\n                    });\n                });\n            };\n            const callbackPromise = this.lastPromise.then(runCallback, runCallback);\n            this.lastPromise = callbackPromise;\n            return callbackPromise;\n        };\n        /**\n         * This makes all future calls to `.enqueue()` throw a run-time error.\n         *\n         * Returns a promise that resolves when the last enqueued\n         * callback resolves.\n         */\n        this.stop = () => {\n            this.shouldStop = true;\n            return this.lastPromise.then(() => { }, () => { });\n        };\n        /**\n         * Enqueues a callback that will be run asynchronously.\n         * This callback will be given another `AsyncQueue` instance.\n         *\n         * This `AsyncQueue` will wait for the other instance to\n         * complete before continuing.\n         *\n         * Only one callback will be running at any given time.\n         */\n        this.lock = (callback) => {\n            if (this.shouldStop) {\n                return Promise.reject(new AsyncQueueStoppingError(\"The async queue is stopping, or has stopped\"));\n            }\n            if (this.deallocateErr != undefined) {\n                /**\n                 * We should not enqueue anymore callbacks,\n                 * our allocator/deallocator has run into problems.\n                 */\n                return Promise.reject(this.deallocateErr);\n            }\n            const tryResetQueue = () => {\n                if (this.lastPromise == callbackPromise) {\n                    this.lastPromise = emptyPromise;\n                }\n            };\n            const runCallback = () => {\n                const nestedAsyncQueue = new AsyncQueue(this.allocateDelegate);\n                return promise_util_1.invokeAsyncCallbackSafely(() => callback(nestedAsyncQueue), (result) => {\n                    const onStop = () => {\n                        tryResetQueue();\n                        /**\n                         * Copy over the `deallocateErr` because\n                         * they share the same `allocateDelegate`\n                         */\n                        this.deallocateErr = nestedAsyncQueue.deallocateErr;\n                        return result;\n                    };\n                    /**\n                     * Calling `.stop()` should never throw a synchronous error...\n                     * I think.\n                     */\n                    return nestedAsyncQueue.stop()\n                        .then(onStop, onStop);\n                }, (callbackErr) => {\n                    const onStop = () => {\n                        tryResetQueue();\n                        /**\n                         * Copy over the `deallocateErr` because\n                         * they share the same `allocateDelegate`\n                         */\n                        this.deallocateErr = nestedAsyncQueue.deallocateErr;\n                        return Promise.reject(callbackErr);\n                    };\n                    /**\n                     * Calling `.stop()` should never throw a synchronous error...\n                     * I think.\n                     */\n                    return nestedAsyncQueue.stop()\n                        .then(onStop, onStop);\n                });\n            };\n            const callbackPromise = this.lastPromise.then(runCallback, runCallback);\n            this.lastPromise = callbackPromise;\n            return callbackPromise;\n        };\n        this.allocateDelegate = allocateDelegate;\n    }\n    getShouldStop() {\n        return this.shouldStop;\n    }\n}\nexports.AsyncQueue = AsyncQueue;\n//# sourceMappingURL=async-queue.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BuiltInExprUtil = require(\"./util\");\nexports.BuiltInExprUtil = BuiltInExprUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst predicate_1 = require(\"../predicate\");\nconst used_ref_1 = require(\"../../../used-ref\");\nconst query_1 = require(\"../query\");\nconst from_value_expr_1 = require(\"./from-value-expr\");\n/**\n * If `mapper` is `IDataType`, it uses `mapper.toBuiltInExpr_NonCorrelated()`.\n *\n * Else, it uses a fallback algorithm that works fine for `BuiltInValueExpr`.\n * If the `value` is not a `BuiltInValueExpr`, an error is thrown.\n */\nfunction fromCustomExpr_MapCorrelated(mapper, allowed, customExpr) {\n    if (predicate_1.isAnyNonValueExpr(customExpr)) {\n        used_ref_1.UsedRefUtil.assertAllowed(allowed, query_1.usedRef(customExpr));\n        return customExpr;\n    }\n    else {\n        return from_value_expr_1.fromValueExpr(mapper, customExpr);\n    }\n}\nexports.fromCustomExpr_MapCorrelated = fromCustomExpr_MapCorrelated;\n//# sourceMappingURL=from-custom-expr-map-correlated.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst built_in_value_expr_1 = require(\"../../../built-in-value-expr\");\nconst column_1 = require(\"../../../column\");\nconst data_type_1 = require(\"../../../data-type\");\n/**\n * If `mapper` is `IDataType`, it uses `mapper.toBuiltInExpr_NonCorrelated()`.\n *\n * Else, it uses a fallback algorithm that works fine for `BuiltInValueExpr`.\n * If the `value` is not a `BuiltInValueExpr`, an error is thrown.\n */\nfunction fromValueExpr(mapper, value) {\n    let valueName = \"literal-value\";\n    if (column_1.ColumnUtil.isColumn(mapper)) {\n        valueName = `${mapper.tableAlias}${mapper.columnAlias}`;\n        mapper = mapper.mapper;\n    }\n    if (data_type_1.DataTypeUtil.isDataType(mapper)) {\n        return mapper.toBuiltInExpr_NonCorrelated(\n        /**\n         * Validate the incoming value again, just to be sure...\n         */\n        mapper(valueName, value));\n    }\n    else {\n        if (built_in_value_expr_1.BuiltInValueExprUtil.isBuiltInValueExpr(value)) {\n            return mapper(valueName, value);\n        }\n        else {\n            /**\n             * @todo Custom `Error` type\n             */\n            throw new Error(`Don't know how to convert ${tm.TypeUtil.toTypeStr(value)} value with keys ${Object.keys(value).map(k => JSON.stringify(k)).join(\", \")} to RawExpr`);\n        }\n    }\n}\nexports.fromValueExpr = fromValueExpr;\n//# sourceMappingURL=from-value-expr.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./from-custom-expr-map-correlated\"));\n__export(require(\"./from-value-expr\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./constructor\"));\n__export(require(\"./operation\"));\n__export(require(\"./predicate\"));\n__export(require(\"./query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst ast_1 = require(\"../../../ast\");\nconst expr_1 = require(\"../../../expr\");\nconst column_1 = require(\"../../../column\");\nconst query_base_1 = require(\"../../../query-base\");\nconst expr_select_item_1 = require(\"../../../expr-select-item\");\nconst date_util_1 = require(\"../../../date-util\");\n/**\n * + `bigint` is considered a `signed bigint` by this library.\n * +`DECIMAL` is not supported by this function.\n * +`BIGINT UNSIGNED` is not supported by this function.\n */\nfunction buildAst(builtInExpr) {\n    //Check built-in cases first\n    if (typeof builtInExpr == \"number\") {\n        return ast_1.LiteralValueNodeUtil.doubleLiteralNode(builtInExpr);\n    }\n    if (tm.TypeUtil.isBigInt(builtInExpr)) {\n        return ast_1.LiteralValueNodeUtil.bigIntSignedLiteralNode(builtInExpr);\n    }\n    if (typeof builtInExpr == \"string\") {\n        return ast_1.LiteralValueNodeUtil.stringLiteralNode(builtInExpr);\n    }\n    if (typeof builtInExpr == \"boolean\") {\n        return ast_1.LiteralValueNodeUtil.booleanLiteralNode(builtInExpr);\n    }\n    if (date_util_1.isDate(builtInExpr)) {\n        return ast_1.LiteralValueNodeUtil.dateTimeLiteralNode(builtInExpr);\n    }\n    if (builtInExpr instanceof Uint8Array) {\n        //escape(Buffer.from(\"hello\")) == \"X'68656c6c6f'\"\n        return ast_1.LiteralValueNodeUtil.bufferLiteralNode(builtInExpr);\n    }\n    if (builtInExpr === null) {\n        return ast_1.LiteralValueNodeUtil.nullLiteralNode(builtInExpr);\n    }\n    if (expr_1.ExprUtil.isExpr(builtInExpr)) {\n        return builtInExpr.ast;\n    }\n    if (column_1.ColumnUtil.isColumn(builtInExpr)) {\n        return column_1.ColumnUtil.buildAst(builtInExpr);\n    }\n    if (query_base_1.QueryBaseUtil.isOneSelectItem(builtInExpr)) {\n        /**\n         * @todo Check if this is desirable\n         */\n        //return builtInExpr.buildExprAst();\n        return ast_1.parentheses(builtInExpr, false /*canUnwrap*/);\n    }\n    if (expr_select_item_1.ExprSelectItemUtil.isExprSelectItem(builtInExpr)) {\n        /**\n         * @todo Check if this is desirable.\n         * If anything, the `query` ast, when used as a value query,\n         * should wrap an unwrappable parentheses around itself.\n         */\n        //return Parentheses.Create(builtInExpr.unaliasedAst, false/*canUnwrap*/);\n        return ast_1.parentheses(builtInExpr.unaliasedAst);\n    }\n    throw new Error(`Unknown builtInExpr ${tm.TypeUtil.toTypeStr(builtInExpr)}`);\n}\nexports.buildAst = buildAst;\n//# sourceMappingURL=build-ast.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./build-ast\"));\n__export(require(\"./intersect-used-ref\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst query_1 = require(\"../query\");\nconst used_ref_1 = require(\"../../../used-ref\");\nfunction intersectUsedRef(...arr) {\n    const result = used_ref_1.UsedRefUtil.intersect(...arr.map(u => query_1.usedRef(u)));\n    return result;\n}\nexports.intersectUsedRef = intersectUsedRef;\n//# sourceMappingURL=intersect-used-ref.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst query_1 = require(\"../query\");\nfunction assertNonAggregate(name, builtInExpr) {\n    if (query_1.isAggregate(builtInExpr)) {\n        throw new Error(`${name} must not be an aggregate expression`);\n    }\n}\nexports.assertNonAggregate = assertNonAggregate;\nfunction assertAllNonAggregate(name, builtInExprArr) {\n    for (let i = 0; i < builtInExprArr.length; ++i) {\n        assertNonAggregate(`${name}[${i}]`, builtInExprArr[i]);\n    }\n}\nexports.assertAllNonAggregate = assertAllNonAggregate;\n//# sourceMappingURL=assert-non-aggregate.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst query_1 = require(\"../query\");\n/**\n * @todo Rename to `assertNonNullable`\n */\nfunction assertNonNull(name, builtInExpr) {\n    if (tm.canOutputNull(query_1.mapper(builtInExpr))) {\n        throw new Error(`${name} must not be nullable`);\n    }\n}\nexports.assertNonNull = assertNonNull;\n//# sourceMappingURL=assert-non-null.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./assert-non-aggregate\"));\n__export(require(\"./assert-non-null\"));\n__export(require(\"./is-any-non-value-expr\"));\n__export(require(\"./is-any-subquery-expr\"));\n__export(require(\"./is-built-in-expr\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_in_value_expr_1 = require(\"../../../built-in-value-expr\");\nconst expr_1 = require(\"../../../expr\");\nconst column_1 = require(\"../../../column\");\nconst query_base_1 = require(\"../../../query-base\");\nconst expr_select_item_1 = require(\"../../../expr-select-item\");\nfunction isAnyNonValueExpr(mixed) {\n    if (built_in_value_expr_1.BuiltInValueExprUtil.isBuiltInValueExpr(mixed)) {\n        return false;\n    }\n    if (expr_1.ExprUtil.isExpr(mixed)) {\n        return true;\n    }\n    if (column_1.ColumnUtil.isColumn(mixed)) {\n        return true;\n    }\n    if (query_base_1.QueryBaseUtil.isOneSelectItem(mixed)) {\n        return true;\n    }\n    if (expr_select_item_1.ExprSelectItemUtil.isExprSelectItem(mixed)) {\n        return true;\n    }\n    return false;\n}\nexports.isAnyNonValueExpr = isAnyNonValueExpr;\n//# sourceMappingURL=is-any-non-value-expr.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst query_base_1 = require(\"../../../query-base\");\nfunction isAnySubqueryExpr(x) {\n    return query_base_1.QueryBaseUtil.isOneSelectItem(x) && query_base_1.QueryBaseUtil.isZeroOrOneRow(x);\n}\nexports.isAnySubqueryExpr = isAnySubqueryExpr;\n//# sourceMappingURL=is-any-subquery-expr.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_in_value_expr_1 = require(\"../../../built-in-value-expr\");\nconst is_any_non_value_expr_1 = require(\"./is-any-non-value-expr\");\nfunction isBuiltInExpr(raw) {\n    return (built_in_value_expr_1.BuiltInValueExprUtil.isBuiltInValueExpr(raw) ||\n        is_any_non_value_expr_1.isAnyNonValueExpr(raw));\n}\nexports.isBuiltInExpr = isBuiltInExpr;\n//# sourceMappingURL=is-built-in-expr.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./is-aggregate\"));\n__export(require(\"./mapper\"));\n__export(require(\"./used-ref\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isAggregate(builtInExpr) {\n    if (builtInExpr instanceof Object &&\n        \"isAggregate\" in builtInExpr &&\n        typeof builtInExpr.isAggregate == \"boolean\") {\n        return builtInExpr.isAggregate;\n    }\n    /**\n     * If this came from the`SELECT` clause,\n     * it may be an aggregate expression, or a non-aggregate expression.\n     *\n     * We need to know if this is an aggregate expression to avoid the following query,\n     * ```sql\n     *  SELECT\n     *      COUNT(*) AS x\n     *  FROM\n     *      T\n     *  GROUP BY\n     *      id\n     *  ORDER BY\n     *      -- Error, Cannot nest aggregate expressions\n     *      SUM(x) ASC;\n     * ```\n     *\n     * @todo Fix the `OrderByDelegate` to not use `ColumnRef`\n     */\n    return false;\n}\nexports.isAggregate = isAggregate;\n//# sourceMappingURL=is-aggregate.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst expr_1 = require(\"../../../expr\");\nconst column_1 = require(\"../../../column\");\nconst expr_select_item_1 = require(\"../../../expr-select-item\");\nconst query_base_1 = require(\"../../../query-base\");\nconst date_util_1 = require(\"../../../date-util\");\nfunction mapper(builtInExpr) {\n    //Check built-in cases first\n    if (typeof builtInExpr == \"number\") {\n        /**\n         * The SQL standard forbids NaN, Infinity, -Infinity.\n         * However, SQLite supports infinities.\n         *\n         * The job of throwing on these 3 values will have to\n         * fall to the sqlfiers.\n         */\n        return tm.toUnsafeNumber();\n    }\n    if (tm.TypeUtil.isBigInt(builtInExpr)) {\n        return tm.toBigInt();\n    }\n    if (typeof builtInExpr == \"string\") {\n        return tm.string();\n    }\n    if (typeof builtInExpr == \"boolean\") {\n        return (\n        //eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        builtInExpr ?\n            tm.mysql.true() :\n            tm.mysql.false());\n    }\n    if (date_util_1.isDate(builtInExpr)) {\n        return tm.mysql.dateTime(3);\n    }\n    if (builtInExpr instanceof Uint8Array) {\n        return tm.instanceOfUint8Array();\n    }\n    if (builtInExpr === null) {\n        return tm.null();\n    }\n    if (expr_1.ExprUtil.isExpr(builtInExpr)) {\n        return builtInExpr.mapper;\n    }\n    if (column_1.ColumnUtil.isColumn(builtInExpr)) {\n        return builtInExpr.mapper;\n    }\n    if (query_base_1.QueryBaseUtil.isOneSelectItem(builtInExpr) &&\n        query_base_1.QueryBaseUtil.isZeroOrOneRow(builtInExpr)) {\n        return query_base_1.QueryBaseUtil.mapper(builtInExpr);\n    }\n    if (expr_select_item_1.ExprSelectItemUtil.isExprSelectItem(builtInExpr)) {\n        return builtInExpr.mapper;\n    }\n    throw new Error(`Unknown builtInExpr ${tm.TypeUtil.toTypeStr(builtInExpr)}`);\n}\nexports.mapper = mapper;\n//# sourceMappingURL=mapper.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst built_in_value_expr_1 = require(\"../../../built-in-value-expr\");\nconst used_ref_1 = require(\"../../../used-ref\");\nconst expr_1 = require(\"../../../expr\");\nconst column_1 = require(\"../../../column\");\nconst expr_select_item_1 = require(\"../../../expr-select-item\");\nconst query_base_1 = require(\"../../../query-base\");\nfunction usedRef(builtInExpr) {\n    //Check built-in cases first\n    if (built_in_value_expr_1.BuiltInValueExprUtil.isBuiltInValueExpr(builtInExpr)) {\n        return used_ref_1.UsedRefUtil.fromColumnRef({});\n    }\n    if (expr_1.ExprUtil.isExpr(builtInExpr)) {\n        return builtInExpr.usedRef;\n    }\n    if (column_1.ColumnUtil.isColumn(builtInExpr)) {\n        return used_ref_1.UsedRefUtil.fromColumn(builtInExpr);\n    }\n    if (query_base_1.QueryBaseUtil.isQuery(builtInExpr)) {\n        return used_ref_1.UsedRefUtil.fromFromClause(builtInExpr.fromClause);\n    }\n    if (expr_select_item_1.ExprSelectItemUtil.isExprSelectItem(builtInExpr)) {\n        return builtInExpr.usedRef;\n    }\n    throw new Error(`Unknown builtInExpr ${tm.TypeUtil.toTypeStr(builtInExpr)}`);\n}\nexports.usedRef = usedRef;\n//# sourceMappingURL=used-ref.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./predicate\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./is-non-null-built-in-value-expr-array\"));\n__export(require(\"./is-built-in-value-expr-array\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_built_in_value_expr_1 = require(\"../../util/predicate/is-built-in-value-expr\");\nfunction isBuiltInValueExprArray(raw) {\n    if (!Array.isArray(raw)) {\n        return false;\n    }\n    for (const item of raw) {\n        if (!is_built_in_value_expr_1.isBuiltInValueExpr(item)) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.isBuiltInValueExprArray = isBuiltInValueExprArray;\n//# sourceMappingURL=is-built-in-value-expr-array.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_non_null_built_in_value_expr_1 = require(\"../../util/predicate/is-non-null-built-in-value-expr\");\nfunction isNonNullBuiltInValueExprArray(raw) {\n    if (!Array.isArray(raw)) {\n        return false;\n    }\n    for (const item of raw) {\n        if (!is_non_null_built_in_value_expr_1.isNonNullBuiltInValueExpr(item)) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.isNonNullBuiltInValueExprArray = isNonNullBuiltInValueExprArray;\n//# sourceMappingURL=is-non-null-built-in-value-expr-array.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BuiltInValueExprArrayUtil = require(\"./array-util\");\nexports.BuiltInValueExprArrayUtil = BuiltInValueExprArrayUtil;\nconst BuiltInValueExprUtil = require(\"./util\");\nexports.BuiltInValueExprUtil = BuiltInValueExprUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./predicate\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./is-equal\"));\n__export(require(\"./is-non-null-built-in-value-expr\"));\n__export(require(\"./is-built-in-value-expr\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst date_util_1 = require(\"../../../date-util\");\nfunction isBuiltInValueExpr(raw) {\n    if (tm.TypeUtil.isBigInt(raw)) {\n        return true;\n    }\n    switch (typeof raw) {\n        case \"number\":\n        case \"string\":\n        case \"boolean\": {\n            return true;\n        }\n    }\n    if (date_util_1.isDate(raw)) {\n        return true;\n    }\n    if (raw instanceof Uint8Array) {\n        return true;\n    }\n    if (raw === null) {\n        return true;\n    }\n    return false;\n}\nexports.isBuiltInValueExpr = isBuiltInValueExpr;\n//# sourceMappingURL=is-built-in-value-expr.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst date_util_1 = require(\"../../../date-util\");\nfunction isEqual(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (date_util_1.isDate(a)) {\n        if (date_util_1.isDate(b)) {\n            if (isNaN(a.getTime()) && isNaN(b.getTime())) {\n                return true;\n            }\n            return a.getTime() === b.getTime();\n        }\n        else {\n            return false;\n        }\n    }\n    if (a instanceof Uint8Array) {\n        if (b instanceof Uint8Array) {\n            return tm.ArrayBufferUtil.equals(a, b);\n        }\n        else {\n            return false;\n        }\n    }\n    /**\n     * Use `strictEqual()` algorithm that handles `bigint` polyfill\n     */\n    return tm.TypeUtil.strictEqual(a, b);\n}\nexports.isEqual = isEqual;\n//# sourceMappingURL=is-equal.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_built_in_value_expr_1 = require(\"./is-built-in-value-expr\");\nfunction isNonNullBuiltInValueExpr(raw) {\n    if (raw === null) {\n        return false;\n    }\n    return is_built_in_value_expr_1.isBuiltInValueExpr(raw);\n}\nexports.isNonNullBuiltInValueExpr = isNonNullBuiltInValueExpr;\n//# sourceMappingURL=is-non-null-built-in-value-expr.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst CandidateKeyUtil = require(\"./util\");\nexports.CandidateKeyUtil = CandidateKeyUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./mapper\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst column_map_1 = require(\"../../../column-map\");\nconst type_util_1 = require(\"../../../type-util\");\nconst primary_key_1 = require(\"../../../primary-key\");\nfunction mapper(table) {\n    return tm.unsafeOr(...table.candidateKeys.map((candidateKey) => {\n        return column_map_1.ColumnMapUtil.mapper(type_util_1.pickOwnEnumerable(table.columns, candidateKey));\n    }));\n}\nexports.mapper = mapper;\nfunction mapperPreferPrimaryKey(table) {\n    if (table.primaryKey == undefined) {\n        return mapper(table);\n    }\n    return tm.unsafeOr(primary_key_1.PrimaryKeyUtil.mapper(table), mapper(table));\n}\nexports.mapperPreferPrimaryKey = mapperPreferPrimaryKey;\n//# sourceMappingURL=mapper.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ColumnIdentifierMapUtil = require(\"./util\");\nexports.ColumnIdentifierMapUtil = ColumnIdentifierMapUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_identifier_1 = require(\"../../../column-identifier\");\nfunction fromColumnMap(columnMap) {\n    return Object.keys(columnMap).reduce((memo, columnAlias) => {\n        memo[columnAlias] = column_identifier_1.ColumnIdentifierUtil.fromColumn(columnMap[columnAlias]);\n        return memo;\n    }, {});\n}\nexports.fromColumnMap = fromColumnMap;\n//# sourceMappingURL=from-column-map.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./from-column-map\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./constructor\"));\n__export(require(\"./operation\"));\n__export(require(\"./predicate\"));\n__export(require(\"./query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./intersect\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction intersect(mapA, mapB) {\n    const right = {};\n    for (const columnAlias of Object.keys(mapB)) {\n        if (Object.prototype.hasOwnProperty.call(mapA, columnAlias) &&\n            Object.prototype.propertyIsEnumerable.call(mapA, columnAlias)) {\n            continue;\n        }\n        right[columnAlias] = mapB[columnAlias];\n    }\n    return {\n        ...mapA,\n        ...right,\n    };\n}\nexports.intersect = intersect;\n//# sourceMappingURL=intersect.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_identifier_1 = require(\"../../../column-identifier\");\nfunction hasColumnIdentifier(map, identifier) {\n    const column = map[identifier.columnAlias];\n    if (!column_identifier_1.ColumnIdentifierUtil.isColumnIdentifier(column)) {\n        return false;\n    }\n    return column_identifier_1.ColumnIdentifierUtil.isEqual(column, identifier);\n}\nexports.hasColumnIdentifier = hasColumnIdentifier;\nfunction assertHasColumnIdentifier(map, identifier) {\n    if (!hasColumnIdentifier(map, identifier)) {\n        throw new Error(`Column ${identifier.tableAlias}.${identifier.columnAlias} does not exist in column identifier map`);\n    }\n}\nexports.assertHasColumnIdentifier = assertHasColumnIdentifier;\nfunction assertHasColumnIdentifiers(map, identifiers) {\n    for (const columnIdentifier of identifiers) {\n        assertHasColumnIdentifier(map, columnIdentifier);\n    }\n}\nexports.assertHasColumnIdentifiers = assertHasColumnIdentifiers;\n//# sourceMappingURL=has-column-identifier.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./has-column-identifier\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Does not check `tableAlias`\n */\nfunction extractColumnIdentifiers(map, columnIdentifiers) {\n    const result = {};\n    for (const columnAlias of Object.keys(map)) {\n        if (columnIdentifiers.some(columnIdentifier => columnIdentifier.columnAlias == columnAlias)) {\n            result[columnAlias] = map[columnAlias];\n        }\n    }\n    return result;\n}\nexports.extractColumnIdentifiers = extractColumnIdentifiers;\n//# sourceMappingURL=extract-column-identifier.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./extract-column-identifier\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ColumnIdentifierRefUtil = require(\"./util\");\nexports.ColumnIdentifierRefUtil = ColumnIdentifierRefUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_column_1 = require(\"./from-column\");\nfunction appendColumnMap(ref, columnMap) {\n    for (const columnAlias of Object.keys(columnMap)) {\n        from_column_1.appendColumn(ref, columnMap[columnAlias]);\n    }\n    return ref;\n}\nexports.appendColumnMap = appendColumnMap;\nfunction fromColumnMap(columnMap) {\n    const result = appendColumnMap({}, columnMap);\n    return result;\n}\nexports.fromColumnMap = fromColumnMap;\n//# sourceMappingURL=from-column-map.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_identifier_1 = require(\"../../../column-identifier\");\nfunction appendColumn(ref, column) {\n    let map = ref[column.tableAlias];\n    if (map == undefined) {\n        map = {};\n        ref[column.tableAlias] = map;\n    }\n    map[column.columnAlias] = column_identifier_1.ColumnIdentifierUtil.fromColumn(column);\n    return ref;\n}\nexports.appendColumn = appendColumn;\n//# sourceMappingURL=from-column.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_column_map_1 = require(\"./from-column-map\");\nfunction appendJoin(ref, join) {\n    from_column_map_1.appendColumnMap(ref, join.columns);\n    return ref;\n}\nexports.appendJoin = appendJoin;\nfunction appendJoinArray(ref, arr) {\n    for (const join of arr) {\n        appendJoin(ref, join);\n    }\n    return ref;\n}\nexports.appendJoinArray = appendJoinArray;\nfunction fromJoinArray(arr) {\n    const result = {};\n    appendJoinArray(result, arr);\n    return result;\n}\nexports.fromJoinArray = fromJoinArray;\n//# sourceMappingURL=from-join-array.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_identifier_1 = require(\"../../../column-identifier\");\nconst from_column_1 = require(\"./from-column\");\nfunction fromSelectClause(selectClause) {\n    const result = {};\n    for (const columnIdentifier of column_identifier_1.ColumnIdentifierUtil.fromSelectClause(selectClause)) {\n        from_column_1.appendColumn(result, columnIdentifier);\n    }\n    return result;\n}\nexports.fromSelectClause = fromSelectClause;\n//# sourceMappingURL=from-select-clause.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./from-column-map\"));\n__export(require(\"./from-column\"));\n__export(require(\"./from-join-array\"));\n__export(require(\"./from-select-clause\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./constructor\"));\n__export(require(\"./operation\"));\n__export(require(\"./predicate\"));\n__export(require(\"./query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./intersect\"));\n__export(require(\"./left-intersect\"));\n__export(require(\"./try-flatten\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst left_intersect_1 = require(\"./left-intersect\");\nfunction intersect(refA, refB) {\n    const left = left_intersect_1.leftIntersect(refA, refB);\n    const right = {};\n    for (const tableAlias of Object.keys(refB)) {\n        if (Object.prototype.hasOwnProperty.call(refA, tableAlias) &&\n            Object.prototype.propertyIsEnumerable.call(refA, tableAlias)) {\n            continue;\n        }\n        right[tableAlias] = refB[tableAlias];\n    }\n    return {\n        ...left,\n        ...right,\n    };\n}\nexports.intersect = intersect;\n//# sourceMappingURL=intersect.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_identifier_map_1 = require(\"../../../column-identifier-map\");\nfunction leftIntersect(refA, refB) {\n    const result = {};\n    for (const tableAlias of Object.keys(refA)) {\n        if (Object.prototype.hasOwnProperty.call(refB, tableAlias) &&\n            Object.prototype.propertyIsEnumerable.call(refB, tableAlias)) {\n            result[tableAlias] = column_identifier_map_1.ColumnIdentifierMapUtil.intersect(refA[tableAlias], refB[tableAlias]);\n        }\n        else {\n            result[tableAlias] = refA[tableAlias];\n        }\n    }\n    return result;\n}\nexports.leftIntersect = leftIntersect;\n//# sourceMappingURL=left-intersect.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction tryFlatten(ref) {\n    const tableAliases = Object.keys(ref);\n    if (tableAliases.length == 1) {\n        return ref[tableAliases[0]];\n    }\n    else {\n        return ref;\n    }\n}\nexports.tryFlatten = tryFlatten;\n//# sourceMappingURL=try-flatten.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_identifier_map_1 = require(\"../../../column-identifier-map\");\nfunction hasColumnIdentifier(ref, identifier) {\n    if (!Object.prototype.hasOwnProperty.call(ref, identifier.tableAlias)) {\n        return false;\n    }\n    const columnMap = ref[identifier.tableAlias];\n    return column_identifier_map_1.ColumnIdentifierMapUtil.hasColumnIdentifier(columnMap, identifier);\n}\nexports.hasColumnIdentifier = hasColumnIdentifier;\nfunction assertHasColumnIdentifier(ref, identifier) {\n    if (!hasColumnIdentifier(ref, identifier)) {\n        throw new Error(`Column ${identifier.tableAlias}.${identifier.columnAlias} does not exist in column identifier ref`);\n    }\n}\nexports.assertHasColumnIdentifier = assertHasColumnIdentifier;\nfunction assertHasColumnIdentifiers(ref, identifiers) {\n    for (const identifier of identifiers) {\n        assertHasColumnIdentifier(ref, identifier);\n    }\n}\nexports.assertHasColumnIdentifiers = assertHasColumnIdentifiers;\n//# sourceMappingURL=has-column-identifier.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./has-column-identifier\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_identifier_map_1 = require(\"../../../column-identifier-map\");\nfunction extractColumnIdentifiers(ref, columnIdentifiers) {\n    const result = {};\n    for (const tableAlias of Object.keys(ref)) {\n        const arr = columnIdentifiers.filter(columnIdentifier => columnIdentifier.tableAlias == tableAlias);\n        if (arr.length > 0) {\n            result[tableAlias] = column_identifier_map_1.ColumnIdentifierMapUtil.extractColumnIdentifiers(ref[tableAlias], arr);\n        }\n    }\n    return result;\n}\nexports.extractColumnIdentifiers = extractColumnIdentifiers;\n//# sourceMappingURL=extract-column-identifier.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./extract-column-identifier\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ColumnIdentifierUtil = require(\"../../util\");\nfunction fromColumnMap(columnMap) {\n    const result = [];\n    for (const columnAlias of Object.keys(columnMap)) {\n        result.push(ColumnIdentifierUtil.fromColumn(columnMap[columnAlias]));\n    }\n    return result;\n}\nexports.fromColumnMap = fromColumnMap;\n//# sourceMappingURL=from-column-map.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_column_map_1 = require(\"./from-column-map\");\nfunction fromColumnRef(columnRef) {\n    const result = [];\n    for (const tableAlias of Object.keys(columnRef)) {\n        result.push(...from_column_map_1.fromColumnMap(columnRef[tableAlias]));\n    }\n    return result;\n}\nexports.fromColumnRef = fromColumnRef;\n//# sourceMappingURL=from-column-ref.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./from-column-map\"));\n__export(require(\"./from-column-ref\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./constructor\"));\n__export(require(\"./predicate\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../../util\");\nfunction assertDisjoint(arrA, arrB) {\n    for (const a of arrA) {\n        for (const b of arrB) {\n            if (util_1.isEqual(a, b)) {\n                throw new Error(`Duplicate column identifier ${a.tableAlias}.${a.columnAlias} found; consider aliasing`);\n            }\n        }\n    }\n}\nexports.assertDisjoint = assertDisjoint;\n//# sourceMappingURL=assert-disjoint.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../../util\");\nfunction assertNoDuplicate(arr) {\n    for (let i = 0; i < arr.length; ++i) {\n        for (let j = i + 1; j < arr.length; ++j) {\n            if (util_1.isEqual(arr[i], arr[j])) {\n                throw new Error(`Duplicate column identifier ${arr[i].tableAlias}.${arr[i].columnAlias}`);\n            }\n        }\n    }\n}\nexports.assertNoDuplicate = assertNoDuplicate;\n//# sourceMappingURL=assert-no-duplicate.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./assert-disjoint\"));\n__export(require(\"./assert-no-duplicate\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ColumnIdentifierArrayUtil = require(\"./array-util\");\nexports.ColumnIdentifierArrayUtil = ColumnIdentifierArrayUtil;\nconst ColumnIdentifierUtil = require(\"./util\");\nexports.ColumnIdentifierUtil = ColumnIdentifierUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_column_1 = require(\"./from-column\");\nfunction fromColumnMap(map) {\n    const result = [];\n    for (const columnAlias of Object.keys(map)) {\n        result.push(from_column_1.fromColumn(map[columnAlias]));\n    }\n    return result;\n}\nexports.fromColumnMap = fromColumnMap;\n//# sourceMappingURL=from-column-map.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_column_map_1 = require(\"./from-column-map\");\nfunction fromColumnRef(ref) {\n    const result = [];\n    for (const tableAlias of Object.keys(ref)) {\n        result.push(...from_column_map_1.fromColumnMap(ref[tableAlias]));\n    }\n    return result;\n}\nexports.fromColumnRef = fromColumnRef;\n//# sourceMappingURL=from-column-ref.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction fromColumn(column) {\n    const result = {\n        tableAlias: column.tableAlias,\n        columnAlias: column.columnAlias,\n    };\n    return result;\n}\nexports.fromColumn = fromColumn;\n//# sourceMappingURL=from-column.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction fromExprSelectItem(column) {\n    const result = {\n        tableAlias: column.tableAlias,\n        columnAlias: column.alias,\n    };\n    return result;\n}\nexports.fromExprSelectItem = fromExprSelectItem;\n//# sourceMappingURL=from-expr-select-item.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_select_item_1 = require(\"./from-select-item\");\n/**\n * Does not remove duplicate identifiers\n *\n * @param selectClause\n */\nfunction fromSelectClause(selectClause) {\n    const result = [];\n    for (const selectItem of selectClause) {\n        result.push(...from_select_item_1.fromSelectItem(selectItem));\n    }\n    return result;\n}\nexports.fromSelectClause = fromSelectClause;\n//# sourceMappingURL=from-select-clause.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst expr_select_item_1 = require(\"../../../expr-select-item\");\nconst from_expr_select_item_1 = require(\"./from-expr-select-item\");\nconst from_column_1 = require(\"./from-column\");\nconst column_ref_1 = require(\"../../../column-ref\");\nconst from_column_ref_1 = require(\"./from-column-ref\");\nconst column_map_1 = require(\"../../../column-map\");\nconst from_column_map_1 = require(\"./from-column-map\");\nconst column_1 = require(\"../../../column\");\nfunction fromSelectItem(selectItem) {\n    if (expr_select_item_1.ExprSelectItemUtil.isExprSelectItem(selectItem)) {\n        return [from_expr_select_item_1.fromExprSelectItem(selectItem)];\n    }\n    else if (column_1.ColumnUtil.isColumn(selectItem)) {\n        return [from_column_1.fromColumn(selectItem)];\n    }\n    else if (column_map_1.ColumnMapUtil.isColumnMap(selectItem)) {\n        return from_column_map_1.fromColumnMap(selectItem);\n    }\n    else if (column_ref_1.ColumnRefUtil.isColumnRef(selectItem)) {\n        return from_column_ref_1.fromColumnRef(selectItem);\n    }\n    else {\n        throw new Error(`Unknown SelectItem`);\n    }\n}\nexports.fromSelectItem = fromSelectItem;\n//# sourceMappingURL=from-select-item.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./from-column-map\"));\n__export(require(\"./from-column-ref\"));\n__export(require(\"./from-column\"));\n__export(require(\"./from-expr-select-item\"));\n__export(require(\"./from-select-clause\"));\n__export(require(\"./from-select-item\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./constructor\"));\n__export(require(\"./predicate\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./is-column-identifier\"));\n__export(require(\"./is-equal\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst type_util_1 = require(\"../../../type-util\");\nfunction isColumnIdentifier(raw) {\n    if (!type_util_1.isObjectWithOwnEnumerableKeys()(raw, [\n        \"tableAlias\",\n        \"columnAlias\"\n    ])) {\n        return false;\n    }\n    return ((typeof raw.tableAlias == \"string\") &&\n        (typeof raw.columnAlias == \"string\"));\n}\nexports.isColumnIdentifier = isColumnIdentifier;\n//# sourceMappingURL=is-column-identifier.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isEqual(a, b) {\n    return (a.tableAlias == b.tableAlias &&\n        a.columnAlias == b.columnAlias);\n}\nexports.isEqual = isEqual;\nfunction assertIsEqual(a, b) {\n    if (a.tableAlias != b.tableAlias) {\n        throw new Error(`Table alias mismatch ${a.tableAlias} != ${b.tableAlias}`);\n    }\n    if (a.columnAlias != b.columnAlias) {\n        throw new Error(`Column alias mismatch ${a.columnAlias} != ${b.columnAlias}`);\n    }\n}\nexports.assertIsEqual = assertIsEqual;\n//# sourceMappingURL=is-equal.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ColumnMapUtil = require(\"./util\");\nexports.ColumnMapUtil = ColumnMapUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction fromColumnArray(columns) {\n    const result = {};\n    for (const column of columns) {\n        result[column.columnAlias] = column;\n    }\n    return result;\n}\nexports.fromColumnArray = fromColumnArray;\n//# sourceMappingURL=from-column-array.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction fromColumnRef(ref) {\n    const result = {};\n    for (const tableAlias of Object.keys(ref)) {\n        const columnMap = ref[tableAlias];\n        for (const columnAlias in columnMap) {\n            const column = columnMap[columnAlias];\n            result[column.columnAlias] = column;\n        }\n    }\n    return result;\n}\nexports.fromColumnRef = fromColumnRef;\n//# sourceMappingURL=from-column-ref.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction fromColumn(column) {\n    return {\n        [column.columnAlias]: column\n    };\n}\nexports.fromColumn = fromColumn;\n//# sourceMappingURL=from-column.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_column_1 = require(\"./from-column\");\nconst column_1 = require(\"../../../column\");\nfunction fromExprSelectItem(item) {\n    return from_column_1.fromColumn(column_1.ColumnUtil.fromExprSelectItem(item));\n}\nexports.fromExprSelectItem = fromExprSelectItem;\n//# sourceMappingURL=from-expr-select-item.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_1 = require(\"../../../column\");\nfunction fromFieldArray(tableAlias, fields) {\n    const result = {};\n    for (const field of fields) {\n        result[field.__name] = new column_1.Column({\n            tableAlias: tableAlias,\n            columnAlias: field.__name,\n            mapper: field,\n        }, undefined);\n    }\n    return result;\n}\nexports.fromFieldArray = fromFieldArray;\n//# sourceMappingURL=from-field-array.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst operation_1 = require(\"../operation\");\nfunction fromJoin(join) {\n    if (join.nullable) {\n        return operation_1.toNullable(join.columns);\n    }\n    else {\n        return join.columns;\n    }\n}\nexports.fromJoin = fromJoin;\n//# sourceMappingURL=from-join.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_1 = require(\"../../../column\");\nfunction fromMapperMap(tableAlias, mapperMap) {\n    const result = {};\n    for (const columnAlias of Object.keys(mapperMap)) {\n        result[columnAlias] = new column_1.Column({\n            tableAlias,\n            columnAlias,\n            mapper: mapperMap[columnAlias],\n        }, undefined);\n    }\n    return result;\n}\nexports.fromMapperMap = fromMapperMap;\n//# sourceMappingURL=from-mapper-map.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_1 = require(\"../../../column\");\nconst from_select_item_1 = require(\"./from-select-item\");\n/**\n * Assumes no duplicate `columnAlias` in `SelectClauseT`\n */\nfunction fromSelectClause(selectsClause, tableAlias, preserveUnaliasedAst) {\n    const result = {};\n    for (const item of selectsClause) {\n        const map = from_select_item_1.fromSelectItem(item);\n        for (const columnAlias of Object.keys(map)) {\n            if (preserveUnaliasedAst) {\n                result[columnAlias] = column_1.ColumnUtil.withTableAlias(map[columnAlias], tableAlias);\n            }\n            else {\n                result[columnAlias] = column_1.ColumnUtil.withUnaliasedAst(column_1.ColumnUtil.withTableAlias(map[columnAlias], tableAlias), undefined);\n            }\n        }\n    }\n    return result;\n}\nexports.fromSelectClause = fromSelectClause;\n//# sourceMappingURL=from-select-clause.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_column_1 = require(\"./from-column\");\nconst expr_select_item_1 = require(\"../../../expr-select-item\");\nconst column_ref_1 = require(\"../../../column-ref\");\nconst from_expr_select_item_1 = require(\"./from-expr-select-item\");\nconst from_column_ref_1 = require(\"./from-column-ref\");\nconst column_1 = require(\"../../../column\");\nconst predicate_1 = require(\"../predicate\");\nfunction fromSelectItem(item) {\n    if (column_1.ColumnUtil.isColumn(item)) {\n        return from_column_1.fromColumn(item);\n    }\n    else if (expr_select_item_1.ExprSelectItemUtil.isExprSelectItem(item)) {\n        return from_expr_select_item_1.fromExprSelectItem(item);\n    }\n    else if (predicate_1.isColumnMap(item)) {\n        return item;\n    }\n    else if (column_ref_1.ColumnRefUtil.isColumnRef(item)) {\n        return from_column_ref_1.fromColumnRef(item);\n    }\n    else {\n        throw new Error(`Unknown select item`);\n    }\n}\nexports.fromSelectItem = fromSelectItem;\n//# sourceMappingURL=from-select-item.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./from-column-array\"));\n__export(require(\"./from-column\"));\n__export(require(\"./from-field-array\"));\n__export(require(\"./from-join\"));\n__export(require(\"./from-mapper-map\"));\n__export(require(\"./from-select-clause\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./constructor\"));\n__export(require(\"./operation\"));\n__export(require(\"./predicate\"));\n__export(require(\"./query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst left_compound_1 = require(\"./left-compound\");\nfunction compound(mapA, mapB) {\n    const left = left_compound_1.leftCompound(mapA, mapB);\n    const right = {};\n    for (const columnAlias of Object.keys(mapB)) {\n        if (Object.prototype.hasOwnProperty.call(mapA, columnAlias) &&\n            Object.prototype.propertyIsEnumerable.call(mapA, columnAlias)) {\n            continue;\n        }\n        right[columnAlias] = mapB[columnAlias];\n    }\n    return {\n        ...left,\n        ...right,\n    };\n}\nexports.compound = compound;\n//# sourceMappingURL=compound.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./compound\"));\n__export(require(\"./intersect\"));\n__export(require(\"./left-compound\"));\n__export(require(\"./left-intersect\"));\n__export(require(\"./omit\"));\n__export(require(\"./pick\"));\n__export(require(\"./replace-column\"));\n__export(require(\"./to-nullable\"));\n__export(require(\"./with-table-alias\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst left_intersect_1 = require(\"./left-intersect\");\nfunction intersect(mapA, mapB) {\n    const left = left_intersect_1.leftIntersect(mapA, mapB);\n    const right = {};\n    for (const columnAlias of Object.keys(mapB)) {\n        if (Object.prototype.hasOwnProperty.call(mapA, columnAlias) &&\n            Object.prototype.propertyIsEnumerable.call(mapA, columnAlias)) {\n            continue;\n        }\n        right[columnAlias] = mapB[columnAlias];\n    }\n    return {\n        ...left,\n        ...right,\n    };\n}\nexports.intersect = intersect;\n//# sourceMappingURL=intersect.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst column_1 = require(\"../../../column\");\nfunction leftCompound(mapA, mapB) {\n    const result = {};\n    for (const columnAlias of Object.keys(mapA)) {\n        const columnA = mapA[columnAlias];\n        const columnB = mapB[columnAlias];\n        if (column_1.ColumnUtil.isColumn(columnB)) {\n            result[columnAlias] = new column_1.Column({\n                tableAlias: columnA.tableAlias,\n                columnAlias: columnA.columnAlias,\n                mapper: tm.or(columnA.mapper, mapB[columnAlias].mapper),\n            }, columnA.unaliasedAst);\n        }\n        else {\n            result[columnAlias] = columnA;\n        }\n    }\n    return result;\n}\nexports.leftCompound = leftCompound;\n;\n//# sourceMappingURL=left-compound.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_1 = require(\"../../../column\");\nconst data_type_1 = require(\"../../../data-type\");\nfunction leftIntersect(mapA, mapB) {\n    const result = {};\n    for (const columnAlias of Object.keys(mapA)) {\n        const columnA = mapA[columnAlias];\n        const columnB = mapB[columnAlias];\n        if (column_1.ColumnUtil.isColumn(columnB)) {\n            result[columnAlias] = new column_1.Column({\n                tableAlias: columnA.tableAlias,\n                columnAlias: columnA.columnAlias,\n                mapper: data_type_1.DataTypeUtil.intersect(columnA.mapper, mapB[columnAlias].mapper),\n            }, columnA.unaliasedAst);\n        }\n        else {\n            result[columnAlias] = columnA;\n        }\n    }\n    return result;\n}\nexports.leftIntersect = leftIntersect;\n;\n//# sourceMappingURL=left-intersect.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction omit(map, arr) {\n    const result = {};\n    for (const columnAlias of Object.keys(map)) {\n        if (arr.indexOf(columnAlias) < 0) {\n            result[columnAlias] = map[columnAlias];\n        }\n    }\n    return result;\n}\nexports.omit = omit;\n//# sourceMappingURL=omit.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction pick(map, arr) {\n    const result = {};\n    for (const columnAlias of Object.keys(map)) {\n        if (arr.indexOf(columnAlias) >= 0) {\n            result[columnAlias] = map[columnAlias];\n        }\n    }\n    return result;\n}\nexports.pick = pick;\n//# sourceMappingURL=pick.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_1 = require(\"../../../column\");\nfunction replaceColumn(map, columnAlias, mapper) {\n    const result = {};\n    for (const myColumnAlias of Object.keys(map)) {\n        if (myColumnAlias == columnAlias) {\n            result[myColumnAlias] = column_1.ColumnUtil.withType(map[myColumnAlias], mapper);\n        }\n        else {\n            result[myColumnAlias] = map[myColumnAlias];\n        }\n    }\n    return result;\n}\nexports.replaceColumn = replaceColumn;\n//# sourceMappingURL=replace-column.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_1 = require(\"../../../column\");\nfunction toNullable(columnMap) {\n    const result = {};\n    for (const columnAlias of Object.keys(columnMap)) {\n        result[columnAlias] = column_1.ColumnUtil.toNullable(columnMap[columnAlias]);\n    }\n    return result;\n}\nexports.toNullable = toNullable;\n//# sourceMappingURL=to-nullable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_1 = require(\"../../../column\");\nfunction withTableAlias(columnMap, newTableAlias) {\n    const result = {};\n    for (const columnAlias of Object.keys(columnMap)) {\n        result[columnAlias] = column_1.ColumnUtil.withTableAlias(columnMap[columnAlias], newTableAlias);\n    }\n    return result;\n}\nexports.withTableAlias = withTableAlias;\n//# sourceMappingURL=with-table-alias.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_null_safe_comparable_1 = require(\"./is-null-safe-comparable\");\nconst query_1 = require(\"../query\");\nfunction assertIsNullSafeComparable(a, b) {\n    if (!is_null_safe_comparable_1.isNullSafeComparable(a, b)) {\n        const myTableAlias = query_1.tableAlias(a);\n        const myColumnAliases = Object.keys(a).join(\",\");\n        const otherTableAlias = query_1.tableAlias(b);\n        const otherColumnAliases = Object.keys(a)\n            .filter(myColumnAlias => (Object.prototype.hasOwnProperty.call(b, myColumnAlias) &&\n            Object.prototype.propertyIsEnumerable.call(b, myColumnAlias)))\n            .join(\",\");\n        throw new Error(`${myTableAlias} (${myColumnAliases}) is not null-safe comparable to ${otherTableAlias} (${otherColumnAliases})`);\n    }\n}\nexports.assertIsNullSafeComparable = assertIsNullSafeComparable;\n//# sourceMappingURL=assert-is-null-safe-comparable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction hasColumnAlias(map, columnAlias) {\n    return (Object.prototype.hasOwnProperty.call(map, columnAlias) &&\n        Object.prototype.propertyIsEnumerable.call(map, columnAlias));\n}\nexports.hasColumnAlias = hasColumnAlias;\n//# sourceMappingURL=has-column-alias.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./assert-is-null-safe-comparable\"));\n__export(require(\"./has-column-alias\"));\n__export(require(\"./is-column-map\"));\n__export(require(\"./is-null-safe-comparable\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_1 = require(\"../../../column\");\nfunction isColumnMap(mixed) {\n    if (!(mixed instanceof Object)) {\n        return false;\n    }\n    for (const columnAlias of Object.keys(mixed)) {\n        const possiblyColumn = mixed[columnAlias];\n        if (!column_1.ColumnUtil.isColumn(possiblyColumn)) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.isColumnMap = isColumnMap;\n//# sourceMappingURL=is-column-map.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Ideally, we'd want to have run-time checks\n * ensuring columns in `a` and columns in `b`\n * have null-safe comparable types.\n *\n * However, due to how the project is structured,\n * this is not possible.\n *\n * So, at the very least, we just check\n * the columns exist.\n */\nfunction isNullSafeComparable(a, b) {\n    /**\n     * Ideally, we'd want to have run-time checks\n     * ensuring columns in `a` and columns in `b`\n     * have null-safe comparable types.\n     *\n     * However, due to how the project is structured,\n     * this is not possible.\n     *\n     * So, at the very least, we just check\n     * the columns exist.\n     */\n    const otherColumnAliases = Object.keys(b);\n    for (const myColumnAlias of Object.keys(a)) {\n        if (!otherColumnAliases.includes(myColumnAlias)) {\n            /**\n             * Other column does not exist\n             */\n            return false;\n        }\n    }\n    return true;\n}\nexports.isNullSafeComparable = isNullSafeComparable;\n//# sourceMappingURL=is-null-safe-comparable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction columnAlias(map) {\n    return Object.keys(map);\n}\nexports.columnAlias = columnAlias;\n//# sourceMappingURL=column-alias.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Does not check `tableAlias`\n */\nfunction extractColumnIdentifiers(map, columnIdentifiers) {\n    const result = {};\n    for (const columnAlias of Object.keys(map)) {\n        if (columnIdentifiers.some(columnIdentifier => columnIdentifier.columnAlias == columnAlias)) {\n            result[columnAlias] = map[columnAlias];\n        }\n    }\n    return result;\n}\nexports.extractColumnIdentifiers = extractColumnIdentifiers;\n//# sourceMappingURL=extract-column-identifier.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst non_nullable_column_alias_1 = require(\"./non-nullable-column-alias\");\nfunction extractNonNullable(map) {\n    const result = {};\n    for (const columnAlias of non_nullable_column_alias_1.nonNullableColumnAliases(map)) {\n        result[columnAlias] = map[columnAlias];\n    }\n    return result;\n}\nexports.extractNonNullable = extractNonNullable;\n//# sourceMappingURL=extract-non-nullable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst nullable_column_alias_1 = require(\"./nullable-column-alias\");\nfunction extractNullable(map) {\n    const result = {};\n    for (const columnAlias of nullable_column_alias_1.nullableColumnAliases(map)) {\n        result[columnAlias] = map[columnAlias];\n    }\n    return result;\n}\nexports.extractNullable = extractNullable;\n//# sourceMappingURL=extract-nullable.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./column-alias\"));\n__export(require(\"./extract-column-identifier\"));\n__export(require(\"./extract-non-nullable\"));\n__export(require(\"./extract-nullable\"));\n__export(require(\"./mapper\"));\n__export(require(\"./non-nullable-column-alias\"));\n__export(require(\"./nullable-column-alias\"));\n__export(require(\"./partial-mapper\"));\n__export(require(\"./table-alias\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nfunction mapper(map) {\n    const fields = [];\n    for (const columnAlias of Object.keys(map)) {\n        /**\n         * It's possible that this is not an `IColumnUtil`.\n         * But, in general, if we pass in candidateKey and columnMap\n         * without any outside hack-ery, this should be correct.\n         */\n        const column = map[columnAlias];\n        fields.push(tm.withName(column.mapper, column.columnAlias));\n    }\n    return tm.objectFromArray(...fields);\n}\nexports.mapper = mapper;\n//# sourceMappingURL=mapper.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nfunction nonNullableColumnAliases(map) {\n    return Object.keys(map)\n        .filter(columnAlias => !tm.canOutputNull(map[columnAlias].mapper));\n}\nexports.nonNullableColumnAliases = nonNullableColumnAliases;\n//# sourceMappingURL=non-nullable-column-alias.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nfunction nullableColumnAliases(map) {\n    return Object.keys(map)\n        .filter(columnAlias => tm.canOutputNull(map[columnAlias].mapper));\n}\nexports.nullableColumnAliases = nullableColumnAliases;\n//# sourceMappingURL=nullable-column-alias.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nfunction partialMapper(map) {\n    const fields = [];\n    for (const columnAlias of Object.keys(map)) {\n        /**\n         * It's possible that this is not an `IColumnUtil`.\n         * But, in general, if we pass in candidateKey and columnMap\n         * without any outside hack-ery, this should be correct.\n         */\n        const column = map[columnAlias];\n        fields.push(tm.withName(column.mapper, column.columnAlias));\n    }\n    return tm.partialObjectFromArray(...fields);\n}\nexports.partialMapper = partialMapper;\n//# sourceMappingURL=partial-mapper.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Returns the **first** table alias found.\n *\n * All columns in a `ColumnMap` should have the same table alias.\n * If multiple table aliases exist, the one it returns is arbitrary.\n *\n * If no columns exist, it throws an error.\n */\nfunction tableAlias(map) {\n    const columnAliases = Object.keys(map);\n    if (columnAliases.length == 0) {\n        throw new Error(`No columns in ColumnMap`);\n    }\n    else {\n        return map[columnAliases[0]].tableAlias;\n    }\n}\nexports.tableAlias = tableAlias;\n//# sourceMappingURL=table-alias.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ColumnRefUtil = require(\"./util\");\nexports.ColumnRefUtil = ColumnRefUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_column_1 = require(\"./from-column\");\nfunction fromColumnArray(columns) {\n    const result = {};\n    for (const column of columns) {\n        from_column_1.setColumn(result, column);\n    }\n    return result;\n}\nexports.fromColumnArray = fromColumnArray;\n//# sourceMappingURL=from-column-array.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_column_1 = require(\"./from-column\");\nfunction setColumnMap(ref, map) {\n    for (const columnAlias of Object.keys(map)) {\n        from_column_1.setColumn(ref, map[columnAlias]);\n    }\n}\nexports.setColumnMap = setColumnMap;\n//# sourceMappingURL=from-column-map.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction setColumn(ref, column) {\n    let map = ref[column.tableAlias];\n    if (map == undefined) {\n        map = {};\n        ref[column.tableAlias] = map;\n    }\n    map[column.columnAlias] = column;\n    return ref;\n}\nexports.setColumn = setColumn;\nfunction fromColumn(column) {\n    return setColumn({}, column);\n}\nexports.fromColumn = fromColumn;\n//# sourceMappingURL=from-column.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_join_array_1 = require(\"./from-join-array\");\nfunction setFromClause(ref, fromClause) {\n    if (fromClause.currentJoins != undefined) {\n        from_join_array_1.setJoinArray(ref, fromClause.currentJoins);\n    }\n    if (fromClause.outerQueryJoins != undefined) {\n        from_join_array_1.setJoinArray(ref, fromClause.outerQueryJoins);\n    }\n}\nexports.setFromClause = setFromClause;\nfunction fromFromClause(fromClause) {\n    const result = {};\n    setFromClause(result, fromClause);\n    return result;\n}\nexports.fromFromClause = fromFromClause;\n//# sourceMappingURL=from-from-clause.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_join_1 = require(\"./from-join\");\nfunction setJoinArray(ref, joins) {\n    for (const join of joins) {\n        from_join_1.setJoin(ref, join);\n    }\n}\nexports.setJoinArray = setJoinArray;\nfunction fromJoinArray(joins) {\n    const result = {};\n    setJoinArray(result, joins);\n    return result;\n}\nexports.fromJoinArray = fromJoinArray;\n//# sourceMappingURL=from-join-array.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_map_1 = require(\"../../../column-map\");\nconst from_column_map_1 = require(\"./from-column-map\");\nfunction setJoin(ref, join) {\n    from_column_map_1.setColumnMap(ref, column_map_1.ColumnMapUtil.fromJoin(join));\n}\nexports.setJoin = setJoin;\n//# sourceMappingURL=from-join.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_1 = require(\"../../../column\");\nconst from_column_1 = require(\"./from-column\");\nfunction fromSelectClause(selectClause) {\n    const result = {};\n    for (const column of column_1.ColumnUtil.fromSelectClause(selectClause)) {\n        from_column_1.setColumn(result, column);\n    }\n    return result;\n}\nexports.fromSelectClause = fromSelectClause;\n//# sourceMappingURL=from-select-clause.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./from-column-array\"));\n__export(require(\"./from-column\"));\n__export(require(\"./from-from-clause\"));\n__export(require(\"./from-join-array\"));\n__export(require(\"./from-select-clause\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./constructor\"));\n__export(require(\"./operation\"));\n__export(require(\"./predicate\"));\n__export(require(\"./query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst left_compound_1 = require(\"./left-compound\");\nfunction compound(refA, refB) {\n    const left = left_compound_1.leftCompound(refA, refB);\n    const right = {};\n    for (const tableAlias of Object.keys(refB)) {\n        if (Object.prototype.hasOwnProperty.call(refA, tableAlias) &&\n            Object.prototype.propertyIsEnumerable.call(refA, tableAlias)) {\n            continue;\n        }\n        right[tableAlias] = refB[tableAlias];\n    }\n    return {\n        ...left,\n        ...right,\n    };\n}\nexports.compound = compound;\n//# sourceMappingURL=compound.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./compound\"));\n__export(require(\"./intersect\"));\n__export(require(\"./try-flatten\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst left_intersect_1 = require(\"./left-intersect\");\nfunction intersect(refA, refB) {\n    const left = left_intersect_1.leftIntersect(refA, refB);\n    const right = {};\n    for (const tableAlias of Object.keys(refB)) {\n        if (Object.prototype.hasOwnProperty.call(refA, tableAlias) &&\n            Object.prototype.propertyIsEnumerable.call(refA, tableAlias)) {\n            continue;\n        }\n        right[tableAlias] = refB[tableAlias];\n    }\n    return {\n        ...left,\n        ...right,\n    };\n}\nexports.intersect = intersect;\n//# sourceMappingURL=intersect.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_map_1 = require(\"../../../column-map\");\nfunction leftCompound(refA, refB) {\n    const result = {};\n    for (const tableAlias of Object.keys(refA)) {\n        if (Object.prototype.hasOwnProperty.call(refB, tableAlias) &&\n            Object.prototype.propertyIsEnumerable.call(refB, tableAlias)) {\n            result[tableAlias] = column_map_1.ColumnMapUtil.compound(refA[tableAlias], refB[tableAlias]);\n        }\n        else {\n            result[tableAlias] = refA[tableAlias];\n        }\n    }\n    return result;\n}\nexports.leftCompound = leftCompound;\n//# sourceMappingURL=left-compound.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_map_1 = require(\"../../../column-map\");\nfunction leftIntersect(refA, refB) {\n    const result = {};\n    for (const tableAlias of Object.keys(refA)) {\n        if (Object.prototype.hasOwnProperty.call(refB, tableAlias) &&\n            Object.prototype.propertyIsEnumerable.call(refB, tableAlias)) {\n            result[tableAlias] = column_map_1.ColumnMapUtil.intersect(refA[tableAlias], refB[tableAlias]);\n        }\n        else {\n            result[tableAlias] = refA[tableAlias];\n        }\n    }\n    return result;\n}\nexports.leftIntersect = leftIntersect;\n//# sourceMappingURL=left-intersect.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction tryFlatten(ref) {\n    const tableAliases = Object.keys(ref);\n    if (tableAliases.length == 1) {\n        return ref[tableAliases[0]];\n    }\n    else {\n        return ref;\n    }\n}\nexports.tryFlatten = tryFlatten;\n//# sourceMappingURL=try-flatten.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./is-column-ref\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_map_1 = require(\"../../../column-map\");\nfunction isColumnRef(mixed) {\n    if (!(mixed instanceof Object)) {\n        return false;\n    }\n    for (const tableAlias of Object.keys(mixed)) {\n        const possiblyColumnMap = mixed[tableAlias];\n        if (!column_map_1.ColumnMapUtil.isColumnMap(possiblyColumnMap)) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.isColumnRef = isColumnRef;\n//# sourceMappingURL=is-column-ref.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_map_1 = require(\"../../../column-map\");\nfunction columnAlias(ref) {\n    const result = [];\n    for (const tableAlias of Object.keys(ref)) {\n        result.push(...column_map_1.ColumnMapUtil.columnAlias(ref[tableAlias]));\n    }\n    return result;\n}\nexports.columnAlias = columnAlias;\n//# sourceMappingURL=column-alias.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_map_1 = require(\"../../../column-map\");\nfunction duplicateColumnAlias(ref) {\n    const duplicateTracker = {};\n    const result = [];\n    for (const tableAlias of Object.keys(ref)) {\n        for (const columnAlias of column_map_1.ColumnMapUtil.columnAlias(ref[tableAlias])) {\n            const isDuplicate = duplicateTracker[columnAlias];\n            if (isDuplicate === undefined) {\n                /**\n                 * We had never encountered it, and now we have.\n                 * But it isn't a duplicate.\n                 */\n                duplicateTracker[columnAlias] = false;\n            }\n            else if (!isDuplicate) {\n                /**\n                 * We had encountered it when it wasn't a duplicate.\n                 * Now, it is a duplicate.\n                 */\n                duplicateTracker[columnAlias] = true;\n                result.push(columnAlias);\n            }\n        }\n    }\n    return result;\n}\nexports.duplicateColumnAlias = duplicateColumnAlias;\n//# sourceMappingURL=duplicate-column-alias.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_map_1 = require(\"../../../column-map\");\nfunction extractColumnIdentifiers(ref, columnIdentifiers) {\n    const result = {};\n    for (const tableAlias of Object.keys(ref)) {\n        const arr = columnIdentifiers.filter(columnIdentifier => columnIdentifier.tableAlias == tableAlias);\n        if (arr.length > 0) {\n            result[tableAlias] = column_map_1.ColumnMapUtil.extractColumnIdentifiers(ref[tableAlias], arr);\n        }\n    }\n    return result;\n}\nexports.extractColumnIdentifiers = extractColumnIdentifiers;\n//# sourceMappingURL=extract-column-identifier.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_map_1 = require(\"../../../column-map\");\nfunction extractNonNullable(ref) {\n    const result = {};\n    for (const tableAlias of Object.keys(ref)) {\n        result[tableAlias] = column_map_1.ColumnMapUtil.extractNonNullable(ref[tableAlias]);\n    }\n    return result;\n}\nexports.extractNonNullable = extractNonNullable;\n//# sourceMappingURL=extract-non-nullable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_map_1 = require(\"../../../column-map\");\nfunction extractNullable(ref) {\n    const result = {};\n    for (const tableAlias of Object.keys(ref)) {\n        result[tableAlias] = column_map_1.ColumnMapUtil.extractNullable(ref[tableAlias]);\n    }\n    return result;\n}\nexports.extractNullable = extractNullable;\n//# sourceMappingURL=extract-nullable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Returns `ref` without modifying it.\n * Is basically a no-op.\n *\n * This function merely exists to enforce compile-time safety.\n */\nfunction __noOp_extractWithType() {\n    return (ref) => ref;\n}\nexports.__noOp_extractWithType = __noOp_extractWithType;\n//# sourceMappingURL=extract-with-type.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./column-alias\"));\n__export(require(\"./duplicate-column-alias\"));\n__export(require(\"./extract-column-identifier\"));\n__export(require(\"./extract-non-nullable\"));\n__export(require(\"./extract-nullable\"));\n__export(require(\"./extract-with-type\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction fromColumnMap(columnMap) {\n    const result = [];\n    for (const columnAlias of Object.keys(columnMap)) {\n        result.push(columnMap[columnAlias]);\n    }\n    return result;\n}\nexports.fromColumnMap = fromColumnMap;\nfunction fromColumnMapArray(columnMapArr) {\n    const result = [];\n    for (const columnMap of columnMapArr) {\n        for (const columnAlias of Object.keys(columnMap)) {\n            result.push(columnMap[columnAlias]);\n        }\n    }\n    return result;\n}\nexports.fromColumnMapArray = fromColumnMapArray;\n//# sourceMappingURL=from-column-map.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./from-column-map\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./constructor\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ColumnUtil = require(\"./util\");\nclass Column {\n    /**\n     * You should never need to explicitly instantiate a `Column`.\n     * Use `myTable.addColumns()` instead.\n     *\n     * @param data\n     * @param unaliasedAst\n     */\n    constructor(data, unaliasedAst) {\n        this.tableAlias = data.tableAlias;\n        this.columnAlias = data.columnAlias;\n        this.mapper = data.mapper;\n        this.unaliasedAst = unaliasedAst;\n    }\n    /**\n     * ```sql\n     * SELECT\n     *  myTable.myColumn AS alias\n     * FROM\n     *  myTable\n     * ```\n     *\n     * @param alias - The new column name\n     */\n    as(alias) {\n        return ColumnUtil.as(this, alias);\n    }\n    ;\n    /**\n     * ```sql\n     * SELECT\n     *  *\n     * FROM\n     *  myTable\n     * ORDER BY\n     *  myTable.myColumn ASC\n     * ```\n     */\n    asc() {\n        return ColumnUtil.asc(this);\n    }\n    /**\n     * ```sql\n     * SELECT\n     *  *\n     * FROM\n     *  myTable\n     * ORDER BY\n     *  myTable.myColumn DESC\n     * ```\n     */\n    desc() {\n        return ColumnUtil.desc(this);\n    }\n    /**\n     * ```sql\n     * SELECT\n     *  *\n     * FROM\n     *  myTable\n     * ORDER BY\n     *  myTable.myColumn ASC,\n     *  myTable.myOtherColumn DESC\n     * ```\n     */\n    sort(sortDirection) {\n        return ColumnUtil.sort(this, sortDirection);\n    }\n}\nexports.Column = Column;\n//# sourceMappingURL=column-impl.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./column-impl\"));\nconst ColumnArrayUtil = require(\"./array-util\");\nexports.ColumnArrayUtil = ColumnArrayUtil;\nconst ColumnUtil = require(\"./util\");\nexports.ColumnUtil = ColumnUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction fromColumnMap(map) {\n    const result = [];\n    for (const columnAlias of Object.keys(map)) {\n        result.push(map[columnAlias]);\n    }\n    return result;\n}\nexports.fromColumnMap = fromColumnMap;\n//# sourceMappingURL=from-column-map.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_column_map_1 = require(\"./from-column-map\");\nfunction fromColumnRef(ref) {\n    const result = [];\n    for (const tableAlias of Object.keys(ref)) {\n        const map = ref[tableAlias];\n        result.push(...from_column_map_1.fromColumnMap(map));\n    }\n    return result;\n}\nexports.fromColumnRef = fromColumnRef;\n//# sourceMappingURL=from-column-ref.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst expr_column_1 = require(\"../../../expr-column\");\nfunction fromExprSelectItem(exprSelectItem) {\n    const result = new expr_column_1.ExprColumn({\n        tableAlias: exprSelectItem.tableAlias,\n        columnAlias: exprSelectItem.alias,\n        mapper: exprSelectItem.mapper,\n        isAggregate: exprSelectItem.isAggregate,\n    }, exprSelectItem.unaliasedAst);\n    return result;\n}\nexports.fromExprSelectItem = fromExprSelectItem;\n//# sourceMappingURL=from-expr-select-item.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_join_1 = require(\"./from-join\");\nfunction fromJoinArray(joins) {\n    const result = [];\n    for (const join of joins) {\n        result.push(...from_join_1.fromJoin(join));\n    }\n    return result;\n}\nexports.fromJoinArray = fromJoinArray;\n//# sourceMappingURL=from-join-array.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_map_1 = require(\"../../../column-map\");\nconst from_column_map_1 = require(\"./from-column-map\");\nfunction fromJoin(join) {\n    const result = from_column_map_1.fromColumnMap(column_map_1.ColumnMapUtil.fromJoin(join));\n    return result;\n}\nexports.fromJoin = fromJoin;\n//# sourceMappingURL=from-join.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_select_item_1 = require(\"./from-select-item\");\n/**\n * Does not remove duplicate identifiers\n *\n * @param selectClause\n */\nfunction fromSelectClause(selectClause) {\n    const result = [];\n    for (const selectItem of selectClause) {\n        result.push(...from_select_item_1.fromSelectItem(selectItem));\n    }\n    return result;\n}\nexports.fromSelectClause = fromSelectClause;\n//# sourceMappingURL=from-select-clause.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst expr_select_item_1 = require(\"../../../expr-select-item\");\nconst from_expr_select_item_1 = require(\"./from-expr-select-item\");\nconst column_ref_1 = require(\"../../../column-ref\");\nconst from_column_ref_1 = require(\"./from-column-ref\");\nconst column_map_1 = require(\"../../../column-map\");\nconst from_column_map_1 = require(\"./from-column-map\");\nconst column_1 = require(\"../../../column\");\nfunction fromSelectItem(selectItem) {\n    if (expr_select_item_1.ExprSelectItemUtil.isExprSelectItem(selectItem)) {\n        return [from_expr_select_item_1.fromExprSelectItem(selectItem)];\n    }\n    else if (column_1.ColumnUtil.isColumn(selectItem)) {\n        return [selectItem];\n    }\n    else if (column_map_1.ColumnMapUtil.isColumnMap(selectItem)) {\n        return from_column_map_1.fromColumnMap(selectItem);\n    }\n    else if (column_ref_1.ColumnRefUtil.isColumnRef(selectItem)) {\n        return from_column_ref_1.fromColumnRef(selectItem);\n    }\n    else {\n        throw new Error(`Unknown SelectItem`);\n    }\n}\nexports.fromSelectItem = fromSelectItem;\n//# sourceMappingURL=from-select-item.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./from-column-map\"));\n__export(require(\"./from-column-ref\"));\n__export(require(\"./from-expr-select-item\"));\n__export(require(\"./from-join-array\"));\n__export(require(\"./from-join\"));\n__export(require(\"./from-select-clause\"));\n__export(require(\"./from-select-item\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./constructor\"));\n__export(require(\"./operation\"));\n__export(require(\"./predicate\"));\n__export(require(\"./query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst build_ast_1 = require(\"./build-ast\");\nconst used_ref_1 = require(\"../../../used-ref\");\nconst aliased_expr_1 = require(\"../../../aliased-expr\");\nfunction as(column, alias) {\n    return new aliased_expr_1.AliasedExpr({\n        usedRef: used_ref_1.UsedRefUtil.fromColumn(column),\n        mapper: column.mapper,\n        tableAlias: column.tableAlias,\n        alias: alias,\n        isAggregate: false,\n    }, build_ast_1.buildAst(column));\n    /*\n    return {\n        usedRef : UsedRefUtil.fromColumn(column),\n        mapper : column.mapper,\n        tableAlias : column.tableAlias,\n        alias : alias,\n        unaliasedAst : buildAst(column),\n    };\n    */\n}\nexports.as = as;\n//# sourceMappingURL=as.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sort_direction_1 = require(\"../../../sort-direction\");\nfunction asc(column) {\n    return [column, sort_direction_1.SortDirection.ASC];\n}\nexports.asc = asc;\n//# sourceMappingURL=asc.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../../../constants\");\nconst ast_1 = require(\"../../../ast\");\nfunction buildAst({ tableAlias, columnAlias, unaliasedAst, }) {\n    if (tableAlias == constants_1.ALIASED) {\n        /**\n         * When you want to write,\n         * `(1 + 2) AS three`\n         *\n         * You write,\n         * `add(1, 2).as(\"three\")`\n         *\n         * This `\"three\"` is an `IExprSelectItem` but has no `tableAlias`\n         * associated with it.\n         *\n         * So, this library makes up a table alias that is very\n         * unlikely to be used naturally by others.\n         *\n         * The table alias is the value of the variable `ALIASED`,\n         * which should be `$aliased`\n         */\n        return ast_1.identifierNode(`${tableAlias}${constants_1.SEPARATOR}${columnAlias}`);\n    }\n    else {\n        if (unaliasedAst == undefined) {\n            /*\n                The most common case, I think.\n            */\n            return ast_1.identifierNode(tableAlias, columnAlias);\n        }\n        else {\n            /**\n             * @todo Investigate what should be here.\n             * Does the `SELECT` clause even ever have an `IColumn` with `unaliasedAst` set?\n             * Initial inspection says \"No\"\n             */\n            //throw new Error(`Should use unaliasedAst, tableAlias, columnAlias in SELECT clause, use tableAlias, columnAlias in ORDER BY clause`);\n            return ast_1.identifierNode(`${tableAlias}${constants_1.SEPARATOR}${columnAlias}`);\n        }\n    }\n}\nexports.buildAst = buildAst;\n//# sourceMappingURL=build-ast.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sort_direction_1 = require(\"../../../sort-direction\");\nfunction desc(column) {\n    return [column, sort_direction_1.SortDirection.DESC];\n}\nexports.desc = desc;\n//# sourceMappingURL=desc.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./as\"));\n__export(require(\"./asc\"));\n__export(require(\"./build-ast\"));\n__export(require(\"./desc\"));\n__export(require(\"./sort\"));\n__export(require(\"./to-non-nullable\"));\n__export(require(\"./to-nullable\"));\n__export(require(\"./with-table-alias\"));\n__export(require(\"./with-type\"));\n__export(require(\"./with-unaliased-ast\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction sort(column, sortDirection) {\n    return [column, sortDirection];\n}\nexports.sort = sort;\n//# sourceMappingURL=sort.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst column_impl_1 = require(\"../../column-impl\");\nfunction toNonNullable({ tableAlias, columnAlias, mapper, unaliasedAst, }) {\n    return new column_impl_1.Column({\n        tableAlias,\n        columnAlias,\n        mapper: tm.notNull(mapper),\n    }, unaliasedAst);\n}\nexports.toNonNullable = toNonNullable;\n//# sourceMappingURL=to-non-nullable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst column_impl_1 = require(\"../../column-impl\");\nfunction toNullable({ tableAlias, columnAlias, mapper, unaliasedAst, }) {\n    return new column_impl_1.Column({\n        tableAlias,\n        columnAlias,\n        mapper: tm.orNull(mapper),\n    }, unaliasedAst);\n}\nexports.toNullable = toNullable;\n//# sourceMappingURL=to-nullable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_impl_1 = require(\"../../column-impl\");\nfunction withTableAlias({ columnAlias, mapper, unaliasedAst, }, newTableAlias) {\n    const result = new column_impl_1.Column({\n        tableAlias: newTableAlias,\n        columnAlias,\n        mapper,\n    }, unaliasedAst);\n    return result;\n}\nexports.withTableAlias = withTableAlias;\n//# sourceMappingURL=with-table-alias.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_impl_1 = require(\"../../column-impl\");\nfunction withType({ tableAlias, columnAlias, unaliasedAst, }, newMapper) {\n    const result = new column_impl_1.Column({\n        tableAlias,\n        columnAlias,\n        mapper: newMapper,\n    }, unaliasedAst);\n    return result;\n}\nexports.withType = withType;\n//# sourceMappingURL=with-type.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_impl_1 = require(\"../../column-impl\");\nfunction withUnaliasedAst({ tableAlias, columnAlias, mapper, }, unaliasedAst) {\n    const result = new column_impl_1.Column({\n        tableAlias,\n        columnAlias,\n        mapper,\n    }, unaliasedAst);\n    return result;\n}\nexports.withUnaliasedAst = withUnaliasedAst;\n//# sourceMappingURL=with-unaliased-ast.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./is-column\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst type_util_1 = require(\"../../../type-util\");\nconst ast_1 = require(\"../../../ast\");\nfunction isColumn(raw) {\n    if (!type_util_1.isObjectWithOwnEnumerableKeys()(raw, [\n        \"tableAlias\",\n        \"columnAlias\",\n        \"mapper\",\n        \"unaliasedAst\",\n    ])) {\n        return false;\n    }\n    return ((typeof raw.tableAlias == \"string\") &&\n        (typeof raw.columnAlias == \"string\") &&\n        (typeof raw.mapper == \"function\") &&\n        (raw.unaliasedAst == undefined ||\n            ast_1.AstUtil.isAst(raw.unaliasedAst)));\n}\nexports.isColumn = isColumn;\n//# sourceMappingURL=is-column.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nfunction extractNullable(columns) {\n    const result = [];\n    for (const column of columns) {\n        if (tm.canOutputNull(column.mapper)) {\n            result.push(column);\n        }\n    }\n    return result;\n}\nexports.extractNullable = extractNullable;\n//# sourceMappingURL=extract-nullable.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./extract-nullable\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst CompoundQueryClauseUtil = require(\"./util\");\nexports.CompoundQueryClauseUtil = CompoundQueryClauseUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./operation\"));\n__export(require(\"./predicate\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst select_clause_1 = require(\"../../../select-clause\");\nconst predicate_1 = require(\"../predicate\");\nfunction compoundQuery(fromClause, selectClause, compoundQueryClause, compoundQueryType, isDistinct, targetQuery) {\n    predicate_1.assertCompatible(fromClause, selectClause, targetQuery);\n    return {\n        selectClause: select_clause_1.SelectClauseUtil.leftCompound(selectClause, targetQuery.selectClause),\n        compoundQueryClause: [\n            ...(compoundQueryClause == undefined ?\n                [] :\n                compoundQueryClause),\n            {\n                compoundQueryType,\n                isDistinct,\n                query: targetQuery,\n            }\n        ]\n    };\n}\nexports.compoundQuery = compoundQuery;\n//# sourceMappingURL=compound-query.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./compound-query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst assert_select_clause_compatible_1 = require(\"./assert-select-clause-compatible\");\nconst assert_outer_query_joins_compatible_1 = require(\"./assert-outer-query-joins-compatible\");\nfunction assertCompatible(fromClause, selectClause, targetQuery) {\n    assert_select_clause_compatible_1.assertSelectClauseCompatible(selectClause, targetQuery.selectClause);\n    assert_outer_query_joins_compatible_1.assertOuterQueryJoinsCompatible(fromClause, targetQuery.fromClause);\n}\nexports.assertCompatible = assertCompatible;\n//# sourceMappingURL=assert-compatible.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst used_ref_1 = require(\"../../../used-ref\");\nfunction assertOuterQueryJoinsCompatible(fromClause, targetFromClause) {\n    used_ref_1.UsedRefUtil.assertAllowed(used_ref_1.UsedRefUtil.fromJoinArray(fromClause.outerQueryJoins == undefined ?\n        [] :\n        fromClause.outerQueryJoins), used_ref_1.UsedRefUtil.fromJoinArray(targetFromClause.outerQueryJoins == undefined ?\n        [] :\n        targetFromClause.outerQueryJoins));\n}\nexports.assertOuterQueryJoinsCompatible = assertOuterQueryJoinsCompatible;\n//# sourceMappingURL=assert-outer-query-joins-compatible.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_1 = require(\"../../../column\");\nconst expr_select_item_1 = require(\"../../../expr-select-item\");\nconst column_map_1 = require(\"../../../column-map\");\nconst column_ref_1 = require(\"../../../column-ref\");\nfunction assertMapCompatibilityError(identifier, a, b) {\n    const aColumnAliases = Object.keys(a);\n    const bColumnAliases = Object.keys(b);\n    const missingColumnAliases = aColumnAliases.filter(columnAlias => !bColumnAliases.includes(columnAlias));\n    if (missingColumnAliases.length > 0) {\n        throw new Error(`Expected ${identifier.join(\" \")} to have columns ${missingColumnAliases.join(\", \")}`);\n    }\n    const extraColumnAliases = bColumnAliases.filter(columnAlias => !aColumnAliases.includes(columnAlias));\n    if (extraColumnAliases.length > 0) {\n        throw new Error(`${identifier.join(\" \")} has extra columns ${extraColumnAliases.join(\", \")}`);\n    }\n    /**\n     * Can't check subtype requirement during run-time\n     */\n}\nexports.assertMapCompatibilityError = assertMapCompatibilityError;\nfunction assertRefCompatibilityError(identifier, a, b) {\n    const aTableAliases = Object.keys(a);\n    const bTableAliases = Object.keys(b);\n    const missingTableAliases = aTableAliases.filter(tableAlias => !bTableAliases.includes(tableAlias));\n    if (missingTableAliases.length > 0) {\n        throw new Error(`Expected ${identifier.join(\" \")} to have tables ${missingTableAliases.join(\", \")}`);\n    }\n    const extraTableAliases = bTableAliases.filter(tableAlias => !aTableAliases.includes(tableAlias));\n    if (extraTableAliases.length > 0) {\n        throw new Error(`${identifier.join(\" \")} has extra tables ${extraTableAliases.join(\", \")}`);\n    }\n    for (const tableAlias of aTableAliases) {\n        assertMapCompatibilityError([...identifier, \"table\", tableAlias], a[tableAlias], b[tableAlias]);\n    }\n}\nexports.assertRefCompatibilityError = assertRefCompatibilityError;\nfunction assertSelectClauseCompatible(a, b) {\n    if (a.length != b.length) {\n        throw new Error(`SELECT clause length mismatch; expected ${a.length} received ${b.length}`);\n    }\n    for (let index = 0; index < a.length; ++index) {\n        const itemA = a[index];\n        const itemB = b[index];\n        if (column_1.ColumnUtil.isColumn(itemA) || expr_select_item_1.ExprSelectItemUtil.isExprSelectItem(itemA)) {\n            if (column_1.ColumnUtil.isColumn(itemB) || expr_select_item_1.ExprSelectItemUtil.isExprSelectItem(itemB)) {\n                /**\n                 * Can't check subtype requirement during run-time\n                 */\n            }\n            else {\n                throw new Error(`Expected index ${index} to be Column or ExprSelectItem`);\n            }\n        }\n        else if (column_map_1.ColumnMapUtil.isColumnMap(itemA)) {\n            if (column_map_1.ColumnMapUtil.isColumnMap(itemB)) {\n                assertMapCompatibilityError([\"index\", index], itemA, itemB);\n            }\n            else {\n                throw new Error(`Expected index ${index} to be ColumnMap`);\n            }\n        }\n        else if (column_ref_1.ColumnRefUtil.isColumnRef(itemA)) {\n            if (column_ref_1.ColumnRefUtil.isColumnRef(itemB)) {\n                assertRefCompatibilityError([\"index\", index], itemA, itemB);\n            }\n            else {\n                throw new Error(`Expected index ${index} to be ColumnRef`);\n            }\n        }\n        else {\n            throw new Error(`Unknown SELECT item at index ${index}`);\n        }\n    }\n}\nexports.assertSelectClauseCompatible = assertSelectClauseCompatible;\n//# sourceMappingURL=assert-select-clause-compatible.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./assert-compatible\"));\n__export(require(\"./assert-outer-query-joins-compatible\"));\n__export(require(\"./assert-select-clause-compatible\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst CompoundQueryOrderByClauseUtil = require(\"./util\");\nexports.CompoundQueryOrderByClauseUtil = CompoundQueryOrderByClauseUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./operation\"));\n__export(require(\"./query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst query_1 = require(\"../query\");\nconst column_ref_1 = require(\"../../../column-ref\");\nconst column_identifier_ref_1 = require(\"../../../column-identifier-ref\");\nconst order_1 = require(\"../../../order\");\n/**\n * Returns the MySQL equivalent of `...compoundQueryOrderByClause, ...compoundQueryOrderByDelegate(columns)`\n *\n * @param selectClause\n * @param compoundQueryOrderByClause\n * @param compoundQueryOrderByDelegate\n */\nfunction compoundQueryOrderBy(selectClause, compoundQueryOrderByClause, compoundQueryOrderByDelegate) {\n    const columns = query_1.allowedColumnRef(selectClause);\n    const compoundQueryOrderBy = compoundQueryOrderByDelegate(column_ref_1.ColumnRefUtil.tryFlatten(columns));\n    for (const rawOrder of compoundQueryOrderBy) {\n        const sortExpr = order_1.OrderUtil.extractSortExpr(rawOrder);\n        column_identifier_ref_1.ColumnIdentifierRefUtil.assertHasColumnIdentifier(columns, sortExpr);\n    }\n    return (compoundQueryOrderByClause == undefined ?\n        compoundQueryOrderBy.map(order_1.OrderUtil.fromRawOrder) :\n        [...compoundQueryOrderByClause, ...compoundQueryOrderBy.map(order_1.OrderUtil.fromRawOrder)]);\n}\nexports.compoundQueryOrderBy = compoundQueryOrderBy;\n//# sourceMappingURL=compound-query-order-by.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./compound-query-order-by\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_ref_1 = require(\"../../../column-ref\");\nfunction allowedColumnRef(selectClause) {\n    const result = column_ref_1.ColumnRefUtil.fromSelectClause(selectClause);\n    return result;\n}\nexports.allowedColumnRef = allowedColumnRef;\n//# sourceMappingURL=allowed-used-ref.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./allowed-used-ref\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CompoundQueryType;\n(function (CompoundQueryType) {\n    CompoundQueryType[\"UNION\"] = \"UNION\";\n    CompoundQueryType[\"INTERSECT\"] = \"INTERSECT\";\n    CompoundQueryType[\"EXCEPT\"] = \"EXCEPT\";\n})(CompoundQueryType = exports.CompoundQueryType || (exports.CompoundQueryType = {}));\n//# sourceMappingURL=compound-query.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./compound-query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * This string value `$aliased` was picked\n * as it is unlikely to be part of an identifier\n * in a database.\n *\n * -----\n *\n * This query,\n * ```sql\n * SELECT\n *  RAND() AS r\n * ```\n *\n * becomes,\n * ```sql\n * SELECT\n *  RAND() AS `$aliased--r`\n * ```\n *\n * -----\n *\n * This query,\n * ```sql\n * SELECT\n *  (SELECT x FROM myTable LIMIT 1) AS r\n * ```\n *\n * becomes,\n * ```sql\n * SELECT\n *  (SELECT x FROM myTable LIMIT 1) AS `$aliased--r`\n * ```\n *\n * @todo Make this a reserved `tableAlias`\n * No `ITable/IAliasedTable` should be able to have\n * a `tableAlias` value of `typeof ALIASED`.\n *\n * If such a thing were to happen,\n * it would make enforcing safe interactions between\n * `SELECT` and `FROM` clause very difficult/troublesome.\n *\n * But... What's the probability of someone using `$aliased`\n * as a table name?\n */\nexports.ALIASED = \"$aliased\";\n/**\n * This string value `--` was picked\n * as it is unlikely to be part of an identifier\n * in a database.\n *\n * -----\n *\n * This query,\n * ```sql\n * SELECT\n *  RAND() AS r\n * ```\n *\n * becomes,\n * ```sql\n * SELECT\n *  RAND() AS `$aliased--r`\n * ```\n *\n * -----\n *\n * This query,\n * ```sql\n * SELECT\n *  (SELECT x FROM myTable LIMIT 1) AS r\n * ```\n *\n * becomes,\n * ```sql\n * SELECT\n *  (SELECT x FROM myTable LIMIT 1) AS `$aliased--r`\n * ```\n */\nexports.SEPARATOR = \"--\";\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst CustomExprUtil = require(\"./util\");\nexports.CustomExprUtil = CustomExprUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./operation\"));\n__export(require(\"./query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./map-non-correlated\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_1 = require(\"../../../column\");\nconst built_in_expr_1 = require(\"../../../built-in-expr\");\nconst used_ref_1 = require(\"../../../used-ref\");\nconst query_1 = require(\"../query\");\n/**\n * If `value` is `AnyNonValueExpr`, we don't bother checking.\n * We can't really check, anyway.\n *\n * Else, we return `mapper(, value)`,\n * which will throw an error if `value` is invalid.\n */\nfunction mapNonCorrelated(mapper, customExpr) {\n    let valueName = \"literal-value\";\n    if (column_1.ColumnUtil.isColumn(mapper)) {\n        valueName = `${mapper.tableAlias}${mapper.columnAlias}`;\n        mapper = mapper.mapper;\n    }\n    if (built_in_expr_1.BuiltInExprUtil.isAnyNonValueExpr(customExpr)) {\n        /**\n         * Cannot map a `NonValueExpr`\n         */\n        used_ref_1.UsedRefUtil.assertEmpty(query_1.usedRef(customExpr));\n        return customExpr;\n    }\n    else {\n        return mapper(valueName, customExpr);\n    }\n}\nexports.mapNonCorrelated = mapNonCorrelated;\n//# sourceMappingURL=map-non-correlated.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./is-aggregate\"));\n__export(require(\"./used-ref\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_in_expr_1 = require(\"../../../built-in-expr\");\nfunction isAggregate(customExpr) {\n    if (built_in_expr_1.BuiltInExprUtil.isBuiltInExpr(customExpr)) {\n        return built_in_expr_1.BuiltInExprUtil.isAggregate(customExpr);\n    }\n    else {\n        return false;\n    }\n}\nexports.isAggregate = isAggregate;\n//# sourceMappingURL=is-aggregate.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst used_ref_1 = require(\"../../../used-ref\");\nconst built_in_expr_1 = require(\"../../../built-in-expr\");\nfunction usedRef(customExpr) {\n    if (built_in_expr_1.BuiltInExprUtil.isBuiltInExpr(customExpr)) {\n        return built_in_expr_1.BuiltInExprUtil.usedRef(customExpr);\n    }\n    else {\n        return used_ref_1.UsedRefUtil.fromColumnRef({});\n    }\n}\nexports.usedRef = usedRef;\n//# sourceMappingURL=used-ref.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst DataTypeUtil = require(\"../util\");\nconst equals = tm.ArrayBufferUtil.equals;\nfunction makeBlobDataType(mapperFactory) {\n    const result = (a, b, c) => {\n        if (c != undefined) {\n            return DataTypeUtil.makeDataType(mapperFactory(a, b), value => value, equals, c);\n        }\n        else if (b != undefined) {\n            if (typeof b == \"number\") {\n                return DataTypeUtil.makeDataType(mapperFactory(a, b), value => value, equals);\n            }\n            else {\n                return DataTypeUtil.makeDataType(mapperFactory(a), value => value, equals, b);\n            }\n        }\n        else if (a != undefined) {\n            if (typeof a == \"number\") {\n                return DataTypeUtil.makeDataType(mapperFactory(a), value => value, equals);\n            }\n            else {\n                return DataTypeUtil.makeDataType(mapperFactory(), value => value, equals, a);\n            }\n        }\n        else {\n            return DataTypeUtil.makeDataType(mapperFactory(), value => value, equals);\n        }\n    };\n    result.maxLength = mapperFactory.maxLength;\n    return result;\n}\nexports.makeBlobDataType = makeBlobDataType;\n/**\n * + MySQL      : `BINARY`\n * + PostgreSQL : `bytea`\n * + SQLite     : `BLOB`\n *\n *\n * This corresponds to MySQL's `BINARY` data type.\n * + Max length: `255`; `(2^8)-1`\n */\nexports.dtBinary = makeBlobDataType(tm.mysql.uint8ArrayBinary);\n/**\n * + MySQL      : `VARBINARY`\n * + PostgreSQL : `bytea`\n * + SQLite     : `BLOB`\n *\n *\n * This corresponds to MySQL's `VARBINARY` data type.\n * + Max length: `65,535`; `(2^16)-1`\n */\nexports.dtVarBinary = makeBlobDataType(tm.mysql.uint8ArrayBinary);\n/**\n * Short for \"Binary Large OBject\"\n *\n * + MySQL      : `TINY BLOB`\n * + PostgreSQL : `bytea`\n * + SQLite     : `BLOB`\n *\n *\n * This corresponds to MySQL's `TINY BLOB` data type.\n * + Max length: `255`; `(2^8)-1`\n */\nexports.dtTinyBlob = makeBlobDataType(tm.mysql.uint8ArrayTinyBlob);\n/**\n * Short for \"Binary Large OBject\"\n *\n * + MySQL      : `BLOB`\n * + PostgreSQL : `bytea`\n * + SQLite     : `BLOB`\n *\n *\n * This corresponds to MySQL's `BLOB` data type.\n * + Max length: `65,535`; `(2^16)-1`\n */\nexports.dtBlob = makeBlobDataType(tm.mysql.uint8ArrayBlob);\n/**\n * Short for \"Binary Large OBject\"\n *\n * + MySQL      : `MEDIUM BLOB`\n * + PostgreSQL : `bytea`\n * + SQLite     : `BLOB`\n *\n *\n * This corresponds to MySQL's `MEDIUM BLOB` data type.\n * + Max length: `16,777,215`; `(2^24)-1`\n */\nexports.dtMediumBlob = makeBlobDataType(tm.mysql.uint8ArrayMediumBlob);\n/**\n * Short for \"Binary Large OBject\"\n *\n * + MySQL      : `LONG BLOB`\n * + PostgreSQL : `LO` (Large Object)\n * + SQLite     : `BLOB`\n *\n *\n * This corresponds to MySQL's `LONG BLOB` data type.\n * + Max length: `4,294,967,295`; `(2^32)-1`\n *\n * -----\n *\n * `bytea` supports up to 1GB. So, we cannot use `bytea`.\n *\n * https://dba.stackexchange.com/questions/127270/what-are-the-limits-of-postgresqls-large-object-facility\n * > A large object cannot exceed 4TB for PostgreSQL 9.3 or newer, or 2GB for older versions.\n * > This is based on the [release notes](https://www.postgresql.org/docs/9.3/release-9-3.html)\n *\n * From the release notes,\n * > Increase the maximum size of large objects from 2GB to 4TB (Nozomi Anzai, Yugo Nagata)\n *\n * -----\n *\n * Realistically, SQLite should support this,\n * https://www.sqlite.org/limits.html\n *\n * However, it is possible that the underlying implementation\n * may be restricted from having a `Uint8Array` of that length.\n */\nexports.dtLongBlob = makeBlobDataType(tm.mysql.uint8ArrayLongBlob);\n//# sourceMappingURL=blob.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst DataTypeUtil = require(\"../util\");\nfunction makeBooleanDataType(mapper) {\n    return (extraMapper) => DataTypeUtil.makeDataType(mapper, value => value, (a, b) => a === b, extraMapper);\n}\nexports.makeBooleanDataType = makeBooleanDataType;\n/**\n * + MySQL      : `TINYINT` (Emulates `boolean`)\n * + PostgreSQL : `boolean`\n * + SQLite     : `INTEGER` (Emulates `boolean`)\n */\nexports.dtBoolean = makeBooleanDataType(tm.mysql.boolean());\n//# sourceMappingURL=boolean.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst DataTypeUtil = require(\"../util\");\nconst built_in_value_expr_1 = require(\"../../built-in-value-expr\");\nfunction makeDateTimeDataType(mapperFactory) {\n    return (fractionalSecondPrecision /*|4|5|6*/, extraMapper) => DataTypeUtil.makeDataType(mapperFactory(fractionalSecondPrecision), value => value, (a, b) => built_in_value_expr_1.BuiltInValueExprUtil.isEqual(a, b), extraMapper);\n}\nexports.makeDateTimeDataType = makeDateTimeDataType;\n/**\n * + MySQL      : `DATETIME`\n * + PostgreSQL : `TIMESTAMP`\n * + SQLite     : `TEXT` (Emulates `DATETIME`)\n *\n * SQLite only supports up to millisecond precision.\n *\n * JS only supports up to millisecond precision.\n *\n * + `0` = second\n * + `1` = deci-second\n * + `2` = centi-second\n * + `3` = millisecond\n *\n * @param fractionalSecondPrecision - `3` is recommended; millisecond precision.\n */\nexports.dtDateTime = makeDateTimeDataType(tm.mysql.dateTime);\n//# sourceMappingURL=date-time.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst DataTypeUtil = require(\"../util\");\nfunction makeDoubleDataType(mapper) {\n    return (extraMapper) => DataTypeUtil.makeDataType(mapper, value => value, (a, b) => a === b, extraMapper);\n}\nexports.makeDoubleDataType = makeDoubleDataType;\n/**\n * 8-byte floating point number.\n *\n * + MySQL      : `DOUBLE`\n * + PostgreSQL : `double precision`\n * + SQLite     : `REAL`; is actually 8-byte floating point number\n *\n * The SQL standard forbids NaN, Infinity, -Infinity.\n * However, SQLite supports infinities.\n *\n * The job of throwing on these 3 values will have to\n * fall to the sqlfiers.\n */\nexports.dtDouble = makeDoubleDataType(tm.toUnsafeNumber());\n/**\n * 4-byte floating point number.\n *\n * JS does not have a 4-byte floating point number type.\n * So, attempting to use `FLOAT` will cause a loss in precision.\n *\n * + MySQL      : `FLOAT`\n * + PostgreSQL : `real`\n * + SQLite     : `REAL`; does not actually have 4-byte floating point numbers\n *\n * The SQL standard forbids NaN, Infinity, -Infinity.\n * However, SQLite supports infinities.\n *\n * The job of throwing on these 3 values will have to\n * fall to the sqlfiers.\n */\nexports.dtFloat = makeDoubleDataType(tm.toUnsafeNumber());\n//# sourceMappingURL=double.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./blob\"));\n__export(require(\"./boolean\"));\n__export(require(\"./date-time\"));\n__export(require(\"./double\"));\n__export(require(\"./integer\"));\n__export(require(\"./text\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst DataTypeUtil = require(\"../util\");\nfunction makeIntegerDataType(mapper) {\n    return (extraMapper) => DataTypeUtil.makeDataType(mapper, value => value, (a, b) => tm.TypeUtil.strictEqual(a, b), extraMapper);\n}\nexports.makeIntegerDataType = makeIntegerDataType;\n/**\n * 1-byte integer.\n *\n * + MySQL      : `TINYINT SIGNED`\n * + PostgreSQL : `smallint`\n * + SQLite     : `INTEGER`\n *\n * This corresponds to MySQL's `TINYINT SIGNED` data type.\n * + Min: -128; `-(2^7)`\n * + Max:  127; `(2^7)-1`\n */\nexports.dtTinyIntSigned = makeIntegerDataType(tm.mysql.tinyIntSigned());\n/**\n * 2-byte integer.\n *\n * + MySQL      : `SMALLINT SIGNED`\n * + PostgreSQL : `smallint`\n * + SQLite     : `INTEGER`\n *\n * This corresponds to MySQL's `SMALLINT SIGNED` data type.\n * + Min: -32,768; `-(2^15)`\n * + Max:  32,767; `(2^15)-1`\n */\nexports.dtSmallIntSigned = makeIntegerDataType(tm.mysql.smallIntSigned());\n/**\n * 3-byte integer.\n *\n * + MySQL      : `MEDIUMINT SIGNED`\n * + PostgreSQL : `integer`\n * + SQLite     : `INTEGER`\n *\n * This corresponds to MySQL's `MEDIUMINT SIGNED` data type.\n * + Min: -8,388,608; `-(2^23)`\n * + Max:  8,388,607; `(2^23)-1`\n */\nexports.dtMediumIntSigned = makeIntegerDataType(tm.mysql.mediumIntSigned());\n/**\n * 4-byte integer.\n *\n * + MySQL      : `INT SIGNED`\n * + PostgreSQL : `integer`\n * + SQLite     : `INTEGER`\n *\n * This corresponds to MySQL's `INT SIGNED` data type.\n * + Min: -2,147,483,648; `-(2^31)`\n * + Max:  2,147,483,647; `(2^31)-1`\n */\nexports.dtIntSigned = makeIntegerDataType(tm.mysql.intSigned());\n/**\n * 8-byte integer.\n *\n * + MySQL      : `BIGINT SIGNED`\n * + PostgreSQL : `bigint`\n * + SQLite     : `INTEGER`\n *\n * This corresponds to MySQL's `BIGINT SIGNED` data type.\n * + Min: -9,223,372,036,854,775,808; `-(2^63)`\n * + Max:  9,223,372,036,854,775,807; `(2^63)-1`\n */\nexports.dtBigIntSigned = makeIntegerDataType(tm.mysql.bigIntSigned());\n//# sourceMappingURL=integer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst DataTypeUtil = require(\"../util\");\nfunction makeTextDataType(mapperFactory) {\n    const result = (a, b, c) => {\n        if (c != undefined) {\n            return DataTypeUtil.makeDataType(mapperFactory(a, b), value => value, (a, b) => a === b, c);\n        }\n        else if (b != undefined) {\n            if (typeof b == \"number\") {\n                return DataTypeUtil.makeDataType(mapperFactory(a, b), value => value, (a, b) => a === b);\n            }\n            else {\n                return DataTypeUtil.makeDataType(mapperFactory(a), value => value, (a, b) => a === b, b);\n            }\n        }\n        else if (a != undefined) {\n            if (typeof a == \"number\") {\n                return DataTypeUtil.makeDataType(mapperFactory(a), value => value, (a, b) => a === b);\n            }\n            else {\n                return DataTypeUtil.makeDataType(mapperFactory(), value => value, (a, b) => a === b, a);\n            }\n        }\n        else {\n            return DataTypeUtil.makeDataType(mapperFactory(), value => value, (a, b) => a === b);\n        }\n    };\n    result.maxLength = mapperFactory.maxLength;\n    return result;\n}\nexports.makeTextDataType = makeTextDataType;\n/**\n * + MySQL      : `CHAR`\n * + PostgreSQL : `CHAR`\n * + SQLite     : `TEXT`\n *\n *\n * This corresponds to MySQL's `CHAR` data type.\n * + Max length: `255`; `(2^8)-1`\n */\nexports.dtChar = makeTextDataType(tm.mysql.char);\n/**\n * + MySQL      : `VARCHAR`\n * + PostgreSQL : `VARCHAR`\n * + SQLite     : `TEXT`\n *\n *\n * This corresponds to MySQL's `VARCHAR` data type.\n * + Max length: `65,535`; `(2^16)-1`\n */\nexports.dtVarChar = makeTextDataType(tm.mysql.varChar);\n/**\n * + MySQL      : `TINY TEXT`\n * + PostgreSQL : `text`\n * + SQLite     : `TEXT`\n *\n *\n * This corresponds to MySQL's `TINY TEXT` data type.\n * + Max length: `255`; `(2^8)-1`\n */\nexports.dtTinyText = makeTextDataType(tm.mysql.tinyText);\n/**\n * + MySQL      : `TEXT`\n * + PostgreSQL : `text`\n * + SQLite     : `TEXT`\n *\n *\n * This corresponds to MySQL's `TEXT` data type.\n * + Max length: `65,535`; `(2^16)-1`\n */\nexports.dtText = makeTextDataType(tm.mysql.text);\n/**\n * + MySQL      : `MEDIUM TEXT`\n * + PostgreSQL : `text`\n * + SQLite     : `TEXT`\n *\n *\n * This corresponds to MySQL's `MEDIUM TEXT` data type.\n * + Max length: `16,777,215`; `(2^24)-1`\n */\nexports.dtMediumText = makeTextDataType(tm.mysql.mediumText);\n/**\n * + MySQL      : `LONG TEXT`\n * + PostgreSQL : -NA-\n * + SQLite     : `TEXT`\n *\n * This corresponds to MySQL's `LONG TEXT` data type.\n * + Max length: `4,294,967,295`; `(2^32)-1`\n *\n * -----\n *\n * `text` supports up to 1GB. So, we cannot use `text`.\n *\n * https://wiki.postgresql.org/wiki/FAQ#What_is_the_maximum_size_for_a_row.2C_a_table.2C_and_a_database.3F\n *\n * > Maximum size for a field? 1 GB\n *\n * -----\n *\n * Realistically, SQLite should support this,\n * https://www.sqlite.org/limits.html\n *\n * However, it is possible that the underlying implementation\n * may be restricted from having a `string` of that length.\n */\nexports.dtLongText = makeTextDataType(tm.mysql.longText);\n//# sourceMappingURL=text.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./non-built-in-value-expr\"));\n__export(require(\"./built-in-value-expr\"));\nconst DataTypeUtil = require(\"./util\");\nexports.DataTypeUtil = DataTypeUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst DataTypeUtil = require(\"../util\");\nconst ExprLib = require(\"../../expr-library\");\nfunction makeDecimalDataType(mapperFactory) {\n    return (\n    /**\n     * + PostgreSQL's min precision is `1`\n     * + MySQL's max precision is `65`\n     */\n    precision, \n    /**\n     * + The min scale is `0`.\n     * + MySQL's max scale is `30`.\n     * + `scale` must be <= `precision`.\n     */\n    scale, extraMapper) => DataTypeUtil.makeDataType(mapperFactory(precision, scale), value => ExprLib.decimalLiteral(value, precision, scale), \n    /**\n     * We consider +0 and -0 to be the same\n     */\n    (a, b) => {\n        if (a === b) {\n            //Early-exit\n            return true;\n        }\n        if (a.toString() === b.toString()) {\n            //Early-exit\n            return true;\n        }\n        const parsedA = tm.FixedPointUtil.tryParse(a.toString());\n        if (parsedA == undefined) {\n            /**\n             * This should never happen...\n             */\n            throw new Error(`Invalid DECIMAL a found`);\n        }\n        const parsedB = tm.FixedPointUtil.tryParse(b.toString());\n        if (parsedB == undefined) {\n            /**\n             * This should never happen...\n             */\n            throw new Error(`Invalid DECIMAL b found`);\n        }\n        return tm.FixedPointUtil.isEqual(parsedA, parsedB, tm.FixedPointUtil.ZeroEqualityAlgorithm.NEGATIVE_AND_POSITIVE_ZERO_ARE_EQUAL);\n    }, extraMapper);\n}\nexports.makeDecimalDataType = makeDecimalDataType;\n/**\n * Fixed-point number.\n *\n * + MySQL      : `DECIMAL(p, s)`\n * + PostgreSQL : `DECIMAL(p, s)`\n * + SQLite     : -NA-; Should be emulated using `TEXT` and custom functions.\n *\n * @param precision\n * + MySQL's max precision is `65`\n * + PostgreSQL's min precision is `1`\n *\n * @param scale\n * + MySQL's max scale is `30`.\n * + The min scale is `0`.\n * + `scale` must be <= `precision`.\n *\n * @param extraMapper\n */\nexports.dtDecimal = makeDecimalDataType(tm.mysql.decimal);\n//# sourceMappingURL=decimal.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./decimal\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./make-data-type\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nfunction makeDataType(mapper, toBuiltInExpr_NonCorrelated, isNullSafeEqual, extraMapper) {\n    const myMapper = (extraMapper == undefined ?\n        mapper :\n        tm.pipe(mapper, extraMapper));\n    function dataType(name, mixed) {\n        return myMapper(name, mixed);\n    }\n    dataType.toBuiltInExpr_NonCorrelated = toBuiltInExpr_NonCorrelated;\n    dataType.isNullSafeEqual = isNullSafeEqual;\n    dataType.orNull = () => {\n        return makeDataType(tm.orNull(myMapper), (value) => {\n            if (value === null) {\n                return null;\n            }\n            else {\n                const rawExpr = toBuiltInExpr_NonCorrelated(value);\n                return rawExpr;\n            }\n        }, (a, b) => {\n            if (a === null) {\n                if (b === null) {\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            }\n            else {\n                if (b === null) {\n                    return false;\n                }\n                else {\n                    return isNullSafeEqual(a, b);\n                }\n            }\n        });\n    };\n    return dataType;\n}\nexports.makeDataType = makeDataType;\n//# sourceMappingURL=make-data-type.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./constructor\"));\n__export(require(\"./operation\"));\n__export(require(\"./predicate\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst evaluate_columns_1 = require(\"./evaluate-columns\");\nconst evaluate_primary_key_1 = require(\"./evaluate-primary-key\");\nasync function tryEvaluateCandidateKey(table, connection, row) {\n    const mappingErrors = [];\n    for (const candidateKey of table.candidateKeys) {\n        const evaluateResult = await evaluate_columns_1.tryEvaluateColumns(table, connection, `${table.alias}.candidateKey`, candidateKey, row);\n        if (evaluateResult.success) {\n            return evaluateResult;\n        }\n        if (tm.ErrorUtil.isMappingError(evaluateResult.error)) {\n            mappingErrors.push(evaluateResult.error);\n        }\n    }\n    return {\n        success: false,\n        error: tm.ErrorUtil.makeNormalizedUnionError(`${table.alias}.candidateKey`, row, mappingErrors),\n    };\n}\nexports.tryEvaluateCandidateKey = tryEvaluateCandidateKey;\nasync function tryEvaluateCandidateKeyPreferPrimaryKey(table, connection, row) {\n    if (table.primaryKey == undefined) {\n        return tryEvaluateCandidateKey(table, connection, row);\n    }\n    const evaluatePrimaryKeyResult = await evaluate_primary_key_1.tryEvaluatePrimaryKey(table, connection, row);\n    if (evaluatePrimaryKeyResult.success) {\n        return evaluatePrimaryKeyResult;\n    }\n    return tryEvaluateCandidateKey(table, connection, row);\n}\nexports.tryEvaluateCandidateKeyPreferPrimaryKey = tryEvaluateCandidateKeyPreferPrimaryKey;\n//# sourceMappingURL=evaluate-candidate-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst execution_1 = require(\"../../../execution\");\nconst unified_query_1 = require(\"../../../unified-query\");\nconst expr_1 = require(\"../../../expr\");\nconst column_map_1 = require(\"../../../column-map\");\nasync function tryEvaluateColumns(table, connection, name, columnAliases, row) {\n    /**\n     * We do not want extra properties\n     */\n    row = tm.TypeUtil.pick(row, ...columnAliases);\n    const rowKeys = Object.keys(row);\n    if (rowKeys.length < columnAliases.length) {\n        const missingColumns = columnAliases\n            .filter(columnAlias => !rowKeys.includes(columnAlias));\n        return {\n            success: false,\n            error: new Error(`Input row is missing columns ${missingColumns.join(\", \")}`),\n        };\n    }\n    const outputRowMapper = column_map_1.ColumnMapUtil.mapper(column_map_1.ColumnMapUtil.pick(table.columns, columnAliases));\n    const outputRowResult = tm.tryMapHandled(outputRowMapper, name, row);\n    if (outputRowResult.success) {\n        /**\n         * The best case scenario\n         */\n        return {\n            success: true,\n            outputRow: outputRowResult.value,\n        };\n    }\n    /**\n     * Not so great.\n     * We have to make a DB call to evaluate the expression(s)\n     */\n    const query = unified_query_1.QueryUtil\n        .newInstance()\n        .select(() => columnAliases\n        .map(columnAlias => {\n        const rawExprInput = row[columnAlias];\n        return expr_1.ExprUtil.fromRawExprNoUsedRefInput(table.columns[columnAlias], rawExprInput).as(columnAlias);\n    }));\n    row = await execution_1.ExecutionUtil.fetchOne(query, connection);\n    const outputRowResult2 = tm.tryMapHandled(outputRowMapper, name, row);\n    if (outputRowResult2.success) {\n        return {\n            success: true,\n            outputRow: outputRowResult2.value,\n        };\n    }\n    else {\n        return {\n            success: false,\n            error: outputRowResult2.mappingError,\n        };\n    }\n}\nexports.tryEvaluateColumns = tryEvaluateColumns;\n//# sourceMappingURL=evaluate-columns.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst unified_query_1 = require(\"../../../unified-query\");\nconst util_1 = require(\"../../../built-in-expr/util\");\n/**\n * Given a type `T`, we may have a `CustomExpr_NonCorrelated<T>`.\n *\n * This may be `T` itself, or `IExpr<T>` or `IColumn<T>` or\n * any other non-`T`.\n *\n * However, we **want** `T`.\n * This function helps us resolve non-`T` types to `T` itself.\n */\nasync function evaluateCustomExpr(column, connection, customExpr) {\n    if (util_1.isAnyNonValueExpr(customExpr)) {\n        //We have a non-value expression, evaluate it to figure out what its value is\n        const rawEvaluatedValue = await unified_query_1.QueryUtil\n            .newInstance()\n            .selectValue(() => customExpr)\n            .fetchValue(connection);\n        //We must have a value now\n        const evaluatedValue = column.mapper(`${column.tableAlias}.${column.columnAlias}`, rawEvaluatedValue);\n        return evaluatedValue;\n    }\n    const valueResult = tm.mapHandled(column.mapper, `${column.tableAlias}.${column.columnAlias}`, customExpr);\n    return valueResult;\n}\nexports.evaluateCustomExpr = evaluateCustomExpr;\n//# sourceMappingURL=evaluate-custom-expr.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst table_1 = require(\"../../../table\");\nconst evaluate_columns_1 = require(\"./evaluate-columns\");\nconst evaluate_primary_key_1 = require(\"./evaluate-primary-key\");\nconst key_1 = require(\"../../../key\");\nasync function tryEvaluateInsertableCandidateKey(table, connection, row) {\n    const insertableColumnAliases = table_1.TableUtil.insertableColumnAlias(table);\n    const mappingErrors = [];\n    for (const candidateKey of table.candidateKeys) {\n        if (!key_1.KeyUtil.isSubKey(candidateKey, insertableColumnAliases)) {\n            continue;\n        }\n        const evaluateResult = await evaluate_columns_1.tryEvaluateColumns(table, connection, `${table.alias}.insertableCandidateKey`, candidateKey, row);\n        if (evaluateResult.success) {\n            return evaluateResult;\n        }\n        if (tm.ErrorUtil.isMappingError(evaluateResult.error)) {\n            mappingErrors.push(evaluateResult.error);\n        }\n    }\n    return {\n        success: false,\n        error: tm.ErrorUtil.makeNormalizedUnionError(`${table.alias}.insertableCandidateKey`, row, mappingErrors),\n    };\n}\nexports.tryEvaluateInsertableCandidateKey = tryEvaluateInsertableCandidateKey;\nasync function tryEvaluateInsertableCandidateKeyPreferPrimaryKey(table, connection, row) {\n    if (table.primaryKey == undefined) {\n        return tryEvaluateInsertableCandidateKey(table, connection, row);\n    }\n    if (table.primaryKey.every(columnAlias => table_1.TableUtil.isInsertableColumnAlias(table, columnAlias))) {\n        const evaluatePrimaryKeyResult = await evaluate_primary_key_1.tryEvaluatePrimaryKey(table, connection, row);\n        if (evaluatePrimaryKeyResult.success) {\n            return evaluatePrimaryKeyResult;\n        }\n    }\n    return tryEvaluateInsertableCandidateKey(table, connection, row);\n}\nexports.tryEvaluateInsertableCandidateKeyPreferPrimaryKey = tryEvaluateInsertableCandidateKeyPreferPrimaryKey;\n//# sourceMappingURL=evaluate-insertable-candidate-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst evaluate_columns_1 = require(\"./evaluate-columns\");\nasync function tryEvaluatePrimaryKey(table, connection, row) {\n    return evaluate_columns_1.tryEvaluateColumns(table, connection, `${table.alias}.primaryKey`, table.primaryKey, row);\n}\nexports.tryEvaluatePrimaryKey = tryEvaluatePrimaryKey;\n//# sourceMappingURL=evaluate-primary-key.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./evaluate-candidate-key\"));\n__export(require(\"./evaluate-columns\"));\n__export(require(\"./evaluate-custom-expr\"));\n__export(require(\"./evaluate-insertable-candidate-key\"));\n__export(require(\"./evaluate-primary-key\"));\n__export(require(\"./intersect\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst predicate_1 = require(\"../predicate\");\nconst constructor_1 = require(\"../constructor\");\nconst built_in_expr_1 = require(\"../../../built-in-expr\");\nconst built_in_value_expr_1 = require(\"../../../built-in-value-expr\");\n/**\n * @todo Implement something more efficient to generalize intersect `N` mappers.\n *\n * This runs a `mixed` value through both `mapperA` and `mapperB`.\n * Then, it checks that both mapped results are equal.\n *\n * It **does not** try to \"deep-merge\" both mapped results.\n *\n * So, you cannot combine mappers for `{x:number}` and `{y:number}`\n * and hope to have a value of type `{x:number, y:number}` during run-time.\n *\n * it will just throw a run-time error because a value of exactly type `{x:number}`\n * is not equal to a value of exactly type `{y:number}`.\n */\nfunction intersect(mapperA, mapperB) {\n    if (predicate_1.isDataType(mapperA)) {\n        if (predicate_1.isDataType(mapperB)) {\n            return constructor_1.makeDataType((name, mixed) => {\n                const mappedA = mapperA(name, mixed);\n                const mappedB = mapperB(name, mixed);\n                if (!mapperA.isNullSafeEqual(mappedA, \n                /**\n                 * This may throw\n                 */\n                mapperA(name, mappedB))) {\n                    /**\n                     * @todo Find a way to make better messages.\n                     */\n                    throw tm.ErrorUtil.makeMappingError({\n                        message: `${name} fails ${tm.TypeUtil.toTypeStr(mappedA)} LHS equality check`,\n                        inputName: name,\n                        actualValue: mixed,\n                        expected: `${tm.TypeUtil.toTypeStr(mappedA)} LHS equality check`,\n                        expectedMeta: {\n                            mapperA,\n                            mapperB,\n                        },\n                    });\n                }\n                if (!mapperB.isNullSafeEqual(mappedB, \n                /**\n                 * This may throw\n                 */\n                mapperB(name, mappedA))) {\n                    /**\n                     * @todo Find a way to make better messages.\n                     */\n                    throw tm.ErrorUtil.makeMappingError({\n                        message: `${name} ${tm.TypeUtil.toTypeStr(mappedB)} fails RHS equality check`,\n                        inputName: name,\n                        actualValue: mixed,\n                        expected: `${tm.TypeUtil.toTypeStr(mappedB)} RHS equality check`,\n                        expectedMeta: {\n                            mapperA,\n                            mapperB,\n                        },\n                    });\n                }\n                /**\n                 * Since the two values are \"equal\",\n                 * it should not matter which we return.\n                 */\n                return mappedA;\n            }, (value) => {\n                /**\n                 * We assume that `a` and `b`\n                 * have already gone through the above mapping function.\n                 *\n                 * So, we only need one mapper to convert to a built-in expr.\n                 */\n                return mapperA.toBuiltInExpr_NonCorrelated(value);\n            }, (a, b) => {\n                /**\n                 * We assume that `a` and `b`\n                 * have already gone through the above mapping function.\n                 *\n                 * So, we only need one mapper to say they\n                 * are null-safe-equal.\n                 */\n                return mapperA.isNullSafeEqual(a, b);\n            });\n        }\n        else {\n            return constructor_1.makeDataType((name, mixed) => {\n                const mappedA = mapperA(name, mixed);\n                const mappedB = mapperB(name, mixed);\n                if (!mapperA.isNullSafeEqual(mappedA, \n                /**\n                 * This may throw\n                 */\n                mapperA(name, mappedB))) {\n                    /**\n                     * @todo Find a way to make better messages.\n                     */\n                    throw tm.ErrorUtil.makeMappingError({\n                        message: `${name} fails ${tm.TypeUtil.toTypeStr(mappedA)} LHS equality check`,\n                        inputName: name,\n                        actualValue: mixed,\n                        expected: `${tm.TypeUtil.toTypeStr(mappedA)} LHS equality check`,\n                        expectedMeta: {\n                            mapperA,\n                            mapperB,\n                        },\n                    });\n                }\n                /**\n                 * Since the two values are \"equal\",\n                 * it should not matter which we return.\n                 *\n                 * Well, we couldn't perform RHS equality checks...\n                 */\n                return mappedA;\n            }, (value) => {\n                /**\n                 * We assume that `a` and `b`\n                 * have already gone through the above mapping function.\n                 *\n                 * So, we only need one mapper to convert to a built-in expr.\n                 */\n                return mapperA.toBuiltInExpr_NonCorrelated(value);\n            }, (a, b) => {\n                /**\n                 * We assume that `a` and `b`\n                 * have already gone through the above mapping function.\n                 *\n                 * So, we only need one mapper to say they\n                 * are null-safe-equal.\n                 */\n                return mapperA.isNullSafeEqual(a, b);\n            });\n        }\n    }\n    else {\n        if (predicate_1.isDataType(mapperB)) {\n            return constructor_1.makeDataType((name, mixed) => {\n                const mappedA = mapperA(name, mixed);\n                const mappedB = mapperB(name, mixed);\n                if (!mapperB.isNullSafeEqual(mappedB, \n                /**\n                 * This may throw\n                 */\n                mapperB(name, mappedA))) {\n                    /**\n                     * @todo Find a way to make better messages.\n                     */\n                    throw tm.ErrorUtil.makeMappingError({\n                        message: `${name} fails ${tm.TypeUtil.toTypeStr(mappedB)} RHS equality check`,\n                        inputName: name,\n                        actualValue: mixed,\n                        expected: `${tm.TypeUtil.toTypeStr(mappedB)} RHS equality check`,\n                        expectedMeta: {\n                            mapperA,\n                            mapperB,\n                        },\n                    });\n                }\n                /**\n                 * Since the two values are \"equal\",\n                 * it should not matter which we return.\n                 *\n                 * Well, we couldn't perform LHS equality checks...\n                 */\n                return mappedB;\n            }, (value) => {\n                /**\n                 * We assume that `a` and `b`\n                 * have already gone through the above mapping function.\n                 *\n                 * So, we only need one mapper to convert to a built-in expr.\n                 */\n                return mapperB.toBuiltInExpr_NonCorrelated(value);\n            }, (a, b) => {\n                /**\n                 * We assume that `a` and `b`\n                 * have already gone through the above mapping function.\n                 *\n                 * So, we only need one mapper to say they\n                 * are null-safe-equal.\n                 */\n                return mapperB.isNullSafeEqual(a, b);\n            });\n        }\n        else {\n            return constructor_1.makeDataType((name, mixed) => {\n                const mappedA = mapperA(name, mixed);\n                const mappedB = mapperB(name, mixed);\n                if (built_in_value_expr_1.BuiltInValueExprUtil.isBuiltInValueExpr(mappedA)) {\n                    if (built_in_value_expr_1.BuiltInValueExprUtil.isBuiltInValueExpr(mappedB)) {\n                        if (!built_in_value_expr_1.BuiltInValueExprUtil.isEqual(mappedA, mappedB)) {\n                            /**\n                             * @todo Find a way to make better messages.\n                             */\n                            throw tm.ErrorUtil.makeMappingError({\n                                message: `${name} fails ${tm.TypeUtil.toTypeStr(mappedA)} LHS equality check`,\n                                inputName: name,\n                                actualValue: mixed,\n                                expected: `${tm.TypeUtil.toTypeStr(mappedA)} LHS equality check`,\n                                expectedMeta: {\n                                    mapperA,\n                                    mapperB,\n                                },\n                            });\n                        }\n                    }\n                    else {\n                        /**\n                         * @todo Find a way to make better messages.\n                         */\n                        throw tm.ErrorUtil.makeMappingError({\n                            message: `${name} fails ${tm.TypeUtil.toTypeStr(mappedA)} LHS equality check`,\n                            inputName: name,\n                            actualValue: mixed,\n                            expected: `${tm.TypeUtil.toTypeStr(mappedA)} LHS equality check`,\n                            expectedMeta: {\n                                mapperA,\n                                mapperB,\n                            },\n                        });\n                    }\n                }\n                else {\n                    if (built_in_value_expr_1.BuiltInValueExprUtil.isBuiltInValueExpr(mappedB)) {\n                        /**\n                         * @todo Find a way to make better messages.\n                         */\n                        throw tm.ErrorUtil.makeMappingError({\n                            message: `${name} fails ${tm.TypeUtil.toTypeStr(mappedB)} RHS equality check`,\n                            inputName: name,\n                            actualValue: mixed,\n                            expected: `${tm.TypeUtil.toTypeStr(mappedB)} RHS equality check`,\n                            expectedMeta: {\n                                mapperA,\n                                mapperB,\n                            },\n                        });\n                    }\n                    else {\n                        /**\n                         * @todo Find a way to make better messages.\n                         */\n                        throw tm.ErrorUtil.makeMappingError({\n                            message: `${name} fails ${tm.TypeUtil.toTypeStr(mappedA)}/${tm.TypeUtil.toTypeStr(mappedB)} LHS/RHS equality check; use IDataType instead of SafeMapper`,\n                            inputName: name,\n                            actualValue: mixed,\n                            expected: `${tm.TypeUtil.toTypeStr(mappedA)}/${tm.TypeUtil.toTypeStr(mappedB)} LHS/RHS equality check`,\n                            expectedMeta: {\n                                mapperA,\n                                mapperB,\n                            },\n                        });\n                    }\n                }\n                /**\n                 * Since the two values are \"equal\",\n                 * it should not matter which we return.\n                 */\n                return mappedA;\n            }, (value) => {\n                /**\n                 * We assume that `a` and `b`\n                 * have already gone through the above mapping function.\n                 *\n                 * So, we only need one mapper to convert to a built-in expr.\n                 *\n                 * So, we can assume they are built-in values\n                 */\n                return built_in_expr_1.BuiltInExprUtil.fromValueExpr(mapperA, value);\n            }, (a, b) => {\n                /**\n                 * We assume that `a` and `b`\n                 * have already gone through the above mapping function.\n                 *\n                 * So, we can assume they are built-in values\n                 */\n                return (built_in_value_expr_1.BuiltInValueExprUtil.isBuiltInValueExpr(a) &&\n                    built_in_value_expr_1.BuiltInValueExprUtil.isBuiltInValueExpr(b) &&\n                    built_in_value_expr_1.BuiltInValueExprUtil.isEqual(a, b));\n            });\n        }\n    }\n}\nexports.intersect = intersect;\n//# sourceMappingURL=intersect.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./is-data-type\"));\n__export(require(\"./is-null-safe-equal\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst type_util_1 = require(\"../../../type-util\");\nfunction isDataType(raw) {\n    if (typeof raw != \"function\") {\n        return false;\n    }\n    if (!type_util_1.isObjectWithOwnEnumerableKeys()(raw, [\n        \"toBuiltInExpr_NonCorrelated\",\n        \"isNullSafeEqual\",\n    ])) {\n        return false;\n    }\n    return ((typeof raw.toBuiltInExpr_NonCorrelated == \"function\") &&\n        (typeof raw.isNullSafeEqual == \"function\"));\n}\nexports.isDataType = isDataType;\n//# sourceMappingURL=is-data-type.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst is_data_type_1 = require(\"./is-data-type\");\nconst built_in_value_expr_1 = require(\"../../../built-in-value-expr\");\nconst column_1 = require(\"../../../column\");\n/**\n * If `mapper` is `IDataType`, it uses `mapper.isNullSafeEqual()`.\n *\n * Else, it uses a fallback algorithm that works fine for `BuiltInValueExpr`,\n * but may not be suitable for custom data types.\n */\nfunction isNullSafeEqual(mapper, a, b) {\n    if (column_1.ColumnUtil.isColumn(mapper)) {\n        mapper = mapper.mapper;\n    }\n    if (is_data_type_1.isDataType(mapper)) {\n        return mapper.isNullSafeEqual(a, b);\n    }\n    else {\n        if (built_in_value_expr_1.BuiltInValueExprUtil.isBuiltInValueExpr(a)) {\n            if (built_in_value_expr_1.BuiltInValueExprUtil.isBuiltInValueExpr(b)) {\n                return built_in_value_expr_1.BuiltInValueExprUtil.isEqual(a, b);\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return tm.TypeUtil.strictEqual(a, b);\n        }\n    }\n}\nexports.isNullSafeEqual = isNullSafeEqual;\n//# sourceMappingURL=is-null-safe-equal.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./util\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Right now, this is MySQL-specific.\n *\n * But I imagine this should work on most (all?) SQL databases.\n *\n * @todo Investigate. If incompatible, fix.\n */\nconst StringUtil = require(\"../string-util\");\n//Uses UTC\n//Truncates if fractionSecondPrecision is too small.\nfunction toSqlUtc(d, fractionalSecondPrecision /*|4|5|6*/) {\n    if (!isFinite(d.getTime())) {\n        throw new Error(\"Invalid date passed\");\n    }\n    const year = StringUtil.zeroPad(d.getUTCFullYear(), 4);\n    //getUTCMonth() returns [0, 11]\n    //We want [1, 12]\n    const month = StringUtil.zeroPad(d.getUTCMonth() + 1, 2);\n    const day = StringUtil.zeroPad(d.getUTCDate(), 2);\n    const hour = StringUtil.zeroPad(d.getUTCHours(), 2);\n    const minute = StringUtil.zeroPad(d.getUTCMinutes(), 2);\n    const second = StringUtil.zeroPad(d.getUTCSeconds(), 2);\n    if (fractionalSecondPrecision == 0) {\n        /*\n            https://dev.mysql.com/doc/refman/8.0/en/date-and-time-literals.html\n\n            The TIMESTAMP syntax produces a DATETIME value in MySQL\n            because DATETIME has a range that more closely corresponds\n            to the standard SQL TIMESTAMP type,\n            which has a year range from 0001 to 9999.\n\n            (The MySQL TIMESTAMP year range is 1970 to 2038.)\n        */\n        return `${year}-${month}-${day} ${hour}:${minute}:${second}`;\n    }\n    else {\n        const ms = StringUtil.zeroPad(d.getUTCMilliseconds(), fractionalSecondPrecision).substr(0, fractionalSecondPrecision);\n        /*\n            https://dev.mysql.com/doc/refman/8.0/en/date-and-time-literals.html\n\n            The TIMESTAMP syntax produces a DATETIME value in MySQL\n            because DATETIME has a range that more closely corresponds\n            to the standard SQL TIMESTAMP type,\n            which has a year range from 0001 to 9999.\n\n            (The MySQL TIMESTAMP year range is 1970 to 2038.)\n        */\n        return `${year}-${month}-${day} ${hour}:${minute}:${second}.${ms}`;\n    }\n}\nexports.toSqlUtc = toSqlUtc;\n//Month is zero-based\n//Day is one-based\nfunction isValidDate(year, month, day) {\n    var d = new Date(year, month, day);\n    if (d.getFullYear() === year && d.getMonth() === month && d.getDate() === day) {\n        return true;\n    }\n    return false;\n}\nconst mySqlDateTimeRegex = /^(\\d{4})-(\\d{2})-(\\d{2})( (\\d{2}):(\\d{2}):(\\d{2})(\\.(\\d{1,6}))?)?$/;\n//Assumes UTC\nfunction fromSqlUtc(sql, fractionalSecondPrecision /*|4|5|6*/) {\n    const match = mySqlDateTimeRegex.exec(sql);\n    if (match == undefined) {\n        throw new Error(`Invalid MySQL DATETIME string`);\n    }\n    const year = parseInt(match[1]);\n    //1-based\n    const month = parseInt(match[2]);\n    //1-based\n    const dayOfMonth = parseInt(match[3]);\n    if (!isValidDate(year, month - 1, dayOfMonth)) {\n        throw new Error(`Invalid MySQL DATETIME string; month or day does not exist for given year`);\n    }\n    const hour = (match[5] == undefined) ?\n        0 :\n        parseInt(match[5]);\n    if (hour > 23) {\n        throw new Error(`Hour must be [0, 23]`);\n    }\n    const minute = (match[6] == undefined) ?\n        0 :\n        parseInt(match[6]);\n    if (minute > 59) {\n        throw new Error(`Minute must be [0, 59]`);\n    }\n    const second = (match[7] == undefined) ?\n        0 :\n        parseInt(match[7]);\n    if (second > 59) {\n        throw new Error(`Second must be [0, 59]`);\n    }\n    const microsecondPart = (match[9] == undefined) ?\n        0 :\n        parseInt(StringUtil.trailingZeroPad(match[9], 6));\n    if (microsecondPart > 999999) {\n        throw new Error(`Microsecond must be [0, 999999]`);\n    }\n    const millisecond = Math.floor(microsecondPart / 1000);\n    const microsecond = microsecondPart % 1000;\n    if (match[9] != undefined &&\n        match[9].length > fractionalSecondPrecision) {\n        throw new Error(`Expected DATETIME(${fractionalSecondPrecision}), received DATETIME(${match[9].length})`);\n    }\n    //TODO-FEATURE Microsecond support\n    //BEGIN TEMPORARY NON-SUPPORT FOR MICROSECOND\n    if (microsecond != 0) {\n        throw new Error(`Microsecond support for DATETIME is not supported yet`);\n    }\n    //END TEMPORARY NON-SUPPORT FOR MICROSECOND\n    const utcMillisecondTimestamp = Date.UTC(year, \n    //Date.UTC() expects [0, 11]\n    month - 1, dayOfMonth, hour, minute, second, millisecond);\n    return new Date(utcMillisecondTimestamp);\n}\nexports.fromSqlUtc = fromSqlUtc;\n//# sourceMappingURL=util.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./is-date\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isDate(x) {\n    return Object.prototype.toString.call(x) === \"[object Date]\";\n}\nexports.isDate = isDate;\n//# sourceMappingURL=is-date.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst derived_table_1 = require(\"../derived-table\");\nconst expr_1 = require(\"../expr\");\n/**\n * Meant to be a combination of `DerivedTable` and `AliasedExpr`.\n */\nclass DerivedTableSelectItem {\n    constructor(data, unaliasedAst) {\n        this.mapper = data.mapper;\n        this.isLateral = data.isLateral;\n        this.tableAlias = data.tableAlias;\n        this.alias = data.alias;\n        this.columns = data.columns;\n        this.usedRef = data.usedRef;\n        this.isAggregate = data.isAggregate;\n        this.ast = unaliasedAst;\n        this.unaliasedAst = unaliasedAst;\n    }\n    /**\n     * For now, the moment you use the `LATERAL` modifier,\n     * it can no longer be used as an expression or aliased expression.\n     *\n     * No real reason for this rule, just laziness.\n     */\n    lateral() {\n        return derived_table_1.DerivedTableUtil.lateral(this);\n    }\n    /**\n     * For now, the moment you try to re-alias,\n     * it can no longer be used as a derived table.\n     *\n     * No real reason for this rule, just laziness.\n     *\n     * -----\n     *\n     * If you are running into \"max instantiation depth\" errors,\n     * consider adding explicit `TableExpr<>` type annotations.\n     *\n     * If that doesn't help,\n     * consider using `ExprUtil.as()` instead.\n     *\n     * Also, consider reading this to understand my frustration,\n     * https://github.com/microsoft/TypeScript/issues/29511\n     *\n     * @param alias\n     */\n    as(alias) {\n        return expr_1.ExprUtil.as(this, alias);\n    }\n    /**\n     * ```sql\n     * ORDER BY\n     *  RAND() ASC\n     * ```\n     */\n    asc() {\n        return expr_1.ExprUtil.asc(this);\n    }\n    /**\n     * ```sql\n     * ORDER BY\n     *  RAND() DESC\n     * ```\n     */\n    desc() {\n        return expr_1.ExprUtil.desc(this);\n    }\n    /**\n     * ```sql\n     * ORDER BY\n     *  (myTable.myColumn IS NOT NULL) ASC,\n     *  RAND() DESC\n     * ```\n     */\n    sort(sortDirection) {\n        return expr_1.ExprUtil.sort(this, sortDirection);\n    }\n}\nexports.DerivedTableSelectItem = DerivedTableSelectItem;\n//# sourceMappingURL=derived-table-select-item-impl.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./derived-table-select-item-impl\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DerivedTableUtil = require(\"./util\");\n/**\n * A query can be aliased,\n *\n * ```sql\n * SELECT\n *  *\n * FROM\n *  myTable\n * CROSS JOIN\n *  (\n *      SELECT\n *          RAND() AS randomNumber,\n *          UTC_TIMESTAMP() AS timeNow\n *  ) AS tmpTable --This is a `DerivedTable`\n * ```\n *\n */\nclass DerivedTable {\n    constructor(data, unaliasedAst) {\n        this.isLateral = data.isLateral;\n        this.alias = data.alias;\n        this.columns = data.columns;\n        this.usedRef = data.usedRef;\n        this.unaliasedAst = unaliasedAst;\n    }\n    /**\n     * Makes a derived table a `LATERAL` derived table.\n     *\n     * -----\n     *\n     * Normally, a derived table cannot use a column from a preceding table in the same `FROM` clause,\n     * ```sql\n     *  SELECT\n     *      *\n     *  FROM\n     *      myTable\n     *  CROSS JOIN\n     *      (\n     *          SELECT\n     *              --Error, cannot reference `myTable.x`; it is a column in the same `FROM` clause\n     *              myTable.x + otherTable.y AS z\n     *          FROM\n     *              otherTable\n     *      ) AS tmpTable\n     * ```\n     *\n     * However, a `LATERAL` derived table can,\n     * ```sql\n     *  SELECT\n     *      *\n     *  FROM\n     *      myTable\n     *  CROSS JOIN\n     *      LATERAL (\n     *          SELECT\n     *              --OK! `LATERAL` derived tables can access columns in the same `FROM` clause\n     *              myTable.x + otherTable.y AS z\n     *          FROM\n     *              otherTable\n     *      ) AS tmpTable\n     * ```\n     *\n     * Note:\n     * + Not supported in MySQL 5.7\n     * + Supported as of MySQL 8.0.14\n     */\n    lateral() {\n        return DerivedTableUtil.lateral(this);\n    }\n}\nexports.DerivedTable = DerivedTable;\n//# sourceMappingURL=derived-table-impl.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./derived-table-impl\"));\nconst DerivedTableUtil = require(\"./util\");\nexports.DerivedTableUtil = DerivedTableUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./operation\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./lateral\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst derived_table_impl_1 = require(\"../../derived-table-impl\");\n/**\n * Makes a derived table a `LATERAL` derived table.\n *\n * -----\n *\n * Normally, a derived table cannot use a column from a preceding table in the same `FROM` clause,\n * ```sql\n *  SELECT\n *      *\n *  FROM\n *      myTable\n *  CROSS JOIN\n *      (\n *          SELECT\n *              --Error, cannot reference `myTable.x`; it is a column in the same `FROM` clause\n *              myTable.x + otherTable.y AS z\n *          FROM\n *              otherTable\n *      ) AS tmpTable\n * ```\n *\n * However, a `LATERAL` derived table can,\n * ```sql\n *  SELECT\n *      *\n *  FROM\n *      myTable\n *  CROSS JOIN\n *      LATERAL (\n *          SELECT\n *              --OK! `LATERAL` derived tables can access columns in the same `FROM` clause\n *              myTable.x + otherTable.y AS z\n *          FROM\n *              otherTable\n *      ) AS tmpTable\n * ```\n *\n * Note:\n * + Not supported in MySQL 5.7\n * + Supported as of MySQL 8.0.14\n */\nfunction lateral(derivedTable) {\n    const result = new derived_table_impl_1.DerivedTable({\n        isLateral: true,\n        alias: derivedTable.alias,\n        columns: derivedTable.columns,\n        usedRef: derivedTable.usedRef,\n    }, derivedTable.unaliasedAst);\n    return result;\n}\nexports.lateral = lateral;\n//# sourceMappingURL=lateral.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./log-impl\"));\nconst LogUtil = require(\"./util\");\nexports.LogUtil = LogUtil;\nconst util_1 = require(\"./util\");\nexports.log = util_1.log;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst LogUtil = require(\"./util\");\nclass Log {\n    constructor(data, extraData) {\n        /**\n         * A collection of correlated subqueries/expressions,\n         * these require the `ownerTable` to be in the `FROM` clause.\n         */\n        this.correlatedSubquery = {\n            exists: () => {\n                return LogUtil.CorrelatedSubquery.exists(this);\n            },\n            latest: () => {\n                return LogUtil.CorrelatedSubquery.latest(this);\n            },\n            latestValue: (selectValueDelegate) => {\n                return LogUtil.CorrelatedSubquery.latestValue(this, selectValueDelegate);\n            },\n            latestValueOrDefault: (selectValueDelegate) => {\n                return LogUtil.CorrelatedSubquery.latestValueOrDefault(this, selectValueDelegate);\n            },\n        };\n        this.tracked = data.tracked;\n        this.doNotCopy = data.doNotCopy;\n        this.copy = data.copy;\n        this.trackedWithDefaultValue = data.trackedWithDefaultValue;\n        this.logTable = data.logTable;\n        this.ownerTable = data.ownerTable;\n        this.latestOrder = data.latestOrder;\n        this.copyDefaultsDelegate = extraData.copyDefaultsDelegate;\n        this.trackedDefaults = extraData.trackedDefaults;\n    }\n    fetchDefault(connection, primaryKey) {\n        return LogUtil.fetchDefault(this, connection, primaryKey);\n    }\n    fetchLatest(connection, primaryKey) {\n        return LogUtil.fetchLatest(this, connection, primaryKey);\n    }\n    fetchLatestValue(connection, primaryKey, selectValueDelegate) {\n        return LogUtil.fetchLatestValue(this, connection, primaryKey, selectValueDelegate);\n    }\n    /**\n     * @todo Make this part of fluent API of `fetchLatest()`?\n     */\n    fetchLatestOrDefault(connection, primaryKey) {\n        return LogUtil.fetchLatestOrDefault(this, connection, primaryKey);\n    }\n    fetchLatestValueOrDefault(connection, primaryKey, selectValueDelegate) {\n        return LogUtil.fetchLatestValueOrDefault(this, connection, primaryKey, selectValueDelegate);\n    }\n    exists(connection, primaryKey) {\n        return LogUtil.exists(this, connection, primaryKey);\n    }\n    trackOrInsert(connection, primaryKey, trackOrInsertRow) {\n        return LogUtil.trackOrInsert(this, connection, primaryKey, trackOrInsertRow);\n    }\n    unsafeTrack(connection, primaryKey, unsafeTrackRow) {\n        return LogUtil.unsafeTrack(this, connection, primaryKey, unsafeTrackRow);\n    }\n    track(connection, primaryKey, trackRow) {\n        return LogUtil.track(this, connection, primaryKey, trackRow);\n    }\n}\nexports.Log = Log;\n//# sourceMappingURL=log-impl.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _01_set_owner_1 = require(\"./01-set-owner\");\nfunction log(logTable) {\n    return new _01_set_owner_1.LogMustSetOwner({\n        logTable,\n    });\n}\nexports.log = log;\n/*\nimport {table} from \"../../../table\";\nimport * as tm from \"type-mapping\";\nimport {KeyArrayUtil} from \"../../../key\";\nimport {Identity} from \"../../../type-util\";\nimport {from, requireOuterQueryJoins} from \"../../../unified-query\";\nimport {eqPrimaryKeyOfTable} from \"../../../expr-library\";\n\nexport const businessFile = table(\"businessFile\")\n    .addColumns({\n        appId : tm.mysql.bigIntSigned(),\n        businessFileId : tm.mysql.bigIntSigned(),\n        awsS3PresignedUploadId : tm.mysql.bigIntSigned(),\n        businessId : tm.mysql.bigIntSigned(),\n        externalUserId : tm.mysql.varChar(),\n        fileTypeId : tm.mysql.bigIntSigned(),\n        updatedAt : tm.mysql.dateTime(),\n        updatedAt2 : tm.mysql.dateTime(),\n        updatedByExternalUserId : tm.mysql.varChar().orNull(),\n    })\n    .setAutoIncrement(c => c.businessFileId)\n    .addCandidateKey(c => [\n        c.businessId,\n        c.fileTypeId,\n        c.updatedAt,\n    ])\n    .addCandidateKey(c => [\n        c.businessId,\n        c.fileTypeId,\n        c.updatedAt2,\n    ])\n    .addExplicitDefaultValue(c => [c.updatedAt])\n    .addExplicitDefaultValue(c => [c.updatedAt2])\n    .removeAllMutable();\n\nexport const businessFileType = table(\"businessFileType\")\n    .addColumns({\n        businessId : tm.mysql.bigIntSigned(),\n        businessTypeId : tm.mysql.bigIntSigned(),\n        fileTypeId : tm.mysql.bigIntSigned(),\n        createdAt : tm.mysql.dateTime(),\n    })\n    .setPrimaryKey(c => [c.businessId, c.fileTypeId])\n    .addExplicitDefaultValue(c => [c.createdAt])\n    .removeAllMutable();\n\nexport const business = table(\"business\")\n    .addColumns({\n        appId : tm.mysql.bigIntSigned(),\n        businessId : tm.mysql.bigIntSigned(),\n        externalUserId : tm.mysql.varChar(),\n    })\n    .setAutoIncrement(c => c.businessId)\n    //.addExplicitDefaultValue(c => [c.createdAt])\n    .removeAllMutable();\n\nbusinessFile.candidateKeys\ntype ca = LatestOrderColumnAlias<typeof businessFile, typeof businessFileType>;\ntype cm = LatestOrderColumnMap<typeof businessFile, typeof businessFileType>;\n\nconst businessFileLog = log(\n    {\n        logTable : businessFile,\n        ownerTable : businessFileType\n    },\n    columns => columns.updatedAt.desc(),\n    columns => [columns.awsS3PresignedUploadId]\n).setDoNotCopy(\n    columns => [columns.updatedByExternalUserId]\n).setCopyDefaults(({ownerPrimaryKey, connection}) => {\n    return business.fetchOneByPrimaryKey(\n        connection,\n        ownerPrimaryKey,\n        c => [c.appId, c.externalUserId]\n    );\n}).setTrackedDefaults({\n    awsS3PresignedUploadId : 1n\n});\nbusinessFileLog.setDoNotCopy(columns => [])\n*/\n//# sourceMappingURL=00-log.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _02_set_latest_order_1 = require(\"./02-set-latest-order\");\nclass LogMustSetOwner {\n    constructor(data) {\n        this.logTable = data.logTable;\n    }\n    setOwner(ownerTable) {\n        return new _02_set_latest_order_1.LogMustSetLatestOrder({\n            logTable: this.logTable,\n            ownerTable,\n        });\n    }\n}\nexports.LogMustSetOwner = LogMustSetOwner;\n//# sourceMappingURL=01-set-owner.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst key_1 = require(\"../../../key\");\nconst column_map_1 = require(\"../../../column-map\");\nconst column_identifier_map_1 = require(\"../../../column-identifier-map\");\nconst _03_set_tracked_1 = require(\"./03-set-tracked\");\nfunction latestOrderColumnAlias(data) {\n    const { logTable, ownerTable } = data;\n    const possibleColumnAliases = [\n        ...logTable.explicitDefaultValueColumns,\n        ...logTable.generatedColumns,\n    ];\n    const result = possibleColumnAliases.filter(columnAlias => key_1.KeyArrayUtil.hasKey(logTable.candidateKeys, [...ownerTable.primaryKey, columnAlias]));\n    return result;\n}\nexports.latestOrderColumnAlias = latestOrderColumnAlias;\nclass LogMustSetLatestOrder {\n    constructor(data) {\n        this.logTable = data.logTable;\n        this.ownerTable = data.ownerTable;\n    }\n    setLatestOrder(latestOrderDelegate) {\n        const latestOrderColumns = column_map_1.ColumnMapUtil.pick(this.logTable.columns, latestOrderColumnAlias(this));\n        const latestOrder = latestOrderDelegate(latestOrderColumns);\n        column_identifier_map_1.ColumnIdentifierMapUtil.assertHasColumnIdentifiers(latestOrderColumns, [latestOrder[0]]);\n        return new _03_set_tracked_1.LogMustSetTracked({\n            logTable: this.logTable,\n            ownerTable: this.ownerTable,\n            latestOrder,\n        });\n    }\n}\nexports.LogMustSetLatestOrder = LogMustSetLatestOrder;\n//# sourceMappingURL=02-set-latest-order.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_1 = require(\"../../../column\");\nconst column_map_1 = require(\"../../../column-map\");\nconst column_identifier_map_1 = require(\"../../../column-identifier-map\");\nconst _04_set_do_not_copy_1 = require(\"./04-set-do-not-copy\");\nclass LogMustSetTracked {\n    constructor(data) {\n        this.logTable = data.logTable;\n        this.ownerTable = data.ownerTable;\n        this.latestOrder = data.latestOrder;\n    }\n    setTracked(trackedDelegate) {\n        const trackedColumns = column_map_1.ColumnMapUtil.omit(this.logTable.columns, [\n            ...this.ownerTable.primaryKey,\n            ...this.logTable.generatedColumns,\n            this.latestOrder[0].columnAlias,\n        ]);\n        const tracked = trackedDelegate(trackedColumns);\n        column_identifier_map_1.ColumnIdentifierMapUtil.assertHasColumnIdentifiers(trackedColumns, tracked);\n        const invalidCopy = [\n            ...this.ownerTable.primaryKey,\n            ...this.logTable.generatedColumns,\n            ...(this.logTable.autoIncrement == undefined ?\n                [] :\n                [this.logTable.autoIncrement]),\n            this.latestOrder[0].columnAlias,\n            ...tracked.map(column => column.columnAlias),\n        ];\n        const copy = column_1.ColumnArrayUtil.fromColumnMap(this.logTable.columns)\n            .map(column => column.columnAlias)\n            .filter(columnAlias => {\n            return !invalidCopy.includes(columnAlias);\n        });\n        return new _04_set_do_not_copy_1.LogMustSetDoNotCopy({\n            logTable: this.logTable,\n            ownerTable: this.ownerTable,\n            latestOrder: this.latestOrder,\n            tracked: tracked.map(column => column.columnAlias),\n            copy: copy,\n        });\n    }\n}\nexports.LogMustSetTracked = LogMustSetTracked;\n//# sourceMappingURL=03-set-tracked.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_map_1 = require(\"../../../column-map\");\nconst column_identifier_map_1 = require(\"../../../column-identifier-map\");\nconst _06_set_tracked_defaults_1 = require(\"./06-set-tracked-defaults\");\nconst _05_set_copy_defaults_delegate_1 = require(\"./05-set-copy-defaults-delegate\");\nfunction setDoNotCopy(log, delegate) {\n    const columns = column_map_1.ColumnMapUtil.pick(log.logTable.columns, log.copy);\n    const doNotCopy = delegate(columns);\n    column_identifier_map_1.ColumnIdentifierMapUtil.assertHasColumnIdentifiers(columns, doNotCopy);\n    const { logTable, ownerTable, latestOrder, tracked, } = log;\n    const copy = log.copy\n        .filter((columnName) => {\n        return !doNotCopy.some(c => c.columnAlias == columnName);\n    });\n    if (copy.length == 0) {\n        const result = new _06_set_tracked_defaults_1.LogMustSetTrackedDefaults({\n            logTable,\n            ownerTable,\n            latestOrder,\n            tracked,\n            doNotCopy: doNotCopy.map(c => c.columnAlias),\n            copy,\n            copyDefaultsDelegate: () => Promise.resolve({}),\n        });\n        return result;\n    }\n    else {\n        const result = new _05_set_copy_defaults_delegate_1.LogMustSetCopyDefaultsDelegate({\n            logTable,\n            ownerTable,\n            latestOrder,\n            tracked,\n            doNotCopy: doNotCopy.map(c => c.columnAlias),\n            copy,\n        });\n        return result;\n    }\n}\nexports.setDoNotCopy = setDoNotCopy;\nclass LogMustSetDoNotCopy {\n    constructor(data) {\n        this.logTable = data.logTable;\n        this.ownerTable = data.ownerTable;\n        this.latestOrder = data.latestOrder;\n        this.tracked = data.tracked;\n        this.copy = data.copy;\n    }\n    setDoNotCopy(delegate) {\n        return setDoNotCopy(this, delegate);\n    }\n}\nexports.LogMustSetDoNotCopy = LogMustSetDoNotCopy;\n//# sourceMappingURL=04-set-do-not-copy.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_1 = require(\"../../../table\");\nconst primary_key_1 = require(\"../../../primary-key\");\nconst custom_expr_1 = require(\"../../../custom-expr\");\nconst used_ref_1 = require(\"../../../used-ref\");\nconst _06_set_tracked_defaults_1 = require(\"./06-set-tracked-defaults\");\nconst data_type_1 = require(\"../../../data-type\");\nfunction setCopyDefaultsDelegate(log, rawCopyDefaultsDelegate) {\n    /**\n     * Nothing is allowed\n     */\n    const allowedRef = used_ref_1.UsedRefUtil.fromColumnRef({});\n    const requiredColumnAliases = table_1.TableUtil.requiredColumnAlias(log.logTable)\n        .filter(columnName => (log.copy.indexOf(columnName) >= 0));\n    const optionalColumnAliases = table_1.TableUtil.optionalColumnAlias(log.logTable)\n        .filter(columnName => (log.copy.indexOf(columnName) >= 0));\n    const copyDefaults = async (args) => {\n        const customExprResult = await rawCopyDefaultsDelegate({\n            ...args,\n            ownerPrimaryKey: primary_key_1.PrimaryKeyUtil.mapper(log.ownerTable)(`${log.ownerTable.alias} PRIMARY KEY`, args.ownerPrimaryKey),\n        });\n        const valueExprResult = {};\n        for (const columnAlias of requiredColumnAliases) {\n            const customExpr = customExprResult[columnAlias];\n            if (customExpr === undefined) {\n                throw new Error(`Expected a value for ${log.logTable.alias}.${columnAlias}`);\n            }\n            const usedRef = custom_expr_1.CustomExprUtil.usedRef(customExpr);\n            used_ref_1.UsedRefUtil.assertAllowed(allowedRef, usedRef);\n            valueExprResult[columnAlias] = await data_type_1.DataTypeUtil.evaluateCustomExpr(log.logTable.columns[columnAlias], args.connection, customExpr);\n        }\n        for (const columnAlias of optionalColumnAliases) {\n            const customExpr = customExprResult[columnAlias];\n            if (customExpr === undefined) {\n                continue;\n            }\n            const usedRef = custom_expr_1.CustomExprUtil.usedRef(customExpr);\n            used_ref_1.UsedRefUtil.assertAllowed(allowedRef, usedRef);\n            valueExprResult[columnAlias] = await data_type_1.DataTypeUtil.evaluateCustomExpr(log.logTable.columns[columnAlias], args.connection, customExpr);\n        }\n        return valueExprResult;\n    };\n    const { logTable, ownerTable, latestOrder, tracked, doNotCopy, copy, } = log;\n    return new _06_set_tracked_defaults_1.LogMustSetTrackedDefaults({\n        logTable,\n        ownerTable,\n        latestOrder,\n        tracked,\n        doNotCopy,\n        copy,\n        copyDefaultsDelegate: copyDefaults,\n    });\n}\nexports.setCopyDefaultsDelegate = setCopyDefaultsDelegate;\nclass LogMustSetCopyDefaultsDelegate {\n    constructor(data) {\n        this.logTable = data.logTable;\n        this.ownerTable = data.ownerTable;\n        this.latestOrder = data.latestOrder;\n        this.tracked = data.tracked;\n        this.doNotCopy = data.doNotCopy;\n        this.copy = data.copy;\n    }\n    setCopyDefaults(rawCopyDefaultsDelegate) {\n        return setCopyDefaultsDelegate(this, rawCopyDefaultsDelegate);\n    }\n}\nexports.LogMustSetCopyDefaultsDelegate = LogMustSetCopyDefaultsDelegate;\n//# sourceMappingURL=05-set-copy-defaults-delegate.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst log_impl_1 = require(\"../../log-impl\");\nconst custom_expr_1 = require(\"../../../custom-expr\");\nfunction setTrackedDefaults(log, rawTrackedDefaults) {\n    const trackedDefaults = {};\n    for (const columnAlias of log.tracked) {\n        const customExpr = rawTrackedDefaults[columnAlias];\n        if (customExpr === undefined) {\n            continue;\n        }\n        const value = custom_expr_1.CustomExprUtil.mapNonCorrelated(log.logTable.columns[columnAlias], customExpr);\n        trackedDefaults[columnAlias] = value;\n    }\n    const { logTable, ownerTable, latestOrder, tracked, doNotCopy, copy, copyDefaultsDelegate, } = log;\n    return new log_impl_1.Log({\n        tracked,\n        doNotCopy,\n        copy,\n        trackedWithDefaultValue: Object.keys(trackedDefaults),\n        logTable,\n        ownerTable,\n        latestOrder,\n    }, {\n        copyDefaultsDelegate,\n        trackedDefaults,\n    });\n}\nexports.setTrackedDefaults = setTrackedDefaults;\nclass LogMustSetTrackedDefaults {\n    constructor(data) {\n        this.logTable = data.logTable;\n        this.ownerTable = data.ownerTable;\n        this.latestOrder = data.latestOrder;\n        this.tracked = data.tracked;\n        this.doNotCopy = data.doNotCopy;\n        this.copy = data.copy;\n        this.copyDefaultsDelegate = data.copyDefaultsDelegate;\n    }\n    setTrackedDefaults(rawTrackedDefaults) {\n        return setTrackedDefaults(this, rawTrackedDefaults);\n    }\n}\nexports.LogMustSetTrackedDefaults = LogMustSetTrackedDefaults;\n//# sourceMappingURL=06-set-tracked-defaults.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./00-log\"));\n__export(require(\"./01-set-owner\"));\n__export(require(\"./02-set-latest-order\"));\n__export(require(\"./03-set-tracked\"));\n__export(require(\"./04-set-do-not-copy\"));\n__export(require(\"./05-set-copy-defaults-delegate\"));\n__export(require(\"./06-set-tracked-defaults\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst unified_query_1 = require(\"../../../unified-query\");\nconst ExprLib = require(\"../../../expr-library\");\nfunction exists(log) {\n    return ExprLib.exists(unified_query_1.QueryUtil.newInstance()\n        .requireOuterQueryJoins(...[log.ownerTable])\n        .from(log.logTable)\n        .where(() => ExprLib.eqPrimaryKeyOfTable(log.logTable, log.ownerTable)));\n}\nexports.exists = exists;\n//# sourceMappingURL=exists.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./exists\"));\n__export(require(\"./latest-value-or-default\"));\n__export(require(\"./latest-value\"));\n__export(require(\"./latest\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst ExprLib = require(\"../../../expr-library\");\nconst exists_1 = require(\"./exists\");\nconst column_map_1 = require(\"../../../column-map\");\nconst column_identifier_map_1 = require(\"../../../column-identifier-map\");\nconst latest_1 = require(\"./latest\");\nfunction latestValueOrDefault(log, selectValueDelegate) {\n    const columns = column_map_1.ColumnMapUtil.pick(log.logTable.columns, log.trackedWithDefaultValue);\n    const column = selectValueDelegate(columns);\n    column_identifier_map_1.ColumnIdentifierMapUtil.assertHasColumnIdentifier(columns, column);\n    if (tm.canOutputNull(column.mapper)) {\n        /**\n         * It is possible for a row to exist but the value is `NULL`.\n         * Especially when the column is nullable.\n         */\n        return ExprLib.if(exists_1.exists(log), latest_1.latest(log)\n            .selectValue(() => column), log.trackedDefaults[column.columnAlias]);\n    }\n    else {\n        /**\n         * Column is not nullable, we should never have `NULL`\n         * unless it's because a row does not exist.\n         */\n        return ExprLib.coalesce(latest_1.latest(log)\n            .selectValue(() => column), log.trackedDefaults[column.columnAlias]);\n    }\n}\nexports.latestValueOrDefault = latestValueOrDefault;\n//# sourceMappingURL=latest-value-or-default.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst latest_1 = require(\"./latest\");\nconst expr_1 = require(\"../../../expr\");\nfunction latestValue(log, selectValueDelegate) {\n    return expr_1.ExprUtil.fromBuiltInExpr(latest_1.latest(log)\n        .selectValue(selectValueDelegate));\n}\nexports.latestValue = latestValue;\n//# sourceMappingURL=latest-value.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst unified_query_1 = require(\"../../../unified-query\");\nconst ExprLib = require(\"../../../expr-library\");\nfunction latest(log) {\n    return unified_query_1.QueryUtil.newInstance()\n        .requireOuterQueryJoins(...[log.ownerTable])\n        .from(log.logTable)\n        .where(() => ExprLib.eqPrimaryKeyOfTable(log.logTable, log.ownerTable))\n        .orderBy(() => [log.latestOrder])\n        .limit(1);\n}\nexports.latest = latest;\n//# sourceMappingURL=latest.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst unified_query_1 = require(\"../../../unified-query\");\nconst primary_key_1 = require(\"../../../primary-key\");\nconst ExprLib = require(\"../../../expr-library\");\nasync function exists(log, connection, primaryKey) {\n    primaryKey = primary_key_1.PrimaryKeyUtil.mapper(log.ownerTable)(`${log.ownerTable.alias} PRIMARY KEY`, primaryKey);\n    return unified_query_1.QueryUtil.newInstance()\n        .from(log.logTable)\n        .where(() => ExprLib.eqColumns(log.logTable, primaryKey))\n        .exists(connection);\n}\nexports.exists = exists;\n//# sourceMappingURL=exists.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst execution_1 = require(\"../../../execution\");\nconst primary_key_1 = require(\"../../../primary-key\");\nconst table_1 = require(\"../../../table\");\nconst ExprLib = require(\"../../../expr-library\");\nconst unified_query_1 = require(\"../../../unified-query\");\nconst key_1 = require(\"../../../key\");\nconst expr_1 = require(\"../../../expr\");\nconst built_in_expr_1 = require(\"../../../built-in-expr\");\nconst isolation_level_1 = require(\"../../../isolation-level\");\nfunction assertAllTrackedHasDefaultValue(log) {\n    if (!key_1.KeyUtil.isEqual(log.tracked, log.trackedWithDefaultValue)) {\n        throw new Error(`Not all tracked columns have a default value`);\n    }\n}\nexports.assertAllTrackedHasDefaultValue = assertAllTrackedHasDefaultValue;\nasync function fetchDefault(log, // & AssertAllTrackedHasDefaultValue<LogT>,\nconnection, primaryKey) {\n    //assertAllTrackedHasDefaultValue(log);\n    primaryKey = primary_key_1.PrimaryKeyUtil.mapper(log.ownerTable)(`${log.ownerTable.alias} PRIMARY KEY`, primaryKey);\n    return connection.readOnlyTransactionIfNotInOne(isolation_level_1.IsolationLevel.REPEATABLE_READ, async (connection) => {\n        //If the owner does not exist, there is no default value\n        await table_1.TableUtil.assertExists(log.ownerTable, connection, () => ExprLib.eqPrimaryKey(log.ownerTable, primaryKey));\n        const copyDefaults = await log.copyDefaultsDelegate({\n            ownerPrimaryKey: primaryKey,\n            connection,\n        });\n        const trackedColumnAliases = Object.keys(log.trackedDefaults);\n        const selectClause = trackedColumnAliases.map((trackedColumnAlias) => {\n            const rawExprNoUsedRef = log.trackedDefaults[trackedColumnAlias];\n            return expr_1.ExprUtil.fromBuiltInExpr(built_in_expr_1.BuiltInExprUtil.fromValueExpr(log.logTable.columns[trackedColumnAlias], rawExprNoUsedRef)).as(trackedColumnAlias);\n        });\n        const trackedDefaults = await execution_1.ExecutionUtil.fetchOne(unified_query_1.QueryUtil.newInstance()\n            .select(() => selectClause), connection);\n        return {\n            ...copyDefaults,\n            ...trackedDefaults,\n            ...primaryKey,\n        };\n    });\n}\nexports.fetchDefault = fetchDefault;\n//# sourceMappingURL=fetch-default.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fetch_default_1 = require(\"./fetch-default\");\nconst fetch_latest_1 = require(\"./fetch-latest\");\nconst isolation_level_1 = require(\"../../../isolation-level\");\nasync function fetchLatestOrDefault(log, connection, primaryKey) {\n    return connection.readOnlyTransactionIfNotInOne(isolation_level_1.IsolationLevel.REPEATABLE_READ, async (connection) => {\n        const latestOrUndefined = await fetch_latest_1.fetchLatest(log, connection, primaryKey).orUndefined();\n        if (latestOrUndefined != undefined) {\n            return {\n                isDefault: false,\n                row: latestOrUndefined,\n            };\n        }\n        return fetch_default_1.fetchDefault(log, connection, primaryKey)\n            .then((def) => {\n            return {\n                isDefault: true,\n                row: def,\n            };\n        });\n    });\n}\nexports.fetchLatestOrDefault = fetchLatestOrDefault;\n//# sourceMappingURL=fetch-latest-or-default.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fetch_latest_value_1 = require(\"./fetch-latest-value\");\nconst column_map_1 = require(\"../../../column-map\");\nconst table_1 = require(\"../../../table\");\nconst ExprLib = require(\"../../../expr-library\");\nconst column_identifier_map_1 = require(\"../../../column-identifier-map\");\nconst data_type_1 = require(\"../../../data-type\");\nconst isolation_level_1 = require(\"../../../isolation-level\");\nasync function fetchLatestValueOrDefault(log, connection, primaryKey, selectValueDelegate) {\n    const columns = column_map_1.ColumnMapUtil.pick(log.logTable.columns, log.trackedWithDefaultValue);\n    const column = selectValueDelegate(columns);\n    column_identifier_map_1.ColumnIdentifierMapUtil.assertHasColumnIdentifier(columns, column);\n    const latestValueOrUndefined = await fetch_latest_value_1.fetchLatestValue(log, connection, primaryKey, () => column).orUndefined();\n    if (latestValueOrUndefined !== undefined) {\n        return latestValueOrUndefined;\n    }\n    return connection.readOnlyTransactionIfNotInOne(isolation_level_1.IsolationLevel.REPEATABLE_READ, async (connection) => {\n        //If the owner does not exist, there is no default value\n        await table_1.TableUtil.assertExists(log.ownerTable, connection, () => ExprLib.eqPrimaryKey(log.ownerTable, primaryKey));\n        return data_type_1.DataTypeUtil.evaluateCustomExpr(log.logTable.columns[column.columnAlias], connection, log.trackedDefaults[column.columnAlias]);\n    });\n}\nexports.fetchLatestValueOrDefault = fetchLatestValueOrDefault;\n//# sourceMappingURL=fetch-latest-value-or-default.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst latest_by_primary_key_1 = require(\"./latest-by-primary-key\");\nfunction fetchLatestValue(log, connection, primaryKey, selectValueDelegate) {\n    const result = latest_by_primary_key_1.latestByPrimaryKey(log, primaryKey)\n        .selectValue(selectValueDelegate)\n        .fetchValue(connection);\n    return result;\n}\nexports.fetchLatestValue = fetchLatestValue;\n//# sourceMappingURL=fetch-latest-value.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst latest_by_primary_key_1 = require(\"./latest-by-primary-key\");\nfunction fetchLatest(log, connection, primaryKey) {\n    const result = latest_by_primary_key_1.latestByPrimaryKey(log, primaryKey)\n        .select(((columns) => [columns]))\n        .fetchOne(connection);\n    return result;\n}\nexports.fetchLatest = fetchLatest;\n//# sourceMappingURL=fetch-latest.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./exists\"));\n__export(require(\"./fetch-default\"));\n__export(require(\"./fetch-latest-or-default\"));\n__export(require(\"./fetch-latest-value-or-default\"));\n__export(require(\"./fetch-latest-value\"));\n__export(require(\"./fetch-latest\"));\n__export(require(\"./latest-by-primary-key\"));\n__export(require(\"./track-or-insert\"));\n__export(require(\"./track\"));\n__export(require(\"./unsafe-track\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst unified_query_1 = require(\"../../../unified-query\");\nconst primary_key_1 = require(\"../../../primary-key\");\nconst ExprLib = require(\"../../../expr-library\");\nfunction latestByPrimaryKey(log, primaryKey) {\n    primaryKey = primary_key_1.PrimaryKeyUtil.mapper(log.ownerTable)(`${log.ownerTable.alias} PRIMARY KEY`, primaryKey);\n    return unified_query_1.QueryUtil.newInstance()\n        .from(log.logTable)\n        .where(() => ExprLib.eqColumns(log.logTable, primaryKey))\n        .orderBy(() => [log.latestOrder])\n        .limit(1);\n}\nexports.latestByPrimaryKey = latestByPrimaryKey;\n//# sourceMappingURL=latest-by-primary-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst unsafe_track_1 = require(\"./unsafe-track\");\nasync function trackOrInsert(log, connection, primaryKey, trackOrInsertRow) {\n    return unsafe_track_1.unsafeTrack(log, connection, primaryKey, trackOrInsertRow);\n}\nexports.trackOrInsert = trackOrInsert;\n//# sourceMappingURL=track-or-insert.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fetch_default_1 = require(\"./fetch-default\");\nconst unsafe_track_1 = require(\"./unsafe-track\");\nasync function track(log, connection, primaryKey, trackRow) {\n    fetch_default_1.assertAllTrackedHasDefaultValue(log);\n    return unsafe_track_1.unsafeTrack(log, connection, primaryKey, trackRow);\n}\nexports.track = track;\n//# sourceMappingURL=track.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst execution_1 = require(\"../../../execution\");\nconst table_1 = require(\"../../../table\");\nconst fetch_latest_or_default_1 = require(\"./fetch-latest-or-default\");\nconst sqlstring_1 = require(\"../../../sqlstring\");\nconst data_type_1 = require(\"../../../data-type\");\nconst built_in_expr_1 = require(\"../../../built-in-expr\");\nconst isolation_level_1 = require(\"../../../isolation-level\");\nasync function toInsertRow(log, connection, prvRow, newRow) {\n    const result = {};\n    /**\n     * Copy `prvRow`'s primary key\n     */\n    for (const primaryKeyColumnAlias of log.ownerTable.primaryKey) {\n        const prvValueExpr = prvRow[primaryKeyColumnAlias];\n        result[primaryKeyColumnAlias] = built_in_expr_1.BuiltInExprUtil.fromValueExpr(log.logTable.columns[primaryKeyColumnAlias], prvValueExpr);\n    }\n    /**\n     * Copy all `tracked` values, if no new value is provided.\n     */\n    let changed = false;\n    for (const trackedColumnAlias of log.tracked) {\n        const newCustomExpr = newRow[trackedColumnAlias];\n        const prvValueExpr = prvRow[trackedColumnAlias];\n        if (newCustomExpr === undefined) {\n            if (prvValueExpr === undefined) {\n                throw new Error(`No new or previous value for ${sqlstring_1.escapeIdentifierWithDoubleQuotes(log.logTable.alias)}.${sqlstring_1.escapeIdentifierWithDoubleQuotes(trackedColumnAlias)} was found`);\n            }\n            else {\n                /**\n                 * Use the previous value, since we don't have a new value.\n                 */\n                result[trackedColumnAlias] = built_in_expr_1.BuiltInExprUtil.fromValueExpr(log.logTable.columns[trackedColumnAlias], prvValueExpr);\n            }\n        }\n        else {\n            const newValueExpr = await data_type_1.DataTypeUtil.evaluateCustomExpr(log.logTable.columns[trackedColumnAlias], connection, newCustomExpr);\n            result[trackedColumnAlias] = newValueExpr;\n            if (!data_type_1.DataTypeUtil.isNullSafeEqual(log.logTable.columns[trackedColumnAlias].mapper, newValueExpr, prvValueExpr)) {\n                /**\n                 * New value is used, we consider this a change.\n                 */\n                changed = true;\n            }\n        }\n    }\n    /**\n     * We expect new values for all required `doNotCopy` columns\n     */\n    for (const doNotCopyColumnAlias of log.doNotCopy) {\n        const newCustomExpr = newRow[doNotCopyColumnAlias];\n        if (newCustomExpr === undefined) {\n            if (table_1.TableUtil.isRequiredColumnAlias(log.logTable, doNotCopyColumnAlias)) {\n                throw new Error(`Expected a new value for ${sqlstring_1.escapeIdentifierWithDoubleQuotes(log.logTable.alias)}.${sqlstring_1.escapeIdentifierWithDoubleQuotes(doNotCopyColumnAlias)}`);\n            }\n            else {\n                continue;\n            }\n        }\n        const newValueExpr = await data_type_1.DataTypeUtil.evaluateCustomExpr(log.logTable.columns[doNotCopyColumnAlias], connection, newCustomExpr);\n        result[doNotCopyColumnAlias] = newValueExpr;\n    }\n    /**\n     * Copy the previous row's `copy`\n     */\n    for (const copyColumnAlias of log.copy) {\n        const prvValueExpr = prvRow[copyColumnAlias];\n        result[copyColumnAlias] = built_in_expr_1.BuiltInExprUtil.fromValueExpr(log.logTable.columns[copyColumnAlias], prvValueExpr);\n    }\n    return {\n        changed,\n        insertRow: result,\n    };\n}\n/**\n * Allows `tracked` columns without default values to be unset.\n * However, this comes with the risk of run-time errors, if no previous row is found.\n */\nasync function unsafeTrack(log, connection, primaryKey, unsafeTrackRow) {\n    return connection.transactionIfNotInOne(isolation_level_1.IsolationLevel.REPEATABLE_READ, async (connection) => {\n        const latestOrDefault = await fetch_latest_or_default_1.fetchLatestOrDefault(log, connection, primaryKey);\n        const { changed, insertRow } = await toInsertRow(log, connection, latestOrDefault.row, unsafeTrackRow);\n        if (changed) {\n            return {\n                changed,\n                previous: latestOrDefault,\n                current: await execution_1.ExecutionUtil.insertAndFetch(log.logTable, connection, insertRow),\n            };\n        }\n        else {\n            return {\n                changed,\n                previous: latestOrDefault,\n            };\n        }\n    });\n}\nexports.unsafeTrack = unsafeTrack;\n//# sourceMappingURL=unsafe-track.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./constructor\"));\n__export(require(\"./execution\"));\n//export * from \"./operation\";\nconst CorrelatedSubquery = require(\"./correlated-subquery\");\nexports.CorrelatedSubquery = CorrelatedSubquery;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./table-per-type-impl\"));\nconst TablePerTypeUtil = require(\"./util\");\nexports.TablePerTypeUtil = TablePerTypeUtil;\nexports.tablePerType = TablePerTypeUtil.tablePerType;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst TablePerTypeUtil = require(\"./util\");\nconst ExprLib = require(\"../expr-library\");\nclass TablePerType {\n    constructor(data, joins) {\n        this.childTable = data.childTable;\n        this.parentTables = data.parentTables;\n        this.autoIncrement = data.autoIncrement;\n        this.explicitAutoIncrementValueEnabled = data.explicitAutoIncrementValueEnabled;\n        this.insertAndFetchPrimaryKey = data.insertAndFetchPrimaryKey;\n        this.joins = joins;\n    }\n    addParent(parentTable) {\n        return TablePerTypeUtil.addParent(this, parentTable);\n    }\n    fetchOne(connection, whereDelegate) {\n        return TablePerTypeUtil.fetchOne(this, connection, whereDelegate);\n    }\n    fetchOneByCandidateKey(connection, candidateKey) {\n        return TablePerTypeUtil.fetchOneByCandidateKey(this, connection, candidateKey);\n    }\n    fetchOneByPrimaryKey(connection, primaryKey) {\n        return TablePerTypeUtil.fetchOneByPrimaryKey(this, connection, primaryKey);\n    }\n    fetchOneBySuperKey(connection, superKey) {\n        return TablePerTypeUtil.fetchOneBySuperKey(this, connection, superKey);\n    }\n    insertAndFetch(connection, row) {\n        return TablePerTypeUtil.insertAndFetch(this, connection, row);\n    }\n    updateAndFetchOneByCandidateKey(connection, \n    /**\n     * @todo Try and recall why I wanted `AssertNonUnion<>`\n     * I didn't write compile-time tests for it...\n     */\n    candidateKey, // & AssertNonUnion<CandidateKeyT>,\n    assignmentMapDelegate) {\n        return TablePerTypeUtil.updateAndFetchOneByCandidateKey(this, connection, candidateKey, assignmentMapDelegate);\n    }\n    updateAndFetchOneByPrimaryKey(connection, primaryKey, assignmentMapDelegate) {\n        return TablePerTypeUtil.updateAndFetchOneByPrimaryKey(this, connection, primaryKey, assignmentMapDelegate);\n    }\n    updateAndFetchOneBySuperKey(connection, superKey, assignmentMapDelegate) {\n        return TablePerTypeUtil.updateAndFetchOneBySuperKey(this, connection, superKey, assignmentMapDelegate);\n    }\n    updateAndFetchZeroOrOneByCandidateKey(connection, \n    /**\n     * @todo Try and recall why I wanted `AssertNonUnion<>`\n     * I didn't write compile-time tests for it...\n     */\n    candidateKey, // & AssertNonUnion<CandidateKeyT>,\n    assignmentMapDelegate) {\n        return TablePerTypeUtil.updateAndFetchZeroOrOneByCandidateKey(this, connection, candidateKey, assignmentMapDelegate);\n    }\n    updateAndFetchZeroOrOneByPrimaryKey(connection, primaryKey, assignmentMapDelegate) {\n        return TablePerTypeUtil.updateAndFetchZeroOrOneByPrimaryKey(this, connection, primaryKey, assignmentMapDelegate);\n    }\n    updateAndFetchZeroOrOneBySuperKey(connection, superKey, assignmentMapDelegate) {\n        return TablePerTypeUtil.updateAndFetchZeroOrOneBySuperKey(this, connection, superKey, assignmentMapDelegate);\n    }\n    deleteOneByCandidateKey(connection, \n    /**\n     * @todo Try and recall why I wanted `AssertNonUnion<>`\n     * I didn't write compile-time tests for it...\n     */\n    candidateKey) {\n        return TablePerTypeUtil.deleteOneByCandidateKey(this, connection, candidateKey);\n    }\n    deleteOneByPrimaryKey(connection, primaryKey) {\n        return TablePerTypeUtil.deleteOneByPrimaryKey(this, connection, primaryKey);\n    }\n    deleteOneBySuperKey(connection, superKey) {\n        return TablePerTypeUtil.deleteOneBySuperKey(this, connection, superKey);\n    }\n    deleteZeroOrOneByCandidateKey(connection, \n    /**\n     * @todo Try and recall why I wanted `AssertNonUnion<>`\n     * I didn't write compile-time tests for it...\n     */\n    candidateKey) {\n        return TablePerTypeUtil.deleteZeroOrOneByCandidateKey(this, connection, candidateKey);\n    }\n    deleteZeroOrOneByPrimaryKey(connection, primaryKey) {\n        return TablePerTypeUtil.deleteZeroOrOneByPrimaryKey(this, connection, primaryKey);\n    }\n    deleteZeroOrOneBySuperKey(connection, superKey) {\n        return TablePerTypeUtil.deleteZeroOrOneBySuperKey(this, connection, superKey);\n    }\n    existsByCandidateKey(connection, \n    /**\n     * @todo Try and recall why I wanted `AssertNonUnion<>`\n     * I didn't write compile-time tests for it...\n     */\n    candidateKey) {\n        return TablePerTypeUtil.existsImpl(this, connection, () => ExprLib.eqCandidateKey(this.childTable, candidateKey)).then(result => result.exists);\n    }\n    existsByPrimaryKey(connection, primaryKey) {\n        return TablePerTypeUtil.existsImpl(this, connection, () => ExprLib.eqPrimaryKey(this.childTable, primaryKey)).then(result => result.exists);\n    }\n    existsBySuperKey(connection, superKey) {\n        return TablePerTypeUtil.existsImpl(this, connection, () => TablePerTypeUtil.eqSuperKey(this, superKey)).then(result => result.exists);\n    }\n    assertExistsByCandidateKey(connection, \n    /**\n     * @todo Try and recall why I wanted `AssertNonUnion<>`\n     * I didn't write compile-time tests for it...\n     */\n    candidateKey) {\n        return TablePerTypeUtil.assertExistsImpl(this, connection, () => ExprLib.eqCandidateKey(this.childTable, candidateKey));\n    }\n    assertExistsByPrimaryKey(connection, primaryKey) {\n        return TablePerTypeUtil.assertExistsImpl(this, connection, () => ExprLib.eqPrimaryKey(this.childTable, primaryKey));\n    }\n    assertExistsBySuperKey(connection, superKey) {\n        return TablePerTypeUtil.assertExistsImpl(this, connection, () => TablePerTypeUtil.eqSuperKey(this, superKey));\n    }\n}\nexports.TablePerType = TablePerType;\n//# sourceMappingURL=table-per-type-impl.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./table-per-type\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_per_type_impl_1 = require(\"../../table-per-type-impl\");\nconst query_1 = require(\"../query\");\nfunction tablePerType(childTable) {\n    return new table_per_type_impl_1.TablePerType({\n        childTable,\n        parentTables: [],\n        autoIncrement: query_1.extractAutoIncrement(childTable),\n        explicitAutoIncrementValueEnabled: query_1.extractExplicitAutoIncrementValueEnabled(childTable),\n        insertAndFetchPrimaryKey: query_1.extractInsertAndFetchPrimaryKey(childTable),\n    }, []);\n}\nexports.tablePerType = tablePerType;\n//# sourceMappingURL=table-per-type.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_in_expr_1 = require(\"../../../built-in-expr\");\nconst data_type_1 = require(\"../../../data-type\");\n/**\n * @todo Better name\n *\n * Adds properties from `row` to `result`.\n *\n * If a property from `row` already exists on `result`,\n * we use `table` to check if the values on both objects are equal.\n *\n * If they are not equal, an `Error` is thrown.\n */\nfunction absorbRow(result, table, row) {\n    for (const columnAlias of Object.keys(row)) {\n        /**\n         * This is guaranteed to be a value expression.\n         */\n        const newValue = row[columnAlias];\n        if (Object.prototype.hasOwnProperty.call(result, columnAlias)) {\n            /**\n             * This `curValue` could be a non-value expression.\n             * We only want value expressions.\n             */\n            const curValue = result[columnAlias];\n            if (built_in_expr_1.BuiltInExprUtil.isAnyNonValueExpr(curValue)) {\n                /**\n                 * Add this new value to the `result`\n                 * so we can use it to update rows of tables\n                 * further down the inheritance hierarchy.\n                 */\n                result[columnAlias] = newValue;\n                continue;\n            }\n            if (curValue === newValue) {\n                /**\n                 * They are equal, do nothing.\n                 */\n                continue;\n            }\n            /**\n             * We need some custom equality checking logic\n             */\n            if (!data_type_1.DataTypeUtil.isNullSafeEqual(table.columns[columnAlias], \n            /**\n             * This may throw\n             */\n            table.columns[columnAlias].mapper(`${table.alias}.${columnAlias}`, curValue), newValue)) {\n                /**\n                 * @todo Custom `Error` type\n                 */\n                throw new Error(`All columns with the same name in an inheritance hierarchy must have the same value; mismatch found for ${table.alias}.${columnAlias}`);\n            }\n        }\n        else {\n            /**\n             * Add this new value to the `result`\n             * so we can use it to update rows of tables\n             * further down the inheritance hierarchy.\n             */\n            result[columnAlias] = newValue;\n        }\n    }\n}\nexports.absorbRow = absorbRow;\n//# sourceMappingURL=absorb-row.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst execution_1 = require(\"../../../execution\");\nconst from_1 = require(\"./from\");\nasync function assertExistsImpl(tpt, connection, whereDelegate) {\n    return execution_1.ExecutionUtil.assertExists(from_1.from(tpt)\n        .where(whereDelegate), connection);\n}\nexports.assertExistsImpl = assertExistsImpl;\n//# sourceMappingURL=assert-exists-impl.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst execution_1 = require(\"../../../execution\");\nconst query_1 = require(\"../query\");\nconst ExprLib = require(\"../../../expr-library\");\nconst execution_impl_1 = require(\"../execution-impl\");\nconst isolation_level_1 = require(\"../../../isolation-level\");\nasync function deleteOneImpl(tpt, connection, whereDelegate) {\n    /**\n     * @todo Add `assertDeletable()` or something\n     */\n    /**\n     * Using `SERIALIZABLE` because it's possible for a different transaction to\n     * `UPDATE` primary key values between the `fetchOne()` and multiple `deleteOne()` calls.\n     */\n    return connection.transactionIfNotInOne(isolation_level_1.IsolationLevel.SERIALIZABLE, async (connection) => {\n        return connection.savepoint(async (connection) => {\n            const primaryKeys = await execution_1.ExecutionUtil.fetchOne(execution_impl_1.from(tpt)\n                .where(whereDelegate)\n                .select(() => query_1.primaryKeyColumnAliases(tpt).map(columnAlias => {\n                const table = query_1.findTableWithColumnAlias(tpt, columnAlias);\n                return table.columns[columnAlias];\n            })), connection);\n            const deleteChildResult = await execution_1.ExecutionUtil.deleteOne(tpt.childTable, connection, () => ExprLib.eqPrimaryKey(tpt.childTable, primaryKeys));\n            const deleteOneResults = [\n                {\n                    ...deleteChildResult,\n                    table: tpt.childTable,\n                },\n            ];\n            let deletedRowCount = deleteChildResult.deletedRowCount;\n            let warningCount = deleteChildResult.warningCount;\n            /**\n             * We use `.reverse()` here to `DELETE` the parents\n             * as we go up the inheritance hierarchy.\n             */\n            for (const parentTable of [...tpt.parentTables].reverse()) {\n                const deleteParentResult = await execution_1.ExecutionUtil.deleteOne(parentTable, connection, () => ExprLib.eqPrimaryKey(parentTable, primaryKeys));\n                deleteOneResults.push({\n                    ...deleteParentResult,\n                    table: parentTable,\n                });\n                deletedRowCount = tm.BigIntUtil.add(deletedRowCount, deleteParentResult.deletedRowCount);\n                warningCount = tm.BigIntUtil.add(warningCount, deleteParentResult.warningCount);\n            }\n            return {\n                deleteOneResults,\n                deletedRowCount,\n                warningCount,\n            };\n        });\n    });\n}\nexports.deleteOneImpl = deleteOneImpl;\n//# sourceMappingURL=delete-one-impl.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst delete_one_impl_1 = require(\"./delete-one-impl\");\nconst exists_impl_1 = require(\"./exists-impl\");\nconst isolation_level_1 = require(\"../../../isolation-level\");\nasync function deleteZeroOrOneImpl(tpt, connection, whereDelegate) {\n    /**\n     * @todo Add `assertDeletable()` or something\n     */\n    /**\n     * `SERIALIZABLE` because it uses `deleteOneImpl()`, which uses `SERIALIZABLE`\n     */\n    return connection.transactionIfNotInOne(isolation_level_1.IsolationLevel.SERIALIZABLE, async (connection) => {\n        const existsResult = await exists_impl_1.existsImpl(tpt, connection, whereDelegate);\n        if (!existsResult.exists) {\n            return {\n                /**\n                 * Used as a discriminant.\n                 */\n                deleteOneResults: undefined,\n                query: { sql: existsResult.sql },\n                //Alias for affectedRows\n                deletedRowCount: tm.BigInt(0),\n                /**\n                 * @todo MySQL sometimes gives a `warningCount` value `> 0` for\n                 * `DELETE` statements. Recall why.\n                 */\n                warningCount: tm.BigInt(0),\n                /**\n                 * An arbitrary message.\n                 * May be an empty string.\n                 */\n                message: \"\",\n            };\n        }\n        return delete_one_impl_1.deleteOneImpl(tpt, connection, whereDelegate);\n    });\n}\nexports.deleteZeroOrOneImpl = deleteZeroOrOneImpl;\n//# sourceMappingURL=delete-zero-or-one-impl.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst execution_1 = require(\"../../../execution\");\nconst from_1 = require(\"./from\");\nasync function existsImpl(tpt, connection, whereDelegate) {\n    return execution_1.ExecutionUtil.existsImpl(from_1.from(tpt)\n        .where(whereDelegate), connection);\n}\nexports.existsImpl = existsImpl;\n//# sourceMappingURL=exists-impl.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ExecutionImpl = require(\"../../../execution/util/operation/impl\");\nconst unified_query_1 = require(\"../../../unified-query\");\nconst query_1 = require(\"../query\");\nconst from_1 = require(\"./from\");\nconst data_type_1 = require(\"../../../data-type\");\nfunction cleanFetchedRow(tpt, rawRow) {\n    const cleanRow = {};\n    for (const columnAlias of query_1.columnAliases(tpt)) {\n        const tables = query_1.extractAllTablesWithColumnAlias(tpt, columnAlias);\n        for (let i = 0; i < tables.length; ++i) {\n            const table = tables[i];\n            const value = rawRow[table.alias][columnAlias];\n            for (let j = i + 1; j < tables.length; ++j) {\n                const otherTable = tables[j];\n                const otherValue = rawRow[otherTable.alias][columnAlias];\n                if (!data_type_1.DataTypeUtil.isNullSafeEqual(table.columns[columnAlias], value, \n                /**\n                 * This may throw\n                 */\n                table.columns[columnAlias].mapper(`(${otherTable.alias}->${table.alias}).${columnAlias}`, otherValue))) {\n                    /**\n                     * @todo Custom Error type\n                     */\n                    throw new Error(`Expected ${table.alias}.${columnAlias} and ${otherTable.alias}.${columnAlias} to have the same value`);\n                }\n                if (!data_type_1.DataTypeUtil.isNullSafeEqual(otherTable.columns[columnAlias], otherValue, \n                /**\n                 * This may throw\n                 */\n                otherTable.columns[columnAlias].mapper(`(${table.alias}->${otherTable.alias}).${columnAlias}`, value))) {\n                    /**\n                     * @todo Custom Error type\n                     */\n                    throw new Error(`Expected ${otherTable.alias}.${columnAlias} and ${table.alias}.${columnAlias} to have the same value`);\n                }\n            }\n        }\n        //If we are here, then it doesn't matter which value of `columnAlias` we use.\n        cleanRow[columnAlias] = rawRow[tables[0].alias][columnAlias];\n    }\n    return cleanRow;\n}\n/**\n * + Assumes `parentTables` has no duplicates.\n * + Assumes `childTable` is not in `parentTables`.\n * + Assumes any shared `columnAlias` between tables **must** have the same value.\n * + Assumes `joins` represents a valid inheritance graph.\n */\nfunction fetchOneImpl(tpt, connection, whereDelegate) {\n    try {\n        if (tpt.parentTables.length == 0) {\n            return ExecutionImpl.fetchOneImpl(unified_query_1.QueryUtil.newInstance()\n                .from(tpt.childTable)\n                .where(whereDelegate)\n                .select(columns => [columns]), connection);\n        }\n        const query = from_1.from(tpt)\n            .where(whereDelegate)\n            .select(columns => [columns]);\n        const limitedQuery = ExecutionImpl.trySetLimit2(query);\n        const fetchLimit2Promise = ExecutionImpl.fetchAllImpl(limitedQuery, connection);\n        const result = fetchLimit2Promise.then((fetched) => {\n            const rawRow = ExecutionImpl.ensureOne(limitedQuery, fetched);\n            return {\n                sql: fetched.sql,\n                row: cleanFetchedRow(tpt, rawRow),\n            };\n        });\n        //eslint-disable-next-line @typescript-eslint/unbound-method\n        result.or = (defaultValue) => {\n            //To avoid `unhandled rejection` warnings\n            result.catch(() => { });\n            return fetchLimit2Promise\n                .then((fetched) => {\n                const rawRowOrDefaultValue = ExecutionImpl.ensureOneOr(limitedQuery, fetched, defaultValue);\n                return {\n                    sql: fetched.sql,\n                    row: (rawRowOrDefaultValue === defaultValue ?\n                        defaultValue :\n                        cleanFetchedRow(tpt, rawRowOrDefaultValue)),\n                };\n            });\n        };\n        //eslint-disable-next-line @typescript-eslint/unbound-method\n        result.orUndefined = () => {\n            return result.or(undefined);\n        };\n        return result;\n    }\n    catch (err) {\n        const result = Promise.reject(err);\n        //eslint-disable-next-line @typescript-eslint/unbound-method\n        result.or = () => {\n            //To avoid `unhandled rejection` warnings\n            result.catch(() => { });\n            return Promise.reject(err);\n        };\n        //eslint-disable-next-line @typescript-eslint/unbound-method\n        result.orUndefined = () => {\n            //To avoid `unhandled rejection` warnings\n            result.catch(() => { });\n            return Promise.reject(err);\n        };\n        return result;\n    }\n}\nexports.fetchOneImpl = fetchOneImpl;\n//# sourceMappingURL=fetch-one-impl.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst unified_query_1 = require(\"../../../unified-query\");\nconst query_1 = require(\"../query\");\n/**\n * This is used to implement a more efficient `fetchOne` operation.\n *\n * + Assumes `parentTables` has no duplicates.\n * + Assumes `childTable` is not in `parentTables`.\n * + Assumes any shared `columnAlias` between tables **must** have the same value.\n * + Assumes `joins` represents a valid inheritance graph.\n */\nfunction from(tpt) {\n    if (tpt.parentTables.length == 0) {\n        return unified_query_1.QueryUtil.newInstance()\n            .from(tpt.childTable);\n    }\n    let query = unified_query_1.QueryUtil.newInstance()\n        .from(tpt.childTable);\n    /**\n     * We are iterating **backwards**.\n     * This is intentional.\n     */\n    for (let i = tpt.parentTables.length - 1; i >= 0; --i) {\n        const parent = tpt.parentTables[i];\n        const [fromTableAlias,] = query_1.findLastJoinToTable(tpt, parent.alias);\n        query = unified_query_1.QueryUtil.innerJoinUsingPrimaryKey(query, src => src[fromTableAlias], parent);\n    }\n    return query;\n}\nexports.from = from;\n//# sourceMappingURL=from.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./absorb-row\"));\n__export(require(\"./assert-exists-impl\"));\n__export(require(\"./delete-one-impl\"));\n__export(require(\"./delete-zero-or-one-impl\"));\n__export(require(\"./exists-impl\"));\n__export(require(\"./fetch-one-impl\"));\n__export(require(\"./from\"));\n__export(require(\"./invoke-assignment-delegate\"));\n__export(require(\"./update-and-fetch-one-impl\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst execution_1 = require(\"../../../execution\");\nconst column_ref_1 = require(\"../../../column-ref\");\nconst column_1 = require(\"../../../column\");\nconst execution_impl_1 = require(\"../execution-impl\");\nconst query_1 = require(\"../query\");\nconst built_in_expr_1 = require(\"../../../built-in-expr\");\nconst expr_1 = require(\"../../../expr\");\nconst data_type_1 = require(\"../../../data-type\");\n/**\n * Not meant to be called externally.\n *\n * @todo Better name\n */\nasync function invokeAssignmentDelegate(tpt, connection, whereDelegate, assignmentMapDelegate) {\n    const columns = column_ref_1.ColumnRefUtil.fromColumnArray(column_1.ColumnArrayUtil.fromColumnMapArray([\n        tpt.childTable.columns,\n        ...tpt.parentTables.map(parentTable => parentTable.columns)\n    ]));\n    /**\n     * May contain extra properties that are not mutable columns,\n     * or even columns at all.\n     */\n    const rawAssignmentMap = assignmentMapDelegate(columns);\n    const columnAliasArr = Object.keys(rawAssignmentMap);\n    if (columnAliasArr.length == 0) {\n        /**\n         * @todo Perform an exists check, if the row does not exist,\n         * throw rowNotFound, for early-exit.\n         *\n         * At the moment, this isn't so important because we have\n         * other methods downstream that will throw it.\n         */\n        return {};\n    }\n    const query = execution_impl_1.from(tpt)\n        .where(whereDelegate)\n        .select(() => columnAliasArr\n        .filter(columnAlias => query_1.isMutableColumnAlias(tpt, columnAlias))\n        .map(columnAlias => {\n        const customExpr = rawAssignmentMap[columnAlias];\n        if (built_in_expr_1.BuiltInExprUtil.isAnyNonValueExpr(customExpr)) {\n            /**\n             * We have a non-value expression\n             */\n            return expr_1.expr({\n                mapper: data_type_1.DataTypeUtil.intersect(query_1.columnMapper(tpt, columnAlias), built_in_expr_1.BuiltInExprUtil.mapper(customExpr)),\n                usedRef: built_in_expr_1.BuiltInExprUtil.usedRef(customExpr),\n                isAggregate: built_in_expr_1.BuiltInExprUtil.isAggregate(customExpr),\n            }, built_in_expr_1.BuiltInExprUtil.buildAst(customExpr)).as(columnAlias);\n        }\n        else {\n            /**\n             * We have a value expression\n             */\n            return expr_1.ExprUtil.fromRawExprNoUsedRefInput(query_1.columnMapper(tpt, columnAlias), customExpr).as(columnAlias);\n        }\n    }));\n    /**\n     * Should only contain value expressions now.\n     */\n    return execution_1.ExecutionUtil.fetchOne(query, connection);\n}\nexports.invokeAssignmentDelegate = invokeAssignmentDelegate;\n//# sourceMappingURL=invoke-assignment-delegate.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst type_util_1 = require(\"../../../type-util\");\nconst execution_1 = require(\"../../../execution\");\nconst absorb_row_1 = require(\"./absorb-row\");\nconst isolation_level_1 = require(\"../../../isolation-level\");\n/**\n * Not meant to be called externally.\n *\n * **DOES NOT** use savepoints, internally.\n * You **SHOULD** use savepoints before calling this function.\n */\nasync function updateAndFetchOneImpl(tpt, connection, cleanedAssignmentMap, updateAndFetchChildResult) {\n    return connection.transactionIfNotInOne(isolation_level_1.IsolationLevel.REPEATABLE_READ, async (connection) => {\n        const updateOneResults = [\n            {\n                ...updateAndFetchChildResult,\n                table: tpt.childTable,\n            },\n        ];\n        let updatedRowCount = updateAndFetchChildResult.updatedRowCount;\n        let warningCount = updateAndFetchChildResult.warningCount;\n        const result = updateAndFetchChildResult.row;\n        /**\n         * We use `.reverse()` here to `UPDATE` the parents\n         * as we go up the inheritance hierarchy.\n         */\n        for (const parentTable of [...tpt.parentTables].reverse()) {\n            const updateAndFetchParentResult = await execution_1.ExecutionUtil.updateAndFetchOneByPrimaryKey(parentTable, connection, \n            /**\n             * The `result` should contain the primary key values we are interested in\n             */\n            result, () => type_util_1.pickOwnEnumerable(cleanedAssignmentMap, parentTable.mutableColumns));\n            updateOneResults.push({\n                ...updateAndFetchParentResult,\n                table: parentTable,\n            });\n            updatedRowCount = tm.BigIntUtil.add(updatedRowCount, updateAndFetchParentResult.updatedRowCount);\n            warningCount = tm.BigIntUtil.add(warningCount, updateAndFetchParentResult.warningCount);\n            absorb_row_1.absorbRow(result, parentTable, updateAndFetchParentResult.row);\n        }\n        return {\n            updateOneResults,\n            /**\n             * +1 for the `childTable`.\n             */\n            foundRowCount: tm.BigInt(tpt.parentTables.length + 1),\n            updatedRowCount,\n            warningCount,\n            row: result,\n        };\n    });\n}\nexports.updateAndFetchOneImpl = updateAndFetchOneImpl;\n//# sourceMappingURL=update-and-fetch-one-impl.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ExprLib = require(\"../../../expr-library\");\nconst execution_impl_1 = require(\"../execution-impl\");\nasync function deleteOneByCandidateKey(tpt, connection, \n/**\n * @todo Try and recall why I wanted `AssertNonUnion<>`\n * I didn't write compile-time tests for it...\n */\ncandidateKey) {\n    return execution_impl_1.deleteOneImpl(tpt, connection, () => ExprLib.eqCandidateKey(tpt.childTable, candidateKey));\n}\nexports.deleteOneByCandidateKey = deleteOneByCandidateKey;\n//# sourceMappingURL=delete-one-by-candidate-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ExprLib = require(\"../../../expr-library\");\nconst execution_impl_1 = require(\"../execution-impl\");\nasync function deleteOneByPrimaryKey(tpt, connection, primaryKey) {\n    return execution_impl_1.deleteOneImpl(tpt, connection, () => ExprLib.eqPrimaryKey(tpt.childTable, primaryKey));\n}\nexports.deleteOneByPrimaryKey = deleteOneByPrimaryKey;\n//# sourceMappingURL=delete-one-by-primary-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst execution_impl_1 = require(\"../execution-impl\");\nconst operation_1 = require(\"../operation\");\nasync function deleteOneBySuperKey(tpt, connection, superKey) {\n    return execution_impl_1.deleteOneImpl(tpt, connection, () => operation_1.eqSuperKey(tpt, superKey));\n}\nexports.deleteOneBySuperKey = deleteOneBySuperKey;\n//# sourceMappingURL=delete-one-by-super-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ExprLib = require(\"../../../expr-library\");\nconst execution_impl_1 = require(\"../execution-impl\");\nasync function deleteZeroOrOneByCandidateKey(tpt, connection, \n/**\n * @todo Try and recall why I wanted `AssertNonUnion<>`\n * I didn't write compile-time tests for it...\n */\ncandidateKey) {\n    return execution_impl_1.deleteZeroOrOneImpl(tpt, connection, () => ExprLib.eqCandidateKey(tpt.childTable, candidateKey));\n}\nexports.deleteZeroOrOneByCandidateKey = deleteZeroOrOneByCandidateKey;\n//# sourceMappingURL=delete-zero-or-one-by-candidate-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ExprLib = require(\"../../../expr-library\");\nconst execution_impl_1 = require(\"../execution-impl\");\nasync function deleteZeroOrOneByPrimaryKey(tpt, connection, primaryKey) {\n    return execution_impl_1.deleteZeroOrOneImpl(tpt, connection, () => ExprLib.eqPrimaryKey(tpt.childTable, primaryKey));\n}\nexports.deleteZeroOrOneByPrimaryKey = deleteZeroOrOneByPrimaryKey;\n//# sourceMappingURL=delete-zero-or-one-by-primary-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst execution_impl_1 = require(\"../execution-impl\");\nconst operation_1 = require(\"../operation\");\nasync function deleteZeroOrOneBySuperKey(tpt, connection, superKey) {\n    return execution_impl_1.deleteZeroOrOneImpl(tpt, connection, () => operation_1.eqSuperKey(tpt, superKey));\n}\nexports.deleteZeroOrOneBySuperKey = deleteZeroOrOneBySuperKey;\n//# sourceMappingURL=delete-zero-or-one-by-super-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ExprLib = require(\"../../../expr-library\");\nconst fetch_one_1 = require(\"./fetch-one\");\nfunction fetchOneByCandidateKey(tpt, connection, candidateKey) {\n    return fetch_one_1.fetchOne(tpt, connection, () => ExprLib.eqCandidateKey(tpt.childTable, candidateKey));\n}\nexports.fetchOneByCandidateKey = fetchOneByCandidateKey;\n//# sourceMappingURL=fetch-one-by-candidate-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ExprLib = require(\"../../../expr-library\");\nconst fetch_one_1 = require(\"./fetch-one\");\nfunction fetchOneByPrimaryKey(tpt, connection, primaryKey) {\n    return fetch_one_1.fetchOne(tpt, connection, () => ExprLib.eqPrimaryKey(tpt.childTable, primaryKey));\n}\nexports.fetchOneByPrimaryKey = fetchOneByPrimaryKey;\n//# sourceMappingURL=fetch-one-by-primary-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fetch_one_1 = require(\"./fetch-one\");\nconst operation_1 = require(\"../operation\");\nfunction fetchOneBySuperKey(tpt, connection, superKey) {\n    return fetch_one_1.fetchOne(tpt, connection, () => operation_1.eqSuperKey(tpt, superKey));\n}\nexports.fetchOneBySuperKey = fetchOneBySuperKey;\n//# sourceMappingURL=fetch-one-by-super-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst execution_impl_1 = require(\"../execution-impl\");\n/**\n * + Assumes `parentTables` has no duplicates.\n * + Assumes `childTable` is not in `parentTables`.\n * + Assumes any shared `columnAlias` between tables **must** have the same value.\n * + Assumes `joins` represents a valid inheritance graph.\n */\nfunction fetchOne(tpt, connection, whereDelegate) {\n    try {\n        const p = execution_impl_1.fetchOneImpl(tpt, connection, whereDelegate);\n        const result = p.then(({ row }) => row);\n        //eslint-disable-next-line @typescript-eslint/unbound-method\n        result.or = (defaultValue) => {\n            //To avoid `unhandled rejection` warnings\n            result.catch(() => { });\n            return p.or(defaultValue).then(({ row }) => row);\n        };\n        //eslint-disable-next-line @typescript-eslint/unbound-method\n        result.orUndefined = () => {\n            return result\n                .or(undefined);\n        };\n        return result;\n    }\n    catch (err) {\n        const result = Promise.reject(err);\n        //eslint-disable-next-line @typescript-eslint/unbound-method\n        result.or = () => {\n            //To avoid `unhandled rejection` warnings\n            result.catch(() => { });\n            return Promise.reject(err);\n        };\n        //eslint-disable-next-line @typescript-eslint/unbound-method\n        result.orUndefined = () => {\n            //To avoid `unhandled rejection` warnings\n            result.catch(() => { });\n            return Promise.reject(err);\n        };\n        return result;\n    }\n}\nexports.fetchOne = fetchOne;\n//# sourceMappingURL=fetch-one.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./delete-one-by-candidate-key\"));\n__export(require(\"./delete-one-by-primary-key\"));\n__export(require(\"./delete-one-by-super-key\"));\n__export(require(\"./delete-zero-or-one-by-candidate-key\"));\n__export(require(\"./delete-zero-or-one-by-primary-key\"));\n__export(require(\"./delete-zero-or-one-by-super-key\"));\n__export(require(\"./fetch-one-by-candidate-key\"));\n__export(require(\"./fetch-one-by-primary-key\"));\n__export(require(\"./fetch-one-by-super-key\"));\n__export(require(\"./fetch-one\"));\n__export(require(\"./insert-and-fetch\"));\n__export(require(\"./update-and-fetch-one-by-candidate-key\"));\n__export(require(\"./update-and-fetch-one-by-primary-key\"));\n__export(require(\"./update-and-fetch-one-by-super-key\"));\n__export(require(\"./update-and-fetch-zero-or-one-by-candidate-key\"));\n__export(require(\"./update-and-fetch-zero-or-one-by-primary-key\"));\n__export(require(\"./update-and-fetch-zero-or-one-by-super-key\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst execution_1 = require(\"../../../execution\");\nconst type_util_1 = require(\"../../../type-util\");\nconst query_1 = require(\"../query\");\nconst table_1 = require(\"../../../table\");\nconst expr_1 = require(\"../../../expr\");\nconst used_ref_1 = require(\"../../../used-ref\");\nconst execution_impl_1 = require(\"../execution-impl\");\nconst isolation_level_1 = require(\"../../../isolation-level\");\n/**\n * Assumes there are no duplicate `parentTables`.\n *\n * `.addParent()` should remove duplicates.\n */\nasync function insertAndFetch(tpt, connection, insertRow) {\n    /**\n     * @todo Add `assertInsertable()` or something\n     */\n    return connection.transactionIfNotInOne(isolation_level_1.IsolationLevel.REPEATABLE_READ, async (connection) => {\n        return connection.savepoint(async (connection) => {\n            const generated = query_1.generatedColumnAliases(tpt);\n            const result = type_util_1.omitOwnEnumerable(insertRow, [\n                /**\n                 * We omit implicit auto-increment values because we do not\n                 * want them to be set by users of the library.\n                 */\n                ...query_1.implicitAutoIncrement(tpt),\n                /**\n                 * We omit generated values because users can't set them, anyway.\n                 */\n                ...generated,\n            ]);\n            for (const columnAlias of generated) {\n                const table = query_1.findTableWithGeneratedColumnAlias(tpt, columnAlias);\n                const sqlString = await connection.tryFetchGeneratedColumnExpression(table_1.TableUtil.tryGetSchemaName(table), table.alias, columnAlias);\n                if (sqlString == undefined) {\n                    throw new Error(`Generated column ${table.alias}.${columnAlias} should have generation expression`);\n                }\n                result[columnAlias] = expr_1.expr({\n                    mapper: table.columns[columnAlias].mapper,\n                    usedRef: used_ref_1.UsedRefUtil.fromColumnRef({}),\n                    /**\n                     * `GENERATED` columns should not have aggregate expressions.\n                     */\n                    isAggregate: false,\n                }, \n                /**\n                 * This `sqlString` is not allowed to reference any columns.\n                 * If it does, there is a very high chance that it will cause an error.\n                 *\n                 * @todo Find use case where we need to allow this to reference columns.\n                 */\n                sqlString);\n            }\n            for (const table of [...tpt.parentTables, tpt.childTable]) {\n                const fetchedRow = await execution_1.ExecutionUtil.insertAndFetch(\n                /**\n                 * We use `InsertAndFetchOptions`, instead of creating\n                 * a new table instance because we want events to use the\n                 * original `table` instance.\n                 *\n                 * `event.isFor()` methods use `===` internally\n                 */\n                table, connection, result, {\n                    /**\n                     * We want to allow explicit auto-increment values internally,\n                     * so that the same value is used for all tables of the same\n                     * inheritance hierarchy.\n                     */\n                    explicitAutoIncrementValueEnabled: true,\n                });\n                execution_impl_1.absorbRow(result, table, fetchedRow);\n            }\n            return result;\n        });\n    });\n}\nexports.insertAndFetch = insertAndFetch;\n//# sourceMappingURL=insert-and-fetch.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst type_util_1 = require(\"../../../type-util\");\nconst execution_1 = require(\"../../../execution\");\nconst ExprLib = require(\"../../../expr-library\");\nconst execution_impl_1 = require(\"../execution-impl\");\nconst isolation_level_1 = require(\"../../../isolation-level\");\nasync function updateAndFetchOneByCandidateKey(tpt, connection, \n/**\n * @todo Try and recall why I wanted `AssertNonUnion<>`\n * I didn't write compile-time tests for it...\n */\ncandidateKey, // & AssertNonUnion<CandidateKeyT>,\nassignmentMapDelegate) {\n    return connection.transactionIfNotInOne(isolation_level_1.IsolationLevel.REPEATABLE_READ, async (connection) => {\n        return connection.savepoint(async (connection) => {\n            const cleanedAssignmentMap = await execution_impl_1.invokeAssignmentDelegate(tpt, connection, () => ExprLib.eqCandidateKey(tpt.childTable, candidateKey), assignmentMapDelegate);\n            /**\n             * @todo If `result` contains any primaryKey values,\n             * then we will need to fetch the **current** primaryKey values,\n             * before any `UPDATE` statements are executed.\n             *\n             * This function breaks if we try to update values\n             * of columns that are foreign keys.\n             *\n             * I do not want to disable foreign key checks.\n             */\n            const updateAndFetchChildResult = await execution_1.ExecutionUtil.updateAndFetchOneByCandidateKey(tpt.childTable, connection, candidateKey, () => type_util_1.pickOwnEnumerable(cleanedAssignmentMap, tpt.childTable.mutableColumns));\n            return execution_impl_1.updateAndFetchOneImpl(tpt, connection, cleanedAssignmentMap, updateAndFetchChildResult);\n        });\n    });\n}\nexports.updateAndFetchOneByCandidateKey = updateAndFetchOneByCandidateKey;\n//# sourceMappingURL=update-and-fetch-one-by-candidate-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst type_util_1 = require(\"../../../type-util\");\nconst execution_1 = require(\"../../../execution\");\nconst ExprLib = require(\"../../../expr-library\");\nconst execution_impl_1 = require(\"../execution-impl\");\nconst isolation_level_1 = require(\"../../../isolation-level\");\nasync function updateAndFetchOneByPrimaryKey(tpt, connection, primaryKey, assignmentMapDelegate) {\n    return connection.transactionIfNotInOne(isolation_level_1.IsolationLevel.REPEATABLE_READ, async (connection) => {\n        return connection.savepoint(async (connection) => {\n            const cleanedAssignmentMap = await execution_impl_1.invokeAssignmentDelegate(tpt, connection, () => ExprLib.eqPrimaryKey(tpt.childTable, primaryKey), assignmentMapDelegate);\n            /**\n             * @todo If `result` contains any primaryKey values,\n             * then we will need to fetch the **current** primaryKey values,\n             * before any `UPDATE` statements are executed.\n             *\n             * This function breaks if we try to update values\n             * of columns that are foreign keys.\n             *\n             * I do not want to disable foreign key checks.\n             */\n            const updateAndFetchChildResult = await execution_1.ExecutionUtil.updateAndFetchOneByPrimaryKey(tpt.childTable, connection, primaryKey, () => type_util_1.pickOwnEnumerable(cleanedAssignmentMap, tpt.childTable.mutableColumns));\n            return execution_impl_1.updateAndFetchOneImpl(tpt, connection, cleanedAssignmentMap, updateAndFetchChildResult);\n        });\n    });\n}\nexports.updateAndFetchOneByPrimaryKey = updateAndFetchOneByPrimaryKey;\n//# sourceMappingURL=update-and-fetch-one-by-primary-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst type_util_1 = require(\"../../../type-util\");\nconst execution_1 = require(\"../../../execution\");\nconst operation_1 = require(\"../operation\");\nconst execution_impl_1 = require(\"../execution-impl\");\nconst isolation_level_1 = require(\"../../../isolation-level\");\nasync function updateAndFetchOneBySuperKey(tpt, connection, superKey, assignmentMapDelegate) {\n    return connection.transactionIfNotInOne(isolation_level_1.IsolationLevel.REPEATABLE_READ, async (connection) => {\n        return connection.savepoint(async (connection) => {\n            const cleanedAssignmentMap = await execution_impl_1.invokeAssignmentDelegate(tpt, connection, () => operation_1.eqSuperKey(tpt, superKey), assignmentMapDelegate);\n            /**\n             * @todo If `result` contains any primaryKey values,\n             * then we will need to fetch the **current** primaryKey values,\n             * before any `UPDATE` statements are executed.\n             *\n             * This function breaks if we try to update values\n             * of columns that are foreign keys.\n             *\n             * I do not want to disable foreign key checks.\n             */\n            const updateAndFetchChildResult = await execution_1.ExecutionUtil.updateAndFetchOneByCandidateKey(tpt.childTable, connection, \n            /**\n             * We have already used the `superKey` to \"clean\" our assignment map.\n             * So, we can be reasonably sure that the `superKey` itself\n             * refers to exactly one row that exists.\n             *\n             * Now, we can pretend this `superKey` is a `candidateKey`,\n             * discarding all non-key columns.\n             *\n             * This should not introduce any bugs.\n             */\n            superKey, () => type_util_1.pickOwnEnumerable(cleanedAssignmentMap, tpt.childTable.mutableColumns));\n            return execution_impl_1.updateAndFetchOneImpl(tpt, connection, cleanedAssignmentMap, updateAndFetchChildResult);\n        });\n    });\n}\nexports.updateAndFetchOneBySuperKey = updateAndFetchOneBySuperKey;\n//# sourceMappingURL=update-and-fetch-one-by-super-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst execution_1 = require(\"../../../execution\");\nconst ExprLib = require(\"../../../expr-library\");\nconst update_and_fetch_one_by_candidate_key_1 = require(\"./update-and-fetch-one-by-candidate-key\");\nconst unified_query_1 = require(\"../../../unified-query\");\nconst isolation_level_1 = require(\"../../../isolation-level\");\nasync function updateAndFetchZeroOrOneByCandidateKey(tpt, connection, \n/**\n * @todo Try and recall why I wanted `AssertNonUnion<>`\n * I didn't write compile-time tests for it...\n */\ncandidateKey, // & AssertNonUnion<CandidateKeyT>,\nassignmentMapDelegate) {\n    return connection.transactionIfNotInOne(isolation_level_1.IsolationLevel.REPEATABLE_READ, async (connection) => {\n        const existsResult = await execution_1.ExecutionUtil.existsImpl(unified_query_1.QueryUtil.newInstance()\n            .from(tpt.childTable)\n            .where(() => ExprLib.eqCandidateKey(tpt.childTable, candidateKey)), connection);\n        if (!existsResult.exists) {\n            return {\n                query: {\n                    sql: existsResult.sql,\n                },\n                //Alias for affectedRows\n                foundRowCount: tm.BigInt(0),\n                //Alias for changedRows\n                updatedRowCount: tm.BigInt(0),\n                /**\n                 * May be the duplicate row count, or some other value.\n                 */\n                warningCount: tm.BigInt(0),\n                /**\n                 * An arbitrary message.\n                 * May be an empty string.\n                 */\n                message: \"\",\n                row: undefined,\n            };\n        }\n        return update_and_fetch_one_by_candidate_key_1.updateAndFetchOneByCandidateKey(tpt, connection, candidateKey, assignmentMapDelegate);\n    });\n}\nexports.updateAndFetchZeroOrOneByCandidateKey = updateAndFetchZeroOrOneByCandidateKey;\n//# sourceMappingURL=update-and-fetch-zero-or-one-by-candidate-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst execution_1 = require(\"../../../execution\");\nconst ExprLib = require(\"../../../expr-library\");\nconst unified_query_1 = require(\"../../../unified-query\");\nconst update_and_fetch_one_by_primary_key_1 = require(\"./update-and-fetch-one-by-primary-key\");\nconst isolation_level_1 = require(\"../../../isolation-level\");\nasync function updateAndFetchZeroOrOneByPrimaryKey(tpt, connection, primaryKey, assignmentMapDelegate) {\n    return connection.transactionIfNotInOne(isolation_level_1.IsolationLevel.REPEATABLE_READ, async (connection) => {\n        const existsResult = await execution_1.ExecutionUtil.existsImpl(unified_query_1.QueryUtil.newInstance()\n            .from(tpt.childTable)\n            .where(() => ExprLib.eqPrimaryKey(tpt.childTable, primaryKey)), connection);\n        if (!existsResult.exists) {\n            return {\n                query: {\n                    sql: existsResult.sql,\n                },\n                //Alias for affectedRows\n                foundRowCount: tm.BigInt(0),\n                //Alias for changedRows\n                updatedRowCount: tm.BigInt(0),\n                /**\n                 * May be the duplicate row count, or some other value.\n                 */\n                warningCount: tm.BigInt(0),\n                /**\n                 * An arbitrary message.\n                 * May be an empty string.\n                 */\n                message: \"\",\n                row: undefined,\n            };\n        }\n        return update_and_fetch_one_by_primary_key_1.updateAndFetchOneByPrimaryKey(tpt, connection, primaryKey, assignmentMapDelegate);\n    });\n}\nexports.updateAndFetchZeroOrOneByPrimaryKey = updateAndFetchZeroOrOneByPrimaryKey;\n//# sourceMappingURL=update-and-fetch-zero-or-one-by-primary-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operation_1 = require(\"../operation\");\nconst update_and_fetch_one_by_super_key_1 = require(\"./update-and-fetch-one-by-super-key\");\nconst execution_impl_1 = require(\"../execution-impl\");\nconst isolation_level_1 = require(\"../../../isolation-level\");\nasync function updateAndFetchZeroOrOneBySuperKey(tpt, connection, superKey, assignmentMapDelegate) {\n    return connection.transactionIfNotInOne(isolation_level_1.IsolationLevel.REPEATABLE_READ, async (connection) => {\n        const existsResult = await execution_impl_1.existsImpl(tpt, connection, () => operation_1.eqSuperKey(tpt, superKey));\n        if (!existsResult.exists) {\n            return {\n                query: {\n                    sql: existsResult.sql,\n                },\n                //Alias for affectedRows\n                foundRowCount: tm.BigInt(0),\n                //Alias for changedRows\n                updatedRowCount: tm.BigInt(0),\n                /**\n                 * May be the duplicate row count, or some other value.\n                 */\n                warningCount: tm.BigInt(0),\n                /**\n                 * An arbitrary message.\n                 * May be an empty string.\n                 */\n                message: \"\",\n                row: undefined,\n            };\n        }\n        return update_and_fetch_one_by_super_key_1.updateAndFetchOneBySuperKey(tpt, connection, superKey, assignmentMapDelegate);\n    });\n}\nexports.updateAndFetchZeroOrOneBySuperKey = updateAndFetchZeroOrOneBySuperKey;\n//# sourceMappingURL=update-and-fetch-zero-or-one-by-super-key.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./constructor\"));\n__export(require(\"./execution\"));\n__export(require(\"./execution-impl\"));\n__export(require(\"./operation\"));\n__export(require(\"./query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_1 = require(\"../../../table\");\nconst query_1 = require(\"../query\");\nconst table_per_type_impl_1 = require(\"../../table-per-type-impl\");\nconst remove_duplicate_parents_1 = require(\"./remove-duplicate-parents\");\nconst predicate_1 = require(\"../predicate\");\nconst key_1 = require(\"../../../key\");\nfunction addParent_AutoIncrement(tpt, parent) {\n    const parentColumnAliases = query_1.extractColumnAliases(parent);\n    return key_1.KeyUtil.removeDuplicates([\n        ...query_1.extractAutoIncrement(parent),\n        ...tpt.autoIncrement.filter(columnAlias => !parentColumnAliases.includes(columnAlias)),\n    ]);\n}\nfunction addParent_ExplicitAutoIncrementValueEnabled(tpt, parent) {\n    const parentColumnAliases = query_1.extractColumnAliases(parent);\n    return key_1.KeyUtil.removeDuplicates([\n        ...query_1.extractExplicitAutoIncrementValueEnabled(parent).filter(columnAlias => (tpt.explicitAutoIncrementValueEnabled.includes(columnAlias) ||\n            !tpt.autoIncrement.includes(columnAlias))),\n        ...tpt.explicitAutoIncrementValueEnabled.filter(columnAlias => !parentColumnAliases.includes(columnAlias)),\n    ]);\n}\nfunction addParent_InsertAndFetchPrimaryKey(tpt, parent) {\n    const parentColumnAliases = query_1.extractColumnAliases(parent);\n    return key_1.KeyUtil.removeDuplicates([\n        ...query_1.extractInsertAndFetchPrimaryKey(parent),\n        ...tpt.autoIncrement.filter(columnAlias => !parentColumnAliases.includes(columnAlias)),\n    ]);\n}\n/**\n * @todo Check that a column is not both auto-increment and generated at the same time\n *\n * @todo Check that `tpt.childTable` can join to `parent.childTable` using `parent.childTable`'s primary key\n *\n * @todo Check that columns have compatible types; must be assigble from child to parent\n *       Example: child.type = \"red\"|\"blue\", parent.type = \"red\"|\"blue\"|\"green\"\n *\n * @todo Check that inheritance is not circular\n *       Example: `Animal` cannot be a child of `Animal`.\n *       Example: This is invalid: `Dog extends Animal extends Mammal extends Dog`\n */\nfunction addParent(tpt, parent) {\n    let joins = undefined;\n    if (table_1.TableUtil.isTable(parent)) {\n        joins = [\n            [\n                tpt.childTable.alias,\n                parent.alias,\n            ],\n            ...tpt.joins,\n        ];\n    }\n    else if (predicate_1.isTablePerType(parent)) {\n        joins = [\n            ...parent.joins,\n            [\n                tpt.childTable.alias,\n                parent.childTable.alias,\n            ],\n            ...tpt.joins,\n        ];\n    }\n    else {\n        throw new Error(`Expected ITable or ITablePerType for parent`);\n    }\n    return new table_per_type_impl_1.TablePerType({\n        childTable: tpt.childTable,\n        parentTables: remove_duplicate_parents_1.removeDuplicateParents([\n            ...query_1.extractAllTables(parent),\n            ...tpt.parentTables,\n        ]),\n        autoIncrement: addParent_AutoIncrement(tpt, parent),\n        explicitAutoIncrementValueEnabled: addParent_ExplicitAutoIncrementValueEnabled(tpt, parent),\n        insertAndFetchPrimaryKey: addParent_InsertAndFetchPrimaryKey(tpt, parent),\n    }, joins);\n}\nexports.addParent = addParent;\n//# sourceMappingURL=add-parent.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst query_1 = require(\"../query\");\nconst ExprLib = require(\"../../../expr-library\");\nconst built_in_expr_1 = require(\"../../../built-in-expr\");\nexports.eqSuperKey = ((tpt, superKeyInput) => {\n    const superKey = query_1.superKeyMapper(tpt)(`${tpt.childTable}.superKey`, superKeyInput);\n    const arr = Object.keys(superKey)\n        .filter((columnAlias) => {\n        return superKey[columnAlias] !== undefined;\n    })\n        /**\n         * We `.sort()` the keys so our resulting SQL is deterministic,\n         * regardless of how `superKey` was constructed.\n         */\n        .sort()\n        .map((columnAlias) => {\n        const table = query_1.findTableWithColumnAlias(tpt, columnAlias);\n        const expr = ExprLib.nullSafeEq(table.columns[columnAlias], built_in_expr_1.BuiltInExprUtil.fromValueExpr(table.columns[columnAlias], superKey[columnAlias]));\n        return expr;\n    });\n    const result = ExprLib.and(...arr);\n    return result;\n});\n//# sourceMappingURL=eq-super-key.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./add-parent\"));\n__export(require(\"./eq-super-key\"));\n__export(require(\"./remove-duplicate-parents\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction removeDuplicateParents(arr) {\n    const result = [];\n    for (const parentTable of arr) {\n        /**\n         * @todo Add `.schemaName` property?\n         * When checking `.alias` only, it may think a different\n         * table from a different schema is the same table.\n         */\n        if (result.find(r => r.alias == parentTable.alias) != undefined) {\n            continue;\n        }\n        result.push(parentTable);\n    }\n    return result;\n}\nexports.removeDuplicateParents = removeDuplicateParents;\n//# sourceMappingURL=remove-duplicate-parents.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./is-table-per-type\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst type_util_1 = require(\"../../../type-util\");\nconst table_1 = require(\"../../../table\");\n/**\n * Actually only checks if it has all the properties of `ITablePerType`.\n *\n * So, if it has all the properties but they're of the wrong data type...\n */\nfunction isTablePerType(mixed) {\n    if (!type_util_1.isObjectWithOwnEnumerableKeys()(mixed, [\n        \"childTable\",\n        \"parentTables\",\n        \"autoIncrement\",\n        \"explicitAutoIncrementValueEnabled\",\n        \"insertAndFetchPrimaryKey\",\n        \"joins\"\n    ])) {\n        return false;\n    }\n    return (table_1.TableUtil.isTable(mixed.childTable) &&\n        /**\n         * Does not check if all elements are `ITable`\n         */\n        (mixed.parentTables instanceof Array) &&\n        /**\n         * Does not check if all elements are `string`\n         */\n        (mixed.autoIncrement instanceof Array) &&\n        /**\n         * Does not check if all elements are `string`\n         */\n        (mixed.explicitAutoIncrementValueEnabled instanceof Array) &&\n        /**\n         * Does not check if all elements are `string`\n         */\n        (mixed.insertAndFetchPrimaryKey instanceof Array) &&\n        /**\n         * Does not check if all elements are `string`\n         */\n        (mixed.joins instanceof Array));\n}\nexports.isTablePerType = isTablePerType;\n//# sourceMappingURL=is-table-per-type.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_1 = require(\"../../../table\");\nconst key_1 = require(\"../../../key\");\nconst column_map_1 = require(\"../../../column-map\");\nfunction columnAliases(tpt) {\n    const result = table_1.TableUtil.columnAlias(tpt.childTable);\n    for (const parentTable of tpt.parentTables) {\n        result.push(...table_1.TableUtil.columnAlias(parentTable));\n    }\n    return key_1.KeyUtil.removeDuplicates(result);\n}\nexports.columnAliases = columnAliases;\nfunction isColumnAlias(tpt, columnAlias) {\n    if (column_map_1.ColumnMapUtil.hasColumnAlias(tpt.childTable.columns, columnAlias)) {\n        return true;\n    }\n    for (const parentTable of tpt.parentTables) {\n        if (column_map_1.ColumnMapUtil.hasColumnAlias(parentTable.columns, columnAlias)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.isColumnAlias = isColumnAlias;\n//# sourceMappingURL=column-alias.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst extract_all_tables_with_column_alias_1 = require(\"./extract-all-tables-with-column-alias\");\nconst data_type_1 = require(\"../../../data-type\");\nfunction columnMapper(tpt, columnAlias) {\n    const mappers = extract_all_tables_with_column_alias_1.extractAllTablesWithColumnAlias(tpt, columnAlias)\n        .map(table => table.columns[columnAlias].mapper);\n    if (mappers.length == 0) {\n        throw new Error(`Table-per-type hierarchy for ${tpt.childTable.alias} does not have column alias ${columnAlias}`);\n    }\n    if (mappers.length == 1) {\n        return mappers[0];\n    }\n    let result = data_type_1.DataTypeUtil.intersect(mappers[0], mappers[1]);\n    for (let i = 2; i < mappers.length; ++i) {\n        result = data_type_1.DataTypeUtil.intersect(result, mappers[i]);\n    }\n    return result;\n}\nexports.columnMapper = columnMapper;\n//# sourceMappingURL=column-type.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_alias_1 = require(\"./column-alias\");\nconst parent_column_alias_1 = require(\"./parent-column-alias\");\nconst column_map_1 = require(\"../../../column-map\");\nfunction isExplicitDefaultValueColumnAlias(tpt, columnAlias) {\n    if (parent_column_alias_1.isParentColumnAlias(tpt, columnAlias)) {\n        for (const parentTable of tpt.parentTables) {\n            if (column_map_1.ColumnMapUtil.hasColumnAlias(parentTable.columns, columnAlias) &&\n                !parentTable.explicitDefaultValueColumns.includes(columnAlias)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    else {\n        return tpt.childTable.explicitDefaultValueColumns.includes(columnAlias);\n    }\n}\nexports.isExplicitDefaultValueColumnAlias = isExplicitDefaultValueColumnAlias;\nfunction explicitDefaultValueColumnAliases(tpt) {\n    const result = [];\n    for (const columnAlias of column_alias_1.columnAliases(tpt)) {\n        if (isExplicitDefaultValueColumnAlias(tpt, columnAlias)) {\n            result.push(columnAlias);\n        }\n    }\n    return result;\n}\nexports.explicitDefaultValueColumnAliases = explicitDefaultValueColumnAliases;\n//# sourceMappingURL=explicit-default-value-column-alias.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_map_1 = require(\"../../../column-map\");\nfunction extractAllTablesWithColumnAlias(tpt, columnAlias) {\n    const result = [];\n    if (column_map_1.ColumnMapUtil.hasColumnAlias(tpt.childTable.columns, columnAlias)) {\n        result.push(tpt.childTable);\n    }\n    for (const parentTable of tpt.parentTables) {\n        if (column_map_1.ColumnMapUtil.hasColumnAlias(parentTable.columns, columnAlias)) {\n            result.push(parentTable);\n        }\n    }\n    return result;\n}\nexports.extractAllTablesWithColumnAlias = extractAllTablesWithColumnAlias;\n//# sourceMappingURL=extract-all-tables-with-column-alias.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_1 = require(\"../../../table\");\nconst predicate_1 = require(\"../predicate\");\nfunction extractAllTables(t) {\n    if (predicate_1.isTablePerType(t)) {\n        return [\n            ...t.parentTables,\n            t.childTable,\n        ];\n    }\n    else if (table_1.TableUtil.isTable(t)) {\n        return [t];\n    }\n    else {\n        throw new Error(`Expected ITable or ITablePerType`);\n    }\n}\nexports.extractAllTables = extractAllTables;\n//# sourceMappingURL=extract-all-tables.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_1 = require(\"../../../table\");\nconst predicate_1 = require(\"../predicate\");\nfunction extractAutoIncrement(t) {\n    if (predicate_1.isTablePerType(t)) {\n        return [...t.autoIncrement];\n    }\n    else if (table_1.TableUtil.isTable(t)) {\n        return (t.autoIncrement == undefined ?\n            [] :\n            [t.autoIncrement]);\n    }\n    else {\n        throw new Error(`Expected ITable or ITablePerType`);\n    }\n}\nexports.extractAutoIncrement = extractAutoIncrement;\n//# sourceMappingURL=extract-auto-increment.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_1 = require(\"../../../table\");\nfunction extractChildTable(t) {\n    if (table_1.TableUtil.isTable(t)) {\n        return t;\n    }\n    else {\n        return t.childTable;\n    }\n}\nexports.extractChildTable = extractChildTable;\n//# sourceMappingURL=extract-child-table.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_1 = require(\"../../../table\");\nconst column_alias_1 = require(\"./column-alias\");\nconst predicate_1 = require(\"../predicate\");\nfunction extractColumnAliases(t) {\n    if (predicate_1.isTablePerType(t)) {\n        return column_alias_1.columnAliases(t);\n    }\n    else if (table_1.TableUtil.isTable(t)) {\n        return table_1.TableUtil.columnAlias(t);\n    }\n    else {\n        throw new Error(`Expected ITable or ITablePerType`);\n    }\n}\nexports.extractColumnAliases = extractColumnAliases;\n//# sourceMappingURL=extract-column-alias.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_1 = require(\"../../../table\");\nconst predicate_1 = require(\"../predicate\");\nfunction extractExplicitAutoIncrementValueEnabled(t) {\n    if (predicate_1.isTablePerType(t)) {\n        return [...t.explicitAutoIncrementValueEnabled];\n    }\n    else if (table_1.TableUtil.isTable(t)) {\n        return (\n        //eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        t.explicitAutoIncrementValueEnabled ?\n            (t.autoIncrement == undefined ?\n                [] :\n                [t.autoIncrement]) :\n            []);\n    }\n    else {\n        throw new Error(`Expected ITable or ITablePerType`);\n    }\n}\nexports.extractExplicitAutoIncrementValueEnabled = extractExplicitAutoIncrementValueEnabled;\n//# sourceMappingURL=extract-explicit-auto-increment-value-enabled.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_1 = require(\"../../../table\");\nconst predicate_1 = require(\"../predicate\");\nfunction extractInsertAndFetchPrimaryKey(t) {\n    if (predicate_1.isTablePerType(t)) {\n        return [...t.insertAndFetchPrimaryKey];\n    }\n    else if (table_1.TableUtil.isTable(t) && t.primaryKey != undefined) {\n        return (t.autoIncrement == undefined ?\n            t.primaryKey.filter(columnAlias => (!t.generatedColumns.includes(columnAlias) &&\n                t.autoIncrement != columnAlias)) :\n            []);\n    }\n    else {\n        throw new Error(`Expected TableWithPrimaryKey or ITablePerType`);\n    }\n}\nexports.extractInsertAndFetchPrimaryKey = extractInsertAndFetchPrimaryKey;\n//# sourceMappingURL=extract-insert-and-fetch-primary-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_1 = require(\"../../../table\");\nfunction extractParentTables(t) {\n    if (table_1.TableUtil.isTable(t)) {\n        return [];\n    }\n    else {\n        return [...t.parentTables];\n    }\n}\nexports.extractParentTables = extractParentTables;\n//# sourceMappingURL=extract-parent-tables.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction findLastJoinToTable(tpt, toTableAlias) {\n    for (let i = tpt.joins.length - 1; i >= 0; --i) {\n        if (tpt.joins[i][1] == toTableAlias) {\n            return tpt.joins[i];\n        }\n    }\n    throw new Error(`No join to ${toTableAlias} exists in table-per-type hierarchy for ${tpt.childTable.alias}`);\n}\nexports.findLastJoinToTable = findLastJoinToTable;\n//# sourceMappingURL=find-last-join-to-table.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_map_1 = require(\"../../../column-map\");\n/**\n * Goes up the inheritance hierarchy, starting from `childTable`,\n * to look for a table with `columnAlias` as a column\n */\nfunction findTableWithColumnAlias(tpt, columnAlias) {\n    if (column_map_1.ColumnMapUtil.hasColumnAlias(tpt.childTable.columns, columnAlias)) {\n        return tpt.childTable;\n    }\n    for (let i = tpt.parentTables.length - 1; i >= 0; --i) {\n        const parentTable = tpt.parentTables[i];\n        if (column_map_1.ColumnMapUtil.hasColumnAlias(parentTable.columns, columnAlias)) {\n            return parentTable;\n        }\n    }\n    throw new Error(`No column ${columnAlias} in table-per-type hierarchy for ${tpt.childTable.alias}`);\n}\nexports.findTableWithColumnAlias = findTableWithColumnAlias;\n//# sourceMappingURL=find-table-with-column-alias.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Goes up the inheritance hierarchy, starting from `childTable`,\n * to look for a table with `columnAlias` as a generated column\n */\nfunction findTableWithGeneratedColumnAlias(tpt, columnAlias) {\n    if (tpt.childTable.generatedColumns.includes(columnAlias)) {\n        return tpt.childTable;\n    }\n    for (let i = tpt.parentTables.length - 1; i >= 0; --i) {\n        const parentTable = tpt.parentTables[i];\n        if (parentTable.generatedColumns.includes(columnAlias)) {\n            return parentTable;\n        }\n    }\n    throw new Error(`No generated column ${columnAlias} in table-per-type hierarchy for ${tpt.childTable.alias}`);\n}\nexports.findTableWithGeneratedColumnAlias = findTableWithGeneratedColumnAlias;\n//# sourceMappingURL=find-table-with-generated-column-alias.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_alias_1 = require(\"./column-alias\");\nfunction isGeneratedColumnAlias(tpt, columnAlias) {\n    if (tpt.childTable.generatedColumns.includes(columnAlias)) {\n        return true;\n    }\n    for (const parentTable of tpt.parentTables) {\n        if (parentTable.generatedColumns.includes(columnAlias)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.isGeneratedColumnAlias = isGeneratedColumnAlias;\nfunction generatedColumnAliases(tpt) {\n    const result = [];\n    for (const columnAlias of column_alias_1.columnAliases(tpt)) {\n        if (isGeneratedColumnAlias(tpt, columnAlias)) {\n            result.push(columnAlias);\n        }\n    }\n    return result;\n}\nexports.generatedColumnAliases = generatedColumnAliases;\n//# sourceMappingURL=generated-column-alias.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction implicitAutoIncrement(tpt) {\n    return tpt.autoIncrement.filter(columnAlias => {\n        return !tpt.explicitAutoIncrementValueEnabled.includes(columnAlias);\n    });\n}\nexports.implicitAutoIncrement = implicitAutoIncrement;\n//# sourceMappingURL=implicit-auto-increment.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./column-alias\"));\n__export(require(\"./column-type\"));\n__export(require(\"./explicit-default-value-column-alias\"));\n__export(require(\"./extract-all-tables-with-column-alias\"));\n__export(require(\"./extract-all-tables\"));\n__export(require(\"./extract-auto-increment\"));\n__export(require(\"./extract-explicit-auto-increment-value-enabled\"));\n__export(require(\"./extract-insert-and-fetch-primary-key\"));\n//export * from \"./extract-child-column-alias\";\n__export(require(\"./extract-child-table\"));\n__export(require(\"./extract-column-alias\"));\n//export * from \"./extract-parent-column-alias\";\n__export(require(\"./extract-parent-tables\"));\n__export(require(\"./find-last-join-to-table\"));\n__export(require(\"./find-table-with-column-alias\"));\n__export(require(\"./find-table-with-generated-column-alias\"));\n__export(require(\"./generated-column-alias\"));\n__export(require(\"./implicit-auto-increment\"));\n__export(require(\"./mutable-column-alias\"));\n__export(require(\"./non-generated-column-alias\"));\n__export(require(\"./nullable-column-alias\"));\n__export(require(\"./optional-column-alias\"));\n__export(require(\"./parent-column-alias\"));\n__export(require(\"./primary-key-column-alias\"));\n__export(require(\"./required-column-alias\"));\n__export(require(\"./row\"));\n__export(require(\"./super-key-mapper\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_alias_1 = require(\"./column-alias\");\nconst column_map_1 = require(\"../../../column-map\");\nfunction isMutableColumnAlias(tpt, columnAlias) {\n    if (column_map_1.ColumnMapUtil.hasColumnAlias(tpt.childTable.columns, columnAlias) &&\n        !tpt.childTable.mutableColumns.includes(columnAlias)) {\n        return false;\n    }\n    for (const parentTable of tpt.parentTables) {\n        if (column_map_1.ColumnMapUtil.hasColumnAlias(parentTable.columns, columnAlias) &&\n            !parentTable.mutableColumns.includes(columnAlias)) {\n            return false;\n        }\n    }\n    return column_alias_1.isColumnAlias(tpt, columnAlias);\n}\nexports.isMutableColumnAlias = isMutableColumnAlias;\nfunction mutableColumnAliases(tpt) {\n    const result = [];\n    for (const columnAlias of column_alias_1.columnAliases(tpt)) {\n        if (isMutableColumnAlias(tpt, columnAlias)) {\n            result.push(columnAlias);\n        }\n    }\n    return result;\n}\nexports.mutableColumnAliases = mutableColumnAliases;\n//# sourceMappingURL=mutable-column-alias.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_alias_1 = require(\"./column-alias\");\nconst generated_column_alias_1 = require(\"./generated-column-alias\");\nfunction nonGeneratedColumnAliases(tpt) {\n    const generated = generated_column_alias_1.generatedColumnAliases(tpt);\n    const result = column_alias_1.columnAliases(tpt)\n        .filter(columnAlias => {\n        return !generated.includes(columnAlias);\n    });\n    return result;\n}\nexports.nonGeneratedColumnAliases = nonGeneratedColumnAliases;\n//# sourceMappingURL=non-generated-column-alias.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_alias_1 = require(\"./column-alias\");\nconst column_map_1 = require(\"../../../column-map\");\nfunction isNullableColumnAlias(tpt, columnAlias) {\n    if (column_map_1.ColumnMapUtil.hasColumnAlias(tpt.childTable.columns, columnAlias) &&\n        !tpt.childTable.nullableColumns.includes(columnAlias)) {\n        return false;\n    }\n    for (const parentTable of tpt.parentTables) {\n        if (column_map_1.ColumnMapUtil.hasColumnAlias(parentTable.columns, columnAlias) &&\n            !parentTable.nullableColumns.includes(columnAlias)) {\n            return false;\n        }\n    }\n    return column_alias_1.isColumnAlias(tpt, columnAlias);\n}\nexports.isNullableColumnAlias = isNullableColumnAlias;\nfunction nullableColumnAliases(tpt) {\n    const result = [];\n    for (const columnAlias of column_alias_1.columnAliases(tpt)) {\n        if (isNullableColumnAlias(tpt, columnAlias)) {\n            result.push(columnAlias);\n        }\n    }\n    return result;\n}\nexports.nullableColumnAliases = nullableColumnAliases;\n//# sourceMappingURL=nullable-column-alias.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst explicit_default_value_column_alias_1 = require(\"./explicit-default-value-column-alias\");\nconst nullable_column_alias_1 = require(\"./nullable-column-alias\");\nconst generated_column_alias_1 = require(\"./generated-column-alias\");\nconst column_alias_1 = require(\"./column-alias\");\nfunction isOptionalColumnAlias(tpt, columnAlias) {\n    return (tpt.explicitAutoIncrementValueEnabled.includes(columnAlias) ||\n        ((nullable_column_alias_1.isNullableColumnAlias(tpt, columnAlias) ||\n            explicit_default_value_column_alias_1.isExplicitDefaultValueColumnAlias(tpt, columnAlias)) &&\n            !generated_column_alias_1.isGeneratedColumnAlias(tpt, columnAlias)));\n}\nexports.isOptionalColumnAlias = isOptionalColumnAlias;\nfunction optionalColumnAliases(tpt) {\n    const result = [];\n    for (const columnAlias of column_alias_1.columnAliases(tpt)) {\n        if (isOptionalColumnAlias(tpt, columnAlias)) {\n            result.push(columnAlias);\n        }\n    }\n    return result;\n}\nexports.optionalColumnAliases = optionalColumnAliases;\n//# sourceMappingURL=optional-column-alias.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_1 = require(\"../../../table\");\nconst key_1 = require(\"../../../key\");\nconst column_map_1 = require(\"../../../column-map\");\nfunction parentColumnAliases(tpt) {\n    const result = [];\n    for (const parentTable of tpt.parentTables) {\n        result.push(...table_1.TableUtil.columnAlias(parentTable));\n    }\n    return key_1.KeyUtil.removeDuplicates(result);\n}\nexports.parentColumnAliases = parentColumnAliases;\nfunction isParentColumnAlias(tpt, columnAlias) {\n    for (const parentTable of tpt.parentTables) {\n        if (column_map_1.ColumnMapUtil.hasColumnAlias(parentTable.columns, columnAlias)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.isParentColumnAlias = isParentColumnAlias;\n//# sourceMappingURL=parent-column-alias.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_alias_1 = require(\"./column-alias\");\nfunction isPrimaryColumnAlias(tpt, columnAlias) {\n    if (tpt.childTable.primaryKey.includes(columnAlias)) {\n        return true;\n    }\n    for (const parentTable of tpt.parentTables) {\n        if (parentTable.primaryKey.includes(columnAlias)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.isPrimaryColumnAlias = isPrimaryColumnAlias;\nfunction primaryKeyColumnAliases(tpt) {\n    const result = [];\n    for (const columnAlias of column_alias_1.columnAliases(tpt)) {\n        if (isPrimaryColumnAlias(tpt, columnAlias)) {\n            result.push(columnAlias);\n        }\n    }\n    return result;\n}\nexports.primaryKeyColumnAliases = primaryKeyColumnAliases;\n//# sourceMappingURL=primary-key-column-alias.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst explicit_default_value_column_alias_1 = require(\"./explicit-default-value-column-alias\");\nconst nullable_column_alias_1 = require(\"./nullable-column-alias\");\nconst generated_column_alias_1 = require(\"./generated-column-alias\");\nconst column_alias_1 = require(\"./column-alias\");\nfunction isRequiredColumnAlias(tpt, columnAlias) {\n    return (column_alias_1.isColumnAlias(tpt, columnAlias) &&\n        !(generated_column_alias_1.isGeneratedColumnAlias(tpt, columnAlias) ||\n            nullable_column_alias_1.isNullableColumnAlias(tpt, columnAlias) ||\n            explicit_default_value_column_alias_1.isExplicitDefaultValueColumnAlias(tpt, columnAlias) ||\n            tpt.autoIncrement.includes(columnAlias)));\n}\nexports.isRequiredColumnAlias = isRequiredColumnAlias;\nfunction requiredColumnAliases(tpt) {\n    const result = [];\n    for (const columnAlias of column_alias_1.columnAliases(tpt)) {\n        if (isRequiredColumnAlias(tpt, columnAlias)) {\n            result.push(columnAlias);\n        }\n    }\n    return result;\n}\nexports.requiredColumnAliases = requiredColumnAliases;\n//# sourceMappingURL=required-column-alias.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst column_alias_1 = require(\"./column-alias\");\nconst column_type_1 = require(\"./column-type\");\nfunction rowMapper(tpt) {\n    const result = tm.objectFromArray(...column_alias_1.columnAliases(tpt)\n        .map(columnAlias => tm.withName(column_type_1.columnMapper(tpt, columnAlias), columnAlias)));\n    return result;\n}\nexports.rowMapper = rowMapper;\n//# sourceMappingURL=row.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst column_alias_1 = require(\"./column-alias\");\nconst column_type_1 = require(\"./column-type\");\nfunction superKeyMapper_FromCandidateKeyImpl(tpt, candidateKey) {\n    const result = tm.objectFromArray(...column_alias_1.columnAliases(tpt).map(columnAlias => {\n        const mapper = tm.withName(column_type_1.columnMapper(tpt, columnAlias), columnAlias);\n        if (candidateKey.includes(columnAlias)) {\n            return mapper;\n        }\n        else {\n            return tm.optional(mapper);\n        }\n    }));\n    return result;\n}\nfunction superKeyMapper(tpt) {\n    const arr = tpt.childTable.candidateKeys.map(candidateKey => {\n        return superKeyMapper_FromCandidateKeyImpl(tpt, candidateKey);\n    });\n    return tm.unsafeOr(...arr);\n}\nexports.superKeyMapper = superKeyMapper;\n//# sourceMappingURL=super-key-mapper.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./missing-required-insert-column\"));\n__export(require(\"./potential-null-in-required-insert-column\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sql_error_1 = require(\"../sql-error\");\nclass MissingRequiredInsertColumnError extends sql_error_1.SqlError {\n    constructor(args) {\n        super({\n            message: args.message,\n            sql: undefined,\n        });\n        Object.setPrototypeOf(this, MissingRequiredInsertColumnError.prototype);\n        this.table = args.table;\n        this.columnAlias = args.columnAlias;\n    }\n}\nexports.MissingRequiredInsertColumnError = MissingRequiredInsertColumnError;\nMissingRequiredInsertColumnError.prototype.name = \"MissingRequiredInsertColumnError\";\n//# sourceMappingURL=missing-required-insert-column.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sql_error_1 = require(\"../sql-error\");\nclass PotentialNullInRequiredInsertColumnError extends sql_error_1.SqlError {\n    constructor(args) {\n        super({\n            message: args.message,\n            sql: undefined,\n        });\n        Object.setPrototypeOf(this, PotentialNullInRequiredInsertColumnError.prototype);\n        this.table = args.table;\n        this.columnAlias = args.columnAlias;\n    }\n}\nexports.PotentialNullInRequiredInsertColumnError = PotentialNullInRequiredInsertColumnError;\nPotentialNullInRequiredInsertColumnError.prototype.name = \"PotentialNullInRequiredInsertColumnError\";\n//# sourceMappingURL=potential-null-in-required-insert-column.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./invalid-sql\"));\n__export(require(\"./row-not-found\"));\n__export(require(\"./too-many-rows-found\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sql_error_1 = require(\"../sql-error\");\n/**\n * This error happens when the database is unable to parse the SQL string.\n *\n * + MySQL      : `ER_SYNTAX_ERROR`, `ER_PARSE_ERROR`\n * + PostgreSQL : `syntax error at`\n */\nclass InvalidSqlError extends sql_error_1.SqlError {\n    constructor(args) {\n        super(args);\n        Object.setPrototypeOf(this, InvalidSqlError.prototype);\n    }\n}\nexports.InvalidSqlError = InvalidSqlError;\nInvalidSqlError.prototype.name = \"InvalidSqlError\";\n//# sourceMappingURL=invalid-sql.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sql_error_1 = require(\"../sql-error\");\nclass RowNotFoundError extends sql_error_1.SqlError {\n    constructor(args) {\n        super(args);\n        Object.setPrototypeOf(this, RowNotFoundError.prototype);\n        this.sql = args.sql;\n    }\n}\nexports.RowNotFoundError = RowNotFoundError;\nRowNotFoundError.prototype.name = \"RowNotFoundError\";\n//# sourceMappingURL=row-not-found.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sql_error_1 = require(\"../sql-error\");\nclass TooManyRowsFoundError extends sql_error_1.SqlError {\n    constructor(args) {\n        super(args);\n        Object.setPrototypeOf(this, TooManyRowsFoundError.prototype);\n        this.sql = args.sql;\n    }\n}\nexports.TooManyRowsFoundError = TooManyRowsFoundError;\nTooManyRowsFoundError.prototype.name = \"TooManyRowsFoundError\";\n//# sourceMappingURL=too-many-rows-found.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sql_error_1 = require(\"../sql-error\");\nclass CannotCountError extends sql_error_1.SqlError {\n    constructor(args) {\n        super(args);\n        Object.setPrototypeOf(this, CannotCountError.prototype);\n    }\n}\nexports.CannotCountError = CannotCountError;\nCannotCountError.prototype.name = \"CannotCountError\";\n//# sourceMappingURL=cannot-count.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sql_error_1 = require(\"../sql-error\");\n/**\n * This error happens when you do something like,\n * + `MAX_BIGINT_SIGNED + 1`\n * + `MIN_BIGINT_SIGNED - 1`\n * + General overflow errors\n *\n * + MySQL      : `ER_DATA_OUT_OF_RANGE`\n * + PostgreSQL : `out of range`\n */\nclass DataOutOfRangeError extends sql_error_1.SqlError {\n    constructor(args) {\n        super(args);\n        Object.setPrototypeOf(this, DataOutOfRangeError.prototype);\n    }\n}\nexports.DataOutOfRangeError = DataOutOfRangeError;\nDataOutOfRangeError.prototype.name = \"DataOutOfRangeError\";\n//# sourceMappingURL=data-out-of-range.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sql_error_1 = require(\"../sql-error\");\n/**\n * This error happens when you do something like,\n * + `1 / 0`\n * + `0 / 0`\n *\n * + MySQL      : -NA- (Returns `null`)\n * + PostgreSQL : `division by zero`\n */\nclass DivideByZeroError extends sql_error_1.SqlError {\n    constructor(args) {\n        super(args);\n        Object.setPrototypeOf(this, DivideByZeroError.prototype);\n    }\n}\nexports.DivideByZeroError = DivideByZeroError;\nDivideByZeroError.prototype.name = \"DivideByZeroError\";\n//# sourceMappingURL=divide-by-zero.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./cannot-count\"));\n__export(require(\"./data-out-of-range\"));\n__export(require(\"./divide-by-zero\"));\n__export(require(\"./invalid-input\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sql_error_1 = require(\"../sql-error\");\n/**\n * This error happens when you do something like,\n * + `'qwerty'::timestamp` (PostgreSQL)\n * + General input errors\n *\n * + MySQL      : `ER_INVALID_JSON_TEXT_IN_PARAM` (`CAST('qwerty' AS JSON)`), etc.\n * + PostgreSQL : `invalid input syntax for type`\n */\nclass InvalidInputError extends sql_error_1.SqlError {\n    constructor(args) {\n        super(args);\n        Object.setPrototypeOf(this, InvalidInputError.prototype);\n    }\n}\nexports.InvalidInputError = InvalidInputError;\nInvalidInputError.prototype.name = \"InvalidInputError\";\n//# sourceMappingURL=invalid-input.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./clean-insert-row\"));\n__export(require(\"./execution\"));\n__export(require(\"./expr\"));\n__export(require(\"./sql-error\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * All errors in this library should extend this class.\n */\nclass SqlError extends Error {\n    constructor(args) {\n        super(\"innerError\" in args ?\n            (args.innerError instanceof Object && \"message\" in args.innerError ?\n                args.innerError.message :\n                String(args.innerError)) :\n            args.message);\n        if (\"innerError\" in args && args.innerError instanceof Object && \"stack\" in args.innerError) {\n            this.stack += `\\n${args.innerError.stack}`;\n        }\n        Object.setPrototypeOf(this, SqlError.prototype);\n        this.sql = args.sql;\n        this.innerError = (\"innerError\" in args ?\n            args.innerError :\n            undefined);\n    }\n}\nexports.SqlError = SqlError;\nSqlError.prototype.name = \"SqlError\";\nfunction isSqlError(mixed) {\n    /**\n     * @todo Should we check prototype.name or nah?\n     */\n    return (mixed instanceof Error &&\n        (mixed.sql === undefined ||\n            typeof mixed.sql == \"string\") &&\n        \"innerError\" in mixed);\n}\nexports.isSqlError = isSqlError;\n//# sourceMappingURL=sql-error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst connection_event_emitter_1 = require(\"./connection-event-emitter\");\nclass ConnectionEventEmitterCollection {\n    constructor(pool) {\n        /**\n         * We want to avoid mutating arrays because it may mess up our loops.\n         * We might add/remove events while invoking a handler.\n         */\n        this.transactionListenerCollections = [\n            []\n        ];\n        this.addTransactionListenerCollectionImpl = (event) => {\n            const bottom = this.transactionListenerCollections[this.transactionListenerCollections.length - 1];\n            const parentAndAncestors = this.transactionListenerCollections.slice(0, this.transactionListenerCollections.length - 1);\n            this.transactionListenerCollections = [\n                ...parentAndAncestors,\n                [\n                    ...bottom,\n                    event\n                ]\n            ];\n        };\n        this.onInsert = new connection_event_emitter_1.ConnectionEventEmitter(pool.onInsert, this.addTransactionListenerCollectionImpl);\n        this.onInsertOne = new connection_event_emitter_1.ConnectionEventEmitter(pool.onInsertOne, this.addTransactionListenerCollectionImpl);\n        this.onInsertAndFetch = new connection_event_emitter_1.ConnectionEventEmitter(pool.onInsertAndFetch, this.addTransactionListenerCollectionImpl);\n        this.onInsertSelect = new connection_event_emitter_1.ConnectionEventEmitter(pool.onInsertSelect, this.addTransactionListenerCollectionImpl);\n        this.onReplace = new connection_event_emitter_1.ConnectionEventEmitter(pool.onReplace, this.addTransactionListenerCollectionImpl);\n        this.onReplaceOne = new connection_event_emitter_1.ConnectionEventEmitter(pool.onReplaceOne, this.addTransactionListenerCollectionImpl);\n        this.onReplaceSelect = new connection_event_emitter_1.ConnectionEventEmitter(pool.onReplaceSelect, this.addTransactionListenerCollectionImpl);\n        this.onUpdate = new connection_event_emitter_1.ConnectionEventEmitter(pool.onUpdate, this.addTransactionListenerCollectionImpl);\n        this.onUpdateAndFetch = new connection_event_emitter_1.ConnectionEventEmitter(pool.onUpdateAndFetch, this.addTransactionListenerCollectionImpl);\n        this.onDelete = new connection_event_emitter_1.ConnectionEventEmitter(pool.onDelete, this.addTransactionListenerCollectionImpl);\n    }\n    /**\n     * @todo Better name\n     *\n     * Used whenever a savepoint is created\n     */\n    savepoint() {\n        this.transactionListenerCollections = [\n            ...this.transactionListenerCollections,\n            []\n        ];\n    }\n    /**\n     * @todo Better name\n     *\n     * Used whenever a savepoint is released\n     */\n    releaseSavepoint() {\n        if (this.transactionListenerCollections.length == 1) {\n            throw new Error(`Cannot unnest top-level transaction listener collection`);\n        }\n        const bottom = this.transactionListenerCollections[this.transactionListenerCollections.length - 1];\n        const parent = this.transactionListenerCollections[this.transactionListenerCollections.length - 2];\n        const ancestors = this.transactionListenerCollections.slice(0, this.transactionListenerCollections.length - 2);\n        this.transactionListenerCollections = [\n            ...ancestors,\n            [\n                ...parent,\n                ...bottom\n            ]\n        ];\n    }\n    /**\n     * @todo Better name\n     *\n     * Used whenever a savepoint is rolled back\n     */\n    rollbackToSavepoint() {\n        if (this.transactionListenerCollections.length == 1) {\n            throw new Error(`Cannot unnest top-level transaction listener collection`);\n        }\n        const bottom = this.transactionListenerCollections[this.transactionListenerCollections.length - 1];\n        const parentAndAncestors = this.transactionListenerCollections.slice(0, this.transactionListenerCollections.length - 1);\n        this.transactionListenerCollections = parentAndAncestors;\n        const syncErrors = [];\n        for (const collection of bottom) {\n            const invokeResult = collection.invokeOnRollbackListeners();\n            syncErrors.push(...invokeResult.syncErrors);\n        }\n        return { syncErrors };\n    }\n    /**\n     * This should not throw\n     *\n     * Used when a transaction is committed\n     */\n    commit() {\n        const syncErrors = [];\n        const scopes = this.transactionListenerCollections;\n        this.transactionListenerCollections = [[]];\n        for (const scope of scopes) {\n            for (const collection of scope) {\n                const invokeResult = collection.invokeOnCommitListeners();\n                syncErrors.push(...invokeResult.syncErrors);\n            }\n        }\n        return { syncErrors };\n    }\n    /**\n     * This should not throw\n     *\n     * Used when a transaction is rolled back\n     */\n    rollback() {\n        const syncErrors = [];\n        const scopes = this.transactionListenerCollections;\n        this.transactionListenerCollections = [[]];\n        for (const scope of scopes) {\n            for (const collection of scope) {\n                const invokeResult = collection.invokeOnRollbackListeners();\n                syncErrors.push(...invokeResult.syncErrors);\n            }\n        }\n        return { syncErrors };\n    }\n}\nexports.ConnectionEventEmitterCollection = ConnectionEventEmitterCollection;\n//# sourceMappingURL=connection-event-emitter-collection.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ConnectionEventEmitter {\n    constructor(poolEventEmitter, addTransactionListenerCollectionImpl) {\n        this.poolEventEmitter = poolEventEmitter;\n        this.addEventImpl = addTransactionListenerCollectionImpl;\n    }\n    /**\n     * This may throw\n     */\n    async invoke(event) {\n        const handlers = this.poolEventEmitter.getHandlers();\n        if (handlers.length == 0) {\n            /**\n             * There are no handlers.\n             * There's nothing for us to do here.\n             */\n            return;\n        }\n        //This should not throw.\n        this.addEventImpl(event);\n        //This loop may throw.\n        for (const handler of handlers) {\n            await handler(event);\n        }\n    }\n}\nexports.ConnectionEventEmitter = ConnectionEventEmitter;\n//# sourceMappingURL=connection-event-emitter.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst event_base_1 = require(\"./event-base\");\nclass DeleteEvent extends event_base_1.EventBase {\n    constructor(args) {\n        super(args);\n        this.table = args.table;\n        this.whereClause = args.whereClause;\n        this.deleteResult = args.deleteResult;\n    }\n    isFor(table) {\n        return this.table === table;\n    }\n}\nexports.DeleteEvent = DeleteEvent;\n//# sourceMappingURL=delete-event.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass EventBase {\n    constructor(args) {\n        this.onCommitListeners = [];\n        this.onRollbackListeners = [];\n        this.pool = args.connection.pool;\n        this.connection = args.connection;\n    }\n    /**\n     * If the `listener` has already been added, it will be ignored.\n     */\n    addOnCommitListener(listener) {\n        if (this.onCommitListeners.includes(listener)) {\n            /**\n             * We do not want duplicate listener references.\n             */\n            return;\n        }\n        this.onCommitListeners = [...this.onCommitListeners, listener];\n    }\n    /**\n     * If the `listener` has already been added, it will be ignored.\n     */\n    addOnRollbackListener(listener) {\n        if (this.onRollbackListeners.includes(listener)) {\n            /**\n             * We do not want duplicate listener references.\n             */\n            return;\n        }\n        this.onRollbackListeners = [...this.onRollbackListeners, listener];\n    }\n    /**\n     * For now,\n     * + This should not throw.\n     * + This must not wait for `async` listeners to complete.\n     * + This will not catch `async` errors.\n     *\n     * @returns - All synchronous errors.\n     */\n    invokeOnCommitListeners() {\n        const syncErrors = [];\n        for (const listener of this.onCommitListeners) {\n            try {\n                listener();\n            }\n            catch (err) {\n                syncErrors.push(err);\n            }\n        }\n        return { syncErrors };\n    }\n    /**\n     * For now,\n     * + This should not throw.\n     * + This must not wait for `async` listeners to complete.\n     * + This will not catch `async` errors.\n     *\n     * @returns - All synchronous errors.\n     */\n    invokeOnRollbackListeners() {\n        const syncErrors = [];\n        for (const listener of this.onRollbackListeners) {\n            try {\n                listener();\n            }\n            catch (err) {\n                syncErrors.push(err);\n            }\n        }\n        return { syncErrors };\n    }\n}\nexports.EventBase = EventBase;\n//# sourceMappingURL=event-base.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./connection-event-emitter-collection\"));\n__export(require(\"./connection-event-emitter\"));\n__export(require(\"./delete-event\"));\n__export(require(\"./event-base\"));\n__export(require(\"./insert-and-fetch-event\"));\n__export(require(\"./insert-event\"));\n__export(require(\"./insert-one-event\"));\n__export(require(\"./insert-select-event\"));\n__export(require(\"./pool-event-emitter\"));\n__export(require(\"./replace-event\"));\n__export(require(\"./replace-one-event\"));\n__export(require(\"./replace-select-event\"));\n__export(require(\"./update-and-fetch-event\"));\n__export(require(\"./update-event\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst event_base_1 = require(\"./event-base\");\nclass InsertAndFetchEvent extends event_base_1.EventBase {\n    constructor(args) {\n        super(args);\n        this.table = args.table;\n        this.insertRow = args.insertRow;\n        this.insertResult = args.insertResult;\n        this.fetchedRow = args.fetchedRow;\n    }\n    isFor(table) {\n        return this.table === table;\n    }\n}\nexports.InsertAndFetchEvent = InsertAndFetchEvent;\n//# sourceMappingURL=insert-and-fetch-event.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst table_1 = require(\"../table\");\nconst candidate_key_1 = require(\"../candidate-key\");\nconst ExprLib = require(\"../expr-library\");\nconst event_base_1 = require(\"./event-base\");\nclass InsertEvent extends event_base_1.EventBase {\n    constructor(args) {\n        super(args);\n        this.candidateKeysCache = undefined;\n        this.fetchPromises = {};\n        this.table = args.table;\n        this.insertRows = args.insertRows;\n        this.insertResult = args.insertResult;\n    }\n    get candidateKeys() {\n        if (this.candidateKeysCache == undefined) {\n            const mapper = candidate_key_1.CandidateKeyUtil.mapperPreferPrimaryKey(this.table);\n            this.candidateKeysCache = this.insertRows.map(insertRow => {\n                const candidateKeyResult = tm.tryMapHandled(mapper, `${this.table.alias}.candidateKey`, insertRow);\n                return candidateKeyResult.success ?\n                    candidateKeyResult.value :\n                    undefined;\n            });\n        }\n        return this.candidateKeysCache;\n    }\n    async getOrFetch(index) {\n        let fetchPromise = this.fetchPromises[index];\n        if (fetchPromise == undefined) {\n            const candidateKey = this.candidateKeys[index];\n            if (candidateKey == undefined) {\n                /**\n                 * @todo Custom Error type\n                 */\n                throw new Error(`Could not derive candidateKey ${index} from insertRow ${index}`);\n            }\n            fetchPromise = table_1.TableUtil.fetchOne(this.table, this.connection, () => ExprLib.eqCandidateKey(this.table, candidateKey));\n            this.fetchPromises[index] = fetchPromise;\n        }\n        return fetchPromise;\n    }\n    isFor(table) {\n        return this.table === table;\n    }\n}\nexports.InsertEvent = InsertEvent;\n//# sourceMappingURL=insert-event.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst table_1 = require(\"../table\");\nconst candidate_key_1 = require(\"../candidate-key\");\nconst ExprLib = require(\"../expr-library\");\nconst event_base_1 = require(\"./event-base\");\nclass InsertOneEvent extends event_base_1.EventBase {\n    constructor(args) {\n        super(args);\n        this.candidateKeyCache = \"uninitialized\";\n        this.table = args.table;\n        this.insertRow = args.insertRow;\n        this.insertResult = args.insertResult;\n    }\n    get candidateKey() {\n        if (this.candidateKeyCache == \"uninitialized\") {\n            const candidateKeyResult = tm.tryMapHandled(candidate_key_1.CandidateKeyUtil.mapperPreferPrimaryKey(this.table), `${this.table.alias}.candidateKey`, this.insertRow);\n            this.candidateKeyCache = candidateKeyResult.success ?\n                candidateKeyResult.value :\n                undefined;\n        }\n        return this.candidateKeyCache;\n    }\n    async getOrFetch() {\n        if (this.fetchPromise == undefined) {\n            const candidateKey = this.candidateKey;\n            if (candidateKey == undefined) {\n                /**\n                 * @todo Custom Error type\n                 */\n                throw new Error(`Could not derive candidateKey from insertRow`);\n            }\n            this.fetchPromise = table_1.TableUtil.fetchOne(this.table, this.connection, () => ExprLib.eqCandidateKey(this.table, candidateKey));\n        }\n        return this.fetchPromise;\n    }\n    isFor(table) {\n        return this.table === table;\n    }\n}\nexports.InsertOneEvent = InsertOneEvent;\n//# sourceMappingURL=insert-one-event.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst event_base_1 = require(\"./event-base\");\nclass InsertSelectEvent extends event_base_1.EventBase {\n    constructor(args) {\n        super(args);\n        this.query = args.query;\n        this.table = args.table;\n        this.insertSelectRow = args.insertSelectRow;\n        this.insertResult = args.insertResult;\n    }\n    isFor(table) {\n        return this.table === table;\n    }\n}\nexports.InsertSelectEvent = InsertSelectEvent;\n//# sourceMappingURL=insert-select-event.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass PoolEventEmitter {\n    constructor() {\n        /**\n         * We want to avoid mutating arrays because it may mess up our loops.\n         * We might add/remove handlers while invoking a handler.\n         */\n        this.handlers = [];\n    }\n    /**\n     * If the `handler` has already been added, it will be ignored.\n     */\n    addHandler(handler) {\n        if (this.handlers.includes(handler)) {\n            /**\n             * We do not want duplicate handler references.\n             */\n            return;\n        }\n        this.handlers = [...this.handlers, handler];\n    }\n    removeHandler(handler) {\n        /**\n         * We should not have duplicates\n         */\n        const index = this.handlers.indexOf(handler);\n        if (index < 0) {\n            return;\n        }\n        this.handlers = [\n            ...this.handlers.slice(0, index),\n            ...this.handlers.slice(index + 1),\n        ];\n    }\n    getHandlers() {\n        return this.handlers;\n    }\n}\nexports.PoolEventEmitter = PoolEventEmitter;\n//# sourceMappingURL=pool-event-emitter.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst table_1 = require(\"../table\");\nconst candidate_key_1 = require(\"../candidate-key\");\nconst ExprLib = require(\"../expr-library\");\nconst event_base_1 = require(\"./event-base\");\nclass ReplaceEvent extends event_base_1.EventBase {\n    constructor(args) {\n        super(args);\n        this.candidateKeysCache = undefined;\n        this.fetchPromises = {};\n        this.table = args.table;\n        this.insertRows = args.insertRows;\n        this.replaceResult = args.replaceResult;\n    }\n    get candidateKeys() {\n        if (this.candidateKeysCache == undefined) {\n            const mapper = candidate_key_1.CandidateKeyUtil.mapperPreferPrimaryKey(this.table);\n            this.candidateKeysCache = this.insertRows.map(insertRow => {\n                const candidateKeyResult = tm.tryMapHandled(mapper, `${this.table.alias}.candidateKey`, insertRow);\n                return candidateKeyResult.success ?\n                    candidateKeyResult.value :\n                    undefined;\n            });\n        }\n        return this.candidateKeysCache;\n    }\n    async getOrFetch(index) {\n        let fetchPromise = this.fetchPromises[index];\n        if (fetchPromise == undefined) {\n            const candidateKey = this.candidateKeys[index];\n            if (candidateKey == undefined) {\n                /**\n                 * @todo Custom Error type\n                 */\n                throw new Error(`Could not derive candidateKey ${index} from insertRow ${index}`);\n            }\n            fetchPromise = table_1.TableUtil.fetchOne(this.table, this.connection, () => ExprLib.eqCandidateKey(this.table, candidateKey));\n            this.fetchPromises[index] = fetchPromise;\n        }\n        return fetchPromise;\n    }\n    isFor(table) {\n        return this.table === table;\n    }\n}\nexports.ReplaceEvent = ReplaceEvent;\n//# sourceMappingURL=replace-event.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst table_1 = require(\"../table\");\nconst candidate_key_1 = require(\"../candidate-key\");\nconst ExprLib = require(\"../expr-library\");\nconst event_base_1 = require(\"./event-base\");\nclass ReplaceOneEvent extends event_base_1.EventBase {\n    constructor(args) {\n        super(args);\n        this.candidateKeyCache = \"uninitialized\";\n        this.table = args.table;\n        this.insertRow = args.insertRow;\n        this.replaceResult = args.replaceResult;\n    }\n    get candidateKey() {\n        if (this.candidateKeyCache == \"uninitialized\") {\n            const candidateKeyResult = tm.tryMapHandled(candidate_key_1.CandidateKeyUtil.mapperPreferPrimaryKey(this.table), `${this.table.alias}.candidateKey`, this.insertRow);\n            this.candidateKeyCache = candidateKeyResult.success ?\n                candidateKeyResult.value :\n                undefined;\n        }\n        return this.candidateKeyCache;\n    }\n    async getOrFetch() {\n        if (this.fetchPromise == undefined) {\n            const candidateKey = this.candidateKey;\n            if (candidateKey == undefined) {\n                /**\n                 * @todo Custom Error type\n                 */\n                throw new Error(`Could not derive candidateKey from insertRow`);\n            }\n            this.fetchPromise = table_1.TableUtil.fetchOne(this.table, this.connection, () => ExprLib.eqCandidateKey(this.table, candidateKey));\n        }\n        return this.fetchPromise;\n    }\n    isFor(table) {\n        return this.table === table;\n    }\n}\nexports.ReplaceOneEvent = ReplaceOneEvent;\n//# sourceMappingURL=replace-one-event.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst event_base_1 = require(\"./event-base\");\nclass ReplaceSelectEvent extends event_base_1.EventBase {\n    constructor(args) {\n        super(args);\n        this.query = args.query;\n        this.table = args.table;\n        this.replaceSelectRow = args.replaceSelectRow;\n        this.replaceResult = args.replaceResult;\n    }\n    isFor(table) {\n        return this.table === table;\n    }\n}\nexports.ReplaceSelectEvent = ReplaceSelectEvent;\n//# sourceMappingURL=replace-select-event.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst event_base_1 = require(\"./event-base\");\nclass UpdateAndFetchEvent extends event_base_1.EventBase {\n    constructor(args) {\n        super(args);\n        this.table = args.table;\n        this.assignmentMap = args.assignmentMap;\n        this.updateResult = args.updateResult;\n    }\n    isFor(table) {\n        return this.table === table;\n    }\n}\nexports.UpdateAndFetchEvent = UpdateAndFetchEvent;\n//# sourceMappingURL=update-and-fetch-event.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst event_base_1 = require(\"./event-base\");\nclass UpdateEvent extends event_base_1.EventBase {\n    constructor(args) {\n        super(args);\n        this.table = args.table;\n        this.whereClause = args.whereClause;\n        this.assignmentMap = args.assignmentMap;\n        this.updateResult = args.updateResult;\n    }\n    isFor(table) {\n        return this.table === table;\n    }\n}\nexports.UpdateEvent = UpdateEvent;\n//# sourceMappingURL=update-event.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ConnectionComponent = require(\"./component\");\nexports.ConnectionComponent = ConnectionComponent;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./connection\"));\nconst ExecutionUtil = require(\"./util\");\nexports.ExecutionUtil = ExecutionUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./operation\"));\n__export(require(\"./operation-delete\"));\n__export(require(\"./operation-insert\"));\n__export(require(\"./operation-insert-select\"));\n__export(require(\"./operation-update\"));\n__export(require(\"./predicate\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst table_1 = require(\"../../../table\");\nconst impl = require(\"./delete\");\nconst error_1 = require(\"../../../error\");\nconst event_1 = require(\"../../../event\");\nconst isolation_level_1 = require(\"../../../isolation-level\");\nasync function deleteOne(table, connection, whereDelegate) {\n    table_1.TableUtil.assertDeleteEnabled(table);\n    return connection.lock(async (connection) => {\n        /**\n         * `READ_UNCOMMITTED` because this should be a simple `DELETE` statement.\n         * It should execute no other statements.\n         */\n        const { whereClause, deleteResult, } = await connection.transactionIfNotInOne(isolation_level_1.IsolationLevel.READ_UNCOMMITTED, async (connection) => {\n            return connection.savepoint(async (connection) => {\n                const { whereClause, deleteResult, } = await impl.deleteImplNoEvent(table, connection, whereDelegate);\n                if (tm.BigIntUtil.equal(deleteResult.deletedRowCount, tm.BigInt(0))) {\n                    throw new error_1.RowNotFoundError({\n                        message: `Expected to delete one row of ${table.alias}; found ${deleteResult.deletedRowCount} rows`,\n                        sql: deleteResult.query.sql,\n                    });\n                }\n                if (tm.BigIntUtil.equal(deleteResult.deletedRowCount, tm.BigInt(1))) {\n                    return {\n                        whereClause,\n                        deleteResult: deleteResult,\n                    };\n                }\n                throw new error_1.TooManyRowsFoundError({\n                    message: `Expected to delete one row of ${table.alias}; found ${deleteResult.deletedRowCount} rows`,\n                    sql: deleteResult.query.sql,\n                });\n            });\n        });\n        const fullConnection = connection.tryGetFullConnection();\n        if (fullConnection != undefined) {\n            await fullConnection.eventEmitters.onDelete.invoke(new event_1.DeleteEvent({\n                connection: fullConnection,\n                table,\n                whereClause,\n                deleteResult,\n            }));\n        }\n        return deleteResult;\n    });\n}\nexports.deleteOne = deleteOne;\n//# sourceMappingURL=delete-one.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst table_1 = require(\"../../../table\");\nconst impl = require(\"./delete\");\nconst error_1 = require(\"../../../error\");\nconst event_1 = require(\"../../../event\");\nconst isolation_level_1 = require(\"../../../isolation-level\");\nasync function deleteZeroOrOne(table, connection, whereDelegate) {\n    table_1.TableUtil.assertDeleteEnabled(table);\n    return connection.lock(async (connection) => {\n        /**\n         * `READ_UNCOMMITTED` because this should be a simple `DELETE` statement.\n         * It should execute no other statements.\n         */\n        const { whereClause, deleteResult, } = await connection.transactionIfNotInOne(isolation_level_1.IsolationLevel.READ_UNCOMMITTED, async (connection) => {\n            return connection.savepoint(async (connection) => {\n                const { whereClause, deleteResult, } = await impl.deleteImplNoEvent(table, connection, whereDelegate);\n                if (tm.BigIntUtil.equal(deleteResult.deletedRowCount, tm.BigInt(0)) ||\n                    tm.BigIntUtil.equal(deleteResult.deletedRowCount, tm.BigInt(1))) {\n                    return {\n                        whereClause,\n                        deleteResult: deleteResult,\n                    };\n                }\n                throw new error_1.TooManyRowsFoundError({\n                    message: `Expected to delete zero or one row of ${table.alias}; found ${deleteResult.deletedRowCount} rows`,\n                    sql: deleteResult.query.sql,\n                });\n            });\n        });\n        if (tm.BigIntUtil.equal(deleteResult.deletedRowCount, tm.BigInt(1))) {\n            const fullConnection = connection.tryGetFullConnection();\n            if (fullConnection != undefined) {\n                await fullConnection.eventEmitters.onDelete.invoke(new event_1.DeleteEvent({\n                    connection: fullConnection,\n                    table,\n                    whereClause,\n                    deleteResult,\n                }));\n            }\n        }\n        return deleteResult;\n    });\n}\nexports.deleteZeroOrOne = deleteZeroOrOne;\n//# sourceMappingURL=delete-zero-or-one.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst table_1 = require(\"../../../table\");\nconst where_clause_1 = require(\"../../../where-clause\");\nconst from_clause_1 = require(\"../../../from-clause\");\nconst event_1 = require(\"../../../event\");\nasync function deleteImplNoEvent(table, connection, whereDelegate) {\n    table_1.TableUtil.assertDeleteEnabled(table);\n    const whereClause = where_clause_1.WhereClauseUtil.where(from_clause_1.FromClauseUtil.from(from_clause_1.FromClauseUtil.newInstance(), table), undefined, whereDelegate);\n    const deleteResult = await connection.delete(table, whereClause);\n    return {\n        whereClause,\n        deleteResult,\n    };\n}\nexports.deleteImplNoEvent = deleteImplNoEvent;\nasync function del(table, connection, whereDelegate) {\n    return connection.lock(async (connection) => {\n        const { whereClause, deleteResult, } = await deleteImplNoEvent(table, connection, whereDelegate);\n        if (tm.BigIntUtil.greaterThan(deleteResult.deletedRowCount, tm.BigInt(0))) {\n            const fullConnection = connection.tryGetFullConnection();\n            if (fullConnection != undefined) {\n                await fullConnection.eventEmitters.onDelete.invoke(new event_1.DeleteEvent({\n                    connection: fullConnection,\n                    table,\n                    whereClause,\n                    deleteResult,\n                }));\n            }\n        }\n        return deleteResult;\n    });\n}\nexports.delete = del;\n//# sourceMappingURL=delete.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./delete-one\"));\n__export(require(\"./delete-zero-or-one\"));\n__export(require(\"./delete\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./insert-ignore-select\"));\n__export(require(\"./insert-select\"));\n__export(require(\"./replace-select\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_1 = require(\"../../../table\");\nconst insert_select_1 = require(\"../../../insert-select\");\nconst event_1 = require(\"../../../event\");\nasync function insertIgnoreSelect(connection, query, table, rowDelegate) {\n    table_1.TableUtil.assertInsertEnabled(table);\n    return connection.lock(async (connection) => {\n        const insertSelectRow = insert_select_1.InsertSelectUtil.insertSelect(query, table, rowDelegate);\n        const insertResult = await connection.insertIgnoreSelect(query, table, insertSelectRow);\n        const fullConnection = connection.tryGetFullConnection();\n        if (fullConnection != undefined) {\n            await fullConnection.eventEmitters.onInsertSelect.invoke(new event_1.InsertSelectEvent({\n                connection: fullConnection,\n                query,\n                table,\n                insertSelectRow,\n                insertResult,\n            }));\n        }\n        return insertResult;\n    });\n}\nexports.insertIgnoreSelect = insertIgnoreSelect;\n//# sourceMappingURL=insert-ignore-select.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_1 = require(\"../../../table\");\nconst insert_select_1 = require(\"../../../insert-select\");\nconst event_1 = require(\"../../../event\");\nasync function insertSelect(connection, query, table, rowDelegate) {\n    table_1.TableUtil.assertInsertEnabled(table);\n    return connection.lock(async (connection) => {\n        const insertSelectRow = insert_select_1.InsertSelectUtil.insertSelect(query, table, rowDelegate);\n        const insertResult = await connection.insertSelect(query, table, insertSelectRow);\n        const fullConnection = connection.tryGetFullConnection();\n        if (fullConnection != undefined) {\n            await fullConnection.eventEmitters.onInsertSelect.invoke(new event_1.InsertSelectEvent({\n                connection: fullConnection,\n                query,\n                table,\n                insertSelectRow,\n                insertResult,\n            }));\n        }\n        return insertResult;\n    });\n}\nexports.insertSelect = insertSelect;\n//# sourceMappingURL=insert-select.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_1 = require(\"../../../table\");\nconst insert_select_1 = require(\"../../../insert-select\");\nconst event_1 = require(\"../../../event\");\nasync function replaceSelect(connection, query, table, rowDelegate) {\n    table_1.TableUtil.assertInsertEnabled(table);\n    table_1.TableUtil.assertDeleteEnabled(table);\n    return connection.lock(async (connection) => {\n        const replaceSelectRow = insert_select_1.InsertSelectUtil.insertSelect(query, table, rowDelegate);\n        const replaceResult = await connection.replaceSelect(query, table, replaceSelectRow);\n        const fullConnection = connection.tryGetFullConnection();\n        if (fullConnection != undefined) {\n            await fullConnection.eventEmitters.onReplaceSelect.invoke(new event_1.ReplaceSelectEvent({\n                connection: fullConnection,\n                query,\n                table,\n                replaceSelectRow,\n                replaceResult,\n            }));\n        }\n        return replaceResult;\n    });\n}\nexports.replaceSelect = replaceSelect;\n//# sourceMappingURL=replace-select.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./insert-and-fetch\"));\n__export(require(\"./insert-ignore-many\"));\n__export(require(\"./insert-ignore-one\"));\n__export(require(\"./insert-many\"));\n__export(require(\"./insert-one\"));\n__export(require(\"./replace-many\"));\n__export(require(\"./replace-one\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_1 = require(\"../../../table\");\nconst insert_one_1 = require(\"./insert-one\");\nconst ExprLib = require(\"../../../expr-library\");\nconst data_type_1 = require(\"../../../data-type\");\nconst event_1 = require(\"../../../event\");\nconst isolation_level_1 = require(\"../../../isolation-level\");\nasync function insertAndFetchImplNoEvent(table, connection, row) {\n    table_1.TableUtil.assertInsertEnabled(table);\n    table_1.TableUtil.assertHasCandidateKey(table);\n    /**\n     * @todo Check if `SERIALIZABLE` is better.\n     * Intuitively, `REPEATABLE_READ` makes sense because\n     * we're just reading a row we've inserted inside this transaction.\n     */\n    return connection.transactionIfNotInOne(isolation_level_1.IsolationLevel.REPEATABLE_READ, async (connection) => {\n        return connection.savepoint(async (connection) => {\n            if (table.autoIncrement == undefined) {\n                const candidateKeyResult = await data_type_1.DataTypeUtil.tryEvaluateInsertableCandidateKeyPreferPrimaryKey(table, connection, row);\n                if (!candidateKeyResult.success) {\n                    throw candidateKeyResult.error;\n                }\n                row = {\n                    ...row,\n                    ...candidateKeyResult.outputRow,\n                };\n                const insertOneImplResult = await insert_one_1.insertOneImplNoEvent(table, connection, row);\n                const fetchedRow = await table_1.TableUtil.fetchOne(table, connection, () => ExprLib.eqCandidateKey(table, candidateKeyResult.outputRow));\n                return {\n                    ...insertOneImplResult,\n                    fetchedRow,\n                };\n            }\n            else {\n                const insertOneImplResult = await insert_one_1.insertOneImplNoEvent(table, connection, row);\n                const fetchedRow = await table_1.TableUtil.fetchOne(table, connection, \n                /**\n                 * We use this instead of `eqPrimaryKey()` because it's possible\n                 * for an `AUTO_INCREMENT` column to not be a primary key\n                 * with some databases...\n                 *\n                 * It's also possible for it to not be a candidate key!\n                 */\n                () => ExprLib.eqColumns(table, {\n                    [table.autoIncrement]: insertOneImplResult.insertResult.autoIncrementId,\n                }));\n                return {\n                    ...insertOneImplResult,\n                    fetchedRow,\n                };\n            }\n        });\n    });\n}\n/**\n * Convenience method for\n * ```ts\n *  connection.transactionIfNotInOne(IsolationLevel.REPEATABLE_READ, async (connection) => {\n *      await table.insertOne(connection, ...);\n *      return table.fetchOne(connection, ...);\n *  });\n * ```\n */\nasync function insertAndFetch(table, connection, row, insertAndFetchOptions) {\n    table_1.TableUtil.assertInsertEnabled(table);\n    table_1.TableUtil.assertHasCandidateKey(table);\n    return connection.lock(async (connection) => {\n        const { insertRow, insertResult, fetchedRow, } = await insertAndFetchImplNoEvent((insertAndFetchOptions == undefined ?\n            table :\n            {\n                ...table,\n                ...insertAndFetchOptions,\n            }), connection, row);\n        const fullConnection = connection.tryGetFullConnection();\n        if (fullConnection != undefined) {\n            const { insertEvent, insertOneEvent, } = insert_one_1.createInsertOneEvents(table, fullConnection, insertRow, insertResult);\n            await fullConnection.eventEmitters.onInsert.invoke(insertEvent);\n            await fullConnection.eventEmitters.onInsertOne.invoke(insertOneEvent);\n            await fullConnection.eventEmitters.onInsertAndFetch.invoke(new event_1.InsertAndFetchEvent({\n                connection: fullConnection,\n                table,\n                insertRow: insertOneEvent.insertRow,\n                insertResult: insertOneEvent.insertResult,\n                fetchedRow: fetchedRow,\n            }));\n        }\n        return fetchedRow;\n    });\n}\nexports.insertAndFetch = insertAndFetch;\n//# sourceMappingURL=insert-and-fetch.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst table_1 = require(\"../../../table\");\nconst insert_1 = require(\"../../../insert\");\nconst event_1 = require(\"../../../event\");\n/**\n * Inserts zero-to-many rows\n * ```sql\n *  INSERT IGNORE INTO\n *      myTable (...column_list)\n *  VALUES\n *      ...row_list;\n * ```\n */\nasync function insertIgnoreMany(table, connection, rows) {\n    table_1.TableUtil.assertInsertEnabled(table);\n    if (rows.length == 0) {\n        return {\n            query: {\n                /**\n                 * No rows were inserted.\n                 * No SQL string was execute.\n                 */\n                sql: \"\",\n            },\n            insertedRowCount: tm.BigInt(0),\n            /**\n             * Should this be considered a warning?\n             * Probably not.\n             */\n            warningCount: tm.BigInt(0),\n            message: \"No rows to insert\",\n        };\n    }\n    return connection.lock(async (connection) => {\n        const insertRows = rows.map(row => insert_1.InsertUtil.cleanInsertRow(table, row));\n        const insertResult = await connection.insertIgnoreMany(table, insertRows);\n        if (!tm.BigIntUtil.equal(insertResult.insertedRowCount, tm.BigInt(0))) {\n            const fullConnection = connection.tryGetFullConnection();\n            if (fullConnection != undefined) {\n                await fullConnection.eventEmitters.onInsert.invoke(new event_1.InsertEvent({\n                    connection: fullConnection,\n                    table,\n                    insertRows,\n                    insertResult,\n                }));\n            }\n        }\n        return insertResult;\n    });\n}\nexports.insertIgnoreMany = insertIgnoreMany;\n//# sourceMappingURL=insert-ignore-many.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst table_1 = require(\"../../../table\");\nconst insert_1 = require(\"../../../insert\");\nconst insert_one_1 = require(\"./insert-one\");\nfunction isIgnoredResult(result) {\n    return tm.BigIntUtil.equal(result.insertedRowCount, tm.BigInt(0));\n}\nfunction isInsertOneResult(result) {\n    return !isIgnoredResult(result);\n}\n/**\n * Does not invoke events.\n */\nasync function insertIgnoreOneImpl(table, connection, row) {\n    table_1.TableUtil.assertInsertEnabled(table);\n    /**\n     * Should contain only `BuiltInExpr` now\n     */\n    row = insert_1.InsertUtil.cleanInsertRow(table, row);\n    if (table.autoIncrement == undefined) {\n        return {\n            insertRow: row,\n            insertResult: await connection.insertIgnoreOne(table, row),\n        };\n    }\n    const explicitAutoIncrementValue = row[table.autoIncrement];\n    if (explicitAutoIncrementValue === undefined) {\n        const insertIgnoreResult = await connection.insertIgnoreOne(table, row);\n        if (isIgnoredResult(insertIgnoreResult)) {\n            return {\n                insertRow: row,\n                insertResult: {\n                    ...insertIgnoreResult,\n                    [table.autoIncrement]: insertIgnoreResult.autoIncrementId,\n                },\n            };\n        }\n        if (insertIgnoreResult.autoIncrementId != undefined) {\n            return {\n                insertRow: row,\n                insertResult: {\n                    ...insertIgnoreResult,\n                    [table.autoIncrement]: insertIgnoreResult.autoIncrementId,\n                },\n            };\n        }\n        /**\n         * @todo Custom error type\n         */\n        throw new Error(`Successful insertIgnoreOne() to ${table.alias} should return autoIncrementId`);\n    }\n    if (typeof explicitAutoIncrementValue != \"number\" &&\n        typeof explicitAutoIncrementValue != \"string\" &&\n        !tm.TypeUtil.isBigInt(explicitAutoIncrementValue)) {\n        /**\n         * @todo Custom error type\n         */\n        throw new Error(`Explicit autoIncrement value for ${table.alias} must be bigint|number|string`);\n    }\n    const insertIgnoreResult = await connection.insertIgnoreOne(table, row);\n    if (isIgnoredResult(insertIgnoreResult)) {\n        return {\n            insertRow: row,\n            insertResult: {\n                ...insertIgnoreResult,\n                [table.autoIncrement]: insertIgnoreResult.autoIncrementId,\n            },\n        };\n    }\n    if (insertIgnoreResult.autoIncrementId != undefined) {\n        return {\n            insertRow: row,\n            insertResult: {\n                ...insertIgnoreResult,\n                [table.autoIncrement]: insertIgnoreResult.autoIncrementId,\n            },\n        };\n    }\n    const BigInt = tm.TypeUtil.getBigIntFactoryFunctionOrError();\n    /**\n     * User supplied an explicit value for the `AUTO_INCREMENT`/`SERIAL` column, for whatever reason.\n     * Use it.\n     */\n    return {\n        insertRow: row,\n        insertResult: {\n            ...insertIgnoreResult,\n            autoIncrementId: BigInt(explicitAutoIncrementValue),\n            [table.autoIncrement]: BigInt(explicitAutoIncrementValue),\n        },\n    };\n}\n/**\n * Only inserts zero or one row\n * ```sql\n *  INSERT IGNORE INTO\n *      myTable (...column_list)\n *  VALUES\n *      (...value_list);\n * ```\n */\nasync function insertIgnoreOne(table, connection, row) {\n    return connection.lock(async (connection) => {\n        const { insertRow, insertResult, } = await insertIgnoreOneImpl(table, connection, row);\n        if (isInsertOneResult(insertResult)) {\n            const fullConnection = connection.tryGetFullConnection();\n            if (fullConnection != undefined) {\n                const { insertEvent, insertOneEvent, } = insert_one_1.createInsertOneEvents(table, fullConnection, insertRow, insertResult);\n                await fullConnection.eventEmitters.onInsert.invoke(insertEvent);\n                await fullConnection.eventEmitters.onInsertOne.invoke(insertOneEvent);\n            }\n        }\n        return insertResult;\n    });\n}\nexports.insertIgnoreOne = insertIgnoreOne;\n//# sourceMappingURL=insert-ignore-one.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst table_1 = require(\"../../../table\");\nconst insert_1 = require(\"../../../insert\");\nconst event_1 = require(\"../../../event\");\n/**\n * Inserts zero-to-many rows\n * ```sql\n *  INSERT INTO\n *      myTable (...column_list)\n *  VALUES\n *      ...row_list;\n * ```\n */\nasync function insertMany(table, connection, rows) {\n    table_1.TableUtil.assertInsertEnabled(table);\n    if (rows.length == 0) {\n        return {\n            query: {\n                /**\n                 * No rows were inserted.\n                 * No SQL string was execute.\n                 */\n                sql: \"\",\n            },\n            insertedRowCount: tm.BigInt(0),\n            /**\n             * Should this be considered a warning?\n             * Probably not.\n             */\n            warningCount: tm.BigInt(0),\n            message: \"No rows to insert\",\n        };\n    }\n    return connection.lock(async (connection) => {\n        const insertRows = rows.map(row => insert_1.InsertUtil.cleanInsertRow(table, row));\n        const insertResult = await connection.insertMany(table, insertRows);\n        const fullConnection = connection.tryGetFullConnection();\n        if (fullConnection != undefined) {\n            await fullConnection.eventEmitters.onInsert.invoke(new event_1.InsertEvent({\n                connection: fullConnection,\n                table,\n                insertRows,\n                insertResult,\n            }));\n        }\n        return insertResult;\n    });\n}\nexports.insertMany = insertMany;\n//# sourceMappingURL=insert-many.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst table_1 = require(\"../../../table\");\nconst insert_1 = require(\"../../../insert\");\nconst data_type_1 = require(\"../../../data-type\");\nconst event_1 = require(\"../../../event\");\nasync function insertOneImplNoEvent(table, connection, row) {\n    table_1.TableUtil.assertInsertEnabled(table);\n    /**\n     * Should contain only `BuiltInExpr` now\n     */\n    row = insert_1.InsertUtil.cleanInsertRow(table, row);\n    if (table.autoIncrement == undefined) {\n        return {\n            insertRow: row,\n            insertResult: await connection.insertOne(table, row),\n        };\n    }\n    let explicitAutoIncrementBuiltInExpr = row[table.autoIncrement];\n    if (explicitAutoIncrementBuiltInExpr === undefined) {\n        const insertResult = await connection.insertOne(table, row);\n        if (insertResult.autoIncrementId != undefined) {\n            return {\n                insertRow: row,\n                insertResult: {\n                    ...insertResult,\n                    [table.autoIncrement]: insertResult.autoIncrementId,\n                },\n            };\n        }\n        /**\n         * @todo Custom error type\n         */\n        throw new Error(`Successful insertOne() to ${table.alias} should return autoIncrementId`);\n    }\n    explicitAutoIncrementBuiltInExpr = await data_type_1.DataTypeUtil.evaluateCustomExpr(table.columns[table.autoIncrement], connection, explicitAutoIncrementBuiltInExpr);\n    const autoIncrementBigInt = tm.BigInt(explicitAutoIncrementBuiltInExpr);\n    const insertResult = await connection.insertOne(table, {\n        ...row,\n        [table.autoIncrement]: explicitAutoIncrementBuiltInExpr,\n    });\n    /**\n     * We defer to the `autoIncrementId` of the `insertResult`.\n     * We assume the `connection` always knows best.\n     */\n    if (insertResult.autoIncrementId != undefined) {\n        return {\n            insertRow: row,\n            insertResult: {\n                ...insertResult,\n                [table.autoIncrement]: insertResult.autoIncrementId,\n            },\n        };\n    }\n    /**\n     * User supplied an explicit value for the `AUTO_INCREMENT`/`SERIAL` column, for whatever reason.\n     * Use it.\n     */\n    return {\n        insertRow: row,\n        insertResult: {\n            ...insertResult,\n            autoIncrementId: autoIncrementBigInt,\n            [table.autoIncrement]: autoIncrementBigInt,\n        },\n    };\n}\nexports.insertOneImplNoEvent = insertOneImplNoEvent;\nfunction createInsertOneEvents(table, fullConnection, insertRow, insertResult) {\n    const augmentedInsertRow = (table.autoIncrement == undefined ?\n        insertRow :\n        {\n            ...insertRow,\n            /**\n             * The column may be specified to be `string|number|bigint`.\n             * So, we need to use the column's mapper,\n             * to get the desired data type.\n             */\n            [table.autoIncrement]: table.columns[table.autoIncrement].mapper(`${table.alias}.${table.autoIncrement}`, \n            /**\n             * This **should** be `bigint`\n             */\n            insertResult.autoIncrementId),\n        });\n    const insertEvent = new event_1.InsertEvent({\n        connection: fullConnection,\n        table,\n        insertRows: [augmentedInsertRow],\n        insertResult,\n    });\n    const insertOneEvent = new event_1.InsertOneEvent({\n        connection: fullConnection,\n        table,\n        insertRow: augmentedInsertRow,\n        insertResult,\n    });\n    return {\n        insertEvent,\n        insertOneEvent,\n    };\n}\nexports.createInsertOneEvents = createInsertOneEvents;\n/**\n * Only inserts one row\n * ```sql\n *  INSERT INTO\n *      myTable (...column_list)\n *  VALUES\n *      (...value_list);\n * ```\n */\nasync function insertOne(table, connection, row) {\n    return connection.lock(async (connection) => {\n        const { insertRow, insertResult, } = await insertOneImplNoEvent(table, connection, row);\n        const fullConnection = connection.tryGetFullConnection();\n        if (fullConnection != undefined) {\n            const { insertEvent, insertOneEvent, } = createInsertOneEvents(table, fullConnection, insertRow, insertResult);\n            await fullConnection.eventEmitters.onInsert.invoke(insertEvent);\n            await fullConnection.eventEmitters.onInsertOne.invoke(insertOneEvent);\n        }\n        return insertResult;\n    });\n}\nexports.insertOne = insertOne;\n//# sourceMappingURL=insert-one.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst table_1 = require(\"../../../table\");\nconst insert_1 = require(\"../../../insert\");\nconst event_1 = require(\"../../../event\");\n/**\n * Inserts/Replaces zero-to-many rows\n * ```sql\n *  REPLACE INTO\n *      myTable (...column_list)\n *  VALUES\n *      ...row_list;\n * ```\n */\nasync function replaceMany(table, connection, rows) {\n    table_1.TableUtil.assertInsertEnabled(table);\n    table_1.TableUtil.assertDeleteEnabled(table);\n    if (rows.length == 0) {\n        return {\n            query: {\n                /**\n                 * No rows were inserted.\n                 * No SQL string was execute.\n                 */\n                sql: \"\",\n            },\n            insertedOrReplacedRowCount: tm.BigInt(0),\n            /**\n             * Should this be considered a warning?\n             * Probably not.\n             */\n            warningCount: tm.BigInt(0),\n            message: \"No rows to insert\",\n        };\n    }\n    return connection.lock(async (connection) => {\n        const insertRows = rows.map(row => insert_1.InsertUtil.cleanInsertRow(table, row));\n        const replaceResult = await connection.replaceMany(table, insertRows);\n        const fullConnection = connection.tryGetFullConnection();\n        if (fullConnection != undefined) {\n            await fullConnection.eventEmitters.onReplace.invoke(new event_1.ReplaceEvent({\n                connection: fullConnection,\n                table,\n                insertRows,\n                replaceResult,\n            }));\n        }\n        return replaceResult;\n    });\n}\nexports.replaceMany = replaceMany;\n//# sourceMappingURL=replace-many.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst table_1 = require(\"../../../table\");\nconst insert_1 = require(\"../../../insert\");\nconst data_type_1 = require(\"../../../data-type\");\nconst event_1 = require(\"../../../event\");\nasync function replaceOneImplNoEvent(table, connection, row) {\n    table_1.TableUtil.assertInsertEnabled(table);\n    table_1.TableUtil.assertDeleteEnabled(table);\n    /**\n     * Should contain only `BuiltInExpr` now\n     */\n    row = insert_1.InsertUtil.cleanInsertRow(table, row);\n    if (table.autoIncrement == undefined) {\n        return {\n            insertRow: row,\n            replaceResult: await connection.replaceOne(table, row),\n        };\n    }\n    let explicitAutoIncrementBuiltInExpr = row[table.autoIncrement];\n    if (explicitAutoIncrementBuiltInExpr === undefined) {\n        const replaceResult = await connection.replaceOne(table, row);\n        if (replaceResult.autoIncrementId != undefined) {\n            return {\n                insertRow: row,\n                replaceResult: {\n                    ...replaceResult,\n                    [table.autoIncrement]: replaceResult.autoIncrementId,\n                },\n            };\n        }\n        /**\n         * @todo Custom error type\n         */\n        throw new Error(`Successful replaceOne() to ${table.alias} should return autoIncrementId`);\n    }\n    explicitAutoIncrementBuiltInExpr = await data_type_1.DataTypeUtil.evaluateCustomExpr(table.columns[table.autoIncrement], connection, explicitAutoIncrementBuiltInExpr);\n    const autoIncrementBigInt = tm.BigInt(explicitAutoIncrementBuiltInExpr);\n    const replaceResult = await connection.replaceOne(table, {\n        ...row,\n        [table.autoIncrement]: explicitAutoIncrementBuiltInExpr,\n    });\n    /**\n     * We defer to the `autoIncrementId` of the `replaceResult`.\n     * We assume the `connection` always knows best.\n     */\n    if (replaceResult.autoIncrementId != undefined) {\n        return {\n            insertRow: row,\n            replaceResult: {\n                ...replaceResult,\n                [table.autoIncrement]: replaceResult.autoIncrementId,\n            },\n        };\n    }\n    /**\n     * User supplied an explicit value for the `AUTO_INCREMENT`/`SERIAL` column, for whatever reason.\n     * Use it.\n     */\n    return {\n        insertRow: row,\n        replaceResult: {\n            ...replaceResult,\n            autoIncrementId: autoIncrementBigInt,\n            [table.autoIncrement]: autoIncrementBigInt,\n        },\n    };\n}\nexports.replaceOneImplNoEvent = replaceOneImplNoEvent;\nfunction createReplaceOneEvents(table, fullConnection, insertRow, replaceResult) {\n    const augmentedInsertRow = (table.autoIncrement == undefined ?\n        insertRow :\n        {\n            ...insertRow,\n            /**\n             * The column may be specified to be `string|number|bigint`.\n             * So, we need to use the column's mapper,\n             * to get the desired data type.\n             */\n            [table.autoIncrement]: table.columns[table.autoIncrement].mapper(`${table.alias}.${table.autoIncrement}`, \n            /**\n             * This **should** be `bigint`\n             */\n            replaceResult.autoIncrementId),\n        });\n    const replaceEvent = new event_1.ReplaceEvent({\n        connection: fullConnection,\n        table,\n        insertRows: [augmentedInsertRow],\n        replaceResult,\n    });\n    const replaceOneEvent = new event_1.ReplaceOneEvent({\n        connection: fullConnection,\n        table,\n        insertRow: augmentedInsertRow,\n        replaceResult,\n    });\n    return {\n        replaceEvent,\n        replaceOneEvent,\n    };\n}\nexports.createReplaceOneEvents = createReplaceOneEvents;\n/**\n * Only inserts/replaces one row\n * ```sql\n *  REPLACE INTO\n *      myTable (...column_list)\n *  VALUES\n *      (...value_list);\n * ```\n *\n * The table must allow both `INSERT` and `DELETE`.\n * Replacing a row is essentially deleting the old row and inserting a new row.\n */\nasync function replaceOne(table, connection, row) {\n    return connection.lock(async (connection) => {\n        const { insertRow, replaceResult, } = await replaceOneImplNoEvent(table, connection, row);\n        const fullConnection = connection.tryGetFullConnection();\n        if (fullConnection != undefined) {\n            const { replaceEvent, replaceOneEvent, } = createReplaceOneEvents(table, fullConnection, insertRow, replaceResult);\n            await fullConnection.eventEmitters.onReplace.invoke(replaceEvent);\n            await fullConnection.eventEmitters.onReplaceOne.invoke(replaceOneEvent);\n        }\n        return replaceResult;\n    });\n}\nexports.replaceOne = replaceOne;\n//# sourceMappingURL=replace-one.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./update-and-fetch-one-by-candidate-key\"));\n__export(require(\"./update-and-fetch-one-by-primary-key\"));\n__export(require(\"./update-and-fetch-one-by-super-key\"));\n__export(require(\"./update-and-fetch-one-impl\"));\n__export(require(\"./update-and-fetch-one\"));\n__export(require(\"./update-and-fetch-zero-or-one-by-candidate-key\"));\n__export(require(\"./update-and-fetch-zero-or-one-by-primary-key\"));\n__export(require(\"./update-and-fetch-zero-or-one-by-super-key\"));\n__export(require(\"./update-and-fetch-zero-or-one-impl\"));\n__export(require(\"./update-and-fetch-zero-or-one\"));\n__export(require(\"./update-one\"));\n__export(require(\"./update-zero-or-one\"));\n__export(require(\"./update\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_1 = require(\"../../../table\");\nconst candidate_key_1 = require(\"../../../candidate-key\");\nconst built_in_expr_1 = require(\"../../../built-in-expr\");\nconst ExprLib = require(\"../../../expr-library\");\nconst error_1 = require(\"../../../error\");\nconst update_and_fetch_one_impl_1 = require(\"./update-and-fetch-one-impl\");\n/**\n * Not meant to be called externally\n *\n * @todo Better name\n */\nasync function __updateAndFetchOneByCandidateKeyHelper(table, connection, candidateKey, // & AssertNonUnion<CandidateKeyT>,\nassignmentMapDelegate) {\n    candidateKey = candidate_key_1.CandidateKeyUtil.mapperPreferPrimaryKey(table)(`${table.alias}[candidateKey]`, candidateKey);\n    const assignmentMap = assignmentMapDelegate(table.columns);\n    const newCandidateKey = {};\n    for (const candidateColumnAlias of Object.keys(candidateKey)) {\n        const newCustomExpr = ((Object.prototype.hasOwnProperty.call(assignmentMap, candidateColumnAlias) &&\n            Object.prototype.propertyIsEnumerable.call(assignmentMap, candidateColumnAlias)) ?\n            assignmentMap[candidateColumnAlias] :\n            undefined);\n        if (newCustomExpr === undefined) {\n            /**\n             * This `candidateKey` column's value will not be updated.\n             */\n            newCandidateKey[candidateColumnAlias] = candidateKey[candidateColumnAlias];\n        }\n        else {\n            if (table.mutableColumns.indexOf(candidateColumnAlias) < 0) {\n                throw new Error(`${table.alias}.${candidateColumnAlias} is not a mutable candidate key column`);\n            }\n            /**\n             * This `candidateKey` column's value will be updated.\n             * We need to know what its updated value will be.\n             */\n            if (built_in_expr_1.BuiltInExprUtil.isAnyNonValueExpr(newCustomExpr)) {\n                const evaluatedNewValue = await table_1.TableUtil.fetchValue(table, connection, () => ExprLib.eqCandidateKey(table, candidateKey), () => newCustomExpr).catch((err) => {\n                    if (err instanceof error_1.RowNotFoundError) {\n                        return err;\n                    }\n                    else {\n                        throw err;\n                    }\n                });\n                if (evaluatedNewValue instanceof error_1.RowNotFoundError) {\n                    return {\n                        success: false,\n                        rowNotFoundError: evaluatedNewValue,\n                    };\n                }\n                newCandidateKey[candidateColumnAlias] = table.columns[candidateColumnAlias].mapper(`${table.alias}.${candidateColumnAlias}[newValue]`, evaluatedNewValue);\n            }\n            else {\n                newCandidateKey[candidateColumnAlias] = table.columns[candidateColumnAlias].mapper(`${table.alias}.${candidateColumnAlias}[newValue]`, newCustomExpr);\n            }\n            /**\n             * If it was an expression, it is now a value.\n             */\n            assignmentMap[candidateColumnAlias] = newCandidateKey[candidateColumnAlias];\n        }\n    }\n    return {\n        success: true,\n        curCandidateKey: candidateKey,\n        assignmentMap,\n        newCandidateKey,\n    };\n}\nexports.__updateAndFetchOneByCandidateKeyHelper = __updateAndFetchOneByCandidateKeyHelper;\nasync function updateAndFetchOneByCandidateKey(table, connection, candidateKey, // & AssertNonUnion<CandidateKeyT>,\nassignmentMapDelegate) {\n    return update_and_fetch_one_impl_1.updateAndFetchOneImpl(table, connection, async (connection) => {\n        const helperResult = await __updateAndFetchOneByCandidateKeyHelper(table, connection, candidateKey, assignmentMapDelegate);\n        if (!helperResult.success) {\n            throw helperResult.rowNotFoundError;\n        }\n        const { curCandidateKey, assignmentMap, newCandidateKey, } = helperResult;\n        return {\n            updateWhereDelegate: () => ExprLib.eqCandidateKey(table, curCandidateKey),\n            fetchWhereDelegate: () => ExprLib.eqCandidateKey(table, newCandidateKey),\n            /**\n             * This cast is unsound.\n             * What we have is not `AssignmentMapT`.\n             *\n             * We have a `BuiltInExpr` version of `AssignmentMapT`,\n             * with some parts possibly being evaluated to a value expression.\n             *\n             * However, this will not affect the correctness of\n             * our results.\n             */\n            assignmentMap: assignmentMap,\n        };\n    });\n}\nexports.updateAndFetchOneByCandidateKey = updateAndFetchOneByCandidateKey;\n//# sourceMappingURL=update-and-fetch-one-by-candidate-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_1 = require(\"../../../table\");\nconst ExprLib = require(\"../../../expr-library\");\nconst primary_key_1 = require(\"../../../primary-key\");\nconst error_1 = require(\"../../../error\");\nconst built_in_expr_1 = require(\"../../../built-in-expr\");\nconst update_and_fetch_one_impl_1 = require(\"./update-and-fetch-one-impl\");\n/**\n * Not meant to be called externally\n *\n * @todo Better name\n */\nasync function __updateAndFetchOneByPrimaryKeyHelper(table, connection, primaryKey, assignmentMapDelegate) {\n    primaryKey = primary_key_1.PrimaryKeyUtil.mapper(table)(`${table.alias}[primaryKey]`, primaryKey);\n    const assignmentMap = assignmentMapDelegate(table.columns);\n    const newPrimaryKey = {};\n    for (const primaryColumnAlias of Object.keys(primaryKey)) {\n        const newCustomExpr = ((Object.prototype.hasOwnProperty.call(assignmentMap, primaryColumnAlias) &&\n            Object.prototype.propertyIsEnumerable.call(assignmentMap, primaryColumnAlias)) ?\n            assignmentMap[primaryColumnAlias] :\n            undefined);\n        if (newCustomExpr === undefined) {\n            /**\n             * This `primaryKey` column's value will not be updated.\n             */\n            newPrimaryKey[primaryColumnAlias] = primaryKey[primaryColumnAlias];\n        }\n        else {\n            if (table.mutableColumns.indexOf(primaryColumnAlias) < 0) {\n                throw new Error(`${table.alias}.${primaryColumnAlias} is not a mutable primary key column`);\n            }\n            /**\n             * This `primaryKey` column's value will be updated.\n             * We need to know what its updated value will be.\n             */\n            if (built_in_expr_1.BuiltInExprUtil.isAnyNonValueExpr(newCustomExpr)) {\n                const evaluatedNewValue = await table_1.TableUtil.fetchValue(table, connection, () => ExprLib.eqPrimaryKey(table, primaryKey), () => newCustomExpr).catch((err) => {\n                    if (err instanceof error_1.RowNotFoundError) {\n                        return err;\n                    }\n                    else {\n                        throw err;\n                    }\n                });\n                if (evaluatedNewValue instanceof error_1.RowNotFoundError) {\n                    return {\n                        success: false,\n                        rowNotFoundError: evaluatedNewValue,\n                    };\n                }\n                newPrimaryKey[primaryColumnAlias] = table.columns[primaryColumnAlias].mapper(`${table.alias}.${primaryColumnAlias}[newValue]`, evaluatedNewValue);\n            }\n            else {\n                newPrimaryKey[primaryColumnAlias] = table.columns[primaryColumnAlias].mapper(`${table.alias}.${primaryColumnAlias}[newValue]`, newCustomExpr);\n            }\n            /**\n             * If it was an expression, it is now a value.\n             */\n            assignmentMap[primaryColumnAlias] = newPrimaryKey[primaryColumnAlias];\n        }\n    }\n    return {\n        success: true,\n        curPrimaryKey: primaryKey,\n        assignmentMap,\n        newPrimaryKey,\n    };\n}\nexports.__updateAndFetchOneByPrimaryKeyHelper = __updateAndFetchOneByPrimaryKeyHelper;\nasync function updateAndFetchOneByPrimaryKey(table, connection, primaryKey, assignmentMapDelegate) {\n    return update_and_fetch_one_impl_1.updateAndFetchOneImpl(table, connection, async (connection) => {\n        const helperResult = await __updateAndFetchOneByPrimaryKeyHelper(table, connection, primaryKey, assignmentMapDelegate);\n        if (!helperResult.success) {\n            throw helperResult.rowNotFoundError;\n        }\n        const { curPrimaryKey, assignmentMap, newPrimaryKey, } = helperResult;\n        return {\n            updateWhereDelegate: () => ExprLib.eqPrimaryKey(table, curPrimaryKey),\n            fetchWhereDelegate: () => ExprLib.eqPrimaryKey(table, newPrimaryKey),\n            /**\n             * This cast is unsound.\n             * What we have is not `AssignmentMapT`.\n             *\n             * We have a `BuiltInExpr` version of `AssignmentMapT`,\n             * with some parts possibly being evaluated to a value expression.\n             *\n             * However, this will not affect the correctness of\n             * our results.\n             */\n            assignmentMap: assignmentMap,\n        };\n    });\n}\nexports.updateAndFetchOneByPrimaryKey = updateAndFetchOneByPrimaryKey;\n//# sourceMappingURL=update-and-fetch-one-by-primary-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_1 = require(\"../../../table\");\nconst ExprLib = require(\"../../../expr-library\");\nconst super_key_1 = require(\"../../../super-key\");\nconst error_1 = require(\"../../../error\");\nconst built_in_expr_1 = require(\"../../../built-in-expr\");\nconst update_and_fetch_one_impl_1 = require(\"./update-and-fetch-one-impl\");\n/**\n * Not meant to be called externally\n *\n * @todo Better name\n */\nasync function __updateAndFetchOneBySuperKeyHelper(table, connection, superKey, assignmentMapDelegate) {\n    superKey = super_key_1.SuperKeyUtil.mapper(table)(`${table.alias}[superKey]`, superKey);\n    const assignmentMap = assignmentMapDelegate(table.columns);\n    const newSuperKey = {};\n    for (const superColumnAlias of Object.keys(superKey)) {\n        if (superKey[superColumnAlias] === undefined) {\n            continue;\n        }\n        const newCustomExpr = ((Object.prototype.hasOwnProperty.call(assignmentMap, superColumnAlias) &&\n            Object.prototype.propertyIsEnumerable.call(assignmentMap, superColumnAlias)) ?\n            assignmentMap[superColumnAlias] :\n            undefined);\n        if (newCustomExpr === undefined) {\n            /**\n             * This `superKey` column's value will not be updated.\n             */\n            newSuperKey[superColumnAlias] = superKey[superColumnAlias];\n        }\n        else {\n            if (table.mutableColumns.indexOf(superColumnAlias) < 0) {\n                throw new Error(`${table.alias}.${superColumnAlias} is not a mutable super key column`);\n            }\n            /**\n             * This `superKey` column's value will be updated.\n             * We need to know what its updated value will be.\n             */\n            if (built_in_expr_1.BuiltInExprUtil.isAnyNonValueExpr(newCustomExpr)) {\n                const evaluatedNewValue = await table_1.TableUtil.fetchValue(table, connection, () => ExprLib.eqSuperKey(table, superKey), () => newCustomExpr).catch((err) => {\n                    if (err instanceof error_1.RowNotFoundError) {\n                        return err;\n                    }\n                    else {\n                        throw err;\n                    }\n                });\n                if (evaluatedNewValue instanceof error_1.RowNotFoundError) {\n                    return {\n                        success: false,\n                        rowNotFoundError: evaluatedNewValue,\n                    };\n                }\n                newSuperKey[superColumnAlias] = table.columns[superColumnAlias].mapper(`${table.alias}.${superColumnAlias}[newValue]`, evaluatedNewValue);\n            }\n            else {\n                newSuperKey[superColumnAlias] = table.columns[superColumnAlias].mapper(`${table.alias}.${superColumnAlias}[newValue]`, newCustomExpr);\n            }\n            /**\n             * If it was an expression, it is now a value.\n             */\n            assignmentMap[superColumnAlias] = newSuperKey[superColumnAlias];\n        }\n    }\n    return {\n        success: true,\n        curSuperKey: superKey,\n        assignmentMap,\n        newSuperKey,\n    };\n}\nexports.__updateAndFetchOneBySuperKeyHelper = __updateAndFetchOneBySuperKeyHelper;\nasync function updateAndFetchOneBySuperKey(table, connection, superKey, assignmentMapDelegate) {\n    return update_and_fetch_one_impl_1.updateAndFetchOneImpl(table, connection, async (connection) => {\n        const helperResult = await __updateAndFetchOneBySuperKeyHelper(table, connection, superKey, assignmentMapDelegate);\n        if (!helperResult.success) {\n            throw helperResult.rowNotFoundError;\n        }\n        const { curSuperKey, assignmentMap, newSuperKey, } = helperResult;\n        return {\n            updateWhereDelegate: () => ExprLib.eqSuperKey(table, curSuperKey),\n            fetchWhereDelegate: () => ExprLib.eqSuperKey(table, newSuperKey),\n            /**\n             * This cast is unsound.\n             * What we have is not `AssignmentMapT`.\n             *\n             * We have a `BuiltInExpr` version of `AssignmentMapT`,\n             * with some parts possibly being evaluated to a value expression.\n             *\n             * However, this will not affect the correctness of\n             * our results.\n             */\n            assignmentMap: assignmentMap,\n        };\n    });\n}\nexports.updateAndFetchOneBySuperKey = updateAndFetchOneBySuperKey;\n//# sourceMappingURL=update-and-fetch-one-by-super-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_1 = require(\"../../../table\");\nconst update_one_1 = require(\"./update-one\");\nconst event_1 = require(\"../../../event\");\nconst isolation_level_1 = require(\"../../../isolation-level\");\n/**\n * This should not be called directly by users.\n *\n * A lot can go wrong here...\n */\nasync function updateAndFetchOneImpl(table, connection, initCallback) {\n    return connection.lock(async (connection) => {\n        /**\n         * `REPEATABLE_READ` should be fine because we're not creating any new rows.\n         */\n        const { updateWhereClause, updateResult, assignmentMap, } = await connection.transactionIfNotInOne(isolation_level_1.IsolationLevel.REPEATABLE_READ, async (connection) => {\n            return connection.savepoint(async (connection) => {\n                const { updateWhereDelegate, fetchWhereDelegate, assignmentMap, } = await initCallback(connection);\n                const { whereClause: updateWhereClause, updateResult: updateOneResult, } = await update_one_1.updateOneImplNoEvent(table, connection, updateWhereDelegate, () => assignmentMap);\n                const row = await table_1.TableUtil.__fetchOneHelper(table, connection, fetchWhereDelegate);\n                return {\n                    updateWhereClause,\n                    updateResult: {\n                        ...updateOneResult,\n                        row,\n                    },\n                    assignmentMap,\n                };\n            });\n        });\n        const fullConnection = connection.tryGetFullConnection();\n        if (fullConnection != undefined) {\n            await fullConnection.eventEmitters.onUpdate.invoke(new event_1.UpdateEvent({\n                connection: fullConnection,\n                table,\n                whereClause: updateWhereClause,\n                assignmentMap,\n                updateResult,\n            }));\n            await fullConnection.eventEmitters.onUpdateAndFetch.invoke(new event_1.UpdateAndFetchEvent({\n                connection: fullConnection,\n                table,\n                assignmentMap,\n                updateResult: updateResult,\n            }));\n        }\n        return updateResult;\n    });\n}\nexports.updateAndFetchOneImpl = updateAndFetchOneImpl;\n//# sourceMappingURL=update-and-fetch-one-impl.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_1 = require(\"../../../table\");\nconst ExprLib = require(\"../../../expr-library\");\nconst error_1 = require(\"../../../error\");\nconst update_and_fetch_one_impl_1 = require(\"./update-and-fetch-one-impl\");\nconst unified_query_1 = require(\"../../../unified-query\");\nconst __1 = require(\"../..\");\nconst update_and_fetch_one_by_candidate_key_1 = require(\"./update-and-fetch-one-by-candidate-key\");\n/**\n * Not meant to be called externally\n *\n * @todo Better name\n */\nasync function __updateAndFetchOneHelper(table, connection, whereDelegate, assignmentMapDelegate) {\n    table_1.TableUtil.assertHasCandidateKey(table);\n    /**\n     * Prefer `primaryKey`\n     */\n    const candidateKeyColumnAliases = table.primaryKey != undefined ?\n        table.primaryKey :\n        table.candidateKeys[0];\n    const curCandidateKeyOrError = await __1.ExecutionUtil\n        .fetchOne(unified_query_1.QueryUtil.newInstance()\n        .from(table)\n        .where(whereDelegate)\n        .select((columns) => candidateKeyColumnAliases.map(columnAlias => columns[columnAlias])), connection)\n        .then((curCandidateKey) => {\n        return curCandidateKey;\n    }, (err) => {\n        if (err instanceof error_1.RowNotFoundError) {\n            return err;\n        }\n        else {\n            throw err;\n        }\n    });\n    if (curCandidateKeyOrError instanceof error_1.RowNotFoundError) {\n        return {\n            success: false,\n            rowNotFoundError: curCandidateKeyOrError,\n        };\n    }\n    else {\n        return update_and_fetch_one_by_candidate_key_1.__updateAndFetchOneByCandidateKeyHelper(table, connection, curCandidateKeyOrError, assignmentMapDelegate);\n    }\n}\nexports.__updateAndFetchOneHelper = __updateAndFetchOneHelper;\nasync function updateAndFetchOne(table, connection, whereDelegate, assignmentMapDelegate) {\n    return update_and_fetch_one_impl_1.updateAndFetchOneImpl(table, connection, async (connection) => {\n        const helperResult = await __updateAndFetchOneHelper(table, connection, whereDelegate, assignmentMapDelegate);\n        if (!helperResult.success) {\n            throw helperResult.rowNotFoundError;\n        }\n        const { curCandidateKey, assignmentMap, newCandidateKey, } = helperResult;\n        return {\n            updateWhereDelegate: () => ExprLib.eqCandidateKey(table, curCandidateKey),\n            fetchWhereDelegate: () => ExprLib.eqCandidateKey(table, newCandidateKey),\n            /**\n             * This cast is unsound.\n             * What we have is not `AssignmentMapT`.\n             *\n             * We have a `BuiltInExpr` version of `AssignmentMapT`,\n             * with some parts possibly being evaluated to a value expression.\n             *\n             * However, this will not affect the correctness of\n             * our results.\n             */\n            assignmentMap: assignmentMap,\n        };\n    });\n}\nexports.updateAndFetchOne = updateAndFetchOne;\n//# sourceMappingURL=update-and-fetch-one.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ExprLib = require(\"../../../expr-library\");\nconst update_and_fetch_one_by_candidate_key_1 = require(\"./update-and-fetch-one-by-candidate-key\");\nconst update_and_fetch_zero_or_one_impl_1 = require(\"./update-and-fetch-zero-or-one-impl\");\nasync function updateAndFetchZeroOrOneByCandidateKey(table, connection, candidateKey, // & AssertNonUnion<CandidateKeyT>,\nassignmentMapDelegate) {\n    return update_and_fetch_zero_or_one_impl_1.updateAndFetchZeroOrOneImpl(table, connection, async (connection) => {\n        const helperResult = await update_and_fetch_one_by_candidate_key_1.__updateAndFetchOneByCandidateKeyHelper(table, connection, candidateKey, assignmentMapDelegate);\n        if (!helperResult.success) {\n            return helperResult;\n        }\n        const { curCandidateKey, assignmentMap, newCandidateKey, } = helperResult;\n        return {\n            success: true,\n            updateWhereDelegate: () => ExprLib.eqCandidateKey(table, curCandidateKey),\n            fetchWhereDelegate: () => ExprLib.eqCandidateKey(table, newCandidateKey),\n            /**\n             * This cast is unsound.\n             * What we have is not `AssignmentMapT`.\n             *\n             * We have a `BuiltInExpr` version of `AssignmentMapT`,\n             * with some parts possibly being evaluated to a value expression.\n             *\n             * However, this will not affect the correctness of\n             * our results.\n             */\n            assignmentMap: assignmentMap,\n        };\n    });\n}\nexports.updateAndFetchZeroOrOneByCandidateKey = updateAndFetchZeroOrOneByCandidateKey;\n//# sourceMappingURL=update-and-fetch-zero-or-one-by-candidate-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ExprLib = require(\"../../../expr-library\");\nconst update_and_fetch_one_by_primary_key_1 = require(\"./update-and-fetch-one-by-primary-key\");\nconst update_and_fetch_zero_or_one_impl_1 = require(\"./update-and-fetch-zero-or-one-impl\");\nasync function updateAndFetchZeroOrOneByPrimaryKey(table, connection, primaryKey, assignmentMapDelegate) {\n    return update_and_fetch_zero_or_one_impl_1.updateAndFetchZeroOrOneImpl(table, connection, async (connection) => {\n        const helperResult = await update_and_fetch_one_by_primary_key_1.__updateAndFetchOneByPrimaryKeyHelper(table, connection, primaryKey, assignmentMapDelegate);\n        if (!helperResult.success) {\n            return helperResult;\n        }\n        const { curPrimaryKey, assignmentMap, newPrimaryKey, } = helperResult;\n        return {\n            success: true,\n            updateWhereDelegate: () => ExprLib.eqPrimaryKey(table, curPrimaryKey),\n            fetchWhereDelegate: () => ExprLib.eqPrimaryKey(table, newPrimaryKey),\n            /**\n             * This cast is unsound.\n             * What we have is not `AssignmentMapT`.\n             *\n             * We have a `BuiltInExpr` version of `AssignmentMapT`,\n             * with some parts possibly being evaluated to a value expression.\n             *\n             * However, this will not affect the correctness of\n             * our results.\n             */\n            assignmentMap: assignmentMap,\n        };\n    });\n}\nexports.updateAndFetchZeroOrOneByPrimaryKey = updateAndFetchZeroOrOneByPrimaryKey;\n//# sourceMappingURL=update-and-fetch-zero-or-one-by-primary-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ExprLib = require(\"../../../expr-library\");\nconst update_and_fetch_one_by_super_key_1 = require(\"./update-and-fetch-one-by-super-key\");\nconst update_and_fetch_zero_or_one_impl_1 = require(\"./update-and-fetch-zero-or-one-impl\");\nasync function updateAndFetchZeroOrOneBySuperKey(table, connection, superKey, assignmentMapDelegate) {\n    return update_and_fetch_zero_or_one_impl_1.updateAndFetchZeroOrOneImpl(table, connection, async (connection) => {\n        const helperResult = await update_and_fetch_one_by_super_key_1.__updateAndFetchOneBySuperKeyHelper(table, connection, superKey, assignmentMapDelegate);\n        if (!helperResult.success) {\n            return helperResult;\n        }\n        const { curSuperKey, assignmentMap, newSuperKey, } = helperResult;\n        return {\n            success: true,\n            updateWhereDelegate: () => ExprLib.eqSuperKey(table, curSuperKey),\n            fetchWhereDelegate: () => ExprLib.eqSuperKey(table, newSuperKey),\n            /**\n             * This cast is unsound.\n             * What we have is not `AssignmentMapT`.\n             *\n             * We have a `BuiltInExpr` version of `AssignmentMapT`,\n             * with some parts possibly being evaluated to a value expression.\n             *\n             * However, this will not affect the correctness of\n             * our results.\n             */\n            assignmentMap: assignmentMap,\n        };\n    });\n}\nexports.updateAndFetchZeroOrOneBySuperKey = updateAndFetchZeroOrOneBySuperKey;\n//# sourceMappingURL=update-and-fetch-zero-or-one-by-super-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst table_1 = require(\"../../../table\");\nconst event_1 = require(\"../../../event\");\nconst update_zero_or_one_1 = require(\"./update-zero-or-one\");\nconst isolation_level_1 = require(\"../../../isolation-level\");\n/**\n * This should not be called directly by users.\n *\n * A lot can go wrong here...\n */\nasync function updateAndFetchZeroOrOneImpl(table, connection, initCallback) {\n    return connection.lock(async (connection) => {\n        /**\n         * `REPEATABLE_READ` should be fine because we're not creating any new rows.\n         */\n        const updateAndFetchResult = await connection.transactionIfNotInOne(isolation_level_1.IsolationLevel.REPEATABLE_READ, async (connection) => {\n            return connection.savepoint(async (connection) => {\n                const initResult = await initCallback(connection);\n                if (!initResult.success) {\n                    return {\n                        success: false,\n                        updateResult: {\n                            query: {\n                                sql: initResult.rowNotFoundError.sql,\n                            },\n                            //Alias for affectedRows\n                            foundRowCount: tm.BigInt(0),\n                            //Alias for changedRows\n                            updatedRowCount: tm.BigInt(0),\n                            /**\n                             * May be the duplicate row count, or some other value.\n                             */\n                            warningCount: tm.BigInt(0),\n                            /**\n                             * An arbitrary message.\n                             * May be an empty string.\n                             */\n                            message: \"\",\n                            row: undefined,\n                        },\n                    };\n                }\n                const { updateWhereDelegate, fetchWhereDelegate, assignmentMap, } = initResult;\n                const { whereClause: updateWhereClause, updateResult: updateZeroOrOneResult, } = await update_zero_or_one_1.updateZeroOrOneImplNoEvent(table, connection, updateWhereDelegate, () => assignmentMap);\n                if (tm.BigIntUtil.equal(updateZeroOrOneResult.foundRowCount, tm.BigInt(0))) {\n                    const notFoundUpdateResult = updateZeroOrOneResult;\n                    return {\n                        success: true,\n                        updateWhereClause,\n                        updateResult: {\n                            ...notFoundUpdateResult,\n                            row: undefined,\n                        },\n                        assignmentMap,\n                    };\n                }\n                else {\n                    const updateOneResult = updateZeroOrOneResult;\n                    const row = await table_1.TableUtil.__fetchOneHelper(table, connection, fetchWhereDelegate);\n                    return {\n                        success: true,\n                        updateWhereClause,\n                        updateResult: {\n                            ...updateOneResult,\n                            row,\n                        },\n                        assignmentMap,\n                    };\n                }\n            });\n        });\n        if (!updateAndFetchResult.success) {\n            return updateAndFetchResult.updateResult;\n        }\n        const { updateWhereClause, updateResult, assignmentMap, } = updateAndFetchResult;\n        if (!tm.BigIntUtil.equal(updateResult.updatedRowCount, tm.BigInt(0))) {\n            const fullConnection = connection.tryGetFullConnection();\n            if (fullConnection != undefined) {\n                await fullConnection.eventEmitters.onUpdate.invoke(new event_1.UpdateEvent({\n                    connection: fullConnection,\n                    table,\n                    whereClause: updateWhereClause,\n                    assignmentMap,\n                    updateResult,\n                }));\n                await fullConnection.eventEmitters.onUpdateAndFetch.invoke(new event_1.UpdateAndFetchEvent({\n                    connection: fullConnection,\n                    table,\n                    assignmentMap,\n                    updateResult: updateResult,\n                }));\n            }\n        }\n        return updateResult;\n    });\n}\nexports.updateAndFetchZeroOrOneImpl = updateAndFetchZeroOrOneImpl;\n//# sourceMappingURL=update-and-fetch-zero-or-one-impl.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ExprLib = require(\"../../../expr-library\");\nconst update_and_fetch_zero_or_one_impl_1 = require(\"./update-and-fetch-zero-or-one-impl\");\nconst update_and_fetch_one_1 = require(\"./update-and-fetch-one\");\nasync function updateAndFetchZeroOrOne(table, connection, whereDelegate, assignmentMapDelegate) {\n    return update_and_fetch_zero_or_one_impl_1.updateAndFetchZeroOrOneImpl(table, connection, async (connection) => {\n        const helperResult = await update_and_fetch_one_1.__updateAndFetchOneHelper(table, connection, whereDelegate, assignmentMapDelegate);\n        if (!helperResult.success) {\n            return helperResult;\n        }\n        const { curCandidateKey, assignmentMap, newCandidateKey, } = helperResult;\n        return {\n            success: true,\n            updateWhereDelegate: () => ExprLib.eqCandidateKey(table, curCandidateKey),\n            fetchWhereDelegate: () => ExprLib.eqCandidateKey(table, newCandidateKey),\n            /**\n             * This cast is unsound.\n             * What we have is not `AssignmentMapT`.\n             *\n             * We have a `BuiltInExpr` version of `AssignmentMapT`,\n             * with some parts possibly being evaluated to a value expression.\n             *\n             * However, this will not affect the correctness of\n             * our results.\n             */\n            assignmentMap: assignmentMap,\n        };\n    });\n}\nexports.updateAndFetchZeroOrOne = updateAndFetchZeroOrOne;\n//# sourceMappingURL=update-and-fetch-zero-or-one.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst impl = require(\"./update\");\nconst error_1 = require(\"../../../error\");\nconst event_1 = require(\"../../../event\");\nconst isolation_level_1 = require(\"../../../isolation-level\");\nasync function updateOneImplNoEvent(table, connection, whereDelegate, assignmentMapDelegate) {\n    /**\n     * `READ_UNCOMMITTED` because this should be a simple `UPDATE` statement.\n     * It should execute no other statements.\n     */\n    return connection.transactionIfNotInOne(isolation_level_1.IsolationLevel.READ_UNCOMMITTED, async (connection) => {\n        return connection.savepoint(async (connection) => {\n            const { whereClause, assignmentMap, updateResult, } = await impl.updateImplNoEvent(table, connection, whereDelegate, assignmentMapDelegate);\n            if (tm.BigIntUtil.equal(updateResult.foundRowCount, tm.BigInt(0))) {\n                throw new error_1.RowNotFoundError({\n                    message: `Expected to find one row of ${table.alias}; found ${updateResult.foundRowCount} rows`,\n                    sql: updateResult.query.sql,\n                });\n            }\n            if (tm.BigIntUtil.equal(updateResult.foundRowCount, tm.BigInt(1))) {\n                if (tm.BigIntUtil.equal(updateResult.updatedRowCount, tm.BigInt(0)) ||\n                    tm.BigIntUtil.equal(updateResult.updatedRowCount, tm.BigInt(1))) {\n                    return {\n                        whereClause,\n                        assignmentMap,\n                        updateResult: updateResult,\n                    };\n                }\n                else {\n                    //Should never happen...\n                    throw new Error(`Expected to update zero or one row of ${table.alias}; updated ${updateResult.updatedRowCount}`);\n                }\n            }\n            throw new error_1.TooManyRowsFoundError({\n                message: `Expected to find one row of ${table.alias}; found ${updateResult.foundRowCount} rows`,\n                sql: updateResult.query.sql,\n            });\n        });\n    });\n}\nexports.updateOneImplNoEvent = updateOneImplNoEvent;\nasync function updateOne(table, connection, whereDelegate, assignmentMapDelegate) {\n    return connection.lock(async (connection) => {\n        const { whereClause, assignmentMap, updateResult, } = await updateOneImplNoEvent(table, connection, whereDelegate, assignmentMapDelegate);\n        const fullConnection = connection.tryGetFullConnection();\n        if (fullConnection != undefined) {\n            await fullConnection.eventEmitters.onUpdate.invoke(new event_1.UpdateEvent({\n                connection: fullConnection,\n                table,\n                whereClause,\n                assignmentMap,\n                updateResult,\n            }));\n        }\n        return updateResult;\n    });\n}\nexports.updateOne = updateOne;\n//# sourceMappingURL=update-one.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst impl = require(\"./update\");\nconst error_1 = require(\"../../../error\");\nconst event_1 = require(\"../../../event\");\nconst isolation_level_1 = require(\"../../../isolation-level\");\nasync function updateZeroOrOneImplNoEvent(table, connection, whereDelegate, assignmentMapDelegate) {\n    /**\n     * `READ_UNCOMMITTED` because this should be a simple `UPDATE` statement.\n     * It should execute no other statements.\n     */\n    return connection.transactionIfNotInOne(isolation_level_1.IsolationLevel.READ_UNCOMMITTED, async (connection) => {\n        return connection.savepoint(async (connection) => {\n            const { whereClause, assignmentMap, updateResult, } = await impl.updateImplNoEvent(table, connection, whereDelegate, assignmentMapDelegate);\n            if (tm.BigIntUtil.equal(updateResult.foundRowCount, tm.BigInt(0))) {\n                if (tm.BigIntUtil.equal(updateResult.updatedRowCount, tm.BigInt(0))) {\n                    return {\n                        whereClause,\n                        assignmentMap,\n                        updateResult: updateResult,\n                    };\n                }\n                else {\n                    //Should never happen...\n                    throw new Error(`Expected to update zero rows of ${table.alias}; updated ${updateResult.updatedRowCount}`);\n                }\n            }\n            if (tm.BigIntUtil.equal(updateResult.foundRowCount, tm.BigInt(1))) {\n                if (tm.BigIntUtil.equal(updateResult.updatedRowCount, tm.BigInt(0)) ||\n                    tm.BigIntUtil.equal(updateResult.updatedRowCount, tm.BigInt(1))) {\n                    return {\n                        whereClause,\n                        assignmentMap,\n                        updateResult: updateResult,\n                    };\n                }\n                else {\n                    //Should never happen...\n                    throw new Error(`Expected to update zero or one row of ${table.alias}; updated ${updateResult.updatedRowCount}`);\n                }\n            }\n            throw new error_1.TooManyRowsFoundError({\n                message: `Expected to find one row of ${table.alias}; found ${updateResult.foundRowCount} rows`,\n                sql: updateResult.query.sql,\n            });\n        });\n    });\n}\nexports.updateZeroOrOneImplNoEvent = updateZeroOrOneImplNoEvent;\nasync function updateZeroOrOne(table, connection, whereDelegate, assignmentMapDelegate) {\n    return connection.lock(async (connection) => {\n        const { whereClause, assignmentMap, updateResult, } = await updateZeroOrOneImplNoEvent(table, connection, whereDelegate, assignmentMapDelegate);\n        if (!tm.BigIntUtil.equal(updateResult.updatedRowCount, tm.BigInt(0))) {\n            const fullConnection = connection.tryGetFullConnection();\n            if (fullConnection != undefined) {\n                await fullConnection.eventEmitters.onUpdate.invoke(new event_1.UpdateEvent({\n                    connection: fullConnection,\n                    table,\n                    whereClause,\n                    assignmentMap,\n                    updateResult,\n                }));\n            }\n        }\n        return updateResult;\n    });\n}\nexports.updateZeroOrOne = updateZeroOrOne;\n//# sourceMappingURL=update-zero-or-one.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst where_clause_1 = require(\"../../../where-clause\");\nconst from_clause_1 = require(\"../../../from-clause\");\nconst update_1 = require(\"../../../update\");\nconst event_1 = require(\"../../../event\");\nasync function updateImplNoEvent(table, connection, whereDelegate, assignmentMapDelegate) {\n    const whereClause = where_clause_1.WhereClauseUtil.where(from_clause_1.FromClauseUtil.from(from_clause_1.FromClauseUtil.newInstance(), table), undefined, whereDelegate);\n    const assignmentMap = update_1.UpdateUtil.set(table, assignmentMapDelegate);\n    const updateResult = await connection.update(table, whereClause, assignmentMap);\n    return {\n        whereClause,\n        assignmentMap,\n        updateResult,\n    };\n}\nexports.updateImplNoEvent = updateImplNoEvent;\nasync function update(table, connection, whereDelegate, assignmentMapDelegate) {\n    return connection.lock(async (connection) => {\n        const { whereClause, assignmentMap, updateResult, } = await updateImplNoEvent(table, connection, whereDelegate, assignmentMapDelegate);\n        if (!tm.BigIntUtil.equal(updateResult.updatedRowCount, tm.BigInt(0))) {\n            const fullConnection = connection.tryGetFullConnection();\n            if (fullConnection != undefined) {\n                await fullConnection.eventEmitters.onUpdate.invoke(new event_1.UpdateEvent({\n                    connection: fullConnection,\n                    table,\n                    whereClause,\n                    assignmentMap,\n                    updateResult,\n                }));\n            }\n        }\n        return updateResult;\n    });\n}\nexports.update = update;\n//# sourceMappingURL=update.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst error_1 = require(\"../../../error\");\nconst impl_1 = require(\"./impl\");\nasync function assertExists(query, connection) {\n    const result = await impl_1.existsImpl(query, connection);\n    if (!result.exists) {\n        if (query.fromClause.currentJoins == undefined || query.fromClause.currentJoins.length == 0) {\n            throw new error_1.RowNotFoundError({\n                message: `Row does not exist`,\n                sql: result.sql,\n            });\n        }\n        else {\n            throw new error_1.RowNotFoundError({\n                message: `Row of ${query.fromClause.currentJoins[0].tableAlias} does not exist`,\n                sql: result.sql,\n            });\n        }\n    }\n}\nexports.assertExists = assertExists;\n//# sourceMappingURL=assert-exists.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst query_base_1 = require(\"../../../query-base\");\nconst unified_query_1 = require(\"../../../unified-query\");\nconst fetch_value_1 = require(\"./fetch-value\");\nconst select_clause_1 = require(\"../../../select-clause\");\nconst ExprLib = require(\"../../../expr-library\");\nconst error_1 = require(\"../../../error\");\nconst ast_1 = require(\"../../../ast\");\nconst expr_1 = require(\"../../../expr\");\nconst used_ref_1 = require(\"../../../used-ref\");\nconst paginate_1 = require(\"./paginate\");\n/**\n * @todo Optimize this further?\n * Or keep trusting DBMS execution engine?\n */\nasync function count(query, connection) {\n    /**\n     * The following clauses may have a reference to the `SELECT` clause,\n     *\n     * + `groupByClause`\n     * + `orderByClause`\n     * + `compoundQueryClause`\n     * + `compoundQueryOrderByClause`\n     *\n     */\n    if (query_base_1.QueryBaseUtil.isAfterSelectClause(query)) {\n        return fetch_value_1.fetchValue(unified_query_1.QueryUtil.selectValue(unified_query_1.QueryUtil.newInstance(), () => expr_1.expr({\n            /**\n             * Should not return a value less than zero\n             */\n            mapper: tm.mysql.bigIntUnsigned(),\n            usedRef: used_ref_1.UsedRefUtil.fromColumnRef({}),\n            isAggregate: false,\n        }, ast_1.parentheses(\n        /**\n         * @todo **THIS** is not database agnostic. Change it to a proper AST\n         * @todo Find other such occurrences,\n         * where we assume the implementing DB will be able to execute SQL strings\n         *\n         * This should be fine for now, since most DB engines should be able to handle this.\n         */\n        [\n            \"SELECT COUNT(*) FROM\",\n            ast_1.parentheses(paginate_1.removePaginateArgs(query), false),\n            \"AS tmp\"\n        ], false))), connection);\n    }\n    if (query_base_1.QueryBaseUtil.isBeforeSelectClause(query) &&\n        query_base_1.QueryBaseUtil.isBeforeCompoundQueryClause(query)) {\n        return fetch_value_1.fetchValue({\n            ...query,\n            selectClause: select_clause_1.SelectClauseUtil.selectValue(query.fromClause, query.groupByClause, query.selectClause, () => ExprLib.countAll()),\n            compoundQueryClause: query.compoundQueryClause,\n        }, connection);\n    }\n    else {\n        //This should never happen...\n        if (query.fromClause.currentJoins == undefined || query.fromClause.currentJoins.length == 0) {\n            throw new error_1.CannotCountError({\n                message: `Cannot get count`,\n                sql: undefined,\n            });\n        }\n        else {\n            throw new error_1.CannotCountError({\n                message: `Cannot get count of ${query.fromClause.currentJoins[0].tableAlias}`,\n                sql: undefined,\n            });\n        }\n    }\n}\nexports.count = count;\n//# sourceMappingURL=count.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst paginate_1 = require(\"../paginate\");\n//In case Symbol.asyncIterator is not defined\nif (Symbol.asyncIterator == undefined) {\n    Object.defineProperty(Symbol, \"asyncIterator\", {\n        value: Symbol.for(\"Symbol.asyncIterator\")\n    });\n}\nclass EmulatedCursorImpl {\n    constructor(query, connection, rawArgs) {\n        this.buffer = undefined;\n        this.query = query;\n        this.connection = connection;\n        const args = paginate_1.toPaginateArgs(rawArgs);\n        this.startPage = args.page;\n        this.rowsPerPage = args.rowsPerPage;\n        this.rowOffset = args.rowOffset;\n        this.BigInt = tm.TypeUtil.getBigIntFactoryFunctionOrError();\n        this.rowIndex = 0;\n        if (tm.BigIntUtil.greaterThan(this.rowsPerPage, Number.MAX_SAFE_INTEGER)) {\n            throw new Error(`Cannot safely emulate cursor when buffer size is greater than ${Number.MAX_SAFE_INTEGER}`);\n        }\n    }\n    async getOrFetchBuffer() {\n        if (this.buffer == undefined) {\n            this.rowIndex = 0;\n            this.buffer = await paginate_1.paginate(this.query, this.connection, {\n                page: this.startPage,\n                rowsPerPage: this.rowsPerPage,\n                rowOffset: this.rowOffset,\n            });\n        }\n        return this.buffer;\n    }\n    async tryGetNextRow() {\n        const buffer = await this.getOrFetchBuffer();\n        if (this.rowIndex < buffer.rows.length) {\n            const row = buffer.rows[this.rowIndex];\n            ++this.rowIndex;\n            return row;\n        }\n        else {\n            return undefined;\n        }\n    }\n    async tryFetchNextPage() {\n        const buffer = await this.getOrFetchBuffer();\n        const nextPage = tm.BigIntUtil.add(buffer.info.page, this.BigInt(1));\n        if (tm.BigIntUtil.lessThan(nextPage, buffer.info.pagesFound)) {\n            this.rowIndex = 0;\n            this.buffer = await paginate_1.paginate(this.query, this.connection, {\n                page: nextPage,\n                rowsPerPage: this.rowsPerPage,\n                rowOffset: this.rowOffset,\n            });\n            return buffer;\n        }\n        else {\n            return undefined;\n        }\n    }\n    async next() {\n        /**\n         * Try and get the next row of the current page\n         */\n        const row = await this.tryGetNextRow();\n        if (row !== undefined) {\n            return {\n                done: false,\n                value: row,\n            };\n        }\n        /**\n         * If we're here, we passed the end of the current page\n         */\n        {\n            await this.tryFetchNextPage();\n            const row = await this.tryGetNextRow();\n            if (row !== undefined) {\n                return {\n                    done: false,\n                    value: row,\n                };\n            }\n            else {\n                /**\n                 * We passed the end of the last page\n                 */\n                return {\n                    done: true,\n                    /**\n                     * The `IteratorResult<>` type really needs to be updated...\n                     */\n                    value: undefined,\n                };\n            }\n        }\n    }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n}\nexports.EmulatedCursorImpl = EmulatedCursorImpl;\n//# sourceMappingURL=emulated-cursor-impl.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst emulated_cursor_impl_1 = require(\"./emulated-cursor-impl\");\n/**\n * Considerations:\n * + MySQL **does not** support cursors at the protocol level\n *   + https://github.com/sidorares/node-mysql2/issues/1014\n *   + https://github.com/sidorares/node-mysql2/pull/822#issuecomment-409415308\n *   + https://github.com/sidorares/node-mysql2/blob/9404163b0dc4bdc24f6dddd18144532f41115842/lib/commands/query.js#L239\n *   + https://github.com/mysqljs/mysql/issues/274\n * + Cursors are useful for processing large amounts of data without loading everything into memory at once\n * + Cursors can prevent out-of-memory exceptions, since data is loaded in batches\n *\n * -----\n *\n * Since cursors are not natively supported (by MySQL), we emulate it using pagination.\n * So, we use the `LIMIT` and `OFFSET` clauses, and load rows in batches as we iterate.\n *\n * -----\n *\n * ### Preventing Duplicate Items\n *\n * ```ts\n *  const cursor = myQuery.emulatedCursor();\n *  for await (const row of cursor) {\n *      console.log(row);\n *      //snip operations on `row`\n *  }\n * ```\n *\n * Given the above, we might be expecting output like,\n * ```ts\n * //batch 1\n * > { rowId : 1 }\n * > { rowId : 2 }\n *\n * //batch 2\n * > { rowId : 3 }\n * > { rowId : 4 }\n *\n * //batch n\n * > etc.\n * ```\n *\n * We might actually get,\n * ```ts\n * //batch 1\n * > { rowId : 1 }\n * > { rowId : 2 }\n *\n * //batch 2\n * > { rowId : 2 } //This is a duplicate item, what gives?\n * > { rowId : 3 }\n *\n * //batch 3\n * > { rowId : 4 }\n * > { rowId : 5 }\n *\n * //batch n\n * > etc.\n * ```\n *\n * This can happen for a variety of reasons,\n * + Missing `ORDER BY` clause\n *   + Without an `ORDER BY` clause, the order that rows are returned in is undefined behaviour.\n *   + Rows are retrieved in batches and a row may appear in multiple batches.\n *   + To fix, add an `ORDER BY` clause\n *\n * + Non-unique ordering\n *   + The `ORDER BY` clause may not guarantee a unique ordering\n *   + To fix, modify the `ORDER BY` clause and guarantee a unique ordering\n *\n * + Not using a transaction\n *   + A different connection may have inserted a row into the table you are iterating over\n *\n *     The new row may have pushed other rows \"down\" the table,\n *     causing the next retrieved batch to contain rows already seen.\n *\n *   + To fix, use the cursor in a transaction\n *\n * + Modifying the table being iterated over\n *   + `INSERT/DELETE/UPDATE` statements may modify the table you are iterating over.\n *   + Consider buffering mutations into a temporary table first,\n *     then apply the mutations after you are done iterating.\n *   + Consider performing your mutations in a way that does not interfere with your `ORDER BY` clause.\n *\n * -----\n *\n * With an `ORDER BY` clause that guarantees a unique ordering, you can pretend the above `cursor` code is,\n * ```ts\n * declare const cursor : MyRowT[];\n * for (const row of cursor) {\n *      console.log(row);\n *      //snip operations on `row`\n * }\n * ```\n *\n * Modifying the `cursor` array may cause unexpected behaviour during iteration.\n *\n * There are ways to safely iterate and modify an array at the same time,\n * like iterating backwards while adding elements to the end of the array.\n *\n * -----\n *\n * ### Preventing Infinite Loops\n *\n * ```ts\n *  const cursor = myQuery.emulatedCursor();\n *  for await (const row of cursor) {\n *      console.log(row);\n *      const nextRowId = row.rowId+1;\n *      //INSERT INTO myTable (rowId) VALUES(:nextRowId)\n *  }\n * ```\n *\n * Given the above, it is possible for the loop to never terminate.\n * Or, rather, it will terminate after it uses all the disk space it has access to.\n *\n * -----\n *\n * The above code is similar to the following,\n * ```ts\n *  arr = [1];\n *  for (const i of arr) {\n *      console.log(i);\n *      arr.push(i+1);\n *  }\n * ```\n *\n * This will result in an infinite loop (or crash when out of memory).\n */\nfunction emulatedCursor(query, connection, \n/**\n * If set, determines the starting `page` of the cursor.\n * The `rowsPerPage` setting determines how many rows are buffered into memory at a time.\n */\nrawArgs = {}) {\n    return new emulated_cursor_impl_1.EmulatedCursorImpl(query, connection, rawArgs);\n}\nexports.emulatedCursor = emulatedCursor;\n//# sourceMappingURL=emulated-cursor.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./emulated-cursor-impl\"));\n__export(require(\"./emulated-cursor\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst impl_1 = require(\"./impl\");\nasync function exists(query, connection) {\n    return impl_1.existsImpl(query, connection)\n        .then(({ exists }) => exists);\n}\nexports.exists = exists;\n//# sourceMappingURL=exists.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst impl_1 = require(\"./impl\");\nasync function fetchAllMapped(query, \n/**\n * We need a full `IConnection` to pass to the `MapDelegate`.\n * However, ideally, it would only need to use transaction and `SELECT` statements...\n */\nconnection) {\n    return impl_1.fetchAllMappedImpl(query, connection)\n        .then(({ resultSet }) => resultSet);\n}\nexports.fetchAllMapped = fetchAllMapped;\n//# sourceMappingURL=fetch-all-mapped.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst impl_1 = require(\"./impl\");\nasync function fetchAllUnmappedFlattened(query, connection) {\n    return impl_1.fetchAllUnmappedFlattenedImpl(query, connection)\n        .then(({ resultSet }) => resultSet);\n}\nexports.fetchAllUnmappedFlattened = fetchAllUnmappedFlattened;\n//# sourceMappingURL=fetch-all-unmapped-flattened.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst impl_1 = require(\"./impl\");\nasync function fetchAllUnmapped(query, connection) {\n    return impl_1.fetchAllUnmappedImpl(query, connection)\n        .then(({ resultSet }) => resultSet);\n}\nexports.fetchAllUnmapped = fetchAllUnmapped;\n//# sourceMappingURL=fetch-all-unmapped.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst impl_1 = require(\"./impl\");\n/**\n * Combines `fetchAllUnmappedFlattened()` and `fetchAllMapped()` for convenience.\n */\nfunction fetchAll(query, connection) {\n    return impl_1.fetchAllImpl(query, connection)\n        .then(({ resultSet }) => resultSet);\n}\nexports.fetchAll = fetchAll;\n//# sourceMappingURL=fetch-all.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst impl_1 = require(\"./impl\");\nasync function fetchOneOrUndefined(query, connection) {\n    return impl_1.fetchOneOrImpl(query, connection, undefined)\n        .then(({ row }) => row);\n}\nexports.fetchOneOrUndefined = fetchOneOrUndefined;\n//# sourceMappingURL=fetch-one-or-undefined.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst impl_1 = require(\"./impl\");\nasync function fetchOneOr(query, connection, defaultValue) {\n    return impl_1.fetchOneOrImpl(query, connection, defaultValue)\n        .then(({ row }) => row);\n}\nexports.fetchOneOr = fetchOneOr;\n//# sourceMappingURL=fetch-one-or.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst impl_1 = require(\"./impl\");\nfunction fetchOne(query, connection) {\n    try {\n        const p = impl_1.fetchOneImpl(query, connection);\n        const result = p.then(({ row }) => row);\n        //eslint-disable-next-line @typescript-eslint/unbound-method\n        result.or = (defaultValue) => {\n            //To avoid `unhandled rejection` warnings\n            result.catch(() => { });\n            return p.or(defaultValue).then(({ row }) => row);\n        };\n        //eslint-disable-next-line @typescript-eslint/unbound-method\n        result.orUndefined = () => {\n            return result\n                .or(undefined);\n        };\n        return result;\n    }\n    catch (err) {\n        const result = Promise.reject(err);\n        //eslint-disable-next-line @typescript-eslint/unbound-method\n        result.or = () => {\n            //To avoid `unhandled rejection` warnings\n            result.catch(() => { });\n            return Promise.reject(err);\n        };\n        //eslint-disable-next-line @typescript-eslint/unbound-method\n        result.orUndefined = () => {\n            //To avoid `unhandled rejection` warnings\n            result.catch(() => { });\n            return Promise.reject(err);\n        };\n        return result;\n    }\n}\nexports.fetchOne = fetchOne;\n//# sourceMappingURL=fetch-one.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst impl_1 = require(\"./impl\");\nasync function fetchValueArray(query, connection) {\n    return impl_1.fetchValueArrayImpl(query, connection)\n        .then(({ resultSet }) => resultSet);\n}\nexports.fetchValueArray = fetchValueArray;\n//# sourceMappingURL=fetch-value-array.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst impl_1 = require(\"./impl\");\nasync function fetchValueOrUndefined(query, connection) {\n    return impl_1.fetchValueOrImpl(query, connection, undefined)\n        .then(({ value }) => value);\n}\nexports.fetchValueOrUndefined = fetchValueOrUndefined;\n//# sourceMappingURL=fetch-value-or-undefined.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst impl_1 = require(\"./impl\");\nasync function fetchValueOr(query, connection, defaultValue) {\n    return impl_1.fetchValueOrImpl(query, connection, defaultValue)\n        .then(({ value }) => value);\n}\nexports.fetchValueOr = fetchValueOr;\n//# sourceMappingURL=fetch-value-or.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst impl_1 = require(\"./impl\");\nfunction fetchValue(query, connection) {\n    try {\n        const p = impl_1.fetchValueImpl(query, connection);\n        const result = p.then(({ value }) => value);\n        //eslint-disable-next-line @typescript-eslint/unbound-method\n        result.or = (defaultValue) => {\n            //To avoid `unhandled rejection` warnings\n            result.catch(() => { });\n            return p.or(defaultValue).then(({ value }) => value);\n        };\n        //eslint-disable-next-line @typescript-eslint/unbound-method\n        result.orUndefined = () => {\n            return result\n                .or(undefined);\n        };\n        return result;\n    }\n    catch (err) {\n        const result = Promise.reject(err);\n        //eslint-disable-next-line @typescript-eslint/unbound-method\n        result.or = () => {\n            //To avoid `unhandled rejection` warnings\n            result.catch(() => { });\n            return Promise.reject(err);\n        };\n        //eslint-disable-next-line @typescript-eslint/unbound-method\n        result.orUndefined = () => {\n            //To avoid `unhandled rejection` warnings\n            result.catch(() => { });\n            return Promise.reject(err);\n        };\n        return result;\n    }\n}\nexports.fetchValue = fetchValue;\n//# sourceMappingURL=fetch-value.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst error_1 = require(\"../../../../error\");\n/**\n * @todo Better naming\n */\nfunction ensureOneOr(query, fetched, defaultValue) {\n    const resultSet = fetched.resultSet;\n    if (resultSet.length == 0) {\n        return defaultValue;\n    }\n    else if (resultSet.length == 1) {\n        return resultSet[0];\n    }\n    else {\n        if (query.fromClause.currentJoins == undefined || query.fromClause.currentJoins.length == 0) {\n            throw new error_1.TooManyRowsFoundError({\n                message: `Expected zero or one row, found more than that`,\n                sql: fetched.sql,\n            });\n        }\n        else {\n            throw new error_1.TooManyRowsFoundError({\n                message: `Expected zero or one row from ${query.fromClause.currentJoins[0].tableAlias}, found more than that`,\n                sql: fetched.sql,\n            });\n        }\n    }\n}\nexports.ensureOneOr = ensureOneOr;\n//# sourceMappingURL=ensure-one-or.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst error_1 = require(\"../../../../error\");\n/**\n * @todo Better naming\n */\nfunction ensureOne(query, fetched) {\n    const resultSet = fetched.resultSet;\n    if (resultSet.length == 0) {\n        if (query.fromClause.currentJoins == undefined || query.fromClause.currentJoins.length == 0) {\n            throw new error_1.RowNotFoundError({\n                message: `Expected one row, found zero`,\n                sql: fetched.sql,\n            });\n        }\n        else {\n            throw new error_1.RowNotFoundError({\n                message: `Expected one row from ${query.fromClause.currentJoins[0].tableAlias}, found zero`,\n                sql: fetched.sql,\n            });\n        }\n    }\n    else if (resultSet.length == 1) {\n        return resultSet[0];\n    }\n    else {\n        if (query.fromClause.currentJoins == undefined || query.fromClause.currentJoins.length == 0) {\n            throw new error_1.TooManyRowsFoundError({\n                message: `Expected one row, found more than that`,\n                sql: fetched.sql,\n            });\n        }\n        else {\n            throw new error_1.TooManyRowsFoundError({\n                message: `Expected one row from ${query.fromClause.currentJoins[0].tableAlias}, found more than that`,\n                sql: fetched.sql,\n            });\n        }\n    }\n}\nexports.ensureOne = ensureOne;\n//# sourceMappingURL=ensure-one.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst unified_query_1 = require(\"../../../../unified-query\");\nconst ExprLib = require(\"../../../../expr-library\");\nconst fetch_value_impl_1 = require(\"./fetch-value-impl\");\nasync function existsImpl(query, connection) {\n    const fetched = await fetch_value_impl_1.fetchValueImpl(unified_query_1.QueryUtil.newInstance()\n        .selectValue(() => ExprLib.exists(query)), connection);\n    return {\n        sql: fetched.sql,\n        exists: fetched.value,\n    };\n}\nexports.existsImpl = existsImpl;\n//# sourceMappingURL=exists-impl.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fetch_all_unmapped_flattened_impl_1 = require(\"./fetch-all-unmapped-flattened-impl\");\nconst fetch_all_mapped_impl_1 = require(\"./fetch-all-mapped-impl\");\nfunction fetchAllImpl(query, connection) {\n    if (query.mapDelegate == undefined) {\n        return fetch_all_unmapped_flattened_impl_1.fetchAllUnmappedFlattenedImpl(query, connection);\n    }\n    else {\n        return fetch_all_mapped_impl_1.fetchAllMappedImpl(query, connection);\n    }\n}\nexports.fetchAllImpl = fetchAllImpl;\n//# sourceMappingURL=fetch-all-impl.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fetch_all_unmapped_impl_1 = require(\"./fetch-all-unmapped-impl\");\nasync function fetchAllMappedImpl(query, \n/**\n * We need a full `IConnection` to pass to the `MapDelegate`.\n * However, ideally, it would only need to use transaction and `SELECT` statements...\n */\nconnection) {\n    const unmapped = await fetch_all_unmapped_impl_1.fetchAllUnmappedImpl(query, connection);\n    const unmappedResultSet = unmapped.resultSet;\n    if (unmappedResultSet.length == 0) {\n        return unmapped;\n    }\n    const mappedResultSet = [];\n    for (const unmappedRow of unmappedResultSet) {\n        mappedResultSet.push(await query.mapDelegate(unmappedRow, connection, unmappedRow));\n    }\n    return {\n        sql: unmapped.sql,\n        resultSet: mappedResultSet,\n    };\n}\nexports.fetchAllMappedImpl = fetchAllMappedImpl;\n//# sourceMappingURL=fetch-all-mapped-impl.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst predicate_1 = require(\"../../predicate\");\nconst fetch_all_unmapped_impl_1 = require(\"./fetch-all-unmapped-impl\");\nasync function fetchAllUnmappedFlattenedImpl(query, connection) {\n    const unmapped = await fetch_all_unmapped_impl_1.fetchAllUnmappedImpl(query, connection);\n    const unmappedResultSet = unmapped.resultSet;\n    if (unmappedResultSet.length == 0 || !predicate_1.canFlattenUnmappedRow(query)) {\n        return unmapped;\n    }\n    return {\n        sql: unmapped.sql,\n        resultSet: unmappedResultSet.map(unmappedRow => {\n            const flattened = {};\n            for (const tableAlias of Object.keys(unmappedRow)) {\n                const table = unmappedRow[tableAlias];\n                if (table == undefined) {\n                    continue;\n                }\n                for (const columnAlias of Object.keys(table)) {\n                    flattened[columnAlias] = table[columnAlias];\n                }\n            }\n            return flattened;\n        }),\n    };\n}\nexports.fetchAllUnmappedFlattenedImpl = fetchAllUnmappedFlattenedImpl;\n//# sourceMappingURL=fetch-all-unmapped-flattened-impl.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_ref_1 = require(\"../../../../column-ref\");\nconst constants_1 = require(\"../../../../constants\");\nasync function fetchAllUnmappedImpl(query, connection) {\n    const rawResult = await connection.select(query);\n    const hasNullableJoins = (query.fromClause.currentJoins == undefined) ?\n        false :\n        query.fromClause.currentJoins.some(j => j.nullable);\n    const ref = column_ref_1.ColumnRefUtil.fromSelectClause(query.selectClause);\n    const rows = [];\n    for (const rawRow of rawResult.rows) {\n        const row = {};\n        for (const k of Object.keys(rawRow)) {\n            const separatorIndex = k.indexOf(constants_1.SEPARATOR);\n            const tableAlias = k.substr(0, separatorIndex);\n            const columnAlias = k.substr(separatorIndex + constants_1.SEPARATOR.length);\n            try {\n                const value = ref[tableAlias][columnAlias].mapper(`${tableAlias}.${columnAlias}`, rawRow[k]);\n                let table = row[tableAlias];\n                if (table == undefined) {\n                    table = {};\n                    row[tableAlias] = table;\n                }\n                table[columnAlias] = value;\n            }\n            catch (err) {\n                Object.defineProperty(err, \"sql\", {\n                    value: rawResult.query.sql,\n                    enumerable: false,\n                    writable: true,\n                });\n                throw err;\n            }\n        }\n        if (hasNullableJoins) {\n            for (const tableAlias of Object.keys(row)) {\n                if (query.fromClause.currentJoins != undefined &&\n                    query.fromClause.currentJoins.findIndex(j => j.tableAlias == tableAlias) < 0) {\n                    //Probably `$aliased`\n                    continue;\n                }\n                if (query.fromClause.currentJoins != undefined) {\n                    const join = query.fromClause.currentJoins.find(j => j.tableAlias == tableAlias);\n                    if (join != undefined && !join.nullable) {\n                        //This is not a nullable join, do not make it `undefined`,\n                        //no matter what.\n                        continue;\n                    }\n                }\n                const map = row[tableAlias];\n                if (map == undefined) {\n                    continue;\n                }\n                const allNull = Object.keys(map)\n                    .every(columnAlias => map[columnAlias] === null);\n                if (allNull) {\n                    row[tableAlias] = undefined;\n                }\n            }\n        }\n        rows.push(row);\n    }\n    return {\n        sql: rawResult.query.sql,\n        resultSet: rows,\n    };\n}\nexports.fetchAllUnmappedImpl = fetchAllUnmappedImpl;\n//# sourceMappingURL=fetch-all-unmapped-impl.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst try_set_limit_2_1 = require(\"./try-set-limit-2\");\nconst fetch_all_impl_1 = require(\"./fetch-all-impl\");\nconst ensure_one_1 = require(\"./ensure-one\");\nconst ensure_one_or_1 = require(\"./ensure-one-or\");\nfunction fetchOneImpl(query, connection) {\n    try {\n        const limitedQuery = try_set_limit_2_1.trySetLimit2(query);\n        const p = fetch_all_impl_1.fetchAllImpl(limitedQuery, connection);\n        const result = p\n            .then((fetched) => {\n            return {\n                sql: fetched.sql,\n                row: ensure_one_1.ensureOne(limitedQuery, fetched),\n            };\n        });\n        //eslint-disable-next-line @typescript-eslint/unbound-method\n        result.or = (defaultValue) => {\n            //To avoid `unhandled rejection` warnings\n            result.catch(() => { });\n            return p\n                .then((fetched) => {\n                return {\n                    sql: fetched.sql,\n                    row: ensure_one_or_1.ensureOneOr(limitedQuery, fetched, defaultValue),\n                };\n            });\n        };\n        //eslint-disable-next-line @typescript-eslint/unbound-method\n        result.orUndefined = () => {\n            return result.or(undefined);\n        };\n        return result;\n    }\n    catch (err) {\n        const result = Promise.reject(err);\n        //eslint-disable-next-line @typescript-eslint/unbound-method\n        result.or = () => {\n            //To avoid `unhandled rejection` warnings\n            result.catch(() => { });\n            return Promise.reject(err);\n        };\n        //eslint-disable-next-line @typescript-eslint/unbound-method\n        result.orUndefined = () => {\n            //To avoid `unhandled rejection` warnings\n            result.catch(() => { });\n            return Promise.reject(err);\n        };\n        return result;\n    }\n}\nexports.fetchOneImpl = fetchOneImpl;\n//# sourceMappingURL=fetch-one-impl.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fetch_one_impl_1 = require(\"./fetch-one-impl\");\nasync function fetchOneOrImpl(query, connection, defaultValue) {\n    return fetch_one_impl_1.fetchOneImpl(query, connection)\n        .or(defaultValue);\n}\nexports.fetchOneOrImpl = fetchOneOrImpl;\n//# sourceMappingURL=fetch-one-or-impl.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst query_base_1 = require(\"../../../../query-base\");\nconst fetch_all_unmapped_impl_1 = require(\"./fetch-all-unmapped-impl\");\nasync function fetchValueArrayImpl(query, connection) {\n    if (!query_base_1.QueryBaseUtil.isOneSelectItem(query)) {\n        throw new Error(`Expected query with one select item`);\n    }\n    const unmapped = await fetch_all_unmapped_impl_1.fetchAllUnmappedImpl(query, connection);\n    const resultSet = unmapped.resultSet;\n    if (resultSet.length == 0) {\n        return {\n            sql: unmapped.sql,\n            resultSet: [],\n        };\n    }\n    /**\n     * This should always be a `string` if\n     * `isOneSelectItem()` and `fetchAllUnmappedImpl()` are working\n     * correctly.\n     */\n    const tableAlias = Object.keys(resultSet[0])[0];\n    const columnAlias = Object.keys(resultSet[0][tableAlias])[0];\n    return {\n        sql: unmapped.sql,\n        resultSet: resultSet.map((row) => row[tableAlias][columnAlias]),\n    };\n}\nexports.fetchValueArrayImpl = fetchValueArrayImpl;\n//# sourceMappingURL=fetch-value-array-impl.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst try_set_limit_2_1 = require(\"./try-set-limit-2\");\nconst fetch_value_array_impl_1 = require(\"./fetch-value-array-impl\");\nconst ensure_one_1 = require(\"./ensure-one\");\nconst ensure_one_or_1 = require(\"./ensure-one-or\");\nfunction fetchValueImpl(query, connection) {\n    try {\n        const limitedQuery = try_set_limit_2_1.trySetLimit2(query);\n        const p = fetch_value_array_impl_1.fetchValueArrayImpl(limitedQuery, connection);\n        const result = p\n            .then((fetched) => {\n            return {\n                sql: fetched.sql,\n                value: ensure_one_1.ensureOne(limitedQuery, fetched),\n            };\n        });\n        //eslint-disable-next-line @typescript-eslint/unbound-method\n        result.or = (defaultValue) => {\n            //To avoid `unhandled rejection` warnings\n            result.catch(() => { });\n            return p\n                .then((fetched) => {\n                return {\n                    sql: fetched.sql,\n                    value: ensure_one_or_1.ensureOneOr(limitedQuery, fetched, defaultValue),\n                };\n            });\n        };\n        //eslint-disable-next-line @typescript-eslint/unbound-method\n        result.orUndefined = () => {\n            return result.or(undefined);\n        };\n        return result;\n    }\n    catch (err) {\n        const result = Promise.reject(err);\n        //eslint-disable-next-line @typescript-eslint/unbound-method\n        result.or = () => {\n            //To avoid `unhandled rejection` warnings\n            result.catch(() => { });\n            return Promise.reject(err);\n        };\n        //eslint-disable-next-line @typescript-eslint/unbound-method\n        result.orUndefined = () => {\n            //To avoid `unhandled rejection` warnings\n            result.catch(() => { });\n            return Promise.reject(err);\n        };\n        return result;\n    }\n}\nexports.fetchValueImpl = fetchValueImpl;\n//# sourceMappingURL=fetch-value-impl.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fetch_value_impl_1 = require(\"./fetch-value-impl\");\nasync function fetchValueOrImpl(query, connection, defaultValue) {\n    return fetch_value_impl_1.fetchValueImpl(query, connection)\n        .or(defaultValue);\n}\nexports.fetchValueOrImpl = fetchValueOrImpl;\n//# sourceMappingURL=fetch-value-or-impl.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./ensure-one-or\"));\n__export(require(\"./ensure-one\"));\n__export(require(\"./exists-impl\"));\n__export(require(\"./fetch-all-mapped-impl\"));\n__export(require(\"./fetch-all-unmapped-flattened-impl\"));\n__export(require(\"./fetch-all-unmapped-impl\"));\n__export(require(\"./fetch-all-impl\"));\n__export(require(\"./fetch-one-or-impl\"));\n__export(require(\"./fetch-one-impl\"));\n__export(require(\"./fetch-value-array-impl\"));\n__export(require(\"./fetch-value-or-impl\"));\n__export(require(\"./fetch-value-impl\"));\n__export(require(\"./try-set-limit-2\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst limit_clause_1 = require(\"../../../../limit-clause\");\n/**\n * We use `LIMIT 2`,\n * because if we fetch more than one row,\n * we've messed up.\n *\n * But I don't want to fetch 1 million rows if we mess up.\n * This limits our failure.\n *\n * @todo Better naming\n */\nfunction trySetLimit2(query) {\n    const limitedQuery = (query.compoundQueryClause == undefined ?\n        (query.limitClause == undefined ?\n            {\n                ...query,\n                limitClause: limit_clause_1.LimitClauseUtil.limitNumber(undefined, 2),\n            } :\n            /**\n             * The user already specified a custom limit.\n             * We don't want to mess with it.\n             *\n             * @todo Decide if we **should** mess with it anyway?\n             * If they set it to `LIMIT 0/1/2`, there's no real reason to mess with it.\n             * But any higher?\n             *\n             * An explicit `LIMIT 1000000` can safely be changed to `LIMIT 2`, though.\n             */\n            query) :\n        (query.compoundQueryLimitClause == undefined ?\n            {\n                ...query,\n                compoundQueryLimitClause: limit_clause_1.LimitClauseUtil.limitNumber(undefined, 2),\n            } :\n            /**\n             * The user already specified a custom limit.\n             * We don't want to mess with it.\n             *\n             * @todo Decide if we **should** mess with it anyway?\n             * If they set it to `LIMIT 0/1/2`, there's no real reason to mess with it.\n             * But any higher?\n             *\n             * An explicit `LIMIT 1000000` can safely be changed to `LIMIT 2`, though.\n             */\n            query));\n    return limitedQuery;\n}\nexports.trySetLimit2 = trySetLimit2;\n//# sourceMappingURL=try-set-limit-2.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./emulated-cursor\"));\n__export(require(\"./impl\"));\n__export(require(\"./paginate\"));\n__export(require(\"./assert-exists\"));\n__export(require(\"./count\"));\n__export(require(\"./exists\"));\n__export(require(\"./fetch-all-mapped\"));\n__export(require(\"./fetch-all-unmapped-flattened\"));\n__export(require(\"./fetch-all-unmapped\"));\n__export(require(\"./fetch-all\"));\n__export(require(\"./fetch-one-or-undefined\"));\n__export(require(\"./fetch-one-or\"));\n__export(require(\"./fetch-one\"));\n__export(require(\"./fetch-value-array\"));\n__export(require(\"./fetch-value-or-undefined\"));\n__export(require(\"./fetch-value-or\"));\n__export(require(\"./fetch-value\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst paginate_args_1 = require(\"./paginate-args\");\nconst limit_clause_1 = require(\"../../../../limit-clause\");\nfunction applyPaginateArgs(query, args) {\n    const paginateLimitClause = limit_clause_1.LimitClauseUtil.offsetBigInt(limit_clause_1.LimitClauseUtil.limitBigInt(undefined, args.rowsPerPage), paginate_args_1.getPaginationStart(args));\n    if (query.compoundQueryClause == undefined) {\n        return {\n            ...query,\n            limitClause: paginateLimitClause,\n            compoundQueryLimitClause: undefined,\n        };\n    }\n    else {\n        return {\n            ...query,\n            compoundQueryLimitClause: paginateLimitClause,\n        };\n    }\n}\nexports.applyPaginateArgs = applyPaginateArgs;\n//# sourceMappingURL=apply-paginate-args.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./apply-paginate-args\"));\n__export(require(\"./paginate-args\"));\n__export(require(\"./paginate\"));\n__export(require(\"./remove-paginate-args\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\n/**\n * We use `BIGINT SIGNED` because PostgreSQL and SQLite do not support\n * `BIGINT UNSIGNED`.\n */\nconst maybePage = tm.mysql.bigIntSigned().orUndefined();\nconst maybeRowsPerPage = tm.mysql.bigIntSigned().orUndefined();\nconst maybeRowOffset = tm.mysql.bigIntSigned().orUndefined();\nfunction toPaginateArgs(rawArgs) {\n    const page = maybePage.mapMappable(\"page\", rawArgs.page);\n    const rowsPerPage = maybeRowsPerPage.mapMappable(\"rowsPerPage\", rawArgs.rowsPerPage);\n    const rowOffset = maybeRowOffset.mapMappable(\"rowOffset\", rawArgs.rowOffset);\n    const BigInt = tm.TypeUtil.getBigIntFactoryFunctionOrError();\n    const args = {\n        page: (page == undefined || tm.BigIntUtil.lessThan(page, 0)) ?\n            //Default\n            BigInt(0) :\n            page,\n        rowsPerPage: (rowsPerPage == undefined || tm.BigIntUtil.lessThan(rowsPerPage, 1)) ?\n            //Default\n            BigInt(20) :\n            rowsPerPage,\n        rowOffset: (rowOffset == undefined || tm.BigIntUtil.lessThan(rowOffset, 0)) ?\n            //Default\n            BigInt(0) :\n            rowOffset,\n    };\n    const paginationStart = getPaginationStart(args);\n    if (tm.BigIntUtil.greaterThan(paginationStart, BigInt(\"9223372036854775807\"))) {\n        throw new Error(`Cannot have OFFSET greater than 9223372036854775807`);\n    }\n    return args;\n}\nexports.toPaginateArgs = toPaginateArgs;\n/**\n * It is possible for this value to be greater than\n * `9223372036854775807n`.\n *\n * When this happens, you will get an error from the RDBMS\n */\nfunction getPaginationStart(args) {\n    return tm.BigIntUtil.add(tm.BigIntUtil.mul(args.page, args.rowsPerPage), args.rowOffset);\n}\nexports.getPaginationStart = getPaginationStart;\nfunction calculatePagesFound(args, rowsFound) {\n    const BigInt = tm.TypeUtil.getBigIntFactoryFunctionOrError();\n    if (tm.BigIntUtil.lessThan(rowsFound, 0)) {\n        /**\n         * Should not have negative rows found\n         */\n        return BigInt(0);\n    }\n    if (tm.BigIntUtil.lessThanOrEqual(args.rowsPerPage, 0)) {\n        /**\n         * Avoid divide by zero errors\n         */\n        return BigInt(0);\n    }\n    return (tm.BigIntUtil.add(tm.BigIntUtil.div(rowsFound, args.rowsPerPage), (tm.BigIntUtil.equal(tm.BigIntUtil.mod(rowsFound, args.rowsPerPage), BigInt(0)) ?\n        BigInt(0) :\n        BigInt(1))));\n}\nexports.calculatePagesFound = calculatePagesFound;\n//# sourceMappingURL=paginate-args.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst impl_1 = require(\"../impl\");\nconst paginate_args_1 = require(\"./paginate-args\");\nconst apply_paginate_args_1 = require(\"./apply-paginate-args\");\nconst count_1 = require(\"../count\");\nconst remove_paginate_args_1 = require(\"./remove-paginate-args\");\nasync function paginate(query, connection, rawArgs) {\n    const args = paginate_args_1.toPaginateArgs(rawArgs);\n    const paginateQuery = apply_paginate_args_1.applyPaginateArgs(query, args);\n    const fetched = await impl_1.fetchAllImpl(paginateQuery, connection);\n    const rowsFound = await count_1.count(remove_paginate_args_1.removePaginateArgs(paginateQuery), connection);\n    const pagesFound = paginate_args_1.calculatePagesFound(args, rowsFound);\n    const info = {\n        rowsFound,\n        pagesFound,\n        page: args.page,\n        rowsPerPage: args.rowsPerPage,\n        rowOffset: args.rowOffset,\n    };\n    return {\n        info,\n        /**\n         * @todo Investigate assignability\n         */\n        rows: fetched.resultSet,\n    };\n}\nexports.paginate = paginate;\n//# sourceMappingURL=paginate.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction removePaginateArgs(query) {\n    if (query.compoundQueryClause == undefined) {\n        return {\n            ...query,\n            limitClause: undefined,\n            compoundQueryLimitClause: undefined,\n        };\n    }\n    else {\n        return {\n            ...query,\n            compoundQueryLimitClause: undefined,\n        };\n    }\n}\nexports.removePaginateArgs = removePaginateArgs;\n//# sourceMappingURL=remove-paginate-args.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst select_clause_1 = require(\"../../../select-clause\");\nfunction canFlattenUnmappedRow(query) {\n    if (select_clause_1.SelectClauseUtil.duplicateColumnAlias(query.selectClause).length > 0) {\n        /**\n         * Cannot flatten if we have duplicate `columnAlias`\n         */\n        return false;\n    }\n    if (query.fromClause.currentJoins == undefined) {\n        /**\n         * No `nullable` joins, we can flatten safely\n         */\n        return true;\n    }\n    const hasNullableJoins = query.fromClause.currentJoins.some(j => j.nullable);\n    return !hasNullableJoins;\n}\nexports.canFlattenUnmappedRow = canFlattenUnmappedRow;\n//# sourceMappingURL=can-flatten-unmapped-row.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./can-flatten-unmapped-row\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_1 = require(\"../column\");\nclass ExprColumn {\n    /**\n     * You should never need to explicitly instantiate an `ExprColumn`.\n     *\n     * @param data\n     * @param unaliasedAst\n     */\n    constructor(data, unaliasedAst) {\n        this.tableAlias = data.tableAlias;\n        this.columnAlias = data.columnAlias;\n        this.mapper = data.mapper;\n        this.isAggregate = data.isAggregate;\n        this.unaliasedAst = unaliasedAst;\n    }\n    /**\n     * ```sql\n     * SELECT\n     *  *\n     * FROM\n     *  myTable\n     * ORDER BY\n     *  myTable.myColumn ASC\n     * ```\n     */\n    asc() {\n        return column_1.ColumnUtil.asc(this);\n    }\n    /**\n     * ```sql\n     * SELECT\n     *  *\n     * FROM\n     *  myTable\n     * ORDER BY\n     *  myTable.myColumn DESC\n     * ```\n     */\n    desc() {\n        return column_1.ColumnUtil.desc(this);\n    }\n    /**\n     * ```sql\n     * SELECT\n     *  *\n     * FROM\n     *  myTable\n     * ORDER BY\n     *  myTable.myColumn ASC,\n     *  myTable.myOtherColumn DESC\n     * ```\n     */\n    sort(sortDirection) {\n        return column_1.ColumnUtil.sort(this, sortDirection);\n    }\n}\nexports.ExprColumn = ExprColumn;\n//# sourceMappingURL=expr-column-impl.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./expr-column-impl\"));\nconst ExprColumnUtil = require(\"./util\");\nexports.ExprColumnUtil = ExprColumnUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./predicate\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./is-expr-column\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst type_util_1 = require(\"../../../type-util\");\nconst ast_1 = require(\"../../../ast\");\nfunction isExprColumn(raw) {\n    if (!type_util_1.isObjectWithOwnEnumerableKeys()(raw, [\n        \"tableAlias\",\n        \"columnAlias\",\n        \"mapper\",\n        \"isAggregate\",\n        \"unaliasedAst\",\n    ])) {\n        return false;\n    }\n    return ((typeof raw.tableAlias == \"string\") &&\n        (typeof raw.columnAlias == \"string\") &&\n        (typeof raw.mapper == \"function\") &&\n        (typeof raw.isAggregate == \"boolean\") &&\n        (raw.unaliasedAst == undefined ||\n            ast_1.AstUtil.isAst(raw.unaliasedAst)));\n}\nexports.isExprColumn = isExprColumn;\n//# sourceMappingURL=is-expr-column.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./make-aggregate-operator-0\"));\n__export(require(\"./make-aggregate-operator-1\"));\n__export(require(\"./make-aggregate-operator-2\"));\n__export(require(\"./make-aggregate-operator-3\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst expr_1 = require(\"../../expr\");\nconst ast_1 = require(\"../../ast\");\nconst used_ref_1 = require(\"../../used-ref\");\nfunction makeAggregateOperator0(operatorType, mapper, typeHint) {\n    const result = () => {\n        return expr_1.expr({\n            mapper,\n            usedRef: used_ref_1.UsedRefUtil.fromColumnRef({}),\n            isAggregate: true,\n        }, ast_1.OperatorNodeUtil.operatorNode0(operatorType, typeHint));\n    };\n    return result;\n}\nexports.makeAggregateOperator0 = makeAggregateOperator0;\n//# sourceMappingURL=make-aggregate-operator-0.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nconst expr_1 = require(\"../../expr\");\nconst ast_1 = require(\"../../ast\");\nfunction makeAggregateOperator1(operatorType, mapper, typeHint) {\n    const result = (arg) => {\n        return expr_1.ExprUtil.aggregateIntersect(mapper, [arg], ast_1.OperatorNodeUtil.operatorNode1(operatorType, [\n            built_in_expr_1.BuiltInExprUtil.buildAst(arg),\n        ], typeHint));\n    };\n    return result;\n}\nexports.makeAggregateOperator1 = makeAggregateOperator1;\n//# sourceMappingURL=make-aggregate-operator-1.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nconst expr_1 = require(\"../../expr\");\nconst ast_1 = require(\"../../ast\");\nfunction makeAggregateOperator2(operatorType, mapper, typeHint) {\n    const result = (left, right) => {\n        return expr_1.ExprUtil.aggregateIntersect(mapper, [left, right], ast_1.OperatorNodeUtil.operatorNode2(operatorType, [\n            built_in_expr_1.BuiltInExprUtil.buildAst(left),\n            built_in_expr_1.BuiltInExprUtil.buildAst(right),\n        ], typeHint));\n    };\n    return result;\n}\nexports.makeAggregateOperator2 = makeAggregateOperator2;\n//# sourceMappingURL=make-aggregate-operator-2.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nconst expr_1 = require(\"../../expr\");\nconst ast_1 = require(\"../../ast\");\nfunction makeAggregateOperator3(operatorType, mapper, typeHint) {\n    const result = (left, mid, right) => {\n        return expr_1.ExprUtil.aggregateIntersect(mapper, [left, mid, right], ast_1.OperatorNodeUtil.operatorNode3(operatorType, [\n            built_in_expr_1.BuiltInExprUtil.buildAst(left),\n            built_in_expr_1.BuiltInExprUtil.buildAst(mid),\n            built_in_expr_1.BuiltInExprUtil.buildAst(right),\n        ], typeHint));\n    };\n    return result;\n}\nexports.makeAggregateOperator3 = makeAggregateOperator3;\n//# sourceMappingURL=make-aggregate-operator-3.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst aggregate_factory_1 = require(\"../aggregate-factory\");\n/**\n * Returns a count of the number of rows\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_count\n * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n * + https://www.sqlite.org/lang_aggfunc.html#count\n *\n * -----\n *\n * + MySQL      : `COUNT(*)`\n * + PostgreSQL : `COUNT(*)`\n * + SQLite     : `COUNT(*)`\n *\n * @todo Rename to `count`? or `countRow`?\n * @todo Or add a function `count()` with overloads for `countExpr` and `countAll`?\n */\nexports.countAll = aggregate_factory_1.makeAggregateOperator0(operator_type_1.OperatorType.AGGREGATE_COUNT_ALL, \n/**\n * Should not return a value less than zero\n */\ntm.mysql.bigIntUnsigned());\n//# sourceMappingURL=count-all.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst aggregate_factory_1 = require(\"../aggregate-factory\");\nconst countExprImpl = aggregate_factory_1.makeAggregateOperator2(operator_type_1.OperatorType.AGGREGATE_COUNT_EXPR, \n/**\n * Should not return a value less than zero\n */\ntm.mysql.bigIntUnsigned());\n/**\n * Returns a count of the number of rows with different non-`NULL` values.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_count\n * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n * + https://www.sqlite.org/lang_aggfunc.html#count\n *\n * -----\n *\n * + MySQL      : `COUNT(DISTINCT x)`\n * + PostgreSQL : `COUNT(DISTINCT x)`\n * + SQLite     : `COUNT(DISTINCT x)`\n */\nexports.countExprDistinct = (arg) => {\n    return countExprImpl(true, arg);\n};\n/**\n * Returns a count of the number of rows with non-`NULL` values.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_count\n * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n * + https://www.sqlite.org/lang_aggfunc.html#count\n *\n * -----\n *\n * + MySQL      : `COUNT(x)`\n * + PostgreSQL : `COUNT(x)`\n * + SQLite     : `COUNT(x)`\n */\nexports.countExprAll = (arg) => {\n    return countExprImpl(false, arg);\n};\n/**\n * Returns a count of the number of rows with non-`NULL` values.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_count\n * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n * + https://www.sqlite.org/lang_aggfunc.html#count\n *\n * -----\n *\n * + MySQL      : `COUNT(x)`\n * + PostgreSQL : `COUNT(x)`\n * + SQLite     : `COUNT(x)`\n */\nexports.countExpr = exports.countExprAll;\n//# sourceMappingURL=count-expr.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./count-all\"));\n__export(require(\"./count-expr\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./throw-if-null\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nconst expr_1 = require(\"../../expr\");\nconst ast_1 = require(\"../../ast\");\nconst operator_type_1 = require(\"../../operator-type\");\nfunction throwIfNull(arg) {\n    return expr_1.ExprUtil.intersect(tm.notNull(built_in_expr_1.BuiltInExprUtil.mapper(arg)), [arg], ast_1.OperatorNodeUtil.operatorNode1(operator_type_1.OperatorType.THROW_IF_NULL, [\n        built_in_expr_1.BuiltInExprUtil.buildAst(arg)\n    ], undefined));\n}\nexports.throwIfNull = throwIfNull;\n//# sourceMappingURL=throw-if-null.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst used_ref_1 = require(\"../../used-ref\");\nconst literal_value_node_1 = require(\"../../ast/literal-value-node\");\nconst expr_impl_1 = require(\"../../expr/expr-impl\");\n/**\n * Converts `string|number|bigint|Decimal` to a `BIGINT SIGNED`\n */\nfunction bigIntSignedLiteral(rawBigIntSignedLiteral) {\n    const mapper = tm.mysql.bigIntSigned();\n    const value = mapper(\"rawBigIntSignedLiteral\", String(rawBigIntSignedLiteral));\n    return expr_impl_1.expr({\n        mapper,\n        usedRef: used_ref_1.UsedRefUtil.fromColumnRef({}),\n        isAggregate: false,\n    }, literal_value_node_1.LiteralValueNodeUtil.bigIntSignedLiteralNode(value));\n}\nexports.bigIntSignedLiteral = bigIntSignedLiteral;\n//# sourceMappingURL=bigint-signed-literal.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst used_ref_1 = require(\"../../used-ref\");\nconst literal_value_node_1 = require(\"../../ast/literal-value-node\");\nconst expr_impl_1 = require(\"../../expr/expr-impl\");\n/**\n *\n * @param rawDecimalLiteral\n *\n * @param precision\n * + MySQL's max precision is `65`\n * + PostgreSQL's min precision is `1`\n *\n * @param scale\n * + MySQL's max scale is `30`.\n * + The min scale is `0`.\n * + `scale` must be <= `precision`.\n */\nfunction decimalLiteral(rawDecimalLiteral, \n/**\n * + MySQL's max precision is `65`\n * + PostgreSQL's min precision is `1`\n */\nprecision, \n/**\n * + MySQL's max scale is `30`.\n * + The min scale is `0`.\n * + `scale` must be <= `precision`.\n */\nscale) {\n    return expr_impl_1.expr({\n        mapper: tm.mysql.decimal(precision, scale),\n        usedRef: used_ref_1.UsedRefUtil.fromColumnRef({}),\n        isAggregate: false,\n    }, literal_value_node_1.LiteralValueNodeUtil.decimalLiteralNode(rawDecimalLiteral, precision, scale));\n}\nexports.decimalLiteral = decimalLiteral;\n//# sourceMappingURL=decimal-literal.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./bigint-signed-literal\"));\n__export(require(\"./unsafe-cast-as-decimal\"));\n//export * from \"./cast-as-n-char\";\n__export(require(\"./decimal-literal\"));\n__export(require(\"./unsafe-cast-as-bigint-signed\"));\n__export(require(\"./unsafe-cast-as-binary\"));\n__export(require(\"./unsafe-cast-as-double\"));\n__export(require(\"./unsafe-cast-as-json\"));\n__export(require(\"./unsafe-cast-as-var-char\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\n/**\n * Attempts to cast to `BIGINT SIGNED`.\n *\n * **Behaviour is not unified.**\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#function_cast\n * + https://www.postgresql.org/docs/9.2/datatype.html#DATATYPE-TABLE\n * + https://www.sqlite.org/datatype3.html\n *\n * -----\n *\n * + MySQL          : `CAST(x AS SIGNED INTEGER)`\n *   + Actually gives a signed `bigint`\n *   + Trying to cast `'123e2'` gives `123`\n * + PostgreSQL     : `CAST(x AS bigint)`\n *   + Trying to cast `'123e2'` throws an error\n * + SQLite         : `CAST(x AS BIGINT)`\n *   + Trying to cast `'123e2'` gives `123`\n *\n * -----\n *\n * + https://github.com/AnyhowStep/tsql/issues/15\n * + https://github.com/AnyhowStep/tsql/issues/244\n * + https://github.com/AnyhowStep/tsql/issues/245\n */\nexports.unsafeCastAsBigIntSigned = factory_1.makeOperator1Idempotent(operator_type_1.OperatorType.CAST_AS_BIGINT_SIGNED, tm.mysql.bigIntSigned().orNull());\n//# sourceMappingURL=unsafe-cast-as-bigint-signed.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping/fluent\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\n/**\n * Attempts to cast to `BINARY/bytea/BLOB`.\n *\n * **Behaviour is not unified.**\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#function_cast\n * + https://www.postgresql.org/docs/9.2/datatype.html#DATATYPE-TABLE\n * + https://www.sqlite.org/datatype3.html\n *\n * -----\n *\n * + MySQL          : `CAST(x AS BINARY)`\n *   + `CAST(1234567890 AS BINARY)` returns `[49,50,51,52,53,54,55,56,57,48]`\n *     + Converts to ASCII string first, then to BINARY\n * + PostgreSQL     : `CAST(x AS bytea)`\n *   + `CAST(1234567890 AS bytea)` throws\n * + SQLite         : `CAST(x AS BLOB)`\n *   + `CAST(1234567890 AS BLOB)` returns `[49,50,51,52,53,54,55,56,57,48]`\n *     + Converts to ASCII string first, then to BLOB\n *\n * -----\n *\n * + https://github.com/AnyhowStep/tsql/issues/15\n */\nexports.unsafeCastAsBinary = factory_1.makeOperator1Idempotent(operator_type_1.OperatorType.CAST_AS_BINARY, tm.instanceOfUint8Array().orNull());\n//# sourceMappingURL=unsafe-cast-as-binary.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping/fluent\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nconst expr_1 = require(\"../../expr\");\nconst ast_1 = require(\"../../ast\");\n/**\n * @todo Move this elsewhere?\n */\nfunction assertValidDecimalPrecisionAndScale(\n/**\n * + PostgreSQL's min precision is `1`\n * + MySQL's max precision is `65`\n */\nprecision, \n/**\n * + The min scale is `0`.\n * + MySQL's max scale is `30`.\n * + `scale` must be <= `precision`.\n */\nscale) {\n    const BigInt = tm.TypeUtil.getBigIntFactoryFunctionOrError();\n    const precisionMapper = tm.toBigInt().pipe(tm.bigIntGtEq(BigInt(1)), tm.bigIntLtEq(BigInt(65)));\n    precision = precisionMapper(\"precision\", precision);\n    const scaleMapper = tm.toBigInt().pipe(tm.bigIntGtEq(BigInt(0)), tm.bigIntLtEq(BigInt(30)), tm.bigIntLtEq(precision));\n    scale = scaleMapper(\"scale\", scale);\n    return {\n        precision,\n        scale,\n    };\n}\nexports.assertValidDecimalPrecisionAndScale = assertValidDecimalPrecisionAndScale;\nfunction unsafeCastAsDecimal(arg, \n/**\n * + MySQL's max precision is `65`\n * + PostgreSQL's min precision is `1`\n */\nprecision, \n/**\n * + MySQL's max scale is `30`.\n * + The min scale is `0`.\n * + `scale` must be <= `precision`.\n */\nscale) {\n    const argMapper = built_in_expr_1.BuiltInExprUtil.mapper(arg);\n    const decimalDefinition = assertValidDecimalPrecisionAndScale(precision, scale);\n    return expr_1.expr({\n        mapper: tm.canOutputNull(argMapper) ?\n            tm.mysql.decimal(precision, scale).orNull() :\n            tm.mysql.decimal(precision, scale),\n        usedRef: built_in_expr_1.BuiltInExprUtil.usedRef(arg),\n        isAggregate: built_in_expr_1.BuiltInExprUtil.isAggregate(arg),\n    }, ast_1.OperatorNodeUtil.operatorNode3(operator_type_1.OperatorType.CAST_AS_DECIMAL, [\n        built_in_expr_1.BuiltInExprUtil.buildAst(arg),\n        built_in_expr_1.BuiltInExprUtil.buildAst(decimalDefinition.precision),\n        built_in_expr_1.BuiltInExprUtil.buildAst(decimalDefinition.scale),\n    ], undefined));\n}\nexports.unsafeCastAsDecimal = unsafeCastAsDecimal;\n//# sourceMappingURL=unsafe-cast-as-decimal.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\n/**\n * Attempts to cast to `DOUBLE`.\n *\n * **Behaviour is not unified.**\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#function_cast\n * + https://www.postgresql.org/docs/9.2/datatype.html#DATATYPE-TABLE\n * + https://www.sqlite.org/datatype3.html\n *\n * -----\n *\n * + MySQL 5.7      : `x + 0e0`\n *   + `('qwerty' + 0e0)` returns `0e0`\n *   + `(TRUE + 0e0)` returns `1e0`\n *   + `(9223372036854775807 + 0e0)` returns `9223372036854776000e0`\n * + PostgreSQL     : `CAST(x AS DOUBLE PRECISION)`\n *   + `CAST('qwerty' AS DOUBLE PRECISION)` throws\n *   + `CAST(TRUE AS DOUBLE PRECISION)` throws\n *   + `CAST(9223372036854775807 AS DOUBLE PRECISION)` returns `9223372036854780000e0`\n * + SQLite         : `CAST(x AS DOUBLE)`\n *   + `CAST('qwerty' AS DOUBLE)` returns `0e0`\n *   + `CAST(TRUE AS DOUBLE)` returns `1e0`\n *   + `CAST(9223372036854775807 AS DOUBLE)` returns `9223372036854776000e0`\n *\n * -----\n *\n * + https://github.com/AnyhowStep/tsql/issues/15\n */\nexports.unsafeCastAsDouble = factory_1.makeOperator1Idempotent(operator_type_1.OperatorType.CAST_AS_DOUBLE, tm.orNull(tm.toUnsafeNumber()));\n//# sourceMappingURL=unsafe-cast-as-double.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\n/**\n * Attempts to cast to `JSON`.\n *\n * **Behaviour is not unified.**\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#function_cast\n * + https://www.postgresql.org/docs/9.2/datatype.html#DATATYPE-TABLE\n * + https://www.sqlite.org/datatype3.html\n *\n * -----\n *\n * + MySQL          : `CAST(x AS JSON)`\n *   + `CAST(1 AS JSON)` returns `'1'`\n *   + `CAST('{  \"x\"  :  \"y\"  }' AS JSON)` returns `'{\"x\": \"y\"}'`\n * + PostgreSQL     : `CAST(x AS JSON)`\n *   + `CAST(1 AS JSON)` throws\n *   + `CAST('{  \"x\"  :  \"y\"  }' AS JSON)` returns `'{\"x\":\"y\"}'`\n * + SQLite         : `CAST(x AS TEXT)`\n *   + Or implement with user-defined function.\n *   + Or the `JSON()` function?\n *   + https://www.sqlite.org/json1.html#jmini\n *   + SQLite does not have a `JSON` data type; `TEXT` is used for `JSON` values.\n *   + `JSON(1)` returns `'1'`\n *   + `CAST(1 AS TEXT)` returns `'1'`\n *   + `JSON('{  \"x\"  :  \"y\"  }')` returns `'{\"x\":\"y\"}'`\n *\n * -----\n *\n * + https://github.com/AnyhowStep/tsql/issues/15\n */\nexports.unsafeCastAsJson = factory_1.makeOperator1Idempotent(operator_type_1.OperatorType.CAST_AS_JSON, tm.orNull(tm.string()));\n//# sourceMappingURL=unsafe-cast-as-json.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\n/**\n * Attempts to cast to `VARCHAR`.\n *\n * **Behaviour is not unified.**\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#function_cast\n * + https://www.postgresql.org/docs/9.2/datatype.html#DATATYPE-TABLE\n * + https://www.sqlite.org/datatype3.html\n *\n * -----\n *\n * + MySQL          : `CAST(x AS CHAR)`\n *   + `CAST(TRUE AS CHAR)` returns `'1'`\n *   + `CAST(123e0 AS CHAR)` returns `'123'`\n * + PostgreSQL     : `CAST(x AS VARCHAR)`\n *   + `CAST(TRUE AS VARCHAR)` returns `'true'`\n *   + `CAST(CAST(123e0 AS DOUBLE PRECISION) AS VARCHAR)` returns `'123'`\n * + SQLite         : `CAST(x AS VARCHAR)`\n *   + `CAST(TRUE AS VARCHAR)` returns `'1'`\n *   + `CAST(123e0 AS VARCHAR)` returns `'123.0'`\n *\n * -----\n *\n * + https://github.com/AnyhowStep/tsql/issues/15\n */\nexports.unsafeCastAsVarChar = factory_1.makeOperator1Idempotent(operator_type_1.OperatorType.CAST_AS_VARCHAR, tm.orNull(tm.string()));\n//# sourceMappingURL=unsafe-cast-as-var-char.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\n/**\n * https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_between\n *\n * This version of the `BETWEEN ... AND` operator prevents `NULL`.\n *\n * For null-safe checks, @see {@link nullSafeBetween}\n *\n */\nexports.between = factory_1.makeComparison3(operator_type_1.OperatorType.BETWEEN_AND);\n//# sourceMappingURL=between.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\n/**\n * https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#function_greatest\n *\n * This version of the `GREATEST(x, y, ...)` operator prevents `NULL`.\n *\n * No null-safe version is provided in this unification\n * because the different databases treat `NULL` arguments differently.\n *\n * MySQL and SQLite will return `NULL` if at least one argument is `NULL`.\n * PostgreSQL will return `NULL` only if **all** arguments are `NULL`.\n *\n * -----\n *\n * This version of the `GREATEST(x, y, ...)` operator requires\n * at least 2 arguments because MySQL's requires at least 2.\n *\n * Also, it does not make much sense to get the `GREATEST` of 1 value.\n */\nexports.greatest = factory_1.makeComparisonProjection2ToN(operator_type_1.OperatorType.GREATEST);\n//# sourceMappingURL=greatest.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\n/**\n * https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_greater-than-or-equal\n *\n * This version of the `>=` operator prevents `NULL`.\n *\n */\nexports.gtEq = factory_1.makeComparison2(operator_type_1.OperatorType.GREATER_THAN_OR_EQUAL);\n//# sourceMappingURL=gt-eq.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\n/**\n * https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_greater-than\n *\n * This version of the `>` operator prevents `NULL`.\n *\n */\nexports.gt = factory_1.makeComparison2(operator_type_1.OperatorType.GREATER_THAN);\n//# sourceMappingURL=gt.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./between\"));\n__export(require(\"./greatest\"));\n__export(require(\"./gt-eq\"));\n__export(require(\"./gt\"));\n__export(require(\"./least\"));\n__export(require(\"./lt-eq\"));\n__export(require(\"./lt\"));\n__export(require(\"./not-between\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\n/**\n * https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#function_least\n *\n * This version of the `LEAST(x, y, ...)` operator prevents `NULL`.\n *\n * No null-safe version is provided in this unification\n * because the different databases treat `NULL` arguments differently.\n *\n * MySQL and SQLite will return `NULL` if at least one argument is `NULL`.\n * PostgreSQL will return `NULL` only if **all** arguments are `NULL`.\n *\n * -----\n *\n * This version of the `LEAST(x, y, ...)` operator requires\n * at least 2 arguments because MySQL's requires at least 2.\n *\n * Also, it does not make much sense to get the `LEAST` of 1 value.\n */\nexports.least = factory_1.makeComparisonProjection2ToN(operator_type_1.OperatorType.LEAST);\n//# sourceMappingURL=least.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\n/**\n * https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_less-than-or-equal\n *\n * This version of the `<=` operator prevents `NULL`.\n *\n */\nexports.ltEq = factory_1.makeComparison2(operator_type_1.OperatorType.LESS_THAN_OR_EQUAL);\n//# sourceMappingURL=lt-eq.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\n/**\n * https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_less-than\n *\n * This version of the `<` operator prevents `NULL`.\n *\n */\nexports.lt = factory_1.makeComparison2(operator_type_1.OperatorType.LESS_THAN);\n//# sourceMappingURL=lt.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\n/**\n * https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_not-between\n *\n * This version of the `NOT BETWEEN ... AND` operator prevents `NULL`.\n *\n * For null-safe checks, @see {@link nullSafeNotBetween}\n *\n */\nexports.notBetween = factory_1.makeComparison3(operator_type_1.OperatorType.NOT_BETWEEN_AND);\n//# sourceMappingURL=not-between.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst built_in_expr_1 = require(\"../../../built-in-expr\");\nconst expr_impl_1 = require(\"../../../expr/expr-impl\");\nconst used_ref_1 = require(\"../../../used-ref\");\nclass CaseConditionBuilderImpl {\n    constructor(resultMappers, usedRef, ast, isAggregate) {\n        this.resultMappers = resultMappers;\n        this.usedRef = usedRef;\n        this.ast = ast;\n        this.isAggregate = isAggregate;\n    }\n    when(condition, then) {\n        return new CaseConditionBuilderImpl([...this.resultMappers, built_in_expr_1.BuiltInExprUtil.mapper(then)], used_ref_1.UsedRefUtil.intersect(this.usedRef, built_in_expr_1.BuiltInExprUtil.intersectUsedRef(condition, then)), {\n            type: \"CaseCondition\",\n            /**\n             * https://github.com/microsoft/TypeScript/issues/33573\n             */\n            branches: this.ast.branches.concat([\n                [\n                    built_in_expr_1.BuiltInExprUtil.buildAst(condition),\n                    built_in_expr_1.BuiltInExprUtil.buildAst(then)\n                ]\n            ]),\n            else: this.ast.else,\n        }, (this.isAggregate ||\n            built_in_expr_1.BuiltInExprUtil.isAggregate(condition) ||\n            built_in_expr_1.BuiltInExprUtil.isAggregate(then)));\n    }\n    end() {\n        return expr_impl_1.expr({\n            mapper: tm.unsafeOr(...this.resultMappers, tm.null()),\n            usedRef: this.usedRef,\n            isAggregate: this.isAggregate,\n        }, this.ast);\n    }\n    else(elseResult) {\n        const end = () => {\n            return expr_impl_1.expr({\n                mapper: tm.unsafeOr(...this.resultMappers, built_in_expr_1.BuiltInExprUtil.mapper(elseResult)),\n                usedRef: used_ref_1.UsedRefUtil.intersect(this.usedRef, built_in_expr_1.BuiltInExprUtil.usedRef(elseResult)),\n                isAggregate: (this.isAggregate ||\n                    built_in_expr_1.BuiltInExprUtil.isAggregate(elseResult))\n            }, {\n                ...this.ast,\n                else: built_in_expr_1.BuiltInExprUtil.buildAst(elseResult),\n            });\n        };\n        return {\n            end,\n        };\n    }\n}\nexports.CaseConditionBuilderImpl = CaseConditionBuilderImpl;\n//# sourceMappingURL=case-condition-builder-impl.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uninitialized_case_condition_builder_impl_1 = require(\"./uninitialized-case-condition-builder-impl\");\nfunction caseCondition() {\n    return new uninitialized_case_condition_builder_impl_1.UninitializedCaseConditionBuilderImpl();\n}\nexports.caseCondition = caseCondition;\n//# sourceMappingURL=case-condition.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./case-condition-builder-impl\"));\n__export(require(\"./case-condition\"));\n__export(require(\"./uninitialized-case-condition-builder-impl\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_in_expr_1 = require(\"../../../built-in-expr\");\nconst case_condition_builder_impl_1 = require(\"./case-condition-builder-impl\");\nclass UninitializedCaseConditionBuilderImpl {\n    constructor() {\n    }\n    when(condition, then) {\n        return new case_condition_builder_impl_1.CaseConditionBuilderImpl([built_in_expr_1.BuiltInExprUtil.mapper(then)], built_in_expr_1.BuiltInExprUtil.intersectUsedRef(condition, then), {\n            type: \"CaseCondition\",\n            branches: [\n                [\n                    built_in_expr_1.BuiltInExprUtil.buildAst(condition),\n                    built_in_expr_1.BuiltInExprUtil.buildAst(then)\n                ]\n            ],\n            else: undefined,\n        }, (built_in_expr_1.BuiltInExprUtil.isAggregate(condition) ||\n            built_in_expr_1.BuiltInExprUtil.isAggregate(then)));\n    }\n}\nexports.UninitializedCaseConditionBuilderImpl = UninitializedCaseConditionBuilderImpl;\n//# sourceMappingURL=uninitialized-case-condition-builder-impl.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst built_in_expr_1 = require(\"../../../built-in-expr\");\nconst expr_impl_1 = require(\"../../../expr/expr-impl\");\nconst used_ref_1 = require(\"../../../used-ref\");\nclass CaseValueBuilderImpl {\n    constructor(resultMappers, usedRef, ast, isAggregate) {\n        this.resultMappers = resultMappers;\n        this.usedRef = usedRef;\n        this.ast = ast;\n        this.isAggregate = isAggregate;\n    }\n    when(compareValue, then) {\n        return new CaseValueBuilderImpl([...this.resultMappers, built_in_expr_1.BuiltInExprUtil.mapper(then)], used_ref_1.UsedRefUtil.intersect(this.usedRef, built_in_expr_1.BuiltInExprUtil.intersectUsedRef(compareValue, then)), {\n            type: \"CaseValue\",\n            value: this.ast.value,\n            /**\n             * https://github.com/microsoft/TypeScript/issues/33573\n             */\n            cases: this.ast.cases.concat([\n                [\n                    built_in_expr_1.BuiltInExprUtil.buildAst(compareValue),\n                    built_in_expr_1.BuiltInExprUtil.buildAst(then)\n                ]\n            ]),\n            else: this.ast.else,\n        }, (this.isAggregate ||\n            built_in_expr_1.BuiltInExprUtil.isAggregate(compareValue) ||\n            built_in_expr_1.BuiltInExprUtil.isAggregate(then)));\n    }\n    end() {\n        return expr_impl_1.expr({\n            mapper: tm.unsafeOr(...this.resultMappers, tm.null()),\n            usedRef: this.usedRef,\n            isAggregate: this.isAggregate,\n        }, this.ast);\n    }\n    else(elseResult) {\n        const end = () => {\n            return expr_impl_1.expr({\n                mapper: tm.unsafeOr(...this.resultMappers, built_in_expr_1.BuiltInExprUtil.mapper(elseResult)),\n                usedRef: used_ref_1.UsedRefUtil.intersect(this.usedRef, built_in_expr_1.BuiltInExprUtil.usedRef(elseResult)),\n                isAggregate: (this.isAggregate ||\n                    built_in_expr_1.BuiltInExprUtil.isAggregate(elseResult))\n            }, {\n                ...this.ast,\n                else: built_in_expr_1.BuiltInExprUtil.buildAst(elseResult),\n            });\n        };\n        return {\n            end,\n        };\n    }\n}\nexports.CaseValueBuilderImpl = CaseValueBuilderImpl;\n//# sourceMappingURL=case-value-builder-impl.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_in_expr_1 = require(\"../../../built-in-expr\");\nconst uninitialized_case_value_builder_impl_1 = require(\"./uninitialized-case-value-builder-impl\");\nfunction caseValue(valueExpr) {\n    return new uninitialized_case_value_builder_impl_1.UninitializedCaseValueBuilderImpl(built_in_expr_1.BuiltInExprUtil.usedRef(valueExpr), built_in_expr_1.BuiltInExprUtil.buildAst(valueExpr), built_in_expr_1.BuiltInExprUtil.isAggregate(valueExpr));\n}\nexports.caseValue = caseValue;\n//# sourceMappingURL=case-value.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./case-value-builder-impl\"));\n__export(require(\"./case-value\"));\n__export(require(\"./uninitialized-case-value-builder-impl\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_in_expr_1 = require(\"../../../built-in-expr\");\nconst used_ref_1 = require(\"../../../used-ref\");\nconst case_value_builder_impl_1 = require(\"./case-value-builder-impl\");\nclass UninitializedCaseValueBuilderImpl {\n    constructor(usedRef, valueAst, isAggregate) {\n        this.usedRef = usedRef;\n        this.valueAst = valueAst;\n        this.isAggregate = isAggregate;\n    }\n    when(compareValue, then) {\n        return new case_value_builder_impl_1.CaseValueBuilderImpl([built_in_expr_1.BuiltInExprUtil.mapper(then)], used_ref_1.UsedRefUtil.intersect(this.usedRef, built_in_expr_1.BuiltInExprUtil.intersectUsedRef(compareValue, then)), {\n            type: \"CaseValue\",\n            value: this.valueAst,\n            cases: [\n                [\n                    built_in_expr_1.BuiltInExprUtil.buildAst(compareValue),\n                    built_in_expr_1.BuiltInExprUtil.buildAst(then)\n                ]\n            ],\n            else: undefined,\n        }, (this.isAggregate ||\n            built_in_expr_1.BuiltInExprUtil.isAggregate(compareValue) ||\n            built_in_expr_1.BuiltInExprUtil.isAggregate(then)));\n    }\n}\nexports.UninitializedCaseValueBuilderImpl = UninitializedCaseValueBuilderImpl;\n//# sourceMappingURL=uninitialized-case-value-builder-impl.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst case_value_1 = require(\"./case-value\");\nconst case_condition_1 = require(\"./case-condition\");\nfunction caseConstructor(valueExpr) {\n    if (valueExpr === undefined) {\n        return case_condition_1.caseCondition();\n    }\n    else {\n        return case_value_1.caseValue(valueExpr);\n    }\n}\nexports.case = caseConstructor;\n//# sourceMappingURL=case.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nconst expr_1 = require(\"../../expr\");\nconst util_1 = require(\"../../ast/operator-node/util\");\nconst operator_type_1 = require(\"../../operator-type\");\nfunction coalesceMapper(...args) {\n    const builtInExprMapperArr = [];\n    let lastMapperNonNull = false;\n    for (const builtInExpr of args) {\n        const builtInExprMapper = built_in_expr_1.BuiltInExprUtil.mapper(builtInExpr);\n        builtInExprMapperArr.push(builtInExprMapper);\n        if (!tm.canOutputNull(builtInExprMapper)) {\n            lastMapperNonNull = true;\n            break;\n        }\n    }\n    return (lastMapperNonNull ?\n        tm.notNull(tm.unsafeOr(...builtInExprMapperArr)) :\n        tm.unsafeOr(...builtInExprMapperArr));\n}\nexports.coalesceMapper = coalesceMapper;\n/**\n * Returns the first non-`NULL` value in the list,\n * or `NULL` if there are no non-`NULL` values.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#function_coalesce\n * + https://www.postgresql.org/docs/9.5/functions-conditional.html#FUNCTIONS-COALESCE-NVL-IFNULL\n * + https://www.sqlite.org/lang_corefunc.html#coalesce\n *\n * -----\n *\n * + MySQL        : `COALESCE(x, ...)`\n * + PostgreSQL   : `COALESCE(x, ...)`\n * + SQLite       : `COALESCE(x, ...)`\n *\n * -----\n *\n * `COALESCE()` with zero args is just the `NULL` constant.\n */\nfunction coalesce(...args) {\n    const [arg0, arg1, ...argRest] = args;\n    if (arg0 === undefined) {\n        /**\n         * `COALESCE()` with zero args is just the `NULL` constant.\n         */\n        return expr_1.ExprUtil.fromBuiltInExpr(null);\n    }\n    else if (arg1 === undefined) {\n        /**\n         * `COALESCE(x)` is just `x`\n         */\n        return expr_1.ExprUtil.fromBuiltInExpr(arg0);\n    }\n    else {\n        return expr_1.ExprUtil.intersect(coalesceMapper(...args), args, util_1.operatorNode2ToN(operator_type_1.OperatorType.COALESCE, [\n            built_in_expr_1.BuiltInExprUtil.buildAst(arg0),\n            built_in_expr_1.BuiltInExprUtil.buildAst(arg1),\n            ...argRest.map(built_in_expr_1.BuiltInExprUtil.buildAst)\n        ], undefined));\n    }\n}\nexports.coalesce = coalesce;\n//# sourceMappingURL=coalesce.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_1 = require(\"../../column\");\nconst null_safe_equation_1 = require(\"../null-safe-equation\");\nconst ifImpl = require(\"./if\");\n/**\n * A special compile-time type-narrowing function.\n *\n * Narrows a column from `T|null` to `T` in the else-branch.\n *\n * Translated to SQL, we get,\n * ```sql\n *  IF(\n *      myColumn IS NULL,\n *      thenExpr,\n *      -- The `elseExpr` is free to use `myColumn` as a non-nullable column\n *      -- because we know `myColumn` is NOT NULL in the else-branch.\n *      elseExpr\n *  )\n * ```\n *\n *\n * @param column - The column to narrow from `T|null` to `T`\n * @param then - The result of the expression, if the `column` is `null`\n * @param elseDelegate - The result of the expression, if the `column` is `T`\n */\nfunction ifIsNull(column, then, elseDelegate) {\n    return ifImpl.if(null_safe_equation_1.isNull(column), then, elseDelegate({\n        [column.columnAlias]: column_1.ColumnUtil.toNonNullable(column)\n    }));\n}\nexports.ifIsNull = ifIsNull;\n//# sourceMappingURL=if-is-null.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//import * as tm from \"type-mapping\";\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nconst coalesce_1 = require(\"./coalesce\");\nconst expr_1 = require(\"../../expr\");\nconst ast_1 = require(\"../../ast\");\nconst operator_type_1 = require(\"../../operator-type\");\n/**\n * Equivalent to `COALESCE()` with two arguments.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/control-flow-functions.html#function_ifnull\n * + https://www.postgresql.org/docs/9.2/functions-conditional.html#FUNCTIONS-COALESCE-NVL-IFNULL\n * + https://www.sqlite.org/lang_corefunc.html#ifnull\n *\n * -----\n *\n * `COALESCE()` is part of the SQL standard.\n * `IFNULL()` is DB-specific.\n *\n * But `IFNULL()` should behave the same as `COALESCE(x, y)`.\n *\n * -----\n *\n * + MySQL        : `IFNULL(x, y)`\n * + PostgreSQL   : `COALESCE(x, y)`\n * + SQLite       : `IFNULL(x, y)`\n *\n * -----\n *\n * @see coalesce\n */\nfunction ifNull(arg0, arg1) {\n    return expr_1.ExprUtil.intersect(coalesce_1.coalesceMapper(arg0, arg1), [arg0, arg1], ast_1.OperatorNodeUtil.operatorNode2(operator_type_1.OperatorType.IF_NULL, [\n        built_in_expr_1.BuiltInExprUtil.buildAst(arg0),\n        built_in_expr_1.BuiltInExprUtil.buildAst(arg1)\n    ], undefined));\n}\nexports.ifNull = ifNull;\n//# sourceMappingURL=if-null.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nconst ast_1 = require(\"../../ast\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst expr_1 = require(\"../../expr\");\n/**\n * Behaves like an `if-else` statement from most programming languages.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/control-flow-functions.html#function_if\n *\n * -----\n *\n * + MySQL        : `IF(x, y, z)`\n * + PostgreSQL   : `CASE WHEN x THEN y ELSE z END`\n * + SQLite       : `CASE WHEN x THEN y ELSE z END`\n *\n * -----\n *\n * @param condition - The boolean expression to evaluate\n * @param then - The result if `condition` is `true`\n * @param elseResult - The result if `condition` is `false`\n *\n * @see caseCondition\n */\nfunction ifConstructor(condition, then, elseResult) {\n    return expr_1.ExprUtil.intersect(tm.or(built_in_expr_1.BuiltInExprUtil.mapper(then), built_in_expr_1.BuiltInExprUtil.mapper(elseResult)), [condition, then, elseResult], ast_1.OperatorNodeUtil.operatorNode3(operator_type_1.OperatorType.IF, [\n        built_in_expr_1.BuiltInExprUtil.buildAst(condition),\n        built_in_expr_1.BuiltInExprUtil.buildAst(then),\n        built_in_expr_1.BuiltInExprUtil.buildAst(elseResult),\n    ], undefined));\n}\nexports.if = ifConstructor;\n//# sourceMappingURL=if.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./case-condition\"));\n__export(require(\"./case-value\"));\n__export(require(\"./case\"));\n__export(require(\"./coalesce\"));\n__export(require(\"./if-is-null\"));\n__export(require(\"./if-null\"));\n__export(require(\"./if\"));\n__export(require(\"./null-if\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nconst expr_1 = require(\"../../expr\");\nconst ast_1 = require(\"../../ast\");\nconst operator_type_1 = require(\"../../operator-type\");\n/**\n * Returns `null` if both arguments are null-safe equal.\n *\n * Otherwise, returns the first argument.\n *\n * This is equivalent to `IF(arg0 <null-safe-eq> arg1, null, arg0)`\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/control-flow-functions.html#function_nullif\n * + https://www.postgresql.org/docs/9.2/functions-conditional.html#FUNCTIONS-NULLIF\n * + https://www.sqlite.org/lang_corefunc.html#nullif\n *\n * -----\n *\n * + MySQL        : `NULLIF(x, y)`\n * + PostgreSQL   : `NULLIF(x, y)`\n * + SQLite       : `NULLIF(x, y)`\n *\n * @see nullIfEqual\n */\nfunction nullIf(arg0, arg1) {\n    return expr_1.ExprUtil.intersect(tm.orNull(built_in_expr_1.BuiltInExprUtil.mapper(arg0)), [arg0, arg1], ast_1.OperatorNodeUtil.operatorNode2(operator_type_1.OperatorType.NULL_IF_EQUAL, [\n        built_in_expr_1.BuiltInExprUtil.buildAst(arg0),\n        built_in_expr_1.BuiltInExprUtil.buildAst(arg1)\n    ], undefined));\n}\nexports.nullIf = nullIf;\n/**\n * Synonym for `NULLIF(x, y)`.\n *\n * Returns `null` if both arguments are null-safe equal.\n *\n * Otherwise, returns the first argument.\n *\n * This is equivalent to `IF(arg0 <null-safe-eq> arg1, null, arg0)`\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/control-flow-functions.html#function_nullif\n * + https://www.postgresql.org/docs/9.2/functions-conditional.html#FUNCTIONS-NULLIF\n * + https://www.sqlite.org/lang_corefunc.html#nullif\n *\n * -----\n *\n * + MySQL        : `NULLIF(x, y)`\n * + PostgreSQL   : `NULLIF(x, y)`\n * + SQLite       : `NULLIF(x, y)`\n *\n * @see nullIf\n */\nexports.nullIfEqual = nullIf;\n//# sourceMappingURL=null-if.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./make-custom-operator-0\"));\n__export(require(\"./make-custom-operator-1\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst expr_1 = require(\"../../expr\");\nconst used_ref_1 = require(\"../../used-ref\");\nfunction makeCustomOperator0(ast, mapper) {\n    const result = () => {\n        return expr_1.expr({\n            mapper,\n            usedRef: used_ref_1.UsedRefUtil.fromColumnRef({}),\n            isAggregate: false,\n        }, ast);\n    };\n    return result;\n}\nexports.makeCustomOperator0 = makeCustomOperator0;\n//# sourceMappingURL=make-custom-operator-0.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst expr_1 = require(\"../../expr\");\nfunction makeCustomOperator1(astDelegate, mapper) {\n    const result = (arg) => {\n        return expr_1.ExprUtil.intersect(mapper, [arg], astDelegate(arg));\n    };\n    return result;\n}\nexports.makeCustomOperator1 = makeCustomOperator1;\n//# sourceMappingURL=make-custom-operator-1.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Returns the current date.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_current-date\n * + https://www.postgresql.org/docs/9.4/functions-datetime.html#FUNCTIONS-DATETIME-TABLE\n * + https://www.sqlite.org/lang_datefunc.html\n *\n * -----\n *\n * + MySQL          : `CURRENT_DATE()`\n * + PostgreSQL     : `CURRENT_DATE()`\n * + SQLite         : `strftime('%Y-%m-%d', 'now')`\n *\n * -----\n *\n * Sets hour, minute, second, millisecond to zero.\n */\nexports.currentDate = factory_1.makeOperator0(operator_type_1.OperatorType.CURRENT_DATE, tm.mysql.dateTime(0), type_hint_1.TypeHint.DATE_TIME);\n//# sourceMappingURL=current-date.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Returns the current date-time, accurate to 1-second.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_current-timestamp\n * + https://www.postgresql.org/docs/9.4/functions-datetime.html#FUNCTIONS-DATETIME-CURRENT\n * + https://www.sqlite.org/lang_datefunc.html\n *\n * -----\n *\n * + MySQL          : `CURRENT_TIMESTAMP(0)`\n * + PostgreSQL     : `CURRENT_TIMESTAMP(0)`\n *   + http://www.postgresqltutorial.com/postgresql-localtimestamp/\n *\n *   > The `LOCALTIMESTAMP` function returns a `TIMESTAMP` value **without** time zone while\n *   > the `CURRENT_TIMESTAMP` function returns a `TIMESTAMP` **with** time zone.\n * + SQLite         : `strftime('%Y-%m-%d %H:%M:%S', 'now')` gives precision `0`\n */\nexports.currentTimestamp0 = factory_1.makeOperator0(operator_type_1.OperatorType.CURRENT_TIMESTAMP_0, tm.mysql.dateTime(0), type_hint_1.TypeHint.DATE_TIME);\n/**\n * Returns the current date-time, accurate to 0.1-second.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_current-timestamp\n * + https://www.postgresql.org/docs/9.4/functions-datetime.html#FUNCTIONS-DATETIME-CURRENT\n * + https://www.sqlite.org/lang_datefunc.html\n *\n * -----\n *\n * + MySQL          : `CURRENT_TIMESTAMP(1)`\n * + PostgreSQL     : `CURRENT_TIMESTAMP(1)`\n *   + http://www.postgresqltutorial.com/postgresql-localtimestamp/\n *\n *   > The `LOCALTIMESTAMP` function returns a `TIMESTAMP` value **without** time zone while\n *   > the `CURRENT_TIMESTAMP` function returns a `TIMESTAMP` **with** time zone.\n * + SQLite         : `substr(strftime('%Y-%m-%d %H:%M:%f', 'now'), 1, 21)` gives precision `1`\n */\nexports.currentTimestamp1 = factory_1.makeOperator0(operator_type_1.OperatorType.CURRENT_TIMESTAMP_1, tm.mysql.dateTime(1), type_hint_1.TypeHint.DATE_TIME);\n/**\n * Returns the current date-time, accurate to 0.01-second.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_current-timestamp\n * + https://www.postgresql.org/docs/9.4/functions-datetime.html#FUNCTIONS-DATETIME-CURRENT\n * + https://www.sqlite.org/lang_datefunc.html\n *\n * -----\n *\n * + MySQL          : `CURRENT_TIMESTAMP(2)`\n * + PostgreSQL     : `CURRENT_TIMESTAMP(2)`\n *   + http://www.postgresqltutorial.com/postgresql-localtimestamp/\n *\n *   > The `LOCALTIMESTAMP` function returns a `TIMESTAMP` value **without** time zone while\n *   > the `CURRENT_TIMESTAMP` function returns a `TIMESTAMP` **with** time zone.\n * + SQLite         : `substr(strftime('%Y-%m-%d %H:%M:%f', 'now'), 1, 22)` gives precision `2`\n */\nexports.currentTimestamp2 = factory_1.makeOperator0(operator_type_1.OperatorType.CURRENT_TIMESTAMP_2, tm.mysql.dateTime(2), type_hint_1.TypeHint.DATE_TIME);\n/**\n * Returns the current date-time, accurate to 0.001-second.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_current-timestamp\n * + https://www.postgresql.org/docs/9.4/functions-datetime.html#FUNCTIONS-DATETIME-CURRENT\n * + https://www.sqlite.org/lang_datefunc.html\n *\n * -----\n *\n * + MySQL          : `CURRENT_TIMESTAMP(3)`\n * + PostgreSQL     : `CURRENT_TIMESTAMP(3)`\n *   + http://www.postgresqltutorial.com/postgresql-localtimestamp/\n *\n *   > The `LOCALTIMESTAMP` function returns a `TIMESTAMP` value **without** time zone while\n *   > the `CURRENT_TIMESTAMP` function returns a `TIMESTAMP` **with** time zone.\n * + SQLite         : `strftime('%Y-%m-%d %H:%M:%f', 'now')` gives precision `3`\n */\nexports.currentTimestamp3 = factory_1.makeOperator0(operator_type_1.OperatorType.CURRENT_TIMESTAMP_3, tm.mysql.dateTime(3), type_hint_1.TypeHint.DATE_TIME);\n//# sourceMappingURL=current-timestamp.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Extracts the second from a date-time, including fractional seconds; accurate to 0.001 second.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_extract\n * + https://www.postgresql.org/docs/9.4/functions-datetime.html#FUNCTIONS-DATETIME-TABLE\n * + https://www.sqlite.org/lang_datefunc.html\n *\n * -----\n *\n * Behaviour is not defined when using 0.0001 second precision (or more precise).\n * SQLite may alternate between truncating and rounding.\n *\n * -----\n *\n * + MySQL          : `EXTRACT(SECOND FROM datetime) + FLOOR(EXTRACT(MICROSECOND FROM datetime) / 1000e0) / 1000e0`\n * ```sql\n *  SELECT\n *      EXTRACT(SECOND FROM timestamp '2010-03-27 14:45:32.456789') +\n *      FLOOR(EXTRACT(MICROSECOND FROM timestamp '2010-03-27 14:45:32.456789') / 1000.0e0) / 1000.0e0\n *  > 32.456\n * ```\n * + PostgreSQL     : `FLOOR(EXTRACT(SECOND FROM datetime) * 1000) / 1000`\n * + SQLite         : `CAST(strftime('%f', datetime) AS DOUBLE)`\n * ```sql\n *  SELECT\n *      strftime('%f', '2010-03-27 14:45:32.456789')\n *  > 32.457\n *  -- The result is rounded, not truncated.\n *  -- If it were truncated, we would get 32.456\n * ```\n * ```sql\n *  SELECT\n *      strftime('%f', '2010-03-27 23:59:59.999999')\n *  > 59.999\n *  -- The result is truncated, not rounded.\n *  -- If it were rounded, we would get 60\n * ```\n *\n * @todo Make behaviour consistent?\n */\nexports.extractFractionalSecond3 = factory_1.makeOperator1(operator_type_1.OperatorType.EXTRACT_FRACTIONAL_SECOND_3, tm.mysql.double(), type_hint_1.TypeHint.DATE_TIME);\n/**\n * Extracts the second from a date-time, truncating fractional seconds.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_extract\n * + https://www.postgresql.org/docs/9.4/functions-datetime.html#FUNCTIONS-DATETIME-EXTRACT\n * + https://www.sqlite.org/lang_datefunc.html\n *\n * -----\n *\n * MySQL returns a `bigint signed`.\n * PostgreSQL returns a `double precision`.\n * SQLite returns a `text`.\n *\n * This library casts all results to `BIGINT SIGNED`\n *\n * -----\n *\n * + MySQL          : `EXTRACT(SECOND FROM datetime)`\n * + PostgreSQL     : `CAST(FLOOR(EXTRACT(SECOND FROM datetime)) AS BIGINT)`\n * + SQLite         : `CAST(strftime('%S', datetime) AS BIGINT)`\n */\nexports.extractIntegerSecond = factory_1.makeOperator1(operator_type_1.OperatorType.EXTRACT_INTEGER_SECOND, \n/**\n * Should not be negative\n */\ntm.mysql.bigIntUnsigned(), type_hint_1.TypeHint.DATE_TIME);\n/**\n * Extracts the minute from a date-time.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_extract\n * + https://www.postgresql.org/docs/9.4/functions-datetime.html#FUNCTIONS-DATETIME-EXTRACT\n * + https://www.sqlite.org/lang_datefunc.html\n *\n * -----\n *\n * MySQL returns a `bigint signed`.\n * PostgreSQL returns a `double precision`.\n * SQLite returns a `text`.\n *\n * This library casts all results to `BIGINT SIGNED`\n *\n * -----\n *\n * + MySQL          : `EXTRACT(MINUTE FROM datetime)`\n * + PostgreSQL     : `CAST(EXTRACT(MINUTE FROM datetime) AS BIGINT)`\n * + SQLite         : `CAST(strftime('%M', datetime) AS BIGINT)`\n */\nexports.extractMinute = factory_1.makeOperator1(operator_type_1.OperatorType.EXTRACT_MINUTE, \n/**\n * Should not be negative\n */\ntm.mysql.bigIntUnsigned(), type_hint_1.TypeHint.DATE_TIME);\n/**\n * Extracts the hour from a date-time.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_extract\n * + https://www.postgresql.org/docs/9.4/functions-datetime.html#FUNCTIONS-DATETIME-EXTRACT\n * + https://www.sqlite.org/lang_datefunc.html\n *\n * -----\n *\n * MySQL returns a `bigint signed`.\n * PostgreSQL returns a `double precision`.\n * SQLite returns a `text`.\n *\n * This library casts all results to `BIGINT SIGNED`\n *\n * -----\n *\n * + MySQL          : `EXTRACT(HOUR FROM datetime)`\n * + PostgreSQL     : `CAST(EXTRACT(HOUR FROM datetime) AS BIGINT)`\n * + SQLite         : `CAST(strftime('%H', datetime) AS BIGINT)`\n */\nexports.extractHour = factory_1.makeOperator1(operator_type_1.OperatorType.EXTRACT_HOUR, \n/**\n * Should not be negative\n */\ntm.mysql.bigIntUnsigned(), type_hint_1.TypeHint.DATE_TIME);\n/**\n * Extracts the day (of the month) from a date-time.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_extract\n * + https://www.postgresql.org/docs/9.4/functions-datetime.html#FUNCTIONS-DATETIME-EXTRACT\n * + https://www.sqlite.org/lang_datefunc.html\n *\n * -----\n *\n * MySQL returns a `bigint signed`.\n * PostgreSQL returns a `double precision`.\n * SQLite returns a `text`.\n *\n * This library casts all results to `BIGINT SIGNED`\n *\n * -----\n *\n * + MySQL          : `EXTRACT(DAY FROM datetime)`\n * + PostgreSQL     : `CAST(EXTRACT(DAY FROM datetime) AS BIGINT)`\n * + SQLite         : `CAST(strftime('%d', datetime) AS BIGINT)`\n */\nexports.extractDay = factory_1.makeOperator1(operator_type_1.OperatorType.EXTRACT_DAY, \n/**\n * Should not be negative\n */\ntm.mysql.bigIntUnsigned(), type_hint_1.TypeHint.DATE_TIME);\n/**\n * Extracts the month from a date-time.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_extract\n * + https://www.postgresql.org/docs/9.4/functions-datetime.html#FUNCTIONS-DATETIME-EXTRACT\n * + https://www.sqlite.org/lang_datefunc.html\n *\n * -----\n *\n * MySQL returns a `bigint signed`.\n * PostgreSQL returns a `double precision`.\n * SQLite returns a `text`.\n *\n * This library casts all results to `BIGINT SIGNED`\n *\n * -----\n *\n * + MySQL          : `EXTRACT(MONTH FROM datetime)`\n * + PostgreSQL     : `CAST(EXTRACT(MONTH FROM datetime) AS BIGINT)`\n * + SQLite         : `CAST(strftime('%m', datetime) AS BIGINT)`\n */\nexports.extractMonth = factory_1.makeOperator1(operator_type_1.OperatorType.EXTRACT_MONTH, \n/**\n * Should not be negative\n */\ntm.mysql.bigIntUnsigned(), type_hint_1.TypeHint.DATE_TIME);\n/**\n * Extracts the year from a date-time.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_extract\n * + https://www.postgresql.org/docs/9.4/functions-datetime.html#FUNCTIONS-DATETIME-EXTRACT\n * + https://www.sqlite.org/lang_datefunc.html\n *\n * -----\n *\n * MySQL returns a `bigint signed`.\n * PostgreSQL returns a `double precision`.\n * SQLite returns a `text`.\n *\n * This library casts all results to `BIGINT SIGNED`\n *\n * -----\n *\n * + MySQL          : `EXTRACT(YEAR FROM datetime)`\n * + PostgreSQL     : `CAST(EXTRACT(YEAR FROM datetime) AS BIGINT)`\n * + SQLite         : `CAST(strftime('%Y', datetime) AS BIGINT)`\n */\nexports.extractYear = factory_1.makeOperator1(operator_type_1.OperatorType.EXTRACT_YEAR, \n/**\n * Should not be negative\n */\ntm.mysql.bigIntUnsigned(), type_hint_1.TypeHint.DATE_TIME);\n//# sourceMappingURL=extract.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./current-date\"));\n//export * from \"./current-time\";\n__export(require(\"./current-timestamp\"));\n__export(require(\"./extract\"));\n__export(require(\"./last-day\"));\n//export * from \"./local-string-to-timestamp\";\n__export(require(\"./timestamp-add\"));\n__export(require(\"./timestamp-diff\"));\n__export(require(\"./unix-timestamp-now\"));\n__export(require(\"./utc-string-to-timestamp\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Returns the date of the last day of the month.\n *\n * Sets hour, minute, second, fractional second to zero.\n *\n * + https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html#function_last-day\n *\n * -----\n *\n * + MySQL          : `LAST_DAY(datetime)`\n * ```sql\n *  SELECT\n *      LAST_DAY(timestamp '2010-03-27 14:45:32.456789')\n *  > 2010-03-31\n * ```\n * + PostgreSQL     :\n * ```sql\n *  SELECT\n *      (\n *          datetime +\n *          interval '1 month' -\n *          CONCAT(EXTRACT(DAY FROM datetime), ' day')::interval\n *      )::date\n * > 2010-03-31T00:00:00.000Z\n * ```\n * + SQLite         :\n * ```sql\n *  SELECT\n *      strftime(\n *          '%Y-%m-%d',\n *          '2010-03-27 14:45:32.456789',\n *          '+1 month',\n *          '-' || strftime('%d', '2010-03-27 14:45:32.456789') || ' day'\n *      )\n *  > 2010-03-31\n * ```\n */\nexports.lastDay = factory_1.makeOperator1(operator_type_1.OperatorType.LAST_DAY, tm.mysql.dateTime(0), type_hint_1.TypeHint.DATE_TIME);\n//# sourceMappingURL=last-day.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Adds the specified number of milliseconds to the date-time.\n *\n * May return `null`, or throw on overflow.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_timestampadd\n * + https://www.postgresql.org/docs/9.4/functions-datetime.html#OPERATORS-DATETIME-TABLE\n * + https://www.sqlite.org/lang_datefunc.html\n *\n * -----\n *\n * + MySQL          : `TIMESTAMPADD(MICROSECOND, x*1000, datetime)`\n * + PostgreSQL     : `datetime + concat(x, ' millisecond')::interval`\n * + SQLite         :\n * ```sql\n *  strftime(\n *      '%Y-%m-%d %H:%M:%f',\n *      datetime,\n *      (x/1000e0) || ' second'\n *  );\n * ```\n *\n * -----\n *\n * @param left - The number of milliseconds to add; following MySQL convention\n * @param right - The date-time to add milliseconds to; following MySQL convention\n *\n * @todo Unify negative overflow behaviour.\n */\nexports.timestampAddMillisecond = factory_1.makeOperator2(operator_type_1.OperatorType.TIMESTAMPADD_MILLISECOND, tm.mysql.dateTime(3).orNull(), type_hint_1.TypeHint.DATE_TIME);\n/**\n * Adds the specified number of seconds to the date-time.\n *\n * May return `null`, or throw on overflow.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_timestampadd\n * + https://www.postgresql.org/docs/9.4/functions-datetime.html#OPERATORS-DATETIME-TABLE\n * + https://www.sqlite.org/lang_datefunc.html\n *\n * -----\n *\n * + MySQL          : `TIMESTAMPADD(SECOND, x, datetime)`\n * + PostgreSQL     : `datetime + concat(x, ' second')::interval`\n * + SQLite         :\n * ```sql\n *  strftime(\n *      '%Y-%m-%d %H:%M:%f',\n *      datetime,\n *      x || ' second'\n *  );\n * ```\n *\n * -----\n *\n * @param left - The number of seconds to add; following MySQL convention\n * @param right - The date-time to add seconds to; following MySQL convention\n *\n * @todo Unify negative overflow behaviour.\n */\nexports.timestampAddSecond = factory_1.makeOperator2(operator_type_1.OperatorType.TIMESTAMPADD_SECOND, tm.mysql.dateTime(3).orNull(), type_hint_1.TypeHint.DATE_TIME);\n/**\n * Adds the specified number of minutes to the date-time.\n *\n * May return `null`, or throw on overflow.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_timestampadd\n * + https://www.postgresql.org/docs/9.4/functions-datetime.html#OPERATORS-DATETIME-TABLE\n * + https://www.sqlite.org/lang_datefunc.html\n *\n * -----\n *\n * + MySQL          : `TIMESTAMPADD(MINUTE, x, datetime)`\n * + PostgreSQL     : `datetime + concat(x, ' minute')::interval`\n * + SQLite         :\n * ```sql\n *  strftime(\n *      '%Y-%m-%d %H:%M:%f',\n *      datetime,\n *      x || ' minute'\n *  );\n * ```\n *\n * -----\n *\n * @param left - The number of minutes to add; following MySQL convention\n * @param right - The date-time to add minutes to; following MySQL convention\n *\n * @todo Unify negative overflow behaviour.\n */\nexports.timestampAddMinute = factory_1.makeOperator2(operator_type_1.OperatorType.TIMESTAMPADD_MINUTE, tm.mysql.dateTime(3).orNull(), type_hint_1.TypeHint.DATE_TIME);\n/**\n * Adds the specified number of hours to the date-time.\n *\n * May return `null`, or throw on overflow.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_timestampadd\n * + https://www.postgresql.org/docs/9.4/functions-datetime.html#OPERATORS-DATETIME-TABLE\n * + https://www.sqlite.org/lang_datefunc.html\n *\n * -----\n *\n * + MySQL          : `TIMESTAMPADD(HOUR, x, datetime)`\n * + PostgreSQL     : `datetime + concat(x, ' hour')::interval`\n * + SQLite         :\n * ```sql\n *  strftime(\n *      '%Y-%m-%d %H:%M:%f',\n *      datetime,\n *      x || ' hour'\n *  );\n * ```\n *\n * -----\n *\n * @param left - The number of hours to add; following MySQL convention\n * @param right - The date-time to add hours to; following MySQL convention\n *\n * @todo Unify negative overflow behaviour.\n */\nexports.timestampAddHour = factory_1.makeOperator2(operator_type_1.OperatorType.TIMESTAMPADD_HOUR, tm.mysql.dateTime(3).orNull(), type_hint_1.TypeHint.DATE_TIME);\n/**\n * Adds the specified number of days to the date-time.\n *\n * May return `null`, or throw on overflow.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_timestampadd\n * + https://www.postgresql.org/docs/9.4/functions-datetime.html#OPERATORS-DATETIME-TABLE\n * + https://www.sqlite.org/lang_datefunc.html\n *\n * -----\n *\n * + MySQL          : `TIMESTAMPADD(DAY, x, datetime)`\n * + PostgreSQL     : `datetime + concat(x, ' day')::interval`\n * + SQLite         :\n * ```sql\n *  strftime(\n *      '%Y-%m-%d %H:%M:%f',\n *      datetime,\n *      x || ' day'\n *  );\n * ```\n *\n * -----\n *\n * @param left - The number of days to add; following MySQL convention\n * @param right - The date-time to add days to; following MySQL convention\n *\n * @todo Unify negative overflow behaviour.\n */\nexports.timestampAddDay = factory_1.makeOperator2(operator_type_1.OperatorType.TIMESTAMPADD_DAY, tm.mysql.dateTime(3).orNull(), type_hint_1.TypeHint.DATE_TIME);\n/**\n * Adds the specified number of months to the date-time.\n *\n * May return `null`, or throw on overflow.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_timestampadd\n * + https://www.postgresql.org/docs/9.4/functions-datetime.html#OPERATORS-DATETIME-TABLE\n * + https://www.sqlite.org/lang_datefunc.html\n *\n * -----\n *\n * + MySQL          : `TIMESTAMPADD(MONTH, x, datetime)`\n * + PostgreSQL     : `datetime + concat(x, ' month')::interval`\n * + SQLite         : Complicated implementation.\n *\n * -----\n *\n * @param left - The number of months to add; following MySQL convention\n * @param right - The date-time to add months to; following MySQL convention\n *\n * @todo Unify negative overflow behaviour.\n */\nexports.timestampAddMonth = factory_1.makeOperator2(operator_type_1.OperatorType.TIMESTAMPADD_MONTH, tm.mysql.dateTime(3).orNull(), type_hint_1.TypeHint.DATE_TIME);\n/**\n * Adds the specified number of years to the date-time.\n *\n * May return `null`, or throw on overflow.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_timestampadd\n * + https://www.postgresql.org/docs/9.4/functions-datetime.html#OPERATORS-DATETIME-TABLE\n * + https://www.sqlite.org/lang_datefunc.html\n *\n * -----\n *\n * + MySQL          : `TIMESTAMPADD(YEAR, x, datetime)`\n * + PostgreSQL     : `datetime + concat(x, ' year')::interval`\n * + SQLite         :\n * ```sql\n *  strftime(\n *      '%Y-%m-%d %H:%M:%f',\n *      datetime,\n *      x || ' year'\n *  );\n * ```\n *\n * -----\n *\n * @param left - The number of years to add; following MySQL convention\n * @param right - The date-time to add years to; following MySQL convention\n *\n * @todo Unify negative overflow behaviour.\n */\nexports.timestampAddYear = factory_1.makeOperator2(operator_type_1.OperatorType.TIMESTAMPADD_YEAR, tm.mysql.dateTime(3).orNull(), type_hint_1.TypeHint.DATE_TIME);\n//# sourceMappingURL=timestamp-add.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Returns the number of milliseconds between two date-times.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_timestampdiff\n *\n * -----\n *\n * + MySQL          : `CAST(TIMESTAMPDIFF(MICROSECOND, from, to)/1000.0 AS SIGNED INTEGER)`\n * + PostgreSQL     : `EXTRACT(DAY FROM (to - from))*24*60*60*1000 + EXTRACT(HOUR FROM (to - from))*60*60*1000 + EXTRACT(MINUTE FROM (to - from))*60*1000 + TRUNC(EXTRACT(SECOND FROM (to - from))*1000)`\n *   + The `TRUNC()` at the end is necessary\n *   + Extracting `SECOND` gives a number with decimal places for milliseconds\n *   + Every `EXTRACT()/TRUNC()` should be wrapped with a cast to `BIGINT`\n * + SQLite         : `CAST( (strftime('%J', to) - strftime('%J', from)) * 24 * 60 * 60 * 1000 AS BIGINT)`\n *   + We cast to `BIGINT` to be consistent with MySQL\n *\n * -----\n *\n * @param left - The start date-time\n * @param right - The end date-time\n * @returns - Returns `right - left` in milliseconds\n */\nexports.timestampDiffMillisecond = factory_1.makeOperator2(operator_type_1.OperatorType.TIMESTAMPDIFF_MILLISECOND, tm.mysql.bigIntSigned(), type_hint_1.TypeHint.DATE_TIME);\n/**\n * Returns the number of seconds between two date-times.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_timestampdiff\n *\n * -----\n *\n * + MySQL          : `TIMESTAMPDIFF(SECOND, from, to)`\n * + PostgreSQL     : `EXTRACT(DAY FROM (to - from))*24*60*60 + EXTRACT(HOUR FROM (to - from))*60*60 + EXTRACT(MINUTE FROM (to - from))*60 + TRUNC(EXTRACT(SECOND FROM (to - from)))`\n *   + The `TRUNC()` at the end is necessary\n *   + Extracting `SECOND` gives a number with decimal places for milliseconds\n * + SQLite         : `CAST( (strftime('%J', to) - strftime('%J', from)) * 24 * 60 * 60 AS BIGINT)`\n *   + We cast to `BIGINT` to be consistent with MySQL\n *\n * -----\n *\n * @param left - The start date-time\n * @param right - The end date-time\n * @returns - Returns `right - left` in seconds\n */\nexports.timestampDiffSecond = factory_1.makeOperator2(operator_type_1.OperatorType.TIMESTAMPDIFF_SECOND, tm.mysql.bigIntSigned(), type_hint_1.TypeHint.DATE_TIME);\n/**\n * Returns the number of minutes between two date-times.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_timestampdiff\n *\n * -----\n *\n * + MySQL          : `TIMESTAMPDIFF(MINUTE, from, to)`\n * + PostgreSQL     : `EXTRACT(DAY FROM (to - from))*24*60 + EXTRACT(HOUR FROM (to - from))*60 + EXTRACT(MINUTE FROM (to - from))`\n * + SQLite         : `CAST( (strftime('%J', to) - strftime('%J', from)) * 24 * 60 AS BIGINT)`\n *   + We cast to `BIGINT` to be consistent with MySQL\n *\n * -----\n *\n * @param left - The start date-time\n * @param right - The end date-time\n * @returns - Returns `right - left` in minutes\n */\nexports.timestampDiffMinute = factory_1.makeOperator2(operator_type_1.OperatorType.TIMESTAMPDIFF_MINUTE, tm.mysql.bigIntSigned(), type_hint_1.TypeHint.DATE_TIME);\n/**\n * Returns the number of hours between two date-times.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_timestampdiff\n *\n * -----\n *\n * + MySQL          : `TIMESTAMPDIFF(HOUR, from, to)`\n * + PostgreSQL     : `EXTRACT(DAY FROM (to - from))*24 + EXTRACT(HOUR FROM (to - from))`\n * + SQLite         : `CAST( (strftime('%J', to) - strftime('%J', from)) * 24 AS BIGINT)`\n *   + We cast to `BIGINT` to be consistent with MySQL\n *\n * -----\n *\n * @param left - The start date-time\n * @param right - The end date-time\n * @returns - Returns `right - left` in hours\n */\nexports.timestampDiffHour = factory_1.makeOperator2(operator_type_1.OperatorType.TIMESTAMPDIFF_HOUR, tm.mysql.bigIntSigned(), type_hint_1.TypeHint.DATE_TIME);\n/**\n * Returns the number of days between two date-times.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_timestampdiff\n *\n * -----\n *\n * + MySQL          : `TIMESTAMPDIFF(DAY, from, to)`\n * + PostgreSQL     : `EXTRACT(DAY FROM (to - from))`\n * + SQLite         : `CAST(strftime('%J', to) - strftime('%J', from) AS BIGINT)`\n *   + We cast to `BIGINT` to be consistent with MySQL\n *\n * -----\n *\n * @param left - The start date-time\n * @param right - The end date-time\n * @returns - Returns `right - left` in days\n */\nexports.timestampDiffDay = factory_1.makeOperator2(operator_type_1.OperatorType.TIMESTAMPDIFF_DAY, tm.mysql.bigIntSigned(), type_hint_1.TypeHint.DATE_TIME);\n//# sourceMappingURL=timestamp-diff.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Returns a Unix timestamp representing seconds since '1970-01-01 00:00:00' UTC.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_unix-timestamp\n * + https://www.sqlite.org/lang_datefunc.html\n *\n * -----\n *\n * + MySQL          : `UNIX_TIMESTAMP()`\n * + PostgreSQL     :\n * ```sql\n *  FLOOR(\n *      EXTRACT(EPOCH FROM (\n *          CURRENT_TIMESTAMP -\n *          timestamp '1970-01-01 00:00:00' AT TIME ZONE '00:00'\n *      ))\n *  )\n * ```\n * + SQLite         : `strftime('%s', 'now')`\n */\nexports.unixTimestampNow = factory_1.makeOperator0(operator_type_1.OperatorType.UNIX_TIMESTAMP_NOW, tm.mysql.bigIntUnsigned(), type_hint_1.TypeHint.DATE_TIME);\n//# sourceMappingURL=unix-timestamp-now.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst factory_1 = require(\"../factory\");\n/**\n *\n * -----\n *\n * + MySQL          : `CONVERT_TZ(x, '+00:00', @@session.time_zone)`\n * ```sql\n *  SET @@session.time_zone = 'EST';\n *  SELECT\n *      CONVERT_TZ('1970-01-01 03:00:00.123', '+00:00', @@session.time_zone),\n *      FLOOR(UNIX_TIMESTAMP(CONVERT_TZ('1970-01-01 03:00:00.123', '+00:00', @@session.time_zone)));\n *  > 1969-12-31 22:00:00.123\n *  > 10800\n * ```\n * + PostgreSQL     : `(x)::timestamp AT TIME ZONE '+00:00'`\n * ```sql\n *  SET TIME ZONE 'EST';\n *  SELECT\n *      '1970-01-01 03:00:00.123'::timestamp AT TIME ZONE '+00:00',\n *      FLOOR(EXTRACT(\n *          EPOCH FROM (\n *              '1970-01-01 03:00:00.123'::timestamp AT TIME ZONE '+00:00'\n *          )\n *      ))\n *  > 1970-01-01T03:00:00.123Z\n *  > 10800\n * ```\n * + SQLite         : `strftime('%Y-%m-%d %H:%M:%f', x)`\n * ```sql\n *  SELECT\n *      strftime('%Y-%m-%d %H:%M:%f', '1970-01-01 03:00:00.123'),\n *      strftime('%s', strftime('%Y-%m-%d %H:%M:%f', '1970-01-01 03:00:00.123'));\n *  > 1970-01-01 03:00:00.123\n *  > 10800\n * ```\n *\n * -----\n *\n * Treat `x` as representing a `UTC` timestamp.\n *\n */\nexports.utcStringToTimestamp = factory_1.makeOperator1(operator_type_1.OperatorType.UTC_STRING_TO_TIMESTAMP_CONSTRUCTOR, tm.mysql.dateTime(3).orNull());\n//# sourceMappingURL=utc-string-to-timestamp.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst decimal_mapper_1 = require(\"./decimal-mapper\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst factory_1 = require(\"../factory\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * This function is idempotent.\n * `ABS(ABS(x)) == ABS(x)`\n */\nexports.abs = factory_1.makeOperator1Idempotent(operator_type_1.OperatorType.ABSOLUTE_VALUE, decimal_mapper_1.decimalMapper, type_hint_1.TypeHint.DECIMAL);\n//# sourceMappingURL=abs.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst decimal_mapper_1 = require(\"./decimal-mapper\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nexports.add = factory_1.makeChainableDecimalOperator(operator_type_1.OperatorType.ADDITION, 0, decimal_mapper_1.decimalMapper, type_hint_1.TypeHint.DECIMAL);\n//# sourceMappingURL=add.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst decimal_mapper_1 = require(\"../decimal-mapper\");\nconst operator_type_1 = require(\"../../../operator-type\");\nconst type_hint_1 = require(\"../../../type-hint\");\nconst aggregate_factory_1 = require(\"../../aggregate-factory\");\nconst avgImpl = aggregate_factory_1.makeAggregateOperator2(operator_type_1.OperatorType.AGGREGATE_AVERAGE, decimal_mapper_1.decimalMapper.orNull(), type_hint_1.TypeHint.DECIMAL);\nexports.avgDistinct = (arg) => {\n    return avgImpl(true, arg);\n};\nexports.avgAll = (arg) => {\n    return avgImpl(false, arg);\n};\nexports.avg = exports.avgAll;\n//# sourceMappingURL=avg.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./avg\"));\n__export(require(\"./max\"));\n__export(require(\"./min\"));\n__export(require(\"./sum\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst decimal_mapper_1 = require(\"../decimal-mapper\");\nconst operator_type_1 = require(\"../../../operator-type\");\nconst type_hint_1 = require(\"../../../type-hint\");\nconst aggregate_factory_1 = require(\"../../aggregate-factory\");\n/**\n * Returns the max value of non-`NULL` values from a group.\n *\n * It returns `NULL` if there are no non-`NULL` values.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_max\n * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n * + https://www.sqlite.org/lang_corefunc.html#maxoreunc\n *\n * -----\n *\n * + MySQL      : `MAX(x)`\n * + PostgreSQL : `MAX(x)`\n * + SQLite     : `MAX(x)`\n */\nexports.max = aggregate_factory_1.makeAggregateOperator1(operator_type_1.OperatorType.AGGREGATE_MAX, decimal_mapper_1.decimalMapper.orNull(), type_hint_1.TypeHint.DECIMAL);\n//# sourceMappingURL=max.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst decimal_mapper_1 = require(\"../decimal-mapper\");\nconst operator_type_1 = require(\"../../../operator-type\");\nconst type_hint_1 = require(\"../../../type-hint\");\nconst aggregate_factory_1 = require(\"../../aggregate-factory\");\n/**\n * Returns the min value of non-`NULL` values from a group.\n *\n * It returns `NULL` if there are no non-`NULL` values.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_min\n * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n * + https://www.sqlite.org/lang_corefunc.html#minoreunc\n *\n * -----\n *\n * + MySQL      : `MIN(x)`\n * + PostgreSQL : `MIN(x)`\n * + SQLite     : `MIN(x)`\n */\nexports.min = aggregate_factory_1.makeAggregateOperator1(operator_type_1.OperatorType.AGGREGATE_MIN, decimal_mapper_1.decimalMapper.orNull(), type_hint_1.TypeHint.DECIMAL);\n//# sourceMappingURL=min.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst decimal_mapper_1 = require(\"../decimal-mapper\");\nconst operator_type_1 = require(\"../../../operator-type\");\nconst type_hint_1 = require(\"../../../type-hint\");\nconst aggregate_factory_1 = require(\"../../aggregate-factory\");\nconst sumImpl = aggregate_factory_1.makeAggregateOperator2(operator_type_1.OperatorType.AGGREGATE_SUM, decimal_mapper_1.decimalMapper.orNull(), type_hint_1.TypeHint.DECIMAL);\nexports.sumDistinct = (arg) => {\n    return sumImpl(true, arg);\n};\nexports.sumAll = (arg) => {\n    return sumImpl(false, arg);\n};\nexports.sum = exports.sumAll;\n//# sourceMappingURL=sum.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst decimal_mapper_1 = require(\"./decimal-mapper\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * This function is idempotent.\n * `CEILING(CEILING(x)) == CEILING(x)`\n */\nexports.ceiling = factory_1.makeOperator1Idempotent(operator_type_1.OperatorType.CEILING, decimal_mapper_1.decimalMapper, type_hint_1.TypeHint.DECIMAL);\n//# sourceMappingURL=ceiling.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping/fluent\");\n/**\n * We make this precision and scale far larger than what a database\n * can reasonably reach.\n *\n * PostgreSQL has max precision 1,000.\n *\n * Precision 40,000 and scale 20,000 seems like a safe bet, right?\n */\nexports.decimalMapper = tm.mysql.decimal(40000, 20000);\n//# sourceMappingURL=decimal-mapper.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst decimal_mapper_1 = require(\"./decimal-mapper\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\nexports.exp = factory_1.makeOperator1(operator_type_1.OperatorType.NATURAL_EXPONENTIATION, decimal_mapper_1.decimalMapper, type_hint_1.TypeHint.DECIMAL);\n//# sourceMappingURL=exp.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst decimal_mapper_1 = require(\"./decimal-mapper\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * This function is idempotent.\n * `FLOOR(FLOOR(x)) == FLOOR(x)`\n */\nexports.floor = factory_1.makeOperator1Idempotent(operator_type_1.OperatorType.FLOOR, decimal_mapper_1.decimalMapper, type_hint_1.TypeHint.DECIMAL);\n//# sourceMappingURL=floor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst decimal_mapper_1 = require(\"./decimal-mapper\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * Performs regular fixed-point division\n */\nexports.fractionalDiv = factory_1.makeOperator2(operator_type_1.OperatorType.FRACTIONAL_DIVISION, decimal_mapper_1.decimalMapper, type_hint_1.TypeHint.DECIMAL);\n//# sourceMappingURL=fractional-div.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./aggregate\"));\n__export(require(\"./abs\"));\n//export * from \"./acos\";\n__export(require(\"./add\"));\n//export * from \"./asin\";\n//export * from \"./atan\";\n//export * from \"./atan2\";\n//export * from \"./cbrt\";\n__export(require(\"./ceiling\"));\n//export * from \"./cos\";\n//export * from \"./cot\";\n//export * from \"./degrees\";\n__export(require(\"./exp\"));\n__export(require(\"./floor\"));\n__export(require(\"./fractional-div\"));\n/**\n * PostgreSQL and SQLite do not support fractional remainder `frem(x, y)`\n */\n//export * from \"./fractional-remainder\";\n//export * from \"./integer-div\";\n//export * from \"./integer-remainder\";\n__export(require(\"./ln\"));\n__export(require(\"./log\"));\n__export(require(\"./log2\"));\n__export(require(\"./log10\"));\n__export(require(\"./mul\"));\n__export(require(\"./neg\"));\n//export * from \"./pi\";\n__export(require(\"./power\"));\n//export * from \"./radians\";\n__export(require(\"./random\"));\n//export * from \"./round\";\n__export(require(\"./sign\"));\n//export * from \"./sin\";\n__export(require(\"./sqrt\"));\n__export(require(\"./sub\"));\n//export * from \"./tan\";\n//export * from \"./truncate\";\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst decimal_mapper_1 = require(\"./decimal-mapper\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * + MySQL      : `LN(0)` === `NULL`\n * + PostgreSQL : `LN(0)` throws error\n */\nexports.ln = factory_1.makeOperator1(operator_type_1.OperatorType.LN, decimal_mapper_1.decimalMapper.orNull(), type_hint_1.TypeHint.DECIMAL);\n//# sourceMappingURL=ln.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst decimal_mapper_1 = require(\"./decimal-mapper\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * + MySQL      : `LOG(0, 0)` === `NULL`\n * + PostgreSQL : `LOG(0, 0)` throws error\n */\nexports.log = factory_1.makeOperator2(operator_type_1.OperatorType.LOG, decimal_mapper_1.decimalMapper.orNull(), type_hint_1.TypeHint.DECIMAL);\n//# sourceMappingURL=log.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst decimal_mapper_1 = require(\"./decimal-mapper\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * + MySQL      : `LOG10(0)` === `NULL`\n * + PostgreSQL : `LOG(10, 0)` throws error\n */\nexports.log10 = factory_1.makeOperator1(operator_type_1.OperatorType.LOG10, decimal_mapper_1.decimalMapper.orNull(), type_hint_1.TypeHint.DECIMAL);\n//# sourceMappingURL=log10.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst decimal_mapper_1 = require(\"./decimal-mapper\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * + MySQL      : `LOG2(0)` === `NULL`\n * + PostgreSQL : `LOG(2, 0)` throws error\n */\nexports.log2 = factory_1.makeOperator1(operator_type_1.OperatorType.LOG2, decimal_mapper_1.decimalMapper.orNull(), type_hint_1.TypeHint.DECIMAL);\n//# sourceMappingURL=log2.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst decimal_mapper_1 = require(\"./decimal-mapper\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nexports.mul = factory_1.makeChainableDecimalOperator(operator_type_1.OperatorType.MULTIPLICATION, 1, decimal_mapper_1.decimalMapper, type_hint_1.TypeHint.DECIMAL);\n//# sourceMappingURL=mul.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst decimal_mapper_1 = require(\"./decimal-mapper\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * This function has the double elimination property.\n * `NEG(NEG(x)) == x`\n */\nexports.neg = factory_1.makeOperator1DoubleElimination(operator_type_1.OperatorType.UNARY_MINUS, decimal_mapper_1.decimalMapper, type_hint_1.TypeHint.DECIMAL);\n//# sourceMappingURL=neg.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst decimal_mapper_1 = require(\"./decimal-mapper\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\nexports.power = factory_1.makeOperator2(operator_type_1.OperatorType.POWER, decimal_mapper_1.decimalMapper, type_hint_1.TypeHint.DECIMAL);\n//# sourceMappingURL=power.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst decimal_mapper_1 = require(\"./decimal-mapper\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nexports.random = factory_1.makeOperator0(operator_type_1.OperatorType.RANDOM, decimal_mapper_1.decimalMapper, type_hint_1.TypeHint.DECIMAL);\n//# sourceMappingURL=random.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst decimal_mapper_1 = require(\"./decimal-mapper\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * This function is idempotent.\n * `SIGN(SIGN(x)) == SIGN(x)`\n */\nexports.sign = factory_1.makeOperator1Idempotent(operator_type_1.OperatorType.SIGN, decimal_mapper_1.decimalMapper, type_hint_1.TypeHint.DECIMAL);\n//# sourceMappingURL=sign.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst decimal_mapper_1 = require(\"./decimal-mapper\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * + MySQL      : `SQRT(-5)` === `null`\n * + PostgreSQL : `SQRT(-5)` throws error\n */\nexports.sqrt = factory_1.makeOperator1(operator_type_1.OperatorType.SQUARE_ROOT, decimal_mapper_1.decimalMapper.orNull(), type_hint_1.TypeHint.DECIMAL);\n//# sourceMappingURL=sqrt.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst decimal_mapper_1 = require(\"./decimal-mapper\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nexports.sub = factory_1.makeOperator2(operator_type_1.OperatorType.SUBTRACTION, decimal_mapper_1.decimalMapper, type_hint_1.TypeHint.DECIMAL);\n//# sourceMappingURL=sub.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst factory_1 = require(\"../factory\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Returns the absolute value\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_abs\n * + https://www.postgresql.org/docs/9.0/functions-math.html\n * + https://www.sqlite.org/lang_corefunc.html#abs\n *\n * -----\n *\n * + MySQL        : `ABS(x)`\n * + PostgreSQL   : `ABS(x)`\n * + SQLite       : `ABS(x)`\n *   + `ABS(Infinity)  = Infinity`\n *   + `ABS(-Infinity) = Infinity`\n *\n * -----\n *\n * This function is idempotent.\n * `ABS(ABS(x)) == ABS(x)`\n */\nexports.abs = factory_1.makeOperator1Idempotent(operator_type_1.OperatorType.ABSOLUTE_VALUE, tm.toUnsafeNumber(), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=abs.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Returns the arc cosine.\n *\n * If the argument is not in [-1, 1], may throw, or return `null`.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_acos\n * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-TRIG-TABLE\n *\n * -----\n *\n * + MySQL          : `ACOS(x)`\n * + PostgreSQL     : `ACOS(x)`\n * + SQLite         : None, implement with user-defined function\n *\n * -----\n *\n * + MySQL      : `ACOS(1.5)` === `NULL`\n * + PostgreSQL : `ACOS(1.5)` throws error\n */\nexports.acos = factory_1.makeOperator1(operator_type_1.OperatorType.ARC_COSINE, tm.mysql.double().orNull(), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=acos.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Returns the addition of the double values\n *\n * The precision of the result is not guaranteed.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/arithmetic-functions.html#operator_plus\n *\n * -----\n *\n * + MySQL        : `+`\n *   + `1e308+1e308` throws\n *   + `(-1e308)+(-1e308)` throws\n * + PostgreSQL   : `+`\n *   + `CAST(1e308 AS double precision)+CAST(1e308 AS double precision)` throws\n *   + `CAST(-1e308 AS double precision)+CAST(-1e308 AS double precision)` throws\n * + SQLite       : `+`\n *   + `1e308+1e308 = Infinity`\n *   + `(-1e308)+(-1e308) = -Infinity`\n *\n * -----\n *\n * In SQLite, addition with doubles may return `null`,\n * ```sql\n *  SELECT 1e999 + -1e999;\n *  > null\n * ```\n *\n * This particular function will be emulated in SQLite such that\n * it'll throw an error, instead of returning `null`.\n */\nexports.add = factory_1.makeChainableOperator(operator_type_1.OperatorType.ADDITION, 0, tm.toUnsafeNumber(), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=add.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../../operator-type\");\nconst type_hint_1 = require(\"../../../type-hint\");\nconst aggregate_factory_1 = require(\"../../aggregate-factory\");\nconst avgImpl = aggregate_factory_1.makeAggregateOperator2(operator_type_1.OperatorType.AGGREGATE_AVERAGE, tm.orNull(tm.toUnsafeNumber()), type_hint_1.TypeHint.DOUBLE);\n/**\n * Returns the average value of non-`NULL` values from a group.\n *\n * It returns `NULL` if there are no non-`NULL` values.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_avg\n * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n * + https://www.sqlite.org/lang_aggfunc.html#avg\n *\n * -----\n *\n * + MySQL      : `AVG(DISTINCT x)`\n * + PostgreSQL : `AVG(DISTINCT x)`\n * + SQLite     : `AVG(DISTINCT x)`\n *\n * -----\n *\n * No guarantees are made about the precision of the return type.\n */\nexports.avgDistinct = (arg) => {\n    return avgImpl(true, arg);\n};\n/**\n * Returns the average value of non-`NULL` values from a group.\n *\n * It returns `NULL` if there are no non-`NULL` values.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_avg\n * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n * + https://www.sqlite.org/lang_aggfunc.html#avg\n *\n * -----\n *\n * + MySQL      : `AVG(x)`\n * + PostgreSQL : `AVG(x)`\n * + SQLite     : `AVG(x)`\n *\n * -----\n *\n * No guarantees are made about the precision of the return type.\n */\nexports.avgAll = (arg) => {\n    return avgImpl(false, arg);\n};\n/**\n * Returns the average value of non-`NULL` values from a group.\n *\n * It returns `NULL` if there are no non-`NULL` values.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_avg\n * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n * + https://www.sqlite.org/lang_aggfunc.html#avg\n *\n * -----\n *\n * + MySQL      : `AVG(x)`\n * + PostgreSQL : `AVG(x)`\n * + SQLite     : `AVG(x)`\n *\n * -----\n *\n * No guarantees are made about the precision of the return type.\n */\nexports.avg = exports.avgAll;\n//# sourceMappingURL=avg.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./avg\"));\n__export(require(\"./max\"));\n__export(require(\"./min\"));\n__export(require(\"./stddev-pop\"));\n__export(require(\"./stddev-samp\"));\n__export(require(\"./sum\"));\n__export(require(\"./var-pop\"));\n__export(require(\"./var-samp\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../../operator-type\");\nconst type_hint_1 = require(\"../../../type-hint\");\nconst aggregate_factory_1 = require(\"../../aggregate-factory\");\n/**\n * Returns the max value of non-`NULL` values from a group.\n *\n * It returns `NULL` if there are no non-`NULL` values.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_max\n * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n * + https://www.sqlite.org/lang_corefunc.html#maxoreunc\n *\n * -----\n *\n * + MySQL      : `MAX(x)`\n * + PostgreSQL : `MAX(x)`\n * + SQLite     : `MAX(x)`\n */\nexports.max = aggregate_factory_1.makeAggregateOperator1(operator_type_1.OperatorType.AGGREGATE_MAX, tm.orNull(tm.toUnsafeNumber()), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=max.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../../operator-type\");\nconst type_hint_1 = require(\"../../../type-hint\");\nconst aggregate_factory_1 = require(\"../../aggregate-factory\");\n/**\n * Returns the min value of non-`NULL` values from a group.\n *\n * It returns `NULL` if there are no non-`NULL` values.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_min\n * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n * + https://www.sqlite.org/lang_corefunc.html#minoreunc\n *\n * -----\n *\n * + MySQL      : `MIN(x)`\n * + PostgreSQL : `MIN(x)`\n * + SQLite     : `MIN(x)`\n */\nexports.min = aggregate_factory_1.makeAggregateOperator1(operator_type_1.OperatorType.AGGREGATE_MIN, tm.orNull(tm.toUnsafeNumber()), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=min.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../../operator-type\");\nconst type_hint_1 = require(\"../../../type-hint\");\nconst aggregate_factory_1 = require(\"../../aggregate-factory\");\n/**\n * Returns the population standard deviation of non-`NULL` values from a group.\n *\n * It returns `NULL` if there are no non-`NULL` values.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_stddev-pop\n * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n * + https://stackoverflow.com/questions/2298339/standard-deviation-for-sqlite\n *\n * -----\n *\n * + MySQL      : `STDDEV_POP(x)`\n *   + Always returns `double`\n * + PostgreSQL : `STDDEV_POP(x)`\n *   + Returns `double precision` if argument is `double precision`; `numeric` otherwise\n * + SQLite     : None. Implement with user-defined function.\n *\n * Should only be provided for `double` because MySQL treats all `x` as `double`.\n *\n * -----\n *\n * The population standard deviation is,\n * ```sql\n *  SQRT(\n *      -- SUM() and AVG() should ignore rows with `NULL` values\n *      SUM(\n *          POW((x - AVG(x), 2)\n *      ) /\n *      COUNT(x) -- Returns a count of the number of rows with non-`NULL` values.\n *  )\n * ```\n *\n * Of course, you can't use the above expression because you cannot nest aggregate functions.\n * (Cannot use `AVG()` inside of `SUM()`)\n */\nexports.stdDevPop = aggregate_factory_1.makeAggregateOperator1(operator_type_1.OperatorType.AGGREGATE_POPULATION_STANDARD_DEVIATION, tm.orNull(tm.toUnsafeNumber()), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=stddev-pop.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../../operator-type\");\nconst type_hint_1 = require(\"../../../type-hint\");\nconst aggregate_factory_1 = require(\"../../aggregate-factory\");\n/**\n * Returns the sample standard deviation of non-`NULL` values from a group.\n *\n * It returns `NULL` if there are no non-`NULL` values.\n *\n * It returns `NULL` if there is only one non-`NULL` value.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_stddev-samp\n * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n * + https://stackoverflow.com/questions/2298339/standard-deviation-for-sqlite\n *\n * -----\n *\n * + MySQL      : `STDDEV_SAMP(x)`\n *   + Always returns `double`\n * + PostgreSQL : `STDDEV_SAMP(x)`\n *   + Returns `double precision` if argument is `double precision`; `numeric` otherwise\n * + SQLite     : None. Implement with user-defined function.\n *\n * Should only be provided for `double` because MySQL treats all `x` as `double`.\n *\n * -----\n *\n * The sample standard deviation is,\n * ```sql\n *  SQRT(\n *      -- SUM() and AVG() should ignore rows with `NULL` values\n *      SUM(\n *          POW((x - AVG(x), 2)\n *      ) /\n *      (COUNT(x) - 1) -- Returns a count of the number of rows with non-`NULL` values.\n *  )\n * ```\n *\n * Of course, you can't use the above expression because you cannot nest aggregate functions.\n * (Cannot use `AVG()` inside of `SUM()`)\n */\nexports.stdDevSamp = aggregate_factory_1.makeAggregateOperator1(operator_type_1.OperatorType.AGGREGATE_SAMPLE_STANDARD_DEVIATION, tm.orNull(tm.toUnsafeNumber()), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=stddev-samp.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../../operator-type\");\nconst type_hint_1 = require(\"../../../type-hint\");\nconst aggregate_factory_1 = require(\"../../aggregate-factory\");\nconst sumImpl = aggregate_factory_1.makeAggregateOperator2(operator_type_1.OperatorType.AGGREGATE_SUM, tm.orNull(tm.toUnsafeNumber()), type_hint_1.TypeHint.DOUBLE);\n/**\n * Returns the total sum of non-`NULL` values from a group.\n *\n * It returns `NULL` if there are no non-`NULL` values.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_sum\n * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n * + https://www.sqlite.org/lang_aggfunc.html#sumunc\n *\n * -----\n *\n * + MySQL      : `SUM(DISTINCT x)`\n * + PostgreSQL : `SUM(DISTINCT x)`\n * + SQLite     : `SUM(DISTINCT x)`\n *\n * -----\n *\n * No guarantees are made about the precision of the return type.\n */\nexports.sumDistinct = (arg) => {\n    return sumImpl(true, arg);\n};\n/**\n * Returns the total sum of non-`NULL` values from a group.\n *\n * It returns `NULL` if there are no non-`NULL` values.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_sum\n * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n * + https://www.sqlite.org/lang_aggfunc.html#sumunc\n *\n * -----\n *\n * + MySQL      : `SUM(x)`\n * + PostgreSQL : `SUM(x)`\n * + SQLite     : `SUM(x)`\n *\n * -----\n *\n * No guarantees are made about the precision of the return type.\n */\nexports.sumAll = (arg) => {\n    return sumImpl(false, arg);\n};\n/**\n * Returns the total sum of non-`NULL` values from a group.\n *\n * It returns `NULL` if there are no non-`NULL` values.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_sum\n * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n * + https://www.sqlite.org/lang_aggfunc.html#sumunc\n *\n * -----\n *\n * + MySQL      : `SUM(x)`\n * + PostgreSQL : `SUM(x)`\n * + SQLite     : `SUM(x)`\n *\n * -----\n *\n * No guarantees are made about the precision of the return type.\n */\nexports.sum = exports.sumAll;\n//# sourceMappingURL=sum.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../../operator-type\");\nconst type_hint_1 = require(\"../../../type-hint\");\nconst aggregate_factory_1 = require(\"../../aggregate-factory\");\n/**\n * Returns the population variance of non-`NULL` values from a group.\n *\n * It returns `NULL` if there are no non-`NULL` values.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_var-pop\n * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n *\n * -----\n *\n * + MySQL      : `VAR_POP(x)`\n *   + Always returns `double`\n * + PostgreSQL : `VAR_POP(x)`\n *   + Returns `double precision` if argument is `double precision`; `numeric` otherwise\n * + SQLite     : None. Implement with user-defined function.\n *\n * Should only be provided for `double` because MySQL treats all `x` as `double`.\n *\n * -----\n *\n * The population variance is,\n * ```sql\n *  -- SUM() and AVG() should ignore rows with `NULL` values\n *  SUM(\n *      POW((x - AVG(x), 2)\n *  ) /\n *  COUNT(x) -- Returns a count of the number of rows with non-`NULL` values.\n * ```\n *\n * Of course, you can't use the above expression because you cannot nest aggregate functions.\n * (Cannot use `AVG()` inside of `SUM()`)\n */\nexports.varPop = aggregate_factory_1.makeAggregateOperator1(operator_type_1.OperatorType.AGGREGATE_POPULATION_VARIANCE, tm.orNull(tm.toUnsafeNumber()), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=var-pop.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../../operator-type\");\nconst type_hint_1 = require(\"../../../type-hint\");\nconst aggregate_factory_1 = require(\"../../aggregate-factory\");\n/**\n * Returns the sample variance of non-`NULL` values from a group.\n *\n * It returns `NULL` if there are no non-`NULL` values.\n *\n * It returns `NULL` if there is only one non-`NULL` value.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_var-samp\n * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n *\n * -----\n *\n * + MySQL      : `VAR_SAMP(x)`\n *   + Always returns `double`\n * + PostgreSQL : `VAR_SAMP(x)`\n *   + Returns `double precision` if argument is `double precision`; `numeric` otherwise\n * + SQLite     : None. Implement with user-defined function.\n *\n * Should only be provided for `double` because MySQL treats all `x` as `double`.\n *\n * -----\n *\n * The sample variance is,\n * ```sql\n *  -- SUM() and AVG() should ignore rows with `NULL` values\n *  SUM(\n *      POW((x - AVG(x), 2)\n *  ) /\n *  (COUNT(x) - 1) -- Returns a count of the number of rows with non-`NULL` values.\n * ```\n *\n * Of course, you can't use the above expression because you cannot nest aggregate functions.\n * (Cannot use `AVG()` inside of `SUM()`)\n */\nexports.varSamp = aggregate_factory_1.makeAggregateOperator1(operator_type_1.OperatorType.AGGREGATE_SAMPLE_VARIANCE, tm.orNull(tm.toUnsafeNumber()), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=var-samp.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Returns the arc sine.\n *\n * If the argument is not in [-1, 1], may throw, or return `null`.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_asin\n * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-TRIG-TABLE\n *\n * -----\n *\n * + MySQL          : `ASIN(x)`\n * + PostgreSQL     : `ASIN(x)`\n * + SQLite         : None, implement with user-defined function\n *\n * -----\n *\n * + MySQL      : `ASIN(1.5)` === `NULL`\n * + PostgreSQL : `ASIN(1.5)` throws error\n */\nexports.asin = factory_1.makeOperator1(operator_type_1.OperatorType.ARC_SINE, tm.mysql.double().orNull(), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=asin.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Returns the arc tangent.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_atan\n * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-TRIG-TABLE\n *\n * -----\n *\n * + MySQL          : `ATAN(x)`\n * + PostgreSQL     : `ATAN(x)`\n * + SQLite         : None, implement with user-defined function\n */\nexports.atan = factory_1.makeOperator1(operator_type_1.OperatorType.ARC_TANGENT, tm.mysql.double(), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=atan.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Similar to calculating the arc tangent of `Y / X`,\n * except that the signs of both arguments are used\n * to determine the quadrant of the result.\n *\n * The precision of the result is not guaranteed.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_atan2\n * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-TRIG-TABLE\n *\n * -----\n *\n * + MySQL          : `ATAN2(y, x)`\n * + PostgreSQL     : `ATAN2(y, x)`\n * + SQLite         : None, implement with user-defined function\n *\n * -----\n *\n * @param left  - The Y of the vector\n * @param right - The X of the vector\n */\nexports.atan2 = factory_1.makeOperator2(operator_type_1.OperatorType.ARC_TANGENT_2, tm.mysql.double(), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=atan2.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * Returns the cube root\n *\n * The precision of the result is not guaranteed.\n *\n * + https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html#function_pow\n * + https://www.postgresql.org/docs/9.0/functions-math.html\n * + https://stackoverflow.com/questions/13190064/how-to-find-power-of-a-number-in-sqlite\n *\n * -----\n *\n * + MySQL        : `IF(x >= 0, POWER(x, 1.0/3.0), -POWER(-(x), 1.0/3.0))`\n *   + The `.0` parts are important!\n *   + MySQL's `POWER()` function throws on negative numbers\n * + PostgreSQL   : `||/` or `CBRT(x)` (Lets not use the ugly `||/` operator)\n * + SQLite       : Requres creating a `CBRT(x)` user-defined function\n *\n * -----\n *\n * MySQL\n * ```sql\n * SELECT POWER(27, 1.0/3.0)\n * > 3\n * ```\n *\n * PostgreSQL\n * ```sql\n * SELECT POWER(27, 1.0/3.0)\n * > 2.99999999999999999997\n *\n * SELECT CBRT(27)\n * > 3\n * ```\n */\nexports.cbrt = factory_1.makeOperator1(operator_type_1.OperatorType.CUBE_ROOT, tm.toUnsafeNumber(), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=cbrt.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * Returns the ceiling of the number\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_ceiling\n * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-FUNC-TABLE\n * + https://stackoverflow.com/questions/14969067/getting-the-ceil-value-of-a-number-in-sqlite\n *\n * -----\n *\n * + MySQL        : `CEIL(x)/CEILING(x)`\n * + PostgreSQL   : `CEIL(x)/CEILING(x)`\n * + SQLite         : None, implement with user-defined function\n *\n * -----\n *\n * ```sql\n *  SELECT CEILING(1.1)\n *  > 2\n *\n *  SELECT CEILING(-1.1)\n *  > -1\n * ```\n *\n * -----\n *\n * This function is idempotent.\n * `CEILING(CEILING(x)) == CEILING(x)`\n */\nexports.ceiling = factory_1.makeOperator1Idempotent(operator_type_1.OperatorType.CEILING, tm.toUnsafeNumber(), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=ceiling.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * Returns the cosine\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_cos\n * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-TRIG-TABLE\n *\n * -----\n *\n * + MySQL          : `COS(x)`\n * + PostgreSQL     : `COS(x)`\n * + SQLite         : None, implement with user-defined function\n *   + `extension-functions.c` from https://www.sqlite.org/contrib returns `null` for `COS(1e999)`\n *\n * -----\n *\n * @param arg - Radians\n * @returns The cosine\n */\nexports.cos = factory_1.makeOperator1(operator_type_1.OperatorType.COSINE, tm.mysql.double().orNull(), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=cos.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * Returns the cotangent\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_cot\n * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-TRIG-TABLE\n *\n * -----\n *\n * + MySQL          : `COT(x)`\n * + PostgreSQL     : `COT(x)`\n * + SQLite         : None, implement with user-defined function\n *   + `extension-functions.c` from https://www.sqlite.org/contrib returns `null` for `COT(1e999)`\n *\n * -----\n *\n * + MySQL      : `COT(0)` throws error\n * + PostgreSQL : `COT(0)` === `NULL`\n *\n * -----\n *\n * @param arg - Radians\n * @returns The cotangent\n */\nexports.cot = factory_1.makeOperator1(operator_type_1.OperatorType.COTANGENT, tm.mysql.double().orNull(), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=cot.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * Converts from radians to degrees.\n *\n * The precision of the result is not guaranteed.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_degrees\n * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-FUNC-TABLE\n *\n * -----\n *\n * + MySQL          : `DEGREES(x)`\n * + PostgreSQL     : `DEGREES(x)`\n * + SQLite         : None, use `x * (180.0/3.1415926535897932384626433832795028841971693993751)`\n *\n * -----\n *\n * @param arg - radians\n * @returns degrees\n */\nexports.degrees = factory_1.makeOperator1(operator_type_1.OperatorType.DEGREES, tm.toUnsafeNumber(), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=degrees.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * The natural exponential function\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_exp\n * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-FUNC-TABLE\n * + https://en.wikipedia.org/wiki/Exponential_function\n *\n * -----\n *\n * + MySQL          : `EXP(x)`\n * + PostgreSQL     : `EXP(x)`\n * + SQLite         : None, implement with user-defined function\n *\n * -----\n *\n * @param arg - The power value\n * @returns e^arg\n */\nexports.exp = factory_1.makeOperator1(operator_type_1.OperatorType.NATURAL_EXPONENTIATION, tm.toUnsafeNumber(), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=exp.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * Returns the floor of the number\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_floor\n * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-FUNC-TABLE\n * + https://stackoverflow.com/questions/7129249/getting-the-floor-value-of-a-number-in-sqlite\n *\n * -----\n *\n * + MySQL        : `FLOOR(x)`\n * + PostgreSQL   : `FLOOR(x)`\n * + SQLite         : None, implement with user-defined function\n *\n * -----\n *\n * ```sql\n *  SELECT FLOOR(1.1)\n *  > 1\n *\n *  SELECT FLOOR(-1.1)\n *  > -2\n * ```\n *\n * -----\n *\n * This function is idempotent.\n * `FLOOR(FLOOR(x)) == FLOOR(x)`\n */\nexports.floor = factory_1.makeOperator1Idempotent(operator_type_1.OperatorType.FLOOR, tm.toUnsafeNumber(), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=floor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * Performs regular floating-point division\n *\n * The precision of the result is not guaranteed.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/arithmetic-functions.html#operator_divide\n * + https://www.postgresql.org/docs/9.0/functions-math.html\n * + https://www.sqlite.org/lang_expr.html#binaryops\n *\n * -----\n *\n * + MySQL        : `/`\n * + PostgreSQL   : `/`\n * + SQLite       : `/`\n *\n * -----\n *\n * `1e0/0e0`,\n *\n * + MySQL      : `NULL`\n * + PostgreSQL : throws\n * + SQLite     : `NULL`\n *\n * -----\n *\n * `1e308/0.1e0`,\n *\n * + MySQL      : throws\n * + PostgreSQL : throws\n * + SQLite     : `Infinity`\n *\n * -----\n *\n * `1e308/-0.1e0`,\n *\n * + MySQL      : throws\n * + PostgreSQL : throws\n * + SQLite     : `-Infinity`\n *\n * -----\n *\n * MySQL,\n * ```sql\n *  SELECT\n *      3.141592653539793e0 /\n *      6.233523257997525e0;\n *  > 0.5039834654517689\n * ```\n * PostgreSQL,\n * ```sql\n *  SELECT\n *      CAST(3.141592653539793e0 AS DOUBLE PRECISION) /\n *      CAST(6.233523257997525e0 AS DOUBLE PRECISION);\n *  > 0.503983465451769\n * ```\n *\n * SQLite,\n * ```sql\n *  SELECT\n *      3.141592653539793e0 /\n *      6.233523257997525e0;\n *  > 0.5039834654517689\n * ```\n */\nexports.fractionalDiv = factory_1.makeOperator2(operator_type_1.OperatorType.FRACTIONAL_DIVISION, tm.orNull(tm.toUnsafeNumber()), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=fractional-div.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * Returns the remainder after fractional division.\n *\n * The precision of the result is not guaranteed.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/arithmetic-functions.html#operator_mod\n * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_mod\n * + https://stackoverflow.com/questions/53486669/modulo-operation-on-floating-point-numbers-on-postgresql\n *\n * -----\n *\n * + MySQL      : `dividend % divisor`\n * + PostgreSQL : See algorithm below\n * + SQLite     : See algorithm below\n *\n * ```sql\n *  IF(\n *      dividend >= 0,\n *      dividend - FLOOR(dividend / divisor) * divisor,\n *      -((-dividend) - FLOOR((-dividend) / divisor) * divisor)\n *  )\n * ```\n */\nexports.fractionalRemainder = factory_1.makeOperator2(operator_type_1.OperatorType.FRACTIONAL_REMAINDER, tm.mysql.double().orNull(), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=fractional-remainder.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./aggregate\"));\n__export(require(\"./abs\"));\n__export(require(\"./acos\"));\n__export(require(\"./add\"));\n__export(require(\"./asin\"));\n__export(require(\"./atan\"));\n__export(require(\"./atan2\"));\n__export(require(\"./cbrt\"));\n__export(require(\"./ceiling\"));\n__export(require(\"./cos\"));\n__export(require(\"./cot\"));\n__export(require(\"./degrees\"));\n__export(require(\"./exp\"));\n__export(require(\"./floor\"));\n__export(require(\"./fractional-div\"));\n__export(require(\"./fractional-remainder\"));\n/**\n * MySQL's `DIV` is just too... Unintuitive.\n * One would think it converts operands to int before performing int-div.\n * Instead, it performs fractional-div, then converts result to int.\n *\n * If you really want integer-div, just cast and divide yourself.\n */\n//export * from \"./integer-div\";\n/**\n * For the same reason that integer-div is removed.\n */\n//export * from \"./integer-remainder\";\n__export(require(\"./ln\"));\n__export(require(\"./log\"));\n__export(require(\"./log2\"));\n__export(require(\"./log10\"));\n__export(require(\"./mul\"));\n__export(require(\"./neg\"));\n__export(require(\"./pi\"));\n__export(require(\"./power\"));\n__export(require(\"./radians\"));\n__export(require(\"./random\"));\n//export * from \"./round\";\n__export(require(\"./sign\"));\n__export(require(\"./sin\"));\n__export(require(\"./sqrt\"));\n__export(require(\"./sub\"));\n__export(require(\"./tan\"));\n//export * from \"./truncate\";\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * Returns the natural logarithm\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_ln\n * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-FUNC-TABLE\n *\n * -----\n *\n * + MySQL          : `LN(x)`\n * + PostgreSQL     : `LN(x)`\n * + SQLite         : None, implment with user-defined function\n *\n * -----\n *\n * + MySQL      : `LN(0)` === `NULL`\n * + PostgreSQL : `LN(0)` throws error\n *\n * -----\n *\n * + MySQL      : `LN(-1)` === `NULL`\n * + PostgreSQL : `LN(-1)` throws error\n */\nexports.ln = factory_1.makeOperator1(operator_type_1.OperatorType.LN, tm.orNull(tm.toUnsafeNumber()), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=ln.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * Returns the logarithm to the specified `base`.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_log\n * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-FUNC-TABLE\n *\n * -----\n *\n * + MySQL          : `LOG(base, x)`\n * + PostgreSQL     : `LOG(base, x)`\n * + SQLite         : None, implment with user-defined function\n *\n * -----\n *\n * + MySQL      : `LOG(0, 0)` === `NULL`\n * + PostgreSQL : `LOG(0, 0)` throws error\n *\n * -----\n *\n * + MySQL      : `LOG(1, 5)` === `NULL`\n * + PostgreSQL : `LOG(1, 5)` throws error\n *\n * -----\n *\n * @param left  - The base\n * @param right - The anti-logarithm\n * @returns log_{base}(anti-logarithm) = logarithm\n */\nexports.log = factory_1.makeOperator2(operator_type_1.OperatorType.LOG, tm.orNull(tm.toUnsafeNumber()), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=log.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * Returns the base-10 logarithm\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_log10\n *\n * -----\n *\n * + MySQL          : `LOG10(x)`\n * + PostgreSQL     : `LOG(10.0, x)`\n * + SQLite         : None, implment with user-defined function\n *\n * -----\n *\n * + MySQL      : `LOG10(0)` === `NULL`\n * + PostgreSQL : `LOG(10, 0)` throws error\n *\n * -----\n *\n * + MySQL      : `LOG10(-1)` === `NULL`\n * + PostgreSQL : `LOG(10, -1)` throws error\n */\nexports.log10 = factory_1.makeOperator1(operator_type_1.OperatorType.LOG10, tm.orNull(tm.toUnsafeNumber()), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=log10.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * Returns the base-2 logarithm\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_log2\n *\n * -----\n *\n * + MySQL          : `LOG2(x)`\n * + PostgreSQL     : `LOG(2.0, x)`\n * + SQLite         : None, implment with user-defined function\n *\n * -----\n *\n * + MySQL      : `LOG2(0)` === `NULL`\n * + PostgreSQL : `LOG(2, 0)` throws error\n *\n * -----\n *\n * + MySQL      : `LOG2(-1)` === `NULL`\n * + PostgreSQL : `LOG(2, -1)` throws error\n */\nexports.log2 = factory_1.makeOperator1(operator_type_1.OperatorType.LOG2, tm.orNull(tm.toUnsafeNumber()), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=log2.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Returns the multiplication of the double values\n *\n * The precision of the result is not guaranteed.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/arithmetic-functions.html#operator_times\n *\n * -----\n *\n * + MySQL        : `*`\n *   + `1e308*1e308` throws\n *   + `1e308*-1e308` throws\n * + PostgreSQL   : `*`\n *   + `CAST(1e308 AS double precision)*CAST(1e308 AS double precision)` throws\n *   + `CAST(1e308 AS double precision)*CAST(-1e308 AS double precision)` throws\n * + SQLite       : `*`\n *   + `1e308*1e308 = Infinity`\n *   + `1e308*-1e308 = -Infinity`\n *\n * -----\n *\n * In SQLite, multiplication with doubles may return `null`,\n * ```sql\n *  SELECT 0e0 * 1e999;\n *  > null\n * ```\n *\n * This particular function will be emulated in SQLite such that\n * it'll throw an error, instead of returning `null`.\n */\nexports.mul = factory_1.makeChainableOperator(operator_type_1.OperatorType.MULTIPLICATION, 1, tm.toUnsafeNumber(), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=mul.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * Returns the unary minus of the double value\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/arithmetic-functions.html#operator_unary-minus\n *\n * -----\n *\n * + MySQL        : `-`\n * + PostgreSQL   : `-`\n * + SQLite       : `-`\n *\n * -----\n *\n * This function has the double elimination property.\n * `NEG(NEG(x)) == x`\n */\nexports.neg = factory_1.makeOperator1DoubleElimination(operator_type_1.OperatorType.UNARY_MINUS, tm.toUnsafeNumber(), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=neg.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Returns the value of pi\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_pi\n * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-FUNC-TABLE\n * + https://en.wikipedia.org/wiki/Pi\n *\n * -----\n *\n * + MySQL          : `PI()`; MySQL's understanding of pi is... terrible\n *   + https://github.com/AnyhowStep/tsql/issues/252\n *   + The MySQL adapter library **should not** use `PI()`, it should use `3.141592653589793` instead\n * + PostgreSQL     : `PI()` Returns `3.14159265358979`\n * + SQLite         : None, implement using `3.141592653589793`\n *\n * -----\n *\n * In JS, `Math.PI` is `3.141592653589793`\n */\nexports.pi = factory_1.makeOperator0(operator_type_1.OperatorType.PI, tm.mysql.double(), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=pi.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * Returns `base^exponent`\n *\n * The precision of the result is not guaranteed.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_power\n * + https://www.postgresql.org/docs/9.0/functions-math.html\n * + https://stackoverflow.com/questions/13190064/how-to-find-power-of-a-number-in-sqlite\n *\n * -----\n *\n * + MySQL        : `POWER(base, exponent)`\n * + PostgreSQL   : `^` or `POWER(base, exponent)` (Let's not use the ugly `^` operator)\n * + SQLite         : None, implement with user-defined function\n *   + `extension-functions.c` from https://www.sqlite.org/contrib returns `null` for `POWER(-1, 0.5)`\n *\n * -----\n *\n * If base is negative, and exponent is fractional,\n * + MySQL throws\n * + PostgreSQL throws\n * + SQLite reutrns `null` (`extension-functions.c`)\n *\n * -----\n *\n * If base is zero, and exponent is negative,\n * + MySQL throws\n * + PostgreSQL throws\n * + SQLite reutrns `Infinity` (`extension-functions.c`)\n *\n * -----\n *\n * @param left  - The base\n * @param right - The exponent\n * @returns base^exponent\n *\n * @todo Decide if we should make SQLite throw instead of return `null`\n */\nexports.power = factory_1.makeOperator2(operator_type_1.OperatorType.POWER, tm.orNull(tm.toUnsafeNumber()), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=power.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * Converts from degrees to radians.\n *\n * The precision of the result is not guaranteed.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_radians\n * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-FUNC-TABLE\n *\n * -----\n *\n * + MySQL          : `RADIANS(x)`\n * + PostgreSQL     : `RADIANS(x)`\n * + SQLite         : None, use `x * (3.1415926535897932384626433832795028841971693993751/180.0)`\n *\n * -----\n *\n * @param arg - degrees\n * @returns radians\n */\nexports.radians = factory_1.makeOperator1(operator_type_1.OperatorType.RADIANS, tm.toUnsafeNumber(), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=radians.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Returns a random floating point number in the range, `[0.0, 1.0)`\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_rand\n * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-RANDOM-TABLE\n * + https://www.sqlite.org/lang_corefunc.html#random\n *\n * -----\n *\n * + MySQL          : `RAND()`      Returns `0.0 <= v < 1.0`\n * + PostgreSQL     : `RANDOM()`    Returns `0.0 <= v < 1.0`\n * + SQLite         : Incompatible.\n *   SQLite's `RANDOM()` function returns a value between `-9223372036854775808` and `+9223372036854775807`.\n *   See algorithm below to emulate.\n *   Or just use a user-defined function...\n *\n * -----\n *\n * SQLite emulation,\n * ```sql\n *  COALESCE(\n *      NULLIF(\n *          ABS(RANDOM()+0e0) / 9223372036854775809e0,\n *          1\n *      ),\n *      0.999999999999999\n *  )\n * ```\n */\nexports.random = factory_1.makeOperator0(operator_type_1.OperatorType.RANDOM, tm.mysql.double(), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=random.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * + If the argument is negative, returns -1\n * + If the argument is positive, returns  1\n * + If the argument is zero, returns 0\n *\n * -----\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_sign\n * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-FUNC-TABLE\n *\n * -----\n *\n * + MySQL          : `SIGN(x)`\n * + PostgreSQL     : `SIGN(x)`\n * + SQLite         : `CASE WHEN x > 0 THEN 1e0 WHEN x < 0 THEN -1e0 ELSE 0e0 END`\n *\n * -----\n *\n * This function is idempotent.\n * `SIGN(SIGN(x)) == SIGN(x)`\n*/\nexports.sign = factory_1.makeOperator1Idempotent(operator_type_1.OperatorType.SIGN, tm.mysql.double(), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=sign.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * Returns the sine\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_sin\n * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-TRIG-TABLE\n *\n * -----\n *\n * + MySQL          : `SIN(x)`\n * + PostgreSQL     : `SIN(x)`\n * + SQLite         : None, implement with user-defined function\n *   + `extension-functions.c` from https://www.sqlite.org/contrib returns `null` for `SIN(1e999)`\n *\n * -----\n *\n * @param arg - Radians\n * @returns The sine\n */\nexports.sin = factory_1.makeOperator1(operator_type_1.OperatorType.SINE, tm.mysql.double().orNull(), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=sin.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * Returns the square root\n *\n * The precision of the result is not guaranteed.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_sqrt\n * + https://www.postgresql.org/docs/9.0/functions-math.html\n * + https://stackoverflow.com/questions/13190064/how-to-find-power-of-a-number-in-sqlite\n *\n * -----\n *\n * + MySQL        : `SQRT(x)`\n * + PostgreSQL   : `|/` or `SQRT(x)` (Lets not use the ugly `|/` operator)\n * + SQLite       : Requres creating a `SQRT(x)` user-defined function\n *\n * -----\n *\n * + MySQL      : `SQRT(-5)` === `null`\n * + PostgreSQL : `SQRT(-5)` throws error\n */\nexports.sqrt = factory_1.makeOperator1(operator_type_1.OperatorType.SQUARE_ROOT, tm.orNull(tm.toUnsafeNumber()), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=sqrt.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Returns the subtraction of the double values\n *\n * The precision of the result is not guaranteed.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/arithmetic-functions.html#operator_minus\n *\n * -----\n *\n * + MySQL        : `-`\n *   + `-1e308 - 1e308` throws\n *   + `1e308 - -1e308` throws\n * + PostgreSQL   : `-`\n *   + `CAST(-1e308 AS DOUBLE PRECISION) - CAST(1e308 AS DOUBLE PRECISION)` throws\n *   + `CAST(1e308 AS DOUBLE PRECISION) - CAST(-1e308 AS DOUBLE PRECISION)` throws\n * + SQLite       : `-`\n *   + `-1e308 - 1e308 = -Infinity`\n *   + `1e308 - -1e308 = Infinity`\n *\n * -----\n *\n * In SQLite, subtraction with doubles may return `null`,\n * ```sql\n *  SELECT 1e999 - 1e999;\n *  > null\n * ```\n *\n * This particular function will be emulated in SQLite such that\n * it'll throw an error, instead of returning `null`.\n */\nexports.sub = factory_1.makeOperator2(operator_type_1.OperatorType.SUBTRACTION, tm.toUnsafeNumber(), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=sub.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * Returns the tangent\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_tan\n * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-TRIG-TABLE\n *\n * -----\n *\n * + MySQL          : `TAN(x)`\n * + PostgreSQL     : `TAN(x)`\n * + SQLite         : None, implement with user-defined function\n *   + `extension-functions.c` from https://www.sqlite.org/contrib returns `null` for `TAN(1e999)`\n *\n * -----\n *\n * @param arg - Radians\n * @returns The tangent\n */\nexports.tan = factory_1.makeOperator1(operator_type_1.OperatorType.TANGENT, tm.mysql.double().orNull(), type_hint_1.TypeHint.DOUBLE);\n//# sourceMappingURL=tan.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst primary_key_1 = require(\"../../primary-key\");\nconst eq_1 = require(\"./eq\");\nconst logical_1 = require(\"../logical\");\nconst column_map_1 = require(\"../../column-map\");\nconst built_in_expr_1 = require(\"../../built-in-expr\");\n/**\n * Convenience function for,\n * ```ts\n *  tsql.and(\n *      tsql.eq(primaryKeyColumn0, value0),\n *      tsql.eq(primaryKeyColumn1, value1),\n *      tsql.eq(primaryKeyColumn2, value2)\n *      //etc.\n *  );\n * ```\n *\n * -----\n *\n * It is recommended to **only** use this with **object literals**.\n * Excess property checks are disabled for non-object literals.\n * Even if they were enabled, it is possible to slip in extra properties.\n *\n * Extra properties are ignored during run-time but may indicate lapses in logic.\n *\n * -----\n *\n * Uses `eq()` internally because the primary key of a table\n * cannot have nullable columns.\n *\n * @todo Change this to use `nullSafeEq()` jusssst in case people start using\n * nullable columns in PKs for whatever reason?\n *\n * @param table - The table with a primary key\n * @param primaryKeyInput - The primary key values to compare against\n */\nfunction eqPrimaryKey(table, primaryKeyInput) {\n    const primaryKey = primary_key_1.PrimaryKeyUtil.mapper(table)(`${column_map_1.ColumnMapUtil.tableAlias(table.columns)}.primaryKey`, primaryKeyInput);\n    /**\n     * We `.sort()` the keys so our resulting SQL is deterministic,\n     * regardless of how `primaryKey` was constructed.\n     */\n    const arr = Object.keys(primaryKey).sort().map((columnAlias) => {\n        /**\n         * We use `eq` because the primary key of a table cannot have\n         * nullable columns... Right?\n         *\n         * @todo Decide if we should use null-safe equality anyway,\n         * just to be super safe\n         */\n        const expr = eq_1.eq(table.columns[columnAlias], built_in_expr_1.BuiltInExprUtil.fromValueExpr(table.columns[columnAlias], primaryKey[columnAlias]));\n        return expr;\n    });\n    const result = logical_1.and(...arr);\n    return result;\n}\nexports.eqPrimaryKey = eqPrimaryKey;\n//# sourceMappingURL=eq-primary-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\n/**\n * https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_equal\n *\n * This version of the `=` operator prevents `NULL`.\n *\n * For null-safe equality, @see {@link nullSafeEq}\n */\nexports.eq = factory_1.makeEquation2(operator_type_1.OperatorType.EQUAL);\n//# sourceMappingURL=eq.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst expr_1 = require(\"../../expr\");\nconst inArrayImpl = factory_1.makeEquation2ToN(operator_type_1.OperatorType.IN_ARRAY);\n/**\n * The `IN` operator has two overloads.\n * + `x IN (y0, y1, y2, y3, ...)`\n * + `x IN (SELECT y FROM ...)`\n *\n * This implementation is for the first overload.\n *\n * -----\n *\n * The first argument cannot be `null` because `NULL IN (...)` is always `NULL`.\n *\n * The array cannot contain `null` because,\n * + `x IN (NULL)` is `NULL`\n * + `1 IN (NULL, 2)` is `NULL`\n * + `1 IN (NULL, 2, 1)` is `true`\n *\n * -----\n *\n * Calling `inArray()` with an empty array will always\n * return `false` because a value is never in an array of zero elements.\n *\n * -----\n *\n * https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_in\n *\n * > To comply with the SQL standard,\n * > `IN()` returns `NULL` not only if the expression on the left hand side is `NULL`,\n * > but also if no match is found in the list and one of the expressions in the list is `NULL`.\n *\n * https://dev.mysql.com/doc/refman/8.0/en/any-in-some-subqueries.html\n */\nfunction inArray(arg0, args) {\n    const [arg1, ...rest] = args;\n    if (arg1 == undefined) {\n        /**\n         * Calling `inArray()` with an empty array will always\n         * return `false` because a value is never in an array of zero elements.\n         */\n        return expr_1.ExprUtil.fromBuiltInExpr(false);\n    }\n    else {\n        return inArrayImpl(arg0, arg1, ...rest);\n    }\n}\nexports.inArray = inArray;\n//# sourceMappingURL=in-array.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst query_base_1 = require(\"../../query-base\");\nconst expr_1 = require(\"../../expr\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nconst ast_1 = require(\"../../ast\");\n/**\n * The `IN` operator has two overloads.\n * + `x IN (y0, y1, y2, y3, ...)`\n * + `x IN (SELECT y FROM ...)`\n *\n * This implementation is for the second overload.\n *\n * -----\n *\n * The first argument cannot be `null` because `NULL IN (...)` is always `NULL`.\n *\n * The query argument cannot `SELECT` `null` because,\n * + `x IN (SELECT NULL)` is `NULL`\n * + `x IN (SELECT nullableColumn FROM myTable)` is `NULL` if,\n *   + At least one row has a `NULL` value\n *   + No rows have the value `x`\n * + `x IN (SELECT nonNullColumn FROM myTable UNION SELECT NULL)` is `NULL` if,\n *   + No rows have the value `x`\n * + `1 IN (SELECT NULL UNION SELECT 1)` is `true`\n *\n * -----\n *\n * https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_in\n *\n * > To comply with the SQL standard,\n * > `IN()` returns `NULL` not only if the expression on the left hand side is `NULL`,\n * > but also if no match is found in the list and one of the expressions in the list is `NULL`.\n *\n * https://dev.mysql.com/doc/refman/8.0/en/any-in-some-subqueries.html\n *\n * -----\n *\n * ### Problems with MySQL\n *\n * The following produced an error,\n * ```sql\n * CREATE TABLE myTable (id INT);\n * INSERT INTO myTable VALUES (1);\n * SELECT 1 IN (SELECT id FROM myTable LIMIT 1);\n * ```\n *\n * The following is a workaround,\n * ```sql\n * CREATE TABLE myTable (id INT);\n * INSERT INTO myTable VALUES (1);\n * SELECT 1 IN (SELECT * FROM (SELECT id FROM myTable LIMIT 1) AS tmp);\n * ```\n */\nfunction inQuery(builtInExpr, query) {\n    if (!query_base_1.QueryBaseUtil.isOneSelectItem(query)) {\n        throw new Error(`Query must SELECT one item`);\n    }\n    if (tm.canOutputNull(query.selectClause[0].mapper)) {\n        throw new Error(`Query must not SELECT nullable value`);\n    }\n    return expr_1.expr({\n        mapper: tm.mysql.boolean(),\n        usedRef: built_in_expr_1.BuiltInExprUtil.intersectUsedRef(builtInExpr, query),\n        isAggregate: built_in_expr_1.BuiltInExprUtil.isAggregate(builtInExpr),\n    }, ast_1.OperatorNodeUtil.operatorNode2(operator_type_1.OperatorType.IN_QUERY, [\n        built_in_expr_1.BuiltInExprUtil.buildAst(builtInExpr),\n        built_in_expr_1.BuiltInExprUtil.buildAst(query)\n    ], undefined));\n}\nexports.inQuery = inQuery;\n//# sourceMappingURL=in-query.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./eq-primary-key\"));\n__export(require(\"./eq\"));\n__export(require(\"./in-array\"));\n__export(require(\"./in-query\"));\n__export(require(\"./not-eq\"));\n__export(require(\"./not-in-array\"));\n__export(require(\"./not-in-query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\n/**\n * https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_not-equal\n *\n * This version of the `<>` operator prevents `NULL`.\n *\n * For null-safe inequality, @see {@link nullSafeNotEq}\n *\n */\nexports.notEq = factory_1.makeEquation2(operator_type_1.OperatorType.NOT_EQUAL);\n//# sourceMappingURL=not-eq.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @todo Refactor `inArray()` and `notInArray()` so they can share code.\n * Something like a `makeInArray()` factory function.\n */\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst expr_1 = require(\"../../expr\");\nconst notInArrayImpl = factory_1.makeEquation2ToN(operator_type_1.OperatorType.NOT_IN_ARRAY);\n/**\n * The `NOT IN` operator has two overloads.\n * + `x NOT IN (y0, y1, y2, y3, ...)`\n * + `x NOT IN (SELECT y FROM ...)`\n *\n * This implementation is for the first overload.\n *\n * -----\n *\n * The first argument cannot be `null` because `NULL NOT IN (...)` is always `NULL`.\n *\n * The array cannot contain `null` because,\n * + `x NOT IN (NULL)` is `NULL`\n * + `1 NOT IN (NULL, 2)` is `NULL`\n * + `1 NOT IN (NULL, 2, 1)` is `false`\n *\n * -----\n *\n * Calling `notInArray()` with an empty array will always\n * return `true` because a value is always **not** in an array of zero elements.\n *\n * -----\n *\n * https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_in\n *\n * > To comply with the SQL standard,\n * > `IN()` returns `NULL` not only if the expression on the left hand side is `NULL`,\n * > but also if no match is found in the list and one of the expressions in the list is `NULL`.\n *\n * https://dev.mysql.com/doc/refman/8.0/en/any-in-some-subqueries.html\n */\nfunction notInArray(arg0, args) {\n    const [arg1, ...rest] = args;\n    if (arg1 == undefined) {\n        /**\n         * Calling `notInArray()` with an empty array will always\n         * return `true` because a value is always **not** in an array of zero elements.\n         */\n        return expr_1.ExprUtil.fromBuiltInExpr(true);\n    }\n    else {\n        return notInArrayImpl(arg0, arg1, ...rest);\n    }\n}\nexports.notInArray = notInArray;\n//# sourceMappingURL=not-in-array.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @todo Refactor `inQuery()` and `notInQuery()` so they can share code.\n * Something like a `makeInQuery()` factory function.\n */\nconst tm = require(\"type-mapping\");\nconst query_base_1 = require(\"../../query-base\");\nconst expr_1 = require(\"../../expr\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nconst ast_1 = require(\"../../ast\");\n/**\n * The `NOT IN` operator has two overloads.\n * + `x NOT IN (y0, y1, y2, y3, ...)`\n * + `x NOT IN (SELECT y FROM ...)`\n *\n * This implementation is for the second overload.\n *\n * -----\n *\n * The first argument cannot be `null` because `NULL NOT IN (...)` is always `NULL`.\n *\n * The query argument cannot `SELECT` `null` because,\n * + `x NOT IN (SELECT NULL)` is `NULL`\n * + `x NOT IN (SELECT nullableColumn FROM myTable)` is `NULL` if,\n *   + At least one row has a `NULL` value\n *   + No rows have the value `x`\n * + `x NOT IN (SELECT nonNullColumn FROM myTable UNION SELECT NULL)` is `NULL` if,\n *   + No rows have the value `x`\n * + `1 NOT IN (SELECT NULL UNION SELECT 1)` is `false`\n *\n * -----\n *\n * https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_in\n *\n * > To comply with the SQL standard,\n * > `IN()` returns `NULL` not only if the expression on the left hand side is `NULL`,\n * > but also if no match is found in the list and one of the expressions in the list is `NULL`.\n *\n * https://dev.mysql.com/doc/refman/8.0/en/any-in-some-subqueries.html\n *\n * -----\n *\n * ### Problems with MySQL\n *\n * The following produced an error,\n * ```sql\n * CREATE TABLE myTable (id INT);\n * INSERT INTO myTable VALUES (1);\n * SELECT 1 NOT IN (SELECT id FROM myTable LIMIT 1);\n * ```\n *\n * The following is a workaround,\n * ```sql\n * CREATE TABLE myTable (id INT);\n * INSERT INTO myTable VALUES (1);\n * SELECT 1 NOT IN (SELECT * FROM (SELECT id FROM myTable LIMIT 1) AS tmp);\n * ```\n */\nfunction notInQuery(builtInExpr, query) {\n    if (!query_base_1.QueryBaseUtil.isOneSelectItem(query)) {\n        throw new Error(`Query must SELECT one item`);\n    }\n    if (tm.canOutputNull(query.selectClause[0].mapper)) {\n        throw new Error(`Query must not SELECT nullable value`);\n    }\n    return expr_1.expr({\n        mapper: tm.mysql.boolean(),\n        usedRef: built_in_expr_1.BuiltInExprUtil.intersectUsedRef(builtInExpr, query),\n        isAggregate: built_in_expr_1.BuiltInExprUtil.isAggregate(builtInExpr),\n    }, ast_1.OperatorNodeUtil.operatorNode2(operator_type_1.OperatorType.NOT_IN_QUERY, [\n        built_in_expr_1.BuiltInExprUtil.buildAst(builtInExpr),\n        built_in_expr_1.BuiltInExprUtil.buildAst(query)\n    ], undefined));\n}\nexports.notInQuery = notInQuery;\n//# sourceMappingURL=not-in-query.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./make-any-operator-1\"));\n__export(require(\"./make-chainable-decimal-operator\"));\n__export(require(\"./make-chainable-operator\"));\n__export(require(\"./make-comparison-1-to-n\"));\n__export(require(\"./make-comparison-2-to-n\"));\n__export(require(\"./make-comparison-2\"));\n__export(require(\"./make-comparison-3\"));\n__export(require(\"./make-comparison-projection-2-to-n\"));\n__export(require(\"./make-equation-1-to-n\"));\n__export(require(\"./make-equation-2-to-n\"));\n__export(require(\"./make-equation-2\"));\n__export(require(\"./make-null-safe-comparison-1\"));\n__export(require(\"./make-null-safe-comparison-2\"));\n__export(require(\"./make-null-safe-equation-1\"));\n__export(require(\"./make-null-safe-equation-2\"));\n__export(require(\"./make-operator-0\"));\n__export(require(\"./make-operator-1-double-elimination\"));\n__export(require(\"./make-operator-1-idempotent\"));\n__export(require(\"./make-operator-1-to-n\"));\n__export(require(\"./make-operator-1\"));\n__export(require(\"./make-operator-2-to-n\"));\n__export(require(\"./make-operator-2\"));\n__export(require(\"./make-operator-3\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nconst expr_1 = require(\"../../expr\");\nconst ast_1 = require(\"../../ast\");\nfunction makeAnyOperator1(operatorType, mapper, typeHint) {\n    const result = (arg) => {\n        return expr_1.ExprUtil.intersect(mapper, [arg], ast_1.OperatorNodeUtil.operatorNode1(operatorType, [\n            built_in_expr_1.BuiltInExprUtil.buildAst(arg),\n        ], typeHint));\n    };\n    return result;\n}\nexports.makeAnyOperator1 = makeAnyOperator1;\n//# sourceMappingURL=make-any-operator-1.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nconst expr_1 = require(\"../../expr\");\nconst ast_1 = require(\"../../ast\");\nconst literal_value_node_1 = require(\"../../ast/literal-value-node\");\nconst built_in_value_expr_1 = require(\"../../built-in-value-expr\");\nconst decimal_mapper_1 = require(\"../decimal/decimal-mapper\");\nfunction tryGetFlattenableElements(\n/**\n * In this specific instance, we could probably have `BuiltInExpr<Decimal>`.\n * Can't accept arbitrary `Decimal` types because they may have invalid precision/scale.\n */\nbuiltInExpr, operatorType, _identityElement, identityAst, identityParseResult) {\n    if (expr_1.ExprUtil.isExpr(builtInExpr)) {\n        return ast_1.AstUtil.tryExtractAst(builtInExpr.ast, ast => {\n            if (literal_value_node_1.LiteralValueNodeUtil.isLiteralValueNode(ast) && built_in_value_expr_1.BuiltInValueExprUtil.isEqual(ast.literalValue, identityAst.literalValue)) {\n                /**\n                 * Eliminate all identity elements\n                 */\n                return [];\n            }\n            else if (ast_1.OperatorNodeUtil.isOperatorNode(ast) && ast.operatorType == operatorType) {\n                return ast.operands;\n            }\n            else {\n                return undefined;\n            }\n        });\n    }\n    /**\n     * We should not see any `Decimal` built-ins because JS does not have them.\n     */\n    const builtInExprParseResult = tm.FixedPointUtil.tryParse(String(builtInExpr));\n    if (builtInExprParseResult != undefined &&\n        tm.FixedPointUtil.isEqual(builtInExprParseResult, identityParseResult, tm.FixedPointUtil.ZeroEqualityAlgorithm.NEGATIVE_AND_POSITIVE_ZERO_ARE_EQUAL)) {\n        /**\n         * Eliminate all identity elements\n         */\n        return [];\n    }\n    return undefined;\n}\nfunction makeChainableDecimalOperator(operatorType, rawIdentityElement, mapper, \n/**\n * For now, the typeHint should always be `DECIMAL`\n */\ntypeHint) {\n    const identityElement = decimal_mapper_1.decimalMapper(\"rawIdentityElement\", rawIdentityElement);\n    const identityParseResult = tm.FixedPointUtil.tryParse(rawIdentityElement.toString());\n    if (identityParseResult == undefined) {\n        throw new Error(`Invalid identity element ${rawIdentityElement}`);\n    }\n    let identityAst = undefined;\n    const result = (...arr) => {\n        if (identityAst == undefined) {\n            const newIdentityAst = literal_value_node_1.LiteralValueNodeUtil.decimalLiteralNode(identityElement, 65, 30);\n            if (!literal_value_node_1.LiteralValueNodeUtil.isLiteralValueNode(newIdentityAst)) {\n                throw new Error(`Invalid identity element`);\n            }\n            identityAst = newIdentityAst;\n        }\n        let operands = undefined;\n        for (const builtInExpr of arr) {\n            const flattenableElements = tryGetFlattenableElements(builtInExpr, operatorType, identityElement, identityAst, identityParseResult);\n            if (flattenableElements != undefined) {\n                /**\n                 * Looks like we should flatten this `builtInExpr`\n                 */\n                if (flattenableElements.length == 0) {\n                    continue;\n                }\n                else {\n                    if (operands == undefined) {\n                        operands = [flattenableElements[0], ...flattenableElements.slice(1)];\n                    }\n                    else {\n                        operands.push(...flattenableElements);\n                    }\n                }\n            }\n            else {\n                /**\n                 * Can't flatten this `builtInExpr`\n                 */\n                if (operands == undefined) {\n                    operands = [built_in_expr_1.BuiltInExprUtil.buildAst(builtInExpr)];\n                }\n                else {\n                    operands.push(built_in_expr_1.BuiltInExprUtil.buildAst(builtInExpr));\n                }\n            }\n        }\n        return expr_1.ExprUtil.intersect(mapper, arr, ((operands == undefined) ?\n            /**\n             * By convention, applying the operator to zero operands gives you the identity element\n             */\n            identityAst :\n            (operands.length == 1) ?\n                /**\n                 * By convention, applying the operator on one operand does not do anything to the operand\n                 */\n                operands[0] :\n                ast_1.OperatorNodeUtil.operatorNode1ToN(operatorType, operands, typeHint)));\n    };\n    return result;\n}\nexports.makeChainableDecimalOperator = makeChainableDecimalOperator;\n//# sourceMappingURL=make-chainable-decimal-operator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nconst expr_1 = require(\"../../expr\");\nconst ast_1 = require(\"../../ast\");\nconst literal_value_node_1 = require(\"../../ast/literal-value-node\");\nconst built_in_value_expr_1 = require(\"../../built-in-value-expr\");\nfunction tryGetFlattenableElements(builtInExpr, operatorType, identityElement, identityAst) {\n    if (expr_1.ExprUtil.isExpr(builtInExpr)) {\n        return ast_1.AstUtil.tryExtractAst(builtInExpr.ast, ast => {\n            if (literal_value_node_1.LiteralValueNodeUtil.isLiteralValueNode(ast) && built_in_value_expr_1.BuiltInValueExprUtil.isEqual(ast.literalValue, identityAst.literalValue)) {\n                /**\n                 * Eliminate all identity elements\n                 */\n                return [];\n            }\n            else if (ast_1.OperatorNodeUtil.isOperatorNode(ast) && ast.operatorType == operatorType) {\n                return ast.operands;\n            }\n            else {\n                return undefined;\n            }\n        });\n    }\n    if (built_in_value_expr_1.BuiltInValueExprUtil.isBuiltInValueExpr(builtInExpr) &&\n        built_in_value_expr_1.BuiltInValueExprUtil.isEqual(builtInExpr, identityElement)) {\n        /**\n         * Eliminate all identity elements\n         */\n        return [];\n    }\n    return undefined;\n}\nfunction makeChainableOperator(operatorType, identityElement, mapper, typeHint) {\n    let identityAst = undefined;\n    const result = (...arr) => {\n        if (identityAst == undefined) {\n            const newIdentityAst = built_in_expr_1.BuiltInExprUtil.buildAst(identityElement);\n            if (!literal_value_node_1.LiteralValueNodeUtil.isLiteralValueNode(newIdentityAst)) {\n                throw new Error(`Invalid identity element`);\n            }\n            identityAst = newIdentityAst;\n        }\n        let operands = undefined;\n        for (const builtInExpr of arr) {\n            const flattenableElements = tryGetFlattenableElements(builtInExpr, operatorType, identityElement, identityAst);\n            if (flattenableElements != undefined) {\n                /**\n                 * Looks like we should flatten this `builtInExpr`\n                 */\n                if (flattenableElements.length == 0) {\n                    continue;\n                }\n                else {\n                    if (operands == undefined) {\n                        operands = [flattenableElements[0], ...flattenableElements.slice(1)];\n                    }\n                    else {\n                        operands.push(...flattenableElements);\n                    }\n                }\n            }\n            else {\n                /**\n                 * Can't flatten this `builtInExpr`\n                 */\n                if (operands == undefined) {\n                    operands = [built_in_expr_1.BuiltInExprUtil.buildAst(builtInExpr)];\n                }\n                else {\n                    operands.push(built_in_expr_1.BuiltInExprUtil.buildAst(builtInExpr));\n                }\n            }\n        }\n        return expr_1.ExprUtil.intersect(mapper, arr, ((operands == undefined) ?\n            /**\n             * By convention, applying the operator to zero operands gives you the identity element\n             */\n            identityAst :\n            (operands.length == 1) ?\n                /**\n                 * By convention, applying the operator on one operand does not do anything to the operand\n                 */\n                operands[0] :\n                ast_1.OperatorNodeUtil.operatorNode1ToN(operatorType, operands, typeHint)));\n    };\n    return result;\n}\nexports.makeChainableOperator = makeChainableOperator;\n//# sourceMappingURL=make-chainable-operator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst make_operator_1_to_n_1 = require(\"./make-operator-1-to-n\");\nfunction makeComparison1ToN(operatorType, typeHint) {\n    return make_operator_1_to_n_1.makeOperator1ToN(operatorType, tm.mysql.boolean(), typeHint);\n}\nexports.makeComparison1ToN = makeComparison1ToN;\n//# sourceMappingURL=make-comparison-1-to-n.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst make_operator_2_to_n_1 = require(\"./make-operator-2-to-n\");\nfunction makeComparison2ToN(operatorType, typeHint) {\n    return make_operator_2_to_n_1.makeOperator2ToN(operatorType, tm.mysql.boolean(), typeHint);\n}\nexports.makeComparison2ToN = makeComparison2ToN;\n//# sourceMappingURL=make-comparison-2-to-n.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst expr_1 = require(\"../../expr\");\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nconst ast_1 = require(\"../../ast\");\n/**\n * Factory for making comparison operators.\n *\n * These do not allow `null` to be used in comparisons.\n */\nfunction makeComparison2(operatorType, typeHint) {\n    const result = (left, right) => {\n        built_in_expr_1.BuiltInExprUtil.assertNonNull(\"LHS\", left);\n        built_in_expr_1.BuiltInExprUtil.assertNonNull(\"RHS\", left);\n        return expr_1.ExprUtil.intersect(tm.mysql.boolean(), [left, right], ast_1.OperatorNodeUtil.operatorNode2(operatorType, [\n            built_in_expr_1.BuiltInExprUtil.buildAst(left),\n            built_in_expr_1.BuiltInExprUtil.buildAst(right),\n        ], typeHint));\n    };\n    return result;\n}\nexports.makeComparison2 = makeComparison2;\n//# sourceMappingURL=make-comparison-2.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst expr_1 = require(\"../../expr\");\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nconst ast_1 = require(\"../../ast\");\n/**\n * Factory for making ternary comparison operators.\n *\n * These do not allow `null` to be used in comparisons.\n */\nfunction makeComparison3(operatorType, typeHint) {\n    const result = (left, mid, right) => {\n        built_in_expr_1.BuiltInExprUtil.assertNonNull(\"LHS\", left);\n        built_in_expr_1.BuiltInExprUtil.assertNonNull(\"MHS\", mid);\n        built_in_expr_1.BuiltInExprUtil.assertNonNull(\"RHS\", left);\n        return expr_1.ExprUtil.intersect(tm.mysql.boolean(), [left, mid, right], ast_1.OperatorNodeUtil.operatorNode3(operatorType, [\n            built_in_expr_1.BuiltInExprUtil.buildAst(left),\n            built_in_expr_1.BuiltInExprUtil.buildAst(mid),\n            built_in_expr_1.BuiltInExprUtil.buildAst(right),\n        ], typeHint));\n    };\n    return result;\n}\nexports.makeComparison3 = makeComparison3;\n//# sourceMappingURL=make-comparison-3.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nconst expr_1 = require(\"../../expr\");\nconst ast_1 = require(\"../../ast\");\n/**\n * @todo Better name?\n *\n * Called `Projection` because it picks one of its arguments as the return value.\n * Similar to picking columns in a query.\n */\nfunction makeComparisonProjection2ToN(operatorType, typeHint) {\n    const result = (arg0, arg1, ...args) => {\n        const arr = [arg0, arg1, ...args];\n        return expr_1.ExprUtil.intersect(tm.unsafeOr(...arr.map(built_in_expr_1.BuiltInExprUtil.mapper)), arr, ast_1.OperatorNodeUtil.operatorNode2ToN(operatorType, [\n            built_in_expr_1.BuiltInExprUtil.buildAst(arg0),\n            built_in_expr_1.BuiltInExprUtil.buildAst(arg1),\n            ...args.map(built_in_expr_1.BuiltInExprUtil.buildAst),\n        ], typeHint));\n    };\n    return result;\n}\nexports.makeComparisonProjection2ToN = makeComparisonProjection2ToN;\n//# sourceMappingURL=make-comparison-projection-2-to-n.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst make_operator_1_to_n_1 = require(\"./make-operator-1-to-n\");\nfunction makeEquation1ToN(operatorType, typeHint) {\n    return make_operator_1_to_n_1.makeOperator1ToN(operatorType, tm.mysql.boolean(), typeHint);\n}\nexports.makeEquation1ToN = makeEquation1ToN;\n//# sourceMappingURL=make-equation-1-to-n.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst make_operator_2_to_n_1 = require(\"./make-operator-2-to-n\");\nfunction makeEquation2ToN(operatorType, typeHint) {\n    return make_operator_2_to_n_1.makeOperator2ToN(operatorType, tm.mysql.boolean(), typeHint);\n}\nexports.makeEquation2ToN = makeEquation2ToN;\n//# sourceMappingURL=make-equation-2-to-n.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst expr_1 = require(\"../../expr\");\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nconst ast_1 = require(\"../../ast\");\n/**\n * Factory for making comparison operators.\n *\n * These do not allow `null` to be used in comparisons.\n */\nfunction makeEquation2(operatorType, typeHint) {\n    const result = (left, right) => {\n        built_in_expr_1.BuiltInExprUtil.assertNonNull(\"LHS\", left);\n        built_in_expr_1.BuiltInExprUtil.assertNonNull(\"RHS\", left);\n        return expr_1.ExprUtil.intersect(tm.mysql.boolean(), [left, right], ast_1.OperatorNodeUtil.operatorNode2(operatorType, [\n            built_in_expr_1.BuiltInExprUtil.buildAst(left),\n            built_in_expr_1.BuiltInExprUtil.buildAst(right),\n        ], typeHint));\n    };\n    return result;\n}\nexports.makeEquation2 = makeEquation2;\n//# sourceMappingURL=make-equation-2.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst expr_1 = require(\"../../expr\");\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nconst ast_1 = require(\"../../ast\");\n/**\n * Factory for making null-safe unary comparison operators.\n */\nfunction makeNullSafeComparison1(operatorType, typeHint) {\n    const result = (builtInExpr) => {\n        return expr_1.ExprUtil.intersect(tm.mysql.boolean(), [builtInExpr], ast_1.OperatorNodeUtil.operatorNode1(operatorType, [\n            built_in_expr_1.BuiltInExprUtil.buildAst(builtInExpr),\n        ], typeHint));\n    };\n    return result;\n}\nexports.makeNullSafeComparison1 = makeNullSafeComparison1;\n//# sourceMappingURL=make-null-safe-comparison-1.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst expr_1 = require(\"../../expr\");\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nconst ast_1 = require(\"../../ast\");\n/**\n * Factory for making null-safe comparison operators.\n *\n * These allow `null` in comparisons.\n */\nfunction makeNullSafeComparison(operatorType, typeHint) {\n    const result = (left, right) => {\n        return expr_1.ExprUtil.intersect(tm.mysql.boolean(), [left, right], ast_1.OperatorNodeUtil.operatorNode2(operatorType, [\n            built_in_expr_1.BuiltInExprUtil.buildAst(left),\n            built_in_expr_1.BuiltInExprUtil.buildAst(right),\n        ], typeHint));\n    };\n    return result;\n}\nexports.makeNullSafeComparison = makeNullSafeComparison;\n//# sourceMappingURL=make-null-safe-comparison-2.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst expr_1 = require(\"../../expr\");\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nconst ast_1 = require(\"../../ast\");\n/**\n * Factory for making null-safe unary equation operators.\n */\nfunction makeNullSafeEquation1(operatorType, typeHint) {\n    const result = (builtInExpr) => {\n        return expr_1.ExprUtil.intersect(tm.mysql.boolean(), [builtInExpr], ast_1.OperatorNodeUtil.operatorNode1(operatorType, [\n            built_in_expr_1.BuiltInExprUtil.buildAst(builtInExpr),\n        ], typeHint));\n    };\n    return result;\n}\nexports.makeNullSafeEquation1 = makeNullSafeEquation1;\n//# sourceMappingURL=make-null-safe-equation-1.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst expr_1 = require(\"../../expr\");\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nconst ast_1 = require(\"../../ast\");\n/**\n * Factory for making null-safe equation operators.\n *\n * These allow `null` in equations.\n */\nfunction makeNullSafeEquation2(operatorType, typeHint) {\n    const result = (left, right) => {\n        return expr_1.ExprUtil.intersect(tm.mysql.boolean(), [left, right], ast_1.OperatorNodeUtil.operatorNode2(operatorType, [\n            built_in_expr_1.BuiltInExprUtil.buildAst(left),\n            built_in_expr_1.BuiltInExprUtil.buildAst(right),\n        ], typeHint));\n    };\n    return result;\n}\nexports.makeNullSafeEquation2 = makeNullSafeEquation2;\n//# sourceMappingURL=make-null-safe-equation-2.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst expr_1 = require(\"../../expr\");\nconst ast_1 = require(\"../../ast\");\nconst used_ref_1 = require(\"../../used-ref\");\nfunction makeOperator0(operatorType, mapper, typeHint) {\n    const result = () => {\n        return expr_1.expr({\n            mapper,\n            usedRef: used_ref_1.UsedRefUtil.fromColumnRef({}),\n            isAggregate: false,\n        }, ast_1.OperatorNodeUtil.operatorNode0(operatorType, typeHint));\n    };\n    return result;\n}\nexports.makeOperator0 = makeOperator0;\n//# sourceMappingURL=make-operator-0.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nconst expr_1 = require(\"../../expr\");\nconst ast_1 = require(\"../../ast\");\nconst util_1 = require(\"../../ast/util\");\n/**\n * Makes a double elimination unary operator.\n *\n * A double elimination function `f` has the following property,\n * `f(f(x)) == x`\n */\nfunction makeOperator1DoubleElimination(operatorType, mapper, typeHint) {\n    const result = (arg) => {\n        return expr_1.ExprUtil.intersect(mapper, [arg], util_1.tryExtractAstOr(built_in_expr_1.BuiltInExprUtil.buildAst(arg), operand => (ast_1.OperatorNodeUtil.isOperatorNode(operand) && operand.operatorType == operatorType ?\n            operand.operands[0] :\n            undefined), operand => ast_1.OperatorNodeUtil.operatorNode1(operatorType, [operand], typeHint)));\n    };\n    return result;\n}\nexports.makeOperator1DoubleElimination = makeOperator1DoubleElimination;\n//# sourceMappingURL=make-operator-1-double-elimination.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nconst expr_1 = require(\"../../expr\");\nconst ast_1 = require(\"../../ast\");\nconst util_1 = require(\"../../ast/util\");\n/**\n * Makes an idempotent unary operator.\n *\n * An idempotent function `f` has the following property,\n * `f(f(x)) == f(x)`\n */\nfunction makeOperator1Idempotent(operatorType, mapper, typeHint) {\n    const result = (arg) => {\n        return expr_1.ExprUtil.intersect(mapper, [arg], util_1.tryExtractAstOr(built_in_expr_1.BuiltInExprUtil.buildAst(arg), operand => ast_1.OperatorNodeUtil.isOperatorNode(operand) && operand.operatorType == operatorType, operand => ast_1.OperatorNodeUtil.operatorNode1(operatorType, [operand], typeHint)));\n    };\n    return result;\n}\nexports.makeOperator1Idempotent = makeOperator1Idempotent;\n//# sourceMappingURL=make-operator-1-idempotent.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nconst expr_1 = require(\"../../expr\");\nconst ast_1 = require(\"../../ast\");\nfunction makeOperator1ToN(operatorType, mapper, typeHint) {\n    const result = (arg0, ...args) => {\n        return expr_1.ExprUtil.intersect(mapper, [arg0, ...args], ast_1.OperatorNodeUtil.operatorNode1ToN(operatorType, [\n            built_in_expr_1.BuiltInExprUtil.buildAst(arg0),\n            ...args.map(built_in_expr_1.BuiltInExprUtil.buildAst),\n        ], typeHint));\n    };\n    return result;\n}\nexports.makeOperator1ToN = makeOperator1ToN;\n//# sourceMappingURL=make-operator-1-to-n.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nconst expr_1 = require(\"../../expr\");\nconst ast_1 = require(\"../../ast\");\nfunction makeOperator1(operatorType, mapper, typeHint) {\n    const result = (arg) => {\n        return expr_1.ExprUtil.intersect(mapper, [arg], ast_1.OperatorNodeUtil.operatorNode1(operatorType, [\n            built_in_expr_1.BuiltInExprUtil.buildAst(arg),\n        ], typeHint));\n    };\n    return result;\n}\nexports.makeOperator1 = makeOperator1;\n//# sourceMappingURL=make-operator-1.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nconst expr_1 = require(\"../../expr\");\nconst ast_1 = require(\"../../ast\");\nfunction makeOperator2ToN(operatorType, mapper, typeHint) {\n    const result = (arg0, arg1, ...args) => {\n        return expr_1.ExprUtil.intersect(mapper, [arg0, arg1, ...args], ast_1.OperatorNodeUtil.operatorNode2ToN(operatorType, [\n            built_in_expr_1.BuiltInExprUtil.buildAst(arg0),\n            built_in_expr_1.BuiltInExprUtil.buildAst(arg1),\n            ...args.map(built_in_expr_1.BuiltInExprUtil.buildAst),\n        ], typeHint));\n    };\n    return result;\n}\nexports.makeOperator2ToN = makeOperator2ToN;\n//# sourceMappingURL=make-operator-2-to-n.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nconst expr_1 = require(\"../../expr\");\nconst ast_1 = require(\"../../ast\");\nfunction makeOperator2(operatorType, mapper, typeHint) {\n    const result = (left, right) => {\n        return expr_1.ExprUtil.intersect(mapper, [left, right], ast_1.OperatorNodeUtil.operatorNode2(operatorType, [\n            built_in_expr_1.BuiltInExprUtil.buildAst(left),\n            built_in_expr_1.BuiltInExprUtil.buildAst(right),\n        ], typeHint));\n    };\n    return result;\n}\nexports.makeOperator2 = makeOperator2;\n//# sourceMappingURL=make-operator-2.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nconst expr_1 = require(\"../../expr\");\nconst ast_1 = require(\"../../ast\");\nfunction makeOperator3(operatorType, mapper, typeHint) {\n    const result = (left, mid, right) => {\n        return expr_1.ExprUtil.intersect(mapper, [left, mid, right], ast_1.OperatorNodeUtil.operatorNode3(operatorType, [\n            built_in_expr_1.BuiltInExprUtil.buildAst(left),\n            built_in_expr_1.BuiltInExprUtil.buildAst(mid),\n            built_in_expr_1.BuiltInExprUtil.buildAst(right),\n        ], typeHint));\n    };\n    return result;\n}\nexports.makeOperator3 = makeOperator3;\n//# sourceMappingURL=make-operator-3.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./aggregate\"));\n__export(require(\"./aggregate-factory\"));\n__export(require(\"./assert\"));\n__export(require(\"./cast\"));\n__export(require(\"./comparison\"));\n__export(require(\"./control-flow\"));\n__export(require(\"./custom-factory\"));\n__export(require(\"./date-time\"));\n__export(require(\"./equation\"));\n__export(require(\"./factory\"));\n__export(require(\"./information\"));\n__export(require(\"./logical\"));\n__export(require(\"./logical-3\"));\n__export(require(\"./null-safe-equation\"));\n__export(require(\"./string\"));\n__export(require(\"./subquery\"));\nconst decimal = require(\"./decimal\");\nexports.decimal = decimal;\nconst double = require(\"./double\");\nexports.double = double;\nconst integer = require(\"./integer\");\nexports.integer = integer;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\n/**\n * Returns the default (current) schema name as a string.\n * If there is no default schema, returns `NULL`.\n *\n * -----\n *\n * MySQL does not make a distinction between \"database\" and \"schema\".\n * PostgreSQL does.\n *\n * -----\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/information-functions.html#function_database\n * + https://www.postgresql.org/docs/9.2/functions-info.html\n * + https://www.sqlite.org/lang_attach.html\n *\n * -----\n *\n * + MySQL      : `DATABASE()`\n * + PostgreSQL : `CURRENT_SCHEMA`\n * + SQLite     : `'main'` should always be the current database.\n *   + There's also `'temp'`, I guess\n */\nexports.currentSchema = factory_1.makeOperator0(operator_type_1.OperatorType.CURRENT_SCHEMA, tm.orNull(tm.string()));\n//# sourceMappingURL=current-schema.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\n/**\n * On MySQL,\n * > Returns the user name and host name combination for the MySQL account\n * > that the server used to authenticate the current client.\n * > This account determines your access privileges.\n *\n * -----\n *\n * On PostgreSQL,\n * > the user identifier that is applicable for permission checking.\n * > The SQL standard draws a distinction between current_role and current_user,\n * > but PostgreSQL does not, since it unifies users and roles into a single kind of entity.\n *\n * -----\n *\n * SQLite does not have the concept of users.\n *\n * -----\n *\n * + https://dev.mysql.com/doc/refman/5.7/en/information-functions.html#function_current-user\n * + https://www.postgresql.org/docs/9.2/functions-info.html\n * + https://stackoverflow.com/questions/16658880/sqlite-user-password-security/28566503\n *\n * -----\n *\n * + MySQL      : `CURRENT_USER`\n *   + MySQL has a `USER()` function that does something different.\n * + PostgreSQL : `CURRENT_USER`\n * + SQLite     : None. It does not make sense to ask what the current user is.\n */\nexports.currentUser = factory_1.makeOperator0(operator_type_1.OperatorType.CURRENT_USER, tm.orNull(tm.string()));\n//# sourceMappingURL=current-user.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./current-schema\"));\n__export(require(\"./current-user\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst factory_1 = require(\"../factory\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * This function is idempotent.\n * `ABS(ABS(x)) == ABS(x)`\n *\n * -----\n *\n * ### `BIGINT SIGNED` too large\n *\n * ```sql\n *  SELECT ABS(-9223372036854775808)\n * ```\n * The above throws an error on MySQL, PostgreSQL and SQLite.\n */\nexports.abs = factory_1.makeOperator1Idempotent(operator_type_1.OperatorType.ABSOLUTE_VALUE, tm.mysql.bigIntSigned(), type_hint_1.TypeHint.BIGINT_SIGNED);\n//# sourceMappingURL=abs.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * -----\n *\n * ### `BIGINT SIGNED` too large\n *\n * ```sql\n *  SELECT 9223372036854775807+9223372036854775807;\n * ```\n * The above throws an error on both MySQL and PostgreSQL.\n * SQLite casts to a `DOUBLE`.\n *\n * -----\n *\n * ### `BIGINT SIGNED` too small\n *\n * ```sql\n *  SELECT -9223372036854775808+-9223372036854775808\n * ```\n * The above throws an error on both MySQL and PostgreSQL.\n * SQLite casts to a `DOUBLE`.\n *\n * -----\n *\n * ### `BIGINT UNSIGNED` too large\n *\n * ```sql\n *  SELECT 18446744073709551615+18446744073709551615\n * ```\n * MySQL throws an error.\n * PostgreSQL has no concept of `BIGINT UNSIGNED`; this is adding two `DECIMAL`s.\n * SQLite has no concept of `BIGINT UNSIGNED`; this is adding two `DOUBLE`s.\n *\n * -----\n *\n * ### `BIGINT UNSIGNED` too small\n *\n * ```sql\n *  SELECT 18446744073709551615 + -9223372036854775808 + -9223372036854775808\n * ```\n * MySQL throws an error.\n * PostgreSQL has no concept of `BIGINT UNSIGNED`; this is of type `DECIMAL` and the result is correctly `-1`.\n * SQLite has no concept of `BIGINT UNSIGNED`; this is of type `DOUBLE` and the result is **incorrectly** `0`.\n *\n * -----\n *\n * ### Ensuring consistent behaviour\n *\n * PostgreSQL's behaviour is perfect for `BIGINT SIGNED`.\n *\n * MySQL's behaviour is perfect for `BIGINT SIGNED`.\n *\n * To ensure consistent behaviour across DBMS, **do not** use `BIGINT UNSIGNED` for math.\n * It is fine to use it as an auto-increment identifier in MySQL.\n * Just don't perform math on it.\n *\n * SQLite should have a special `bigintAdd()` polyfill that does not cast to `DOUBLE`\n * and throws an error on overflow.\n */\nexports.add = factory_1.makeChainableOperator(operator_type_1.OperatorType.ADDITION, tm.BigInt(0), tm.mysql.bigIntSigned(), type_hint_1.TypeHint.BIGINT_SIGNED);\n//# sourceMappingURL=add.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst operator_type_1 = require(\"../../../operator-type\");\nconst type_hint_1 = require(\"../../../type-hint\");\nconst aggregate_factory_1 = require(\"../../aggregate-factory\");\nconst decimal_mapper_1 = require(\"../../decimal/decimal-mapper\");\n/**\n * The return type being `DECIMAL` is intentional.\n */\nconst avgImpl = aggregate_factory_1.makeAggregateOperator2(operator_type_1.OperatorType.AGGREGATE_AVERAGE, decimal_mapper_1.decimalMapper.orNull(), type_hint_1.TypeHint.BIGINT_SIGNED);\n/**\n * Returns the average value of non-`NULL` values from a group.\n *\n * It returns `NULL` if there are no non-`NULL` values.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_avg\n * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n * + https://www.sqlite.org/lang_aggfunc.html#avg\n *\n * -----\n *\n * + MySQL      : `AVG(DISTINCT x)`\n * + PostgreSQL : `AVG(DISTINCT x)`\n * + SQLite     : `AVG(DISTINCT x)`\n *\n * -----\n *\n * No guarantees are made about the precision of the return type.\n * + MySQL tends to return fewer decimal places.\n * + PostgreSQL tends to return more decimal places.\n * + SQLite uses double precision arithmetic, rather than fixed precision.\n *\n * @todo Some kind of `DECIMAL` polyfill for SQLite.\n */\nexports.avgDistinct = (arg) => {\n    return avgImpl(true, arg);\n};\n/**\n * Returns the average value of non-`NULL` values from a group.\n *\n * It returns `NULL` if there are no non-`NULL` values.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_avg\n * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n * + https://www.sqlite.org/lang_aggfunc.html#avg\n *\n * -----\n *\n * + MySQL      : `AVG(x)`\n * + PostgreSQL : `AVG(x)`\n * + SQLite     : `AVG(x)`\n *\n * -----\n *\n * No guarantees are made about the precision of the return type.\n * + MySQL tends to return fewer decimal places.\n * + PostgreSQL tends to return more decimal places.\n * + SQLite uses double precision arithmetic, rather than fixed precision.\n *\n * @todo Some kind of `DECIMAL` polyfill for SQLite.\n */\nexports.avgAll = (arg) => {\n    return avgImpl(false, arg);\n};\n/**\n * Returns the average value of non-`NULL` values from a group.\n *\n * It returns `NULL` if there are no non-`NULL` values.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_avg\n * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n * + https://www.sqlite.org/lang_aggfunc.html#avg\n *\n * -----\n *\n * + MySQL      : `AVG(x)`\n * + PostgreSQL : `AVG(x)`\n * + SQLite     : `AVG(x)`\n *\n * -----\n *\n * No guarantees are made about the precision of the return type.\n * + MySQL tends to return fewer decimal places.\n * + PostgreSQL tends to return more decimal places.\n * + SQLite uses double precision arithmetic, rather than fixed precision.\n *\n * @todo Some kind of `DECIMAL` polyfill for SQLite.\n */\nexports.avg = exports.avgAll;\n//# sourceMappingURL=avg.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./avg\"));\n__export(require(\"./max\"));\n__export(require(\"./min\"));\n__export(require(\"./sum-as-bigint\"));\n__export(require(\"./sum-as-decimal\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../../operator-type\");\nconst type_hint_1 = require(\"../../../type-hint\");\nconst aggregate_factory_1 = require(\"../../aggregate-factory\");\n/**\n * Returns the max value of non-`NULL` values from a group.\n *\n * It returns `NULL` if there are no non-`NULL` values.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_max\n * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n * + https://www.sqlite.org/lang_corefunc.html#maxoreunc\n *\n * -----\n *\n * + MySQL      : `MAX(x)`\n * + PostgreSQL : `MAX(x)`\n * + SQLite     : `MAX(x)`\n */\nexports.max = aggregate_factory_1.makeAggregateOperator1(operator_type_1.OperatorType.AGGREGATE_MAX, tm.mysql.bigIntSigned().orNull(), type_hint_1.TypeHint.BIGINT_SIGNED);\n//# sourceMappingURL=max.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../../operator-type\");\nconst type_hint_1 = require(\"../../../type-hint\");\nconst aggregate_factory_1 = require(\"../../aggregate-factory\");\n/**\n * Returns the min value of non-`NULL` values from a group.\n *\n * It returns `NULL` if there are no non-`NULL` values.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_min\n * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n * + https://www.sqlite.org/lang_corefunc.html#minoreunc\n *\n * -----\n *\n * + MySQL      : `MIN(x)`\n * + PostgreSQL : `MIN(x)`\n * + SQLite     : `MIN(x)`\n */\nexports.min = aggregate_factory_1.makeAggregateOperator1(operator_type_1.OperatorType.AGGREGATE_MIN, tm.mysql.bigIntSigned().orNull(), type_hint_1.TypeHint.BIGINT_SIGNED);\n//# sourceMappingURL=min.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../../operator-type\");\nconst type_hint_1 = require(\"../../../type-hint\");\nconst aggregate_factory_1 = require(\"../../aggregate-factory\");\nconst sumAsBigIntSignedImpl = aggregate_factory_1.makeAggregateOperator2(operator_type_1.OperatorType.AGGREGATE_SUM_AS_BIGINT_SIGNED, tm.mysql.bigIntSigned().orNull(), type_hint_1.TypeHint.BIGINT_SIGNED);\n/**\n * Returns the total sum of non-`NULL` values from a group.\n *\n * It returns `NULL` if there are no non-`NULL` values.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_sum\n * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n * + https://www.sqlite.org/lang_aggfunc.html#sumunc\n *\n * -----\n *\n * + MySQL      : `CAST(SUM(DISTINCT x) AS SIGNED)`\n *   + Will clamp between min and max bigint signed, instead of throwing on overflow!\n * + PostgreSQL : `SUM(DISTINCT x)`\n *   + Throws on integer overflow\n * + SQLite     : `SUM(DISTINCT x)`\n *   + Throws on integer overflow\n *\n */\nexports.sumAsBigIntSignedDistinct = (arg) => {\n    return sumAsBigIntSignedImpl(true, arg);\n};\n/**\n * Returns the total sum of non-`NULL` values from a group.\n *\n * It returns `NULL` if there are no non-`NULL` values.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_sum\n * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n * + https://www.sqlite.org/lang_aggfunc.html#sumunc\n *\n * -----\n *\n * + MySQL      : `CAST(SUM(x) AS SIGNED)`\n *   + Will clamp between min and max bigint signed, instead of throwing on overflow!\n * + PostgreSQL : `SUM(x)`\n *   + Throws on integer overflow\n * + SQLite     : `SUM(x)`\n *   + Throws on integer overflow\n *\n */\nexports.sumAsBigIntSignedAll = (arg) => {\n    return sumAsBigIntSignedImpl(false, arg);\n};\n/**\n * Returns the total sum of non-`NULL` values from a group.\n *\n * It returns `NULL` if there are no non-`NULL` values.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_sum\n * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n * + https://www.sqlite.org/lang_aggfunc.html#sumunc\n *\n * -----\n *\n * + MySQL      : `CAST(SUM(x) AS SIGNED)`\n *   + Will clamp between min and max bigint signed, instead of throwing on overflow!\n * + PostgreSQL : `SUM(x)`\n *   + Throws on integer overflow\n * + SQLite     : `SUM(x)`\n *   + Throws on integer overflow\n *\n */\nexports.sumAsBigIntSigned = exports.sumAsBigIntSignedAll;\n//# sourceMappingURL=sum-as-bigint.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst operator_type_1 = require(\"../../../operator-type\");\nconst type_hint_1 = require(\"../../../type-hint\");\nconst aggregate_factory_1 = require(\"../../aggregate-factory\");\nconst decimal_mapper_1 = require(\"../../decimal/decimal-mapper\");\n/**\n * The return type being `DECIMAL` is intentional.\n */\nconst sumAsDecimalImpl = aggregate_factory_1.makeAggregateOperator2(operator_type_1.OperatorType.AGGREGATE_SUM_AS_DECIMAL, decimal_mapper_1.decimalMapper.orNull(), type_hint_1.TypeHint.BIGINT_SIGNED);\n/**\n * Returns the total sum of non-`NULL` values from a group.\n *\n * It returns `NULL` if there are no non-`NULL` values.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_sum\n * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n * + https://www.sqlite.org/lang_aggfunc.html#sumunc\n *\n * -----\n *\n * + MySQL      : `SUM(DISTINCT x)`\n * + PostgreSQL : `SUM(DISTINCT CAST(x AS NUMERIC))`\n * + SQLite     : `SUM(DISTINCT CAST(x AS NUMERIC))`\n *\n * -----\n *\n * No guarantees are made about the precision of the return type.\n *\n * @todo Some kind of `DECIMAL` polyfill for SQLite.\n */\nexports.sumAsDecimalDistinct = (arg) => {\n    return sumAsDecimalImpl(true, arg);\n};\n/**\n * Returns the total sum of non-`NULL` values from a group.\n *\n * It returns `NULL` if there are no non-`NULL` values.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_sum\n * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n * + https://www.sqlite.org/lang_aggfunc.html#sumunc\n *\n * -----\n *\n * + MySQL      : `SUM(x)`\n * + PostgreSQL : `SUM(CAST(x AS NUMERIC))`\n * + SQLite     : `SUM(CAST(x AS NUMERIC))`\n *\n * -----\n *\n * No guarantees are made about the precision of the return type.\n *\n * @todo Some kind of `DECIMAL` polyfill for SQLite.\n */\nexports.sumAsDecimalAll = (arg) => {\n    return sumAsDecimalImpl(false, arg);\n};\n/**\n * Returns the total sum of non-`NULL` values from a group.\n *\n * It returns `NULL` if there are no non-`NULL` values.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_sum\n * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n * + https://www.sqlite.org/lang_aggfunc.html#sumunc\n *\n * -----\n *\n * + MySQL      : `SUM(x)`\n * + PostgreSQL : `SUM(CAST(x AS NUMERIC))`\n * + SQLite     : `SUM(CAST(x AS NUMERIC))`\n *\n * -----\n *\n * No guarantees are made about the precision of the return type.\n *\n * @todo Some kind of `DECIMAL` polyfill for SQLite.\n */\nexports.sumAsDecimal = exports.sumAsDecimalAll;\n//# sourceMappingURL=sum-as-decimal.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../../factory\");\nconst operator_type_1 = require(\"../../../operator-type\");\nconst type_hint_1 = require(\"../../../type-hint\");\nexports.bitwiseAnd = factory_1.makeChainableOperator(operator_type_1.OperatorType.BITWISE_AND, tm.BigInt(-1), tm.mysql.bigIntSigned(), type_hint_1.TypeHint.BIGINT_SIGNED);\n//# sourceMappingURL=bitwise-and.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../../factory\");\nconst operator_type_1 = require(\"../../../operator-type\");\nconst type_hint_1 = require(\"../../../type-hint\");\nconst built_in_expr_1 = require(\"../../../built-in-expr\");\nconst expr_1 = require(\"../../../expr\");\nconst ast_1 = require(\"../../../ast\");\n/**\n * Performs a **signed** bitwise left-shift.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/bit-functions.html#operator_left-shift\n * + https://www.postgresql.org/docs/9.0/functions-math.html\n * + https://www.sqlite.org/lang_expr.html#binaryops\n *\n * -----\n *\n * + MySQL        : `CAST(x << y AS SIGNED)`\n *   + MySQL performs an **unsigned** bitwise left-shift; so we cast to signed to emulate intended behaviour.\n * + PostgreSQL   : `<<`\n * + SQLite       : `<<`\n *\n * -----\n *\n * If the RHS is negative, the behaviour is cannot be unified.\n *\n * + MySQL      : `2 << -1` is `0`\n * + PostgreSQL : `2 << -1` is `0`\n * + SQLite     : `2 << -1` is `1`\n * + JavaScript : `2 << -1` is `0`\n *\n * -----\n *\n * @param left  - The value to perform the shift on\n * @param right - The amount of bits to shift; undefined behaviour if negative\n *\n * @see bitwiseLeftShift\n */\nexports.bitwiseLeftShiftUnsafe = factory_1.makeOperator2(operator_type_1.OperatorType.BITWISE_LEFT_SHIFT, tm.mysql.bigIntSigned(), type_hint_1.TypeHint.BIGINT_SIGNED);\n/**\n * Performs a **signed** bitwise left-shift.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/bit-functions.html#operator_left-shift\n * + https://www.postgresql.org/docs/9.0/functions-math.html\n * + https://www.sqlite.org/lang_expr.html#binaryops\n *\n * -----\n *\n * + MySQL        : `CAST(x << y AS SIGNED)`\n *   + MySQL performs an **unsigned** bitwise left-shift; so we cast to signed to emulate intended behaviour.\n * + PostgreSQL   : `<<`\n * + SQLite       : `<<`\n *\n * -----\n *\n * If the RHS is negative, this throws.\n *\n * -----\n *\n * @param left  - The value to perform the shift on\n * @param right - The amount of bits to shift; throws if negative\n *\n * @see bitwiseLeftShiftUnsafe\n */\nfunction bitwiseLeftShift(left, right) {\n    tm.bigIntGtEq(tm.BigInt(0))(`RHS`, right);\n    return expr_1.ExprUtil.intersect(tm.mysql.bigIntSigned(), [left, right], ast_1.OperatorNodeUtil.operatorNode2(operator_type_1.OperatorType.BITWISE_LEFT_SHIFT, [\n        built_in_expr_1.BuiltInExprUtil.buildAst(left),\n        built_in_expr_1.BuiltInExprUtil.buildAst(right),\n    ], type_hint_1.TypeHint.BIGINT_SIGNED));\n}\nexports.bitwiseLeftShift = bitwiseLeftShift;\n//# sourceMappingURL=bitwise-left-shift.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../../operator-type\");\nconst type_hint_1 = require(\"../../../type-hint\");\nconst factory_1 = require(\"../../factory\");\n/**\n * This function has the double elimination property.\n * `~(~(x)) == x`\n */\nexports.bitwiseNot = factory_1.makeOperator1DoubleElimination(operator_type_1.OperatorType.BITWISE_NOT, tm.mysql.bigIntSigned(), type_hint_1.TypeHint.BIGINT_SIGNED);\n//# sourceMappingURL=bitwise-not.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../../factory\");\nconst operator_type_1 = require(\"../../../operator-type\");\nconst type_hint_1 = require(\"../../../type-hint\");\nexports.bitwiseOr = factory_1.makeChainableOperator(operator_type_1.OperatorType.BITWISE_OR, tm.BigInt(0), tm.mysql.bigIntSigned(), type_hint_1.TypeHint.BIGINT_SIGNED);\n//# sourceMappingURL=bitwise-or.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../../factory\");\nconst operator_type_1 = require(\"../../../operator-type\");\nconst type_hint_1 = require(\"../../../type-hint\");\nconst built_in_expr_1 = require(\"../../../built-in-expr\");\nconst expr_1 = require(\"../../../expr\");\nconst ast_1 = require(\"../../../ast\");\n/**\n * Performs a **signed** bitwise right-shift.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/bit-functions.html#operator_right-shift\n * + https://www.postgresql.org/docs/9.0/functions-math.html\n * + https://www.sqlite.org/lang_expr.html#binaryops\n *\n * -----\n *\n * + MySQL        : `CAST(x >> y AS SIGNED)`\n *   + MySQL performs an **unsigned** bitwise right-shift; so we cast to signed to emulate intended behaviour.\n * + PostgreSQL   : `>>`\n * + SQLite       : `>>`\n *\n * -----\n *\n * If the RHS is negative, the behaviour is cannot be unified.\n *\n * + MySQL      : `2 >> -1` is `0`\n * + PostgreSQL : `2 >> -1` is `0`\n * + SQLite     : `2 >> -1` is `4`\n * + JavaScript : `2 >> -1` is `0`\n *\n * -----\n *\n * @param left  - The value to perform the shift on\n * @param right - The amount of bits to shift; undefined behaviour if negative\n *\n * @see bitwiseRightShift\n */\nexports.bitwiseRightShiftUnsafe = factory_1.makeOperator2(operator_type_1.OperatorType.BITWISE_RIGHT_SHIFT, tm.mysql.bigIntSigned(), type_hint_1.TypeHint.BIGINT_SIGNED);\n/**\n * Performs a **signed** bitwise right-shift.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/bit-functions.html#operator_right-shift\n * + https://www.postgresql.org/docs/9.0/functions-math.html\n * + https://www.sqlite.org/lang_expr.html#binaryops\n *\n * -----\n *\n * + MySQL        : `CAST(x >> y AS SIGNED)`\n *   + MySQL performs an **unsigned** bitwise right-shift; so we cast to signed to emulate intended behaviour.\n * + PostgreSQL   : `>>`\n * + SQLite       : `>>`\n *\n * -----\n *\n * If the RHS is negative, this throws.\n *\n * -----\n *\n * @param left  - The value to perform the shift on\n * @param right - The amount of bits to shift; throws if negative\n *\n * @see bitwiseRightShiftUnsafe\n */\nfunction bitwiseRightShift(left, right) {\n    tm.bigIntGtEq(tm.BigInt(0))(`RHS`, right);\n    return expr_1.ExprUtil.intersect(tm.mysql.bigIntSigned(), [left, right], ast_1.OperatorNodeUtil.operatorNode2(operator_type_1.OperatorType.BITWISE_RIGHT_SHIFT, [\n        built_in_expr_1.BuiltInExprUtil.buildAst(left),\n        built_in_expr_1.BuiltInExprUtil.buildAst(right),\n    ], type_hint_1.TypeHint.BIGINT_SIGNED));\n}\nexports.bitwiseRightShift = bitwiseRightShift;\n//# sourceMappingURL=bitwise-right-shift.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../../factory\");\nconst operator_type_1 = require(\"../../../operator-type\");\nconst type_hint_1 = require(\"../../../type-hint\");\nexports.bitwiseXor = factory_1.makeOperator2(operator_type_1.OperatorType.BITWISE_XOR, tm.mysql.bigIntSigned(), type_hint_1.TypeHint.BIGINT_SIGNED);\n//# sourceMappingURL=bitwise-xor.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./bitwise-and\"));\n__export(require(\"./bitwise-left-shift\"));\n__export(require(\"./bitwise-not\"));\n__export(require(\"./bitwise-or\"));\n__export(require(\"./bitwise-right-shift\"));\n__export(require(\"./bitwise-xor\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./aggregate\"));\n__export(require(\"./bitwise\"));\n__export(require(\"./abs\"));\n__export(require(\"./add\"));\n__export(require(\"./integer-div\"));\n__export(require(\"./integer-remainder\"));\n__export(require(\"./mul\"));\n__export(require(\"./neg\"));\n__export(require(\"./random-bigint-signed\"));\n__export(require(\"./sign\"));\n__export(require(\"./sub\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * Treats both arguments as integers and performs integer division\n *\n * -----\n *\n * ### Divide by zero\n *\n * ```sql\n *  SELECT 9223372036854775807 DIV 0; -- MySQL\n *  SELECT 9223372036854775807 / 0; -- PostgreSQL, SQLite\n * ```\n * The above gives `NULL` for MySQL and SQLite.\n * The above throws an error for PostgreSQL.\n */\nexports.integerDiv = factory_1.makeOperator2(operator_type_1.OperatorType.INTEGER_DIVISION, tm.mysql.bigIntSigned().orNull(), type_hint_1.TypeHint.BIGINT_SIGNED);\n//# sourceMappingURL=integer-div.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * The remainder after performing integer division.\n *\n * Integer division is defined as,\n * `dividend / divisor`\n *\n * ```ts\n * result = sign(dividend) * abs(remainder)\n * ```\n *\n * If the dividend is positive, the result is positive.\n * If the dividend is negative, the result is negative.\n *\n * ```ts\n * integerRemainder( 5,  3); //2\n * integerRemainder( 5, -3); //2\n * integerRemainder(-5,  3); //-2\n * integerRemainder(-5, -3); //-2\n * ```\n *\n * -----\n *\n * ### Divide by zero\n *\n * ```sql\n *  SELECT 9223372036854775807 % 0\n * ```\n * The above gives `NULL` for MySQL and SQLite.\n * The above throws an error for PostgreSQL.\n */\nexports.integerRemainder = factory_1.makeOperator2(operator_type_1.OperatorType.INTEGER_REMAINDER, tm.mysql.bigIntSigned().orNull(), type_hint_1.TypeHint.BIGINT_SIGNED);\n//# sourceMappingURL=integer-remainder.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * -----\n *\n * ### `BIGINT SIGNED` too large\n *\n * ```sql\n *  SELECT 9223372036854775807*9223372036854775807;\n * ```\n * The above throws an error on both MySQL and PostgreSQL.\n * SQLite casts to a `DOUBLE`.\n *\n * -----\n *\n * ### `BIGINT SIGNED` too small\n *\n * ```sql\n *  SELECT 9223372036854775807*-9223372036854775808\n * ```\n * The above throws an error on both MySQL and PostgreSQL.\n * SQLite casts to a `DOUBLE`.\n *\n * -----\n *\n * ### `BIGINT UNSIGNED` too large\n *\n * ```sql\n *  SELECT 18446744073709551615*18446744073709551615\n * ```\n * MySQL throws an error.\n * PostgreSQL has no concept of `BIGINT UNSIGNED`; this is multiplying two `DECIMAL`s.\n * SQLite has no concept of `BIGINT UNSIGNED`; this is multiplying two `DOUBLE`s.\n *\n * -----\n *\n * ### `BIGINT UNSIGNED` too small\n *\n * ```sql\n *  SELECT 18446744073709551615 * -9223372036854775808\n * ```\n * MySQL throws an error.\n * PostgreSQL has no concept of `BIGINT UNSIGNED`; this is of type `DECIMAL`.\n * SQLite has no concept of `BIGINT UNSIGNED`; this is of type `DOUBLE`.\n *\n * -----\n *\n * ### Ensuring consistent behaviour\n *\n * PostgreSQL's behaviour is perfect for `BIGINT SIGNED`.\n *\n * MySQL's behaviour is perfect for `BIGINT SIGNED`.\n *\n * To ensure consistent behaviour across DBMS, **do not** use `BIGINT UNSIGNED` for math.\n * It is fine to use it as an auto-increment identifier in MySQL.\n * Just don't perform math on it.\n *\n * SQLite should have a special `bigintMul()` polyfill that does not cast to `DOUBLE`\n * and throws an error on overflow.\n */\nexports.mul = factory_1.makeChainableOperator(operator_type_1.OperatorType.MULTIPLICATION, tm.BigInt(1), tm.mysql.bigIntSigned(), type_hint_1.TypeHint.BIGINT_SIGNED);\n//# sourceMappingURL=mul.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * This function has the double elimination property.\n * `NEG(NEG(x)) == x`\n *\n * -----\n *\n * ### `BIGINT SIGNED` too large (from database)\n *\n * Be careful, however,\n * ```sql\n *  CREATE TABLE a (id BIGINT);\n *  INSERT INTO a (id) VALUES (-9223372036854775808);\n *\n *  SELECT\n *      -- 9223372036854775808 is too big\n *      -- to fit in signed bigint\n *      -id\n *  FROM\n *      a\n * ```\n *\n * The above will throw an error on both MySQL and PostgreSQL\n * because `9223372036854775808` is not a valid signed bigint value.\n *\n * SQLite casts to `DOUBLE`.\n *\n * -----\n *\n * ### Double Unary Minus Elimination on Negative `BIGINT SIGNED` Literal\n *\n * The following will not throw an error but will silently\n * cast the result,\n * ```sql\n *  SELECT -(-9223372036854775808);\n * ```\n * Both **do not** error in MySQL and PostgreSQL.\n * PostgreSQL seems to perform double unary minus elimination and treats the result as a `DECIMAL` literal.\n * MySQL seems to perform double unary minus elimination and treats the result as an `BIGINT UNSIGNED` literal.\n *\n * SQLite casts to `DOUBLE`\n *\n * -----\n *\n * ```sql\n *  SELECT -(\n *      CAST(-9223372036854775808 AS BIGINT)\n *  ); -- PostgreSQL\n *\n *  SELECT -(-9223372036854775808 + 0); -- PostgreSQL\n *\n *  SELECT -(\n *      CAST(-9223372036854775808 AS BIGINT SIGNED)\n *  ); -- MySQL\n * ```\n * The above throws an error on PostgreSQL.\n * The above silently casts to an `BIGINT UNSIGNED` on MySQL.\n *\n * SQLite casts to `DOUBLE`.\n *\n * -----\n *\n * ```sql\n *  SELECT\n *      CAST(-(-9223372036854775808) AS BIGINT); -- PostgreSQL\n *\n *  SELECT\n *      CAST(-(-9223372036854775808) AS BIGINT SIGNED); -- MySQL\n * ```\n * The above throws an error on PostgreSQL.\n * The above silently casts to an `BIGINT UNSIGNED`\n *\n * SQLite casts to `DOUBLE`.\n *\n * -----\n *\n * MySQL seems to treat `BIGINT SIGNED` values from **columns** and **literals** differently!\n *\n * -----\n *\n * ### `BIGINT SIGNED` too small.\n *\n * MySQL-specific,\n * ```sql\n *  CREATE TABLE a (id  BIGINT UNSIGNED);\n *  INSERT INTO a (id) VALUES (9223372036854775809);\n *  SELECT -id FROM a;\n * ```\n *\n * `-9223372036854775809` is too small to fit in `BIGINT SIGNED`. This will throw an error.\n *\n * -----\n *\n * ```sql\n *  SELECT -CAST(9223372036854775809 AS UNSIGNED);\n * ```\n * The above gives you a `DECIMAL` type with value `-9223372036854775809` in MySQL.\n * PostgreSQL and SQLite do not have `BIGINT UNSIGNED`.\n *\n * -----\n *\n * MySQL and PostgreSQL query builders should perform the unary minus on the library\n * level as much as possible. However, it is not always feasible...\n *\n * PostgreSQL should perform bigint unary minus with `-CAST(x AS BIGINT)` to avoid implicit conversions.\n *\n * MySQL should just use `CAST(-x AS SIGNED)`.\n *\n * However, on MySQL,\n * `CAST(-18446744073709551615 AS SIGNED)` === `-9223372036854775808` (signed bigint minimum value)\n *\n * It would be nice if it threw an error instead.\n * It throws an error on PostgreSQL.\n *\n * SQLite should have a special `bigintNeg()` polyfill that does not cast to `DOUBLE`\n * and throws an error on overflow.\n */\nexports.neg = factory_1.makeOperator1DoubleElimination(operator_type_1.OperatorType.UNARY_MINUS, tm.mysql.bigIntSigned(), type_hint_1.TypeHint.BIGINT_SIGNED);\n//# sourceMappingURL=neg.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Returns a random `BIGINT SIGNED` in the range,\n * [-9223372036854775808, 9223372036854775807]\n *\n * -----\n *\n * MySQL,\n * ```sql\n *  CAST(\n *      CAST(RAND() AS DECIMAL(40,20)) * (9223372036854775807 + 9223372036854775808) - 9223372036854775808\n *      AS SIGNED\n *  )\n * ```\n *\n * PostgreSQL,\n * ```sql\n *  CAST(\n *      CAST(RANDOM() AS DECIMAL(40,20)) * (9223372036854775807 + 9223372036854775808) - 9223372036854775808\n *      AS BIGINT\n *  )\n * ```\n *\n * SQLite,\n * ```sql\n *  RANDOM()\n * ```\n */\nexports.randomBigIntSigned = factory_1.makeOperator0(operator_type_1.OperatorType.RANDOM, tm.mysql.bigIntSigned(), type_hint_1.TypeHint.BIGINT_SIGNED);\n//# sourceMappingURL=random-bigint-signed.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst factory_1 = require(\"../factory\");\n/**\n * This function is idempotent.\n * `SIGN(SIGN(x)) == SIGN(x)`\n *\n * Will return -1, 0, 1\n */\nexports.sign = factory_1.makeOperator1Idempotent(operator_type_1.OperatorType.SIGN, tm.mysql.bigIntSigned(), type_hint_1.TypeHint.BIGINT_SIGNED);\n//# sourceMappingURL=sign.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * -----\n *\n * ### `BIGINT SIGNED` too large\n *\n * ```sql\n *  SELECT 9223372036854775807- (-9223372036854775808);\n * ```\n * The above throws an error on both MySQL and PostgreSQL.\n * SQLite casts to a `DOUBLE`.\n *\n * -----\n *\n * ### `BIGINT SIGNED` too small\n *\n * ```sql\n *  SELECT -9223372036854775808 - 9223372036854775807\n * ```\n * The above throws an error on both MySQL and PostgreSQL.\n * SQLite casts to a `DOUBLE`.\n *\n * -----\n *\n * ### `BIGINT UNSIGNED` too large\n *\n * ```sql\n *  SELECT 18446744073709551615 - (-9223372036854775808)\n * ```\n * MySQL throws an error.\n * PostgreSQL has no concept of `BIGINT UNSIGNED`; this is subtracting two `DECIMAL`s.\n * SQLite has no concept of `BIGINT UNSIGNED`; this is subtracting two `DOUBLE`s.\n *\n * -----\n *\n * ### `BIGINT UNSIGNED` too small\n *\n * ```sql\n *  SELECT 18446744073709551615 - 9223372036854775807 - 9223372036854775807 - 9223372036854775807\n * ```\n * MySQL throws an error.\n * PostgreSQL has no concept of `BIGINT UNSIGNED`; this is of type `DECIMAL`.\n * SQLite has no concept of `BIGINT UNSIGNED`; this is of type `DOUBLE`.\n * -----\n *\n * ### Ensuring consistent behaviour\n *\n * PostgreSQL's behaviour is perfect for `BIGINT SIGNED`.\n *\n * MySQL's behaviour is perfect for `BIGINT SIGNED`.\n *\n * To ensure consistent behaviour across DBMS, **do not** use `BIGINT UNSIGNED` for math.\n * It is fine to use it as an auto-increment identifier in MySQL.\n * Just don't perform math on it.\n *\n * SQLite should have a special `bigintSub()` polyfill that does not cast to `DOUBLE`\n * and throws an error on overflow.\n */\nexports.sub = factory_1.makeOperator2(operator_type_1.OperatorType.SUBTRACTION, tm.mysql.bigIntSigned(), type_hint_1.TypeHint.BIGINT_SIGNED);\n//# sourceMappingURL=sub.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\n/**\n * https://dev.mysql.com/doc/refman/8.0/en/logical-operators.html#operator_and\n *\n * This version of the `AND` operator allows `NULL`.\n *\n * For two-valued logic, @see {@link and}\n */\nexports.and3 = factory_1.makeChainableOperator(operator_type_1.OperatorType.AND, true, tm.mysql.boolean().orNull());\n//# sourceMappingURL=and-3.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./and-3\"));\n__export(require(\"./is-false\"));\n__export(require(\"./is-not-false\"));\n__export(require(\"./is-not-true\"));\n__export(require(\"./is-not-unknown\"));\n__export(require(\"./is-true\"));\n__export(require(\"./is-unknown\"));\n__export(require(\"./not-3\"));\n__export(require(\"./or-3\"));\n__export(require(\"./xor-3\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_is\n *\n * Tests whether a value is `FALSE`.\n *\n * ```sql\n * mysql> SELECT (1 IS FALSE), (0 IS FALSE), (NULL IS FALSE);\n *         -> 0, 1, 0\n * ```\n *\n * -----\n *\n * PostgreSQL does not allow `(0 IS FALSE)` because PostgreSQL\n * has an actual `boolean` type.\n */\n/**\n * @todo Monitor this PR,\n * https://github.com/microsoft/TypeScript/issues/33561\n */\nexports.isFalse = factory_1.makeOperator1(operator_type_1.OperatorType.IS_FALSE, tm.mysql.boolean(), type_hint_1.TypeHint.BOOLEAN);\n//# sourceMappingURL=is-false.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_is-not\n *\n * Tests whether a value is not `FALSE`.\n *\n * ```sql\n * mysql> SELECT (1 IS NOT FALSE), (0 IS NOT FALSE), (NULL IS NOT FALSE);\n *         -> 1, 0, 1\n * ```\n *\n * -----\n *\n * PostgreSQL does not allow `(0 IS NOT FALSE)` because PostgreSQL\n * has an actual `boolean` type.\n */\n/**\n * @todo Monitor this PR,\n * https://github.com/microsoft/TypeScript/issues/33561\n */\nexports.isNotFalse = factory_1.makeOperator1(operator_type_1.OperatorType.IS_NOT_FALSE, tm.mysql.boolean(), type_hint_1.TypeHint.BOOLEAN);\n//# sourceMappingURL=is-not-false.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_is-not\n *\n * Tests whether a value is not `TRUE`.\n *\n * ```sql\n * mysql> SELECT (1 IS NOT TRUE), (0 IS NOT TRUE), (NULL IS NOT TRUE);\n *         -> 0, 1, 1\n * ```\n *\n * -----\n *\n * PostgreSQL does not allow `(1 IS NOT TRUE)` because PostgreSQL\n * has an actual `boolean` type.\n */\n/**\n * @todo Monitor this PR,\n * https://github.com/microsoft/TypeScript/issues/33561\n */\nexports.isNotTrue = factory_1.makeOperator1(operator_type_1.OperatorType.IS_NOT_TRUE, tm.mysql.boolean(), type_hint_1.TypeHint.BOOLEAN);\n//# sourceMappingURL=is-not-true.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_is-not\n *\n * Tests whether a value is not `UNKNOWN`.\n * Basically an alias for `IS NOT NULL`\n *\n * ```sql\n * mysql> SELECT (1 IS NOT UNKNOWN), (0 IS NOT UNKNOWN), (NULL IS NOT UNKNOWN);\n *         -> 1, 1, 0\n * ```\n *\n * -----\n *\n * PostgreSQL does not allow `(0 IS NOT UNKNOWN)` because PostgreSQL\n * has an actual `boolean` type.\n */\n/**\n * @todo Monitor this PR,\n * https://github.com/microsoft/TypeScript/issues/33561\n */\nexports.isNotUnknown = factory_1.makeOperator1(operator_type_1.OperatorType.IS_NOT_UNKNOWN, tm.mysql.boolean(), type_hint_1.TypeHint.BOOLEAN);\n//# sourceMappingURL=is-not-unknown.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_is\n *\n * Tests whether a value is `TRUE`.\n *\n * ```sql\n * mysql> SELECT (1 IS TRUE), (0 IS TRUE), (NULL IS TRUE);\n *         -> 1, 0, 0\n * ```\n *\n * -----\n *\n * PostgreSQL does not allow `(1 IS TRUE)` because PostgreSQL\n * has an actual `boolean` type.\n */\n/**\n * @todo Monitor this PR,\n * https://github.com/microsoft/TypeScript/issues/33561\n */\nexports.isTrue = factory_1.makeOperator1(operator_type_1.OperatorType.IS_TRUE, tm.mysql.boolean(), type_hint_1.TypeHint.BOOLEAN);\n//# sourceMappingURL=is-true.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_is\n *\n * Tests whether a value is `UNKNOWN`.\n * Basically an alias for `IS NULL`\n *\n * ```sql\n * mysql> SELECT (1 IS UNKNOWN), (0 IS UNKNOWN), (NULL IS UNKNOWN);\n *         -> 0, 0, 1\n * ```\n *\n * -----\n *\n * PostgreSQL does not allow `(0 IS UNKNOWN)` because PostgreSQL\n * has an actual `boolean` type.\n */\n/**\n * @todo Monitor this PR,\n * https://github.com/microsoft/TypeScript/issues/33561\n */\nexports.isUnknown = factory_1.makeOperator1(operator_type_1.OperatorType.IS_UNKNOWN, tm.mysql.boolean(), type_hint_1.TypeHint.BOOLEAN);\n//# sourceMappingURL=is-unknown.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst factory_1 = require(\"../factory\");\n/**\n * https://dev.mysql.com/doc/refman/8.0/en/logical-operators.html#operator_not\n *\n * This version of the `NOT` operator allows `NULL`.\n *\n * For two-valued logic, @see {@link not}\n */\nexports.not3 = factory_1.makeOperator1DoubleElimination(operator_type_1.OperatorType.NOT, tm.mysql.boolean().orNull());\n//# sourceMappingURL=not-3.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\n/**\n * https://dev.mysql.com/doc/refman/8.0/en/logical-operators.html#operator_or\n *\n * This version of the `OR` operator allows `NULL`.\n *\n * For two-valued logic, @see {@link or}\n */\nexports.or3 = factory_1.makeChainableOperator(operator_type_1.OperatorType.OR, false, tm.mysql.boolean().orNull());\n//# sourceMappingURL=or-3.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\n/**\n * https://dev.mysql.com/doc/refman/8.0/en/logical-operators.html#operator_xor\n *\n * This version of the `XOR` operator allows `NULL`.\n *\n * For two-valued logic, @see {@link xor}\n */\nexports.xor3 = factory_1.makeOperator2(operator_type_1.OperatorType.XOR, tm.mysql.boolean().orNull());\n//# sourceMappingURL=xor-3.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\n/**\n * https://dev.mysql.com/doc/refman/8.0/en/logical-operators.html#operator_and\n *\n * This version of the `AND` operator forbids `NULL`.\n *\n * For three-valued logic, @see {@link and3}\n */\nexports.and = factory_1.makeChainableOperator(operator_type_1.OperatorType.AND, true, tm.mysql.boolean());\n//# sourceMappingURL=and.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./and\"));\n__export(require(\"./is-not-null-and\"));\n__export(require(\"./is-null-or\"));\n__export(require(\"./not\"));\n__export(require(\"./or\"));\n__export(require(\"./xor\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_1 = require(\"../../column\");\nconst null_safe_equation_1 = require(\"../null-safe-equation\");\nconst and_1 = require(\"./and\");\nfunction isNotNullAnd(column, builtInExprDelegate) {\n    return and_1.and(null_safe_equation_1.isNotNull(column), builtInExprDelegate({\n        [column.columnAlias]: column_1.ColumnUtil.toNonNullable(column)\n    }));\n}\nexports.isNotNullAnd = isNotNullAnd;\n//# sourceMappingURL=is-not-null-and.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_1 = require(\"../../column\");\nconst null_safe_equation_1 = require(\"../null-safe-equation\");\nconst or_1 = require(\"./or\");\nfunction isNullOr(column, builtInExprDelegate) {\n    return or_1.or(null_safe_equation_1.isNull(column), builtInExprDelegate({\n        [column.columnAlias]: column_1.ColumnUtil.toNonNullable(column)\n    }));\n}\nexports.isNullOr = isNullOr;\n//# sourceMappingURL=is-null-or.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst factory_1 = require(\"../factory\");\n/**\n * https://dev.mysql.com/doc/refman/8.0/en/logical-operators.html#operator_not\n *\n * This version of the `NOT` operator forbids `NULL`.\n *\n * For three-valued logic, @see {@link not3}\n */\nexports.not = factory_1.makeOperator1DoubleElimination(operator_type_1.OperatorType.NOT, tm.mysql.boolean());\n//# sourceMappingURL=not.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\n/**\n * https://dev.mysql.com/doc/refman/8.0/en/logical-operators.html#operator_or\n *\n * This version of the `OR` operator forbids `NULL`.\n *\n * For three-valued logic, @see {@link or3}\n */\nexports.or = factory_1.makeChainableOperator(operator_type_1.OperatorType.OR, false, tm.mysql.boolean());\n//# sourceMappingURL=or.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\n/**\n * https://dev.mysql.com/doc/refman/8.0/en/logical-operators.html#operator_xor\n *\n * This version of the `XOR` operator forbids `NULL`.\n *\n * For three-valued logic, @see {@link xor3}\n */\nexports.xor = factory_1.makeOperator2(operator_type_1.OperatorType.XOR, tm.mysql.boolean());\n//# sourceMappingURL=xor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_1 = require(\"../../../table\");\nconst column_map_1 = require(\"../../../column-map\");\nconst key_1 = require(\"../../../key\");\nconst type_util_1 = require(\"../../../type-util\");\nfunction assertNullSafeComparableToCandidateKeysOfTable(src, dst, srcColumns) {\n    const candidateKeys = table_1.TableUtil.extractCandidateKeysWithColumnAliasInTable(dst, src);\n    const srcColumnAliases = srcColumns.map(column => column.columnAlias);\n    const dstCandidateKey = candidateKeys.find(candidateKey => key_1.KeyUtil.isEqual(candidateKey, srcColumnAliases));\n    if (dstCandidateKey == undefined) {\n        throw new Error(`${column_map_1.ColumnMapUtil.tableAlias(src.columns)} (${srcColumnAliases.join(\",\")}) cannot be used to compare with candidate keys of ${column_map_1.ColumnMapUtil.tableAlias(dst.columns)}`);\n    }\n    column_map_1.ColumnMapUtil.assertIsNullSafeComparable(column_map_1.ColumnMapUtil.fromColumnArray(srcColumns), type_util_1.pickOwnEnumerable(dst.columns, dstCandidateKey));\n    return dstCandidateKey;\n}\nexports.assertNullSafeComparableToCandidateKeysOfTable = assertNullSafeComparableToCandidateKeysOfTable;\n//# sourceMappingURL=assert-null-safe-comparable-to-candidate-keys-of-table.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_1 = require(\"../../../table\");\nconst logical_1 = require(\"../../logical\");\nconst type_util_1 = require(\"../../../type-util\");\nconst assert_null_safe_comparable_to_candidate_keys_of_table_1 = require(\"./assert-null-safe-comparable-to-candidate-keys-of-table\");\nconst null_safe_eq_1 = require(\"../null-safe-eq\");\nexports.eqCandidateKeyOfTable = ((src, dst, eqCandidateKeyOfTableDelegate) => {\n    const candidateKeys = table_1.TableUtil.extractCandidateKeysWithColumnAliasInTable(dst, src);\n    const columnAliases = [];\n    for (const key of candidateKeys) {\n        columnAliases.push(...key);\n    }\n    const columns = type_util_1.pickOwnEnumerable(src.columns, columnAliases);\n    const srcColumns = eqCandidateKeyOfTableDelegate(columns);\n    const dstCandidateKey = assert_null_safe_comparable_to_candidate_keys_of_table_1.assertNullSafeComparableToCandidateKeysOfTable(src, dst, srcColumns);\n    /**\n     * No need to `.sort()`, just use `candidateKey` and the order\n     * the user set.\n     */\n    const arr = dstCandidateKey.map((columnAlias) => {\n        /**\n         * We use `nullSafeEq` because `src.dstPkX` may have nullable columns.\n         */\n        const expr = null_safe_eq_1.nullSafeEq(src.columns[columnAlias], dst.columns[columnAlias]);\n        return expr;\n    });\n    const result = logical_1.and(...arr);\n    return result;\n});\n//# sourceMappingURL=eq-candidate-key-of-table.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./assert-null-safe-comparable-to-candidate-keys-of-table\"));\n__export(require(\"./eq-candidate-key-of-table\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst logical_1 = require(\"../logical\");\nconst candidate_key_1 = require(\"../../candidate-key\");\nconst column_map_1 = require(\"../../column-map\");\nconst null_safe_eq_1 = require(\"./null-safe-eq\");\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nexports.eqCandidateKey = ((table, candidateKeyInput) => {\n    const candidateKey = candidate_key_1.CandidateKeyUtil.mapperPreferPrimaryKey(table)(`${column_map_1.ColumnMapUtil.tableAlias(table.columns)}.candidateKey`, candidateKeyInput);\n    /**\n     * We `.sort()` the keys so our resulting SQL is deterministic,\n     * regardless of how `candidateKey` was constructed.\n     */\n    const arr = Object.keys(candidateKey).sort().map((columnAlias) => {\n        const expr = null_safe_eq_1.nullSafeEq(table.columns[columnAlias], built_in_expr_1.BuiltInExprUtil.fromValueExpr(table.columns[columnAlias], candidateKey[columnAlias]));\n        return expr;\n    });\n    const result = logical_1.and(...arr);\n    return result;\n});\n//# sourceMappingURL=eq-candidate-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst logical_1 = require(\"../logical\");\nconst column_map_1 = require(\"../../column-map\");\nconst partial_row_1 = require(\"../../partial-row\");\nconst null_safe_eq_1 = require(\"./null-safe-eq\");\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nexports.eqColumns = ((table, columnsInput) => {\n    const columns = partial_row_1.PartialRowUtil.mapper(table)(`${column_map_1.ColumnMapUtil.tableAlias(table.columns)}.columns`, columnsInput);\n    const arr = Object.keys(columns)\n        .filter((columnAlias) => {\n        return columns[columnAlias] !== undefined;\n    })\n        /**\n         * We `.sort()` the keys so our resulting SQL is deterministic,\n         * regardless of how `columns` was constructed.\n         */\n        .sort()\n        .map((columnAlias) => {\n        const expr = null_safe_eq_1.nullSafeEq(table.columns[columnAlias], built_in_expr_1.BuiltInExprUtil.fromValueExpr(table.columns[columnAlias], columns[columnAlias]));\n        return expr;\n    });\n    const result = logical_1.and(...arr);\n    return result;\n});\n//# sourceMappingURL=eq-columns.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_1 = require(\"../../table\");\nconst logical_1 = require(\"../logical\");\nconst null_safe_eq_1 = require(\"./null-safe-eq\");\nexports.eqPrimaryKeyOfTable = ((src, dst) => {\n    table_1.TableUtil.assertHasNullSafeComparablePrimaryKey(dst, src.columns);\n    /**\n     * No need to `.sort()`, just use `primaryKey` and the order\n     * the user set.\n     */\n    const arr = dst.primaryKey.map((columnAlias) => {\n        /**\n         * We use `nullSafeEq` because `src.dstPkX` may have nullable columns.\n         */\n        const expr = null_safe_eq_1.nullSafeEq(src.columns[columnAlias], dst.columns[columnAlias]);\n        return expr;\n    });\n    const result = logical_1.and(...arr);\n    return result;\n});\n//# sourceMappingURL=eq-primary-key-of-table.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst logical_1 = require(\"../logical\");\nconst super_key_1 = require(\"../../super-key\");\nconst column_map_1 = require(\"../../column-map\");\nconst null_safe_eq_1 = require(\"./null-safe-eq\");\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nexports.eqSuperKey = ((table, superKeyInput) => {\n    const superKey = super_key_1.SuperKeyUtil.mapper(table)(`${column_map_1.ColumnMapUtil.tableAlias(table.columns)}.superKey`, superKeyInput);\n    const arr = Object.keys(superKey)\n        .filter((columnAlias) => {\n        return superKey[columnAlias] !== undefined;\n    })\n        /**\n         * We `.sort()` the keys so our resulting SQL is deterministic,\n         * regardless of how `superKey` was constructed.\n         */\n        .sort()\n        .map((columnAlias) => {\n        const expr = null_safe_eq_1.nullSafeEq(table.columns[columnAlias], built_in_expr_1.BuiltInExprUtil.fromValueExpr(table.columns[columnAlias], superKey[columnAlias]));\n        return expr;\n    });\n    const result = logical_1.and(...arr);\n    return result;\n});\n//# sourceMappingURL=eq-super-key.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./eq-candidate-key-of-table\"));\n__export(require(\"./eq-candidate-key\"));\n__export(require(\"./eq-columns\"));\n__export(require(\"./eq-primary-key-of-table\"));\n__export(require(\"./eq-super-key\"));\n__export(require(\"./is-not-null\"));\n__export(require(\"./is-null\"));\n__export(require(\"./not-null-safe-eq\"));\n__export(require(\"./null-safe-eq\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\n/**\n * https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_is-not-null\n *\n * Tests whether a value is not `NULL`.\n *\n * ```sql\n * mysql> SELECT (1 IS NOT NULL), (0 IS NOT NULL), (NULL IS NOT NULL);\n *         -> 1, 1, 0\n * ```\n */\nexports.isNotNull = factory_1.makeNullSafeEquation1(operator_type_1.OperatorType.IS_NOT_NULL);\n//# sourceMappingURL=is-not-null.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\n/**\n * https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_is-null\n *\n * Tests whether a value is NULL.\n *\n * ```sql\n * mysql> SELECT (1 IS NULL), (0 IS NULL), (NULL IS NULL);\n *         -> 0, 0, 1\n * ```\n */\nexports.isNull = factory_1.makeNullSafeEquation1(operator_type_1.OperatorType.IS_NULL);\n//# sourceMappingURL=is-null.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\n/**\n * https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_equal-to\n *\n * This operator allows `NULL`.\n *\n * This operator performs an equality comparison like the `=` operator,\n * but returns\n * + `false` rather than `NULL` if both operands are `NULL`, and\n * + `true` rather than `NULL` if one operand is `NULL`.\n *\n * For regular equality, @see {@link eq}\n */\nexports.notNullSafeEq = factory_1.makeNullSafeEquation2(operator_type_1.OperatorType.NOT_NULL_SAFE_EQUAL);\n//# sourceMappingURL=not-null-safe-eq.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\n/**\n * https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_equal-to\n *\n * This operator allows `NULL`.\n *\n * This operator performs an equality comparison like the `=` operator,\n * but returns\n * + `true` rather than `NULL` if both operands are `NULL`, and\n * + `false` rather than `NULL` if one operand is `NULL`.\n *\n * For regular equality, @see {@link eq}\n */\nexports.nullSafeEq = factory_1.makeNullSafeEquation2(operator_type_1.OperatorType.NULL_SAFE_EQUAL);\n//# sourceMappingURL=null-safe-eq.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../../operator-type\");\nconst type_hint_1 = require(\"../../../type-hint\");\nconst aggregate_factory_1 = require(\"../../aggregate-factory\");\n/**\n * Returns a string result with the concatenated non-`NULL` values from a group.\n *\n * It returns `NULL` if there are no non-`NULL` values.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_group-concat\n * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n * + https://www.sqlite.org/lang_aggfunc.html#groupconcat\n *\n * + MySQL      : `GROUP_CONCAT(DISTINCT expr SEPARATOR separator)`\n * + PostgreSQL : `STRING_AGG(DISTINCT expr, separator)`\n * + SQLite     : `GROUP_CONCAT(DISTINCT expr)`\n *   + The order of the concatenated elements is arbitrary.\n *   + Uses comma as separator\n *\n * -----\n *\n * Seems like `GROUP_CONCAT()` with `DISTINCT` cannot take a separator\n * for the DB-unified implementation.\n *\n * Unless we modify the SQLite implementation with a user-defined function?\n *\n * -----\n *\n * @param arg - The expression to aggregate\n *\n * @todo Investigate replacing SQLite `GROUP_CONCAT()` with user-defined function\n */\nexports.groupConcatDistinct = aggregate_factory_1.makeAggregateOperator1(operator_type_1.OperatorType.AGGREGATE_GROUP_CONCAT_DISTINCT, tm.orNull(tm.string()), type_hint_1.TypeHint.STRING);\n/**\n * Returns a string result with the concatenated non-`NULL` values from a group.\n *\n * It returns `NULL` if there are no non-`NULL` values.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_group-concat\n * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n * + https://www.sqlite.org/lang_aggfunc.html#groupconcat\n *\n * + MySQL      : `GROUP_CONCAT(expr SEPARATOR separator)`\n * + PostgreSQL : `STRING_AGG(expr, separator)`\n * + SQLite     : `GROUP_CONCAT(expr, separator)`\n *   + The order of the concatenated elements is arbitrary.\n *\n * @param left  - The expression to aggregate\n * @param right - The separator between expressions\n */\nexports.groupConcatAll = aggregate_factory_1.makeAggregateOperator2(operator_type_1.OperatorType.AGGREGATE_GROUP_CONCAT_ALL, tm.orNull(tm.string()), type_hint_1.TypeHint.STRING);\n//# sourceMappingURL=group-concat.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./group-concat\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Returns the numeric value of the leftmost character of the string.\n *\n * -----\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_ascii\n * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n *\n * -----\n *\n * + MySQL          : `ASCII(x)`\n * + PostgreSQL     : `ASCII(x)`\n * + SQLite         : None, implement with `x.length == 0 ? 0 : x.charCodeAt(0)`\n *\n * -----\n *\n * The character set of the string can affect the result of this function.\n * For example, on MySQL 5.7,\n * ```sql\n *  ASCII(CHAR(128 USING latin1))\n *  > 128\n *\n *  ASCII(CHAR(128 USING utf32))\n *  > 0\n * ```\n *\n * https://www.db-fiddle.com/f/bmj7sAFhiPpFGNVAhBdi3Q/2\n */\nexports.ascii = factory_1.makeOperator1(operator_type_1.OperatorType.ASCII, \n/**\n * Should not return a value less than zero\n */\ntm.mysql.bigIntUnsigned(), type_hint_1.TypeHint.STRING);\n//# sourceMappingURL=ascii.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Returns a binary string representation of a `bigint` value\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_bin\n *\n * -----\n *\n * + MySQL          : `BIN(x)`\n * + PostgreSQL     : None. Implement with,\n * ```sql\n *  REGEXP_REPLACE(\n *      (x)::bit(64)::varchar(64),\n *      '^0+(\\d+)$',\n *      '\\1'\n *  )\n * ```\n * + SQLite         : None. Implement with,\n * ```ts\n * //x >= 0\n * (x).toString(2)\n * //x < 0\n * (2n**64n + BigInt(x)).toString(2)\n * ```\n */\nexports.bin = factory_1.makeOperator1(operator_type_1.OperatorType.BIN, tm.match(/^[01]+$/), type_hint_1.TypeHint.BIGINT_SIGNED);\n//# sourceMappingURL=bin.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Returns the length of the string in bits.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_bit-length\n * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-SQL\n *\n * -----\n *\n * + MySQL          : `BIT_LENGTH(x)`\n * + PostgreSQL     : `BIT_LENGTH(x)`\n * + SQLite         : `LENGTH(CAST(x AS BLOB)) * 8`\n *\n * -----\n *\n * The character set of the string can affect the result of this function.\n * For example, on MySQL 5.7,\n * ```sql\n *  BIT_LENGTH(CHAR(128 USING latin1))\n *  > 8\n *\n *  BIT_LENGTH(CHAR(128 USING utf32))\n *  > 32\n * ```\n *\n * https://www.db-fiddle.com/f/bmj7sAFhiPpFGNVAhBdi3Q/3\n */\nexports.bitLength = factory_1.makeOperator1(operator_type_1.OperatorType.BIT_LENGTH, \n/**\n * Should not return a value less than zero\n */\ntm.mysql.bigIntUnsigned(), type_hint_1.TypeHint.STRING);\n//# sourceMappingURL=bit-length.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Returns the length of the string, measured in characters.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_char-length\n * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-SQL\n * + https://www.sqlite.org/lang_corefunc.html#length\n * + https://dmitripavlutin.com/what-every-javascript-developer-should-know-about-unicode/#33-string-length\n *\n * -----\n *\n * + MySQL          : `CHAR_LENGTH(x)`\n *   + `CHAR_LENGTH('cafȩ́')` returns 6\n * + PostgreSQL     : `CHAR_LENGTH(x)`\n *   + `CHAR_LENGTH('cafȩ́')` returns 8\n * + SQLite         : `LENGTH(x)`\n *   + `LENGTH('cafȩ́')` returns 6\n *\n * -----\n *\n * Surrogate pairs may cause results to differ across databases.\n */\nexports.charLength = factory_1.makeOperator1(operator_type_1.OperatorType.CHAR_LENGTH, \n/**\n * Should not return a value less than zero\n */\ntm.mysql.bigIntUnsigned(), type_hint_1.TypeHint.STRING);\n//# sourceMappingURL=char-length.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Concatenate With Separator.\n * The first argument is the separator for the rest of the arguments.\n * The separator is added between the strings to be concatenated.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_concat-ws\n * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n *\n * -----\n *\n * + MySQL          : `CONCAT_WS(separator, x, ...)`\n *   + If the separator is `NULL`, the result is `NULL`\n *   + Ignores `NULL` arguments after the separator\n * + PostgreSQL     : `CONCAT_WS(separator, x, ...)`\n *   + If the separator is `NULL`, the result is `NULL`\n *   + Ignores `NULL` arguments after the separator\n * + SQLite         : None. Implement with user-defined function.\n */\nexports.concatWs = factory_1.makeOperator2ToN(operator_type_1.OperatorType.CONCAT_WS, tm.string(), type_hint_1.TypeHint.STRING);\n//# sourceMappingURL=concat-ws.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Returns the string that results from concatenating the arguments.\n * May have one or more arguments.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_concat\n * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n *\n * -----\n *\n * + MySQL          : `CONCAT(x, ...)` Returns `NULL` if any argument is `NULL`\n *   + MySQL actually treats `||` as the boolean `OR` operator.\n * + PostgreSQL     : `x || ... || ...` Returns `NULL` if any argument is `NULL`\n *   + PostgreSQL's `CONCAT(x, ...)` Ignores `NULL` arguments\n *     + This is different from MySQL's `CONCAT()`\n * + SQLite         : `x || ... || ...` Returns `NULL` if any argument is `NULL`\n *   + SQLite uses an operator, not a function, to concatenate strings\n *   + https://www.sqlite.org/lang_expr.html#collateop\n *\n * -----\n *\n * The SQL standard says,\n * > `<concatenation operator>` is an operator, `||`,\n * > that returns the character string made by joining its character string operands in the order given.\n *\n * MySQL actually treats `||` as the boolean `OR` operator.\n *\n * -----\n *\n * @see nullSafeConcat\n */\nexports.concat = factory_1.makeOperator1ToN(operator_type_1.OperatorType.CONCAT, tm.string(), type_hint_1.TypeHint.STRING);\n//# sourceMappingURL=concat.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst like_1 = require(\"./like\");\n//TODO-FEATURE Create a version using MySQL/PostgreSQL/SQLite queries\n//REGEXP_REPLACE(pattern, '(\\\\%|\\\\_)', '\\\\$1', 1, 0, 'm') or something\n/**\n * With `LIKE` you can use the following two wildcard characters in the pattern:\n *\n * + `%` matches any number of characters, even zero characters.\n * + `_` matches exactly one character.\n *\n * This function just prepends `escapeChar` to each of the above characters.\n * It also prepends `escapeChar` to itself.\n */\nfunction escapeLikePattern(pattern, escapeChar) {\n    like_1.assertValidLikeEscapeChar(escapeChar);\n    /**\n     * Escape occurrences of the `escapeChar`\n     */\n    pattern = pattern.split(escapeChar).join(escapeChar + escapeChar);\n    /**\n     * Escape wildcard characters\n     */\n    return pattern.replace(/(\\%|\\_)/g, s => escapeChar + s);\n}\nexports.escapeLikePattern = escapeLikePattern;\n//# sourceMappingURL=escape-like-pattern.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Takes a base-64 encoded string,\n * and returns the decoded result as a `BLOB/bytea`.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_from-base64\n * + https://www.postgresql.org/docs/7.4/functions-string.html#FUNCTIONS-STRING-OTHER\n *\n * -----\n *\n * + MySQL          : `FROM_BASE64(x)`\n *   + `FROM_BASE64('~')` === `NULL`\n * + PostgreSQL     : `DECODE(x, 'base64')`\n *   + `DECODE('~', 'base64')` throws an error\n * + SQLite         : None, implement with user-defined function `atob()`\n *   + `atob('~')` throws an error\n *\n * -----\n *\n * If the input is not a valid base-64 string, some databases throw an error.\n * Others return `NULL`.\n */\nexports.fromBase64 = factory_1.makeOperator1(operator_type_1.OperatorType.FROM_BASE64, tm.orNull(tm.instanceOfUint8Array()), type_hint_1.TypeHint.STRING);\n//# sourceMappingURL=from-base64.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Converts each byte of the input to two hexadecimal digits.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_hex\n * + https://www.postgresql.org/docs/7.4/functions-string.html#FUNCTIONS-STRING-OTHER\n * + https://www.sqlite.org/lang_corefunc.html#hex\n *\n * -----\n *\n * + MySQL          : `HEX(x)`\n * + PostgreSQL     : `ENCODE(x, 'hex')`\n * + SQLite         : `HEX(x)`\n */\nexports.hex = factory_1.makeOperator1(operator_type_1.OperatorType.HEX, tm.string(), type_hint_1.TypeHint.BUFFER);\n//# sourceMappingURL=hex.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Returns the position of the first occurrence of the substring in the target.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_instr\n * + https://www.sqlite.org/lang_corefunc.html#instr\n * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n *\n * -----\n *\n * + MySQL          : `INSTR(str, substr)`\n * + PostgreSQL     : `STRPOS(str, substr)`\n * + SQLite         : `INSTR(str, substr)`\n *\n * -----\n *\n * @param left - The target of the search\n * @param right - The substring to look for\n *\n * -----\n *\n * If the substring is not found, it returns `0`.\n * Remember that string indices are one-based; not zero-based.\n *\n * @see position\n */\nexports.inStr = factory_1.makeOperator2(operator_type_1.OperatorType.IN_STR, tm.mysql.bigIntUnsigned(), type_hint_1.TypeHint.STRING);\n//# sourceMappingURL=in-str.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./aggregate\"));\n__export(require(\"./ascii\"));\n__export(require(\"./bin\"));\n__export(require(\"./bit-length\"));\n__export(require(\"./char-length\"));\n__export(require(\"./concat-ws\"));\n__export(require(\"./concat\"));\n__export(require(\"./escape-like-pattern\"));\n__export(require(\"./from-base64\"));\n__export(require(\"./hex\"));\n__export(require(\"./in-str\"));\n__export(require(\"./l-pad\"));\n__export(require(\"./l-trim\"));\n__export(require(\"./like\"));\n__export(require(\"./lower\"));\n__export(require(\"./not-like\"));\n__export(require(\"./null-safe-concat\"));\n__export(require(\"./octet-length\"));\n__export(require(\"./position\"));\n//export * from \"./quote\";\n__export(require(\"./r-pad\"));\n__export(require(\"./r-trim\"));\n__export(require(\"./repeat\"));\n__export(require(\"./replace\"));\n__export(require(\"./reverse\"));\n__export(require(\"./to-base64\"));\n__export(require(\"./trim\"));\n__export(require(\"./unhex\"));\n__export(require(\"./upper\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nconst expr_1 = require(\"../../expr\");\nconst ast_1 = require(\"../../ast\");\n/**\n * Returns a string, left-padded to the specified length.\n *\n * If input string is longer than the specified length,\n * the return value is shortened to the specified length.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_lpad\n * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n *\n * -----\n *\n * + MySQL          : `LPAD(str, len, padstr)`\n *   + `LPAD('123', 4, '98')` === `'9123'`\n *   + `LPAD('123', 2, '98')` === `'12'`\n *   + `LPAD('123', 5, '')`   === `NULL`\n *   + `LPAD('123', 2, '')`   === `'12'`\n *   + `LPAD('123', -2, 'a')` === `NULL`\n * + PostgreSQL     : `LPAD(str, len, padstr)`\n *   + `LPAD('123', 4, '98')` === `'9123'`\n *   + `LPAD('123', 2, '98')` === `'12'`\n *   + `LPAD('123', 5, '')`   === `'123'`\n *   + `LPAD('123', 2, '')`   === `'12'`\n *   + `LPAD('123', -2, 'a')` === `''`\n * + SQLite         : None. Implement with user-defined function.\n *\n * -----\n *\n * If the desired length is negative, or padding string is empty,\n * the behaviour cannot be unified.\n *\n * MySQL seems to return `NULL`.\n *\n * -----\n *\n * @param left  - The string to pad\n * @param mid   - The desired length of the output\n * @param right - The padding\n *\n * @see lPad\n */\nexports.lPadUnsafe = factory_1.makeOperator3(operator_type_1.OperatorType.LPAD, tm.orNull(tm.string()), type_hint_1.TypeHint.STRING);\n/**\n * Returns a string, left-padded to the specified length.\n *\n * If input string is longer than the specified length,\n * the return value is shortened to the specified length.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_lpad\n * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n *\n * -----\n *\n * + MySQL          : `LPAD(str, len, padstr)`\n *   + `LPAD('123', 4, '98')` === `'9123'`\n *   + `LPAD('123', 2, '98')` === `'12'`\n * + PostgreSQL     : `LPAD(str, len, padstr)`\n *   + `LPAD('123', 4, '98')` === `'9123'`\n *   + `LPAD('123', 2, '98')` === `'12'`\n * + SQLite         : None. Implement with user-defined function.\n *\n * -----\n *\n * This function does not allow negative `desiredLength`, or empty `padding`.\n *\n * -----\n *\n * @param str           - The string to pad\n * @param desiredLength - The desired length of the output; must not be negative\n * @param padding       - The padding; must not be empty\n *\n * @see lPadUnsafe\n */\nfunction lPad(str, desiredLength, padding) {\n    desiredLength = tm.bigIntGtEq(tm.BigInt(0))(`desiredLength`, desiredLength);\n    padding = tm.stringLength({ min: 1 })(`padding`, padding);\n    return expr_1.ExprUtil.intersect(tm.string(), [str, desiredLength, padding], ast_1.OperatorNodeUtil.operatorNode3(operator_type_1.OperatorType.LPAD, [\n        built_in_expr_1.BuiltInExprUtil.buildAst(str),\n        built_in_expr_1.BuiltInExprUtil.buildAst(desiredLength),\n        built_in_expr_1.BuiltInExprUtil.buildAst(padding),\n    ], type_hint_1.TypeHint.STRING));\n}\nexports.lPad = lPad;\n//# sourceMappingURL=l-pad.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Returns the string with leading **space** characters removed.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_ltrim\n * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n * + https://www.sqlite.org/lang_corefunc.html#ltrim\n *\n * -----\n *\n * + MySQL          : `LTRIM(x)`\n * + PostgreSQL     : `LTRIM(x)/LTRIM(x, y)`\n * + SQLite         : `LTRIM(x)/LTRIM(x, y)`\n *\n * -----\n *\n * Does not remove other leading whitespace. Only removes leading spaces.\n */\nexports.lTrim = factory_1.makeOperator1(operator_type_1.OperatorType.LTRIM, tm.string(), type_hint_1.TypeHint.STRING);\n//# sourceMappingURL=l-trim.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst make_operator_3_1 = require(\"../factory/make-operator-3\");\nfunction assertValidLikeEscapeChar(escapeChar) {\n    tm.stringExactLength(1)(\"escapeChar\", escapeChar);\n}\nexports.assertValidLikeEscapeChar = assertValidLikeEscapeChar;\nconst likeEscapeImpl = make_operator_3_1.makeOperator3(operator_type_1.OperatorType.LIKE_ESCAPE, tm.mysql.boolean(), type_hint_1.TypeHint.STRING);\n/**\n * + The escape character must always be specified, with this unified library.\n * + The escape character must be of length `1`.\n *\n * -----\n *\n * Different databases, and collations, may cause the `LIKE` operator to handle case-sensitivity differently.\n *\n * -----\n *\n * This library requires the escape character to always be specified\n * because different databases have different defaults.\n *\n * Forcing an explicit escape character helps keep behaviour more consistent\n * across databases.\n *\n * Default escape characters per database,\n * + MySQL      : backslash (`\\`)\n * + PostgreSQL : backslash (`\\`)\n * + SQLite     : no-escape-character\n *\n * -----\n *\n * This library requires the escape character to have length `1` because\n * specifying the empty string has different behaviour on different databases,\n * + MySQL      : backslash (`\\`) (Seems impossible to have no-escape-character)\n * + PostgreSQL : no-escape-character\n * + SQLite     : throws error (Use `x LIKE y` to have no-escape-character)\n *\n * @param str - The target of the search\n * @param pattern - The pattern to search for, may use wildcard characters like `%` and `_`\n * @param escapeChar - The escape character to use on the `pattern`\n */\nfunction like(str, pattern, escapeChar) {\n    assertValidLikeEscapeChar(escapeChar);\n    return likeEscapeImpl(str, pattern, escapeChar);\n}\nexports.like = like;\n//# sourceMappingURL=like.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Returns the string with all characters changed to lowercase\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_lower\n * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-SQL\n * + https://www.sqlite.org/lang_corefunc.html#lower\n *\n * -----\n *\n * + MySQL          : `LOWER(x)`\n * + PostgreSQL     : `LOWER(x)`\n * + SQLite         : `LOWER(x)`\n */\nexports.lower = factory_1.makeOperator1(operator_type_1.OperatorType.LOWER, tm.string(), type_hint_1.TypeHint.STRING);\n//# sourceMappingURL=lower.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst make_operator_3_1 = require(\"../factory/make-operator-3\");\nconst like_1 = require(\"./like\");\nconst notLikeEscapeImpl = make_operator_3_1.makeOperator3(operator_type_1.OperatorType.NOT_LIKE_ESCAPE, tm.mysql.boolean(), type_hint_1.TypeHint.STRING);\n/**\n * + The escape character must always be specified, with this unified library.\n * + The escape character must be of length `1`.\n *\n * -----\n *\n * Different databases, and collations, may cause the `LIKE` operator to handle case-sensitivity differently.\n *\n * -----\n *\n * This library requires the escape character to always be specified\n * because different databases have different defaults.\n *\n * Forcing an explicit escape character helps keep behaviour more consistent\n * across databases.\n *\n * Default escape characters per database,\n * + MySQL      : backslash (`\\`)\n * + PostgreSQL : backslash (`\\`)\n * + SQLite     : no-escape-character\n *\n * -----\n *\n * This library requires the escape character to have length `1` because\n * specifying the empty string has different behaviour on different databases,\n * + MySQL      : backslash (`\\`) (Seems impossible to have no-escape-character)\n * + PostgreSQL : no-escape-character\n * + SQLite     : throws error (Use `x LIKE y` to have no-escape-character)\n *\n * @param str - The target of the search\n * @param pattern - The pattern to search for, may use wildcard characters like `%` and `_`\n * @param escapeChar - The escape character to use on the `pattern`\n */\nfunction notLike(str, pattern, escapeChar) {\n    like_1.assertValidLikeEscapeChar(escapeChar);\n    return notLikeEscapeImpl(str, pattern, escapeChar);\n}\nexports.notLike = notLike;\n//# sourceMappingURL=not-like.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Returns the string that results from concatenating the arguments.\n * May have one or more arguments.\n * `NULL` values are treated as empty strings.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_concat\n * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n *\n * -----\n *\n * + MySQL          : None. Emulate with `CONCAT(COALESCE(x, ''), ...)`\n * + PostgreSQL     : `CONCAT(x, ...)`\n *   + PostgreSQL's `CONCAT(x, ...)` Ignores `NULL` arguments\n *     + This is different from MySQL's `CONCAT()`\n * + SQLite         : `COALESCE(x, '') || ... || ...`\n *\n * -----\n *\n * The SQL standard says,\n * > `<concatenation operator>` is an operator, `||`,\n * > that returns the character string made by joining its character string operands in the order given.\n *\n * MySQL actually treats `||` as the boolean `OR` operator.\n *\n * -----\n *\n * @see concat\n */\nexports.nullSafeConcat = factory_1.makeOperator1ToN(operator_type_1.OperatorType.NULL_SAFE_CONCAT, tm.string(), type_hint_1.TypeHint.STRING);\n//# sourceMappingURL=null-safe-concat.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Returns the length of the string, measured in bytes.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_octet-length\n * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-SQL\n *\n * -----\n *\n * + MySQL          : `OCTET_LENGTH(x)`\n * + PostgreSQL     : `OCTET_LENGTH(x)`\n * + SQLite         : `LENGTH(CAST(x AS BLOB))`\n *\n * -----\n *\n * The character set of the string can affect the result of this function.\n * For example, on MySQL 5.7,\n * ```sql\n *  OCTET_LENGTH(CHAR(128 USING latin1))\n *  > 1\n *\n *  OCTET_LENGTH(CHAR(128 USING utf32))\n *  > 4\n * ```\n *\n * https://www.db-fiddle.com/f/bmj7sAFhiPpFGNVAhBdi3Q/4\n */\nexports.octetLength = factory_1.makeOperator1(operator_type_1.OperatorType.OCTET_LENGTH, \n/**\n * Should not return a value less than zero\n */\ntm.mysql.bigIntUnsigned(), type_hint_1.TypeHint.STRING);\n//# sourceMappingURL=octet-length.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Returns the position of the first occurrence of the substring in the target.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_position\n * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-SQL\n *\n * -----\n *\n * + MySQL          : `POSITION(substr IN str)`\n * + PostgreSQL     : `POSITION(substr IN str)`\n * + SQLite         : `INSTR(str, substr)`\n *\n * -----\n *\n * @param left  - The substring to look for\n * @param right - The target of the search\n *\n * -----\n *\n * If the substring is not found, it returns `0`.\n * Remember that string indices are one-based; not zero-based.\n *\n * @see inStr\n * @todo Remove `inStr()` and keep `position()`?\n */\nexports.position = factory_1.makeOperator2(operator_type_1.OperatorType.POSITION, tm.mysql.bigIntUnsigned(), type_hint_1.TypeHint.STRING);\n//# sourceMappingURL=position.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nconst expr_1 = require(\"../../expr\");\nconst ast_1 = require(\"../../ast\");\n/**\n * Returns a string, right-padded to the specified length.\n *\n * If input string is longer than the specified length,\n * the return value is shortened to the specified length.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_lpad\n * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n *\n * -----\n *\n * + MySQL          : `RPAD(str, len, padstr)`\n *   + `RPAD('123', 4, '98')` === `'1239'`\n *   + `RPAD('123', 2, '98')` === `'12'`\n *   + `RPAD('123', 5, '')`   === `NULL`\n *   + `RPAD('123', 2, '')`   === `'12'`\n *   + `RPAD('123', -2, 'a')` === `NULL`\n * + PostgreSQL     : `RPAD(str, len, padstr)`\n *   + `RPAD('123', 4, '98')` === `'1239'`\n *   + `RPAD('123', 2, '98')` === `'12'`\n *   + `RPAD('123', 5, '')`   === `'123'`\n *   + `RPAD('123', 2, '')`   === `'12'`\n *   + `RPAD('123', -2, 'a')` === `''`\n * + SQLite         : None. Implement with user-defined function.\n *\n * -----\n *\n * If the desired length is negative, or padding string is empty,\n * the behaviour cannot be unified.\n *\n * MySQL seems to return `NULL`.\n *\n * -----\n *\n * @param left  - The string to pad\n * @param mid   - The desired length of the output\n * @param right - The padding\n *\n * @see rPad\n */\nexports.rPadUnsafe = factory_1.makeOperator3(operator_type_1.OperatorType.RPAD, tm.orNull(tm.string()), type_hint_1.TypeHint.STRING);\n/**\n * Returns a string, right-padded to the specified length.\n *\n * If input string is longer than the specified length,\n * the return value is shortened to the specified length.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_rpad\n * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n *\n * -----\n *\n * + MySQL          : `RPAD(str, len, padstr)`\n *   + `RPAD('123', 4, '98')` === `'1239'`\n *   + `RPAD('123', 2, '98')` === `'12'`\n * + PostgreSQL     : `RPAD(str, len, padstr)`\n *   + `RPAD('123', 4, '98')` === `'1239'`\n *   + `RPAD('123', 2, '98')` === `'12'`\n * + SQLite         : None. Implement with user-defined function.\n *\n * -----\n *\n * This function does not allow negative `desiredLength`, or empty `padding`.\n *\n * -----\n *\n * @param str           - The string to pad\n * @param desiredLength - The desired length of the output; must not be negative\n * @param padding       - The padding; must not be empty\n *\n * @see rPadUnsafe\n */\nfunction rPad(str, desiredLength, padding) {\n    desiredLength = tm.bigIntGtEq(tm.BigInt(0))(`desiredLength`, desiredLength);\n    padding = tm.stringLength({ min: 1 })(`padding`, padding);\n    return expr_1.ExprUtil.intersect(tm.string(), [str, desiredLength, padding], ast_1.OperatorNodeUtil.operatorNode3(operator_type_1.OperatorType.RPAD, [\n        built_in_expr_1.BuiltInExprUtil.buildAst(str),\n        built_in_expr_1.BuiltInExprUtil.buildAst(desiredLength),\n        built_in_expr_1.BuiltInExprUtil.buildAst(padding),\n    ], type_hint_1.TypeHint.STRING));\n}\nexports.rPad = rPad;\n//# sourceMappingURL=r-pad.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Returns the string with trailing **space** characters removed.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_rtrim\n * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n * + https://www.sqlite.org/lang_corefunc.html#rtrim\n *\n * -----\n *\n * + MySQL          : `RTRIM(x)`\n * + PostgreSQL     : `RTRIM(x)/RTRIM(x, y)`\n * + SQLite         : `RTRIM(x)/RTRIM(x, y)`\n *\n * -----\n *\n * Does not remove other trailing whitespace. Only removes trailing spaces.\n */\nexports.rTrim = factory_1.makeOperator1(operator_type_1.OperatorType.RTRIM, tm.string(), type_hint_1.TypeHint.STRING);\n//# sourceMappingURL=r-trim.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Repeats a string the specified amount of times.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_repeat\n * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n *\n * -----\n *\n * + MySQL          : `REPEAT(x, count)`\n * + PostgreSQL     : `REPEAT(x, count)`\n * + SQLite         : None. Implement with user-defined function.\n *\n * -----\n *\n * If the specified amount is zero or less, it returns an empty string.\n *\n * -----\n *\n * @param left  - The string to repeat\n * @param right - The amount of times to repeat the string\n */\nexports.repeat = factory_1.makeOperator2(operator_type_1.OperatorType.REPEAT, tm.string(), type_hint_1.TypeHint.STRING);\n//# sourceMappingURL=repeat.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Returns the string `str`\n * with all occurrences of the string `from`\n * replaced by the string `to`.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_replace\n * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n * + https://www.sqlite.org/lang_corefunc.html#replace\n *\n * -----\n *\n * + MySQL          : `REPLACE(str, from, to)`\n * + PostgreSQL     : `REPLACE(str, from, to)`\n * + SQLite         : `REPLACE(str, from, to)`\n *\n * -----\n *\n * @param left  - The string to transform\n * @param mid   - The string to look for\n * @param right - The replacement string\n */\nexports.replace = factory_1.makeOperator3(operator_type_1.OperatorType.REPLACE, tm.string(), type_hint_1.TypeHint.STRING);\n//# sourceMappingURL=replace.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Returns the string with the order of the characters reversed.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_reverse\n * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n *\n * -----\n *\n * + MySQL          : `REVERSE(x)`\n * + PostgreSQL     : `REVERSE(x)`\n * + SQLite         : None. Implement with user-defined function.\n */\nexports.reverse = factory_1.makeOperator1(operator_type_1.OperatorType.REVERSE, tm.string(), type_hint_1.TypeHint.STRING);\n//# sourceMappingURL=reverse.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Converts the argument to base-64 encoded form.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_to-base64\n * + https://www.postgresql.org/docs/7.4/functions-string.html#FUNCTIONS-STRING-OTHER\n *\n * -----\n *\n * + MySQL          : `TO_BASE64(x)`\n * + PostgreSQL     : `ENCODE(x, 'base64')`\n * + SQLite         : None, implement with user-defined function `btoa()`\n */\nexports.toBase64 = factory_1.makeOperator1(operator_type_1.OperatorType.TO_BASE64, tm.string(), type_hint_1.TypeHint.STRING);\n//# sourceMappingURL=to-base64.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Returns the string with leading and trailing **space** characters removed.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_trim\n * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n * + https://www.sqlite.org/lang_corefunc.html#trim\n *\n * -----\n *\n * + MySQL          : `TRIM(x)`\n * + PostgreSQL     : `TRIM(x)`\n * + SQLite         : `TRIM(x)`\n *\n * -----\n *\n * Does not remove other leading and trailing whitespace.\n * Only removes leading and trailing spaces.\n */\nexports.trim = factory_1.makeOperator1(operator_type_1.OperatorType.TRIM, tm.string(), type_hint_1.TypeHint.STRING);\n//# sourceMappingURL=trim.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Takes a hex encoded string,\n * and returns the decoded result as a `BLOB/bytea`.\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_unhex\n * + https://www.postgresql.org/docs/7.4/functions-string.html#FUNCTIONS-STRING-OTHER\n *\n * -----\n *\n * + MySQL          : `UNHEX(x)`\n *   + `UNHEX('~')` === `NULL`\n * + PostgreSQL     : `DECODE(x, 'hex')`\n *   + `DECODE('~', 'hex')` throws an error\n * + SQLite         : None. Implement with user-defined function.\n *\n * -----\n *\n * If the input is not a valid hex string, some databases throw an error.\n * Others return `NULL`.\n */\nexports.unhex = factory_1.makeOperator1(operator_type_1.OperatorType.UNHEX, tm.orNull(tm.instanceOfUint8Array()), type_hint_1.TypeHint.STRING);\n//# sourceMappingURL=unhex.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst factory_1 = require(\"../factory\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst type_hint_1 = require(\"../../type-hint\");\n/**\n * Returns the string with all characters changed to uppercase\n *\n * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_upper\n * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-SQL\n * + https://www.sqlite.org/lang_corefunc.html#upper\n *\n * -----\n *\n * + MySQL          : `UPPER(x)`\n * + PostgreSQL     : `UPPER(x)`\n * + SQLite         : `UPPER(x)`\n */\nexports.upper = factory_1.makeOperator1(operator_type_1.OperatorType.UPPER, tm.string(), type_hint_1.TypeHint.STRING);\n//# sourceMappingURL=upper.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst query_base_1 = require(\"../../query-base\");\nconst expr_1 = require(\"../../expr\");\nconst util_1 = require(\"../../ast/operator-node/util\");\nconst operator_type_1 = require(\"../../operator-type\");\nconst used_ref_1 = require(\"../../used-ref\");\nconst built_in_expr_1 = require(\"../../built-in-expr\");\nfunction exists(query) {\n    if (!query_base_1.QueryBaseUtil.isAfterFromClause(query) && !query_base_1.QueryBaseUtil.isAfterSelectClause(query)) {\n        throw new Error(`Query must be after FROM/SELECT clause`);\n    }\n    /**\n     * Hack for MySQL 5.7 and SQLite < 3.30 thinking the following is `true`,\n     * ```sql\n     *  EXISTS(SELECT 'hello' LIMIT 0);\n     * ```\n     */\n    if (query.compoundQueryClause == undefined) {\n        if ((query.compoundQueryLimitClause != undefined &&\n            Number(query.compoundQueryLimitClause.maxRowCount) == 0) ||\n            (query.limitClause != undefined &&\n                Number(query.limitClause.maxRowCount) == 0)) {\n            return expr_1.expr({\n                mapper: tm.mysql.boolean(),\n                usedRef: used_ref_1.UsedRefUtil.fromFromClause(query.fromClause),\n                isAggregate: false,\n            }, built_in_expr_1.BuiltInExprUtil.buildAst(false));\n        }\n    }\n    else {\n        if (query.compoundQueryLimitClause != undefined &&\n            Number(query.compoundQueryLimitClause.maxRowCount) == 0) {\n            return expr_1.expr({\n                mapper: tm.mysql.boolean(),\n                usedRef: used_ref_1.UsedRefUtil.fromFromClause(query.fromClause),\n                isAggregate: false,\n            }, built_in_expr_1.BuiltInExprUtil.buildAst(false));\n        }\n    }\n    return expr_1.expr({\n        mapper: tm.mysql.boolean(),\n        usedRef: used_ref_1.UsedRefUtil.fromFromClause(query.fromClause),\n        isAggregate: false,\n    }, util_1.operatorNode1(operator_type_1.OperatorType.EXISTS, [query], undefined));\n}\nexports.exists = exists;\n//# sourceMappingURL=exists.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./exists\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ExprSelectItemUtil = require(\"./util\");\nexports.ExprSelectItemUtil = ExprSelectItemUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./operation\"));\n__export(require(\"./predicate\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./with-type\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction withType({ tableAlias, alias, usedRef, unaliasedAst, isAggregate, }, newMapper) {\n    const result = {\n        mapper: newMapper,\n        tableAlias,\n        alias,\n        usedRef,\n        isAggregate,\n        unaliasedAst,\n    };\n    return result;\n}\nexports.withType = withType;\n//# sourceMappingURL=with-type.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./is-expr-select-item\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst type_util_1 = require(\"../../../type-util\");\n//import {UsedRefUtil} from \"../../../used-ref\";\n//import {AstUtil} from \"../../../ast\";\n/**\n * Does not actually check,\n * + `x.usedRef` is `IUsedRef`\n * + `x.unaliasedAst` is `Ast`\n *\n * @todo Consider adding checks for increased type safety.\n */\nfunction isExprSelectItem(x) {\n    if (!type_util_1.isObjectWithOwnEnumerableKeys()(x, [\n        \"mapper\",\n        \"tableAlias\",\n        \"alias\",\n        \"usedRef\",\n        \"isAggregate\",\n        \"unaliasedAst\",\n    ])) {\n        return false;\n    }\n    return ((typeof x.mapper == \"function\") &&\n        (typeof x.tableAlias == \"string\") &&\n        (typeof x.alias == \"string\") //&&\n    //UsedRefUtil.isUsedRef(x.usedRef) &&\n    //(typeof x.isAggregate == \"boolean\") &&\n    //AstUtil.isAst(x.ast)\n    );\n}\nexports.isExprSelectItem = isExprSelectItem;\n//# sourceMappingURL=is-expr-select-item.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ast_1 = require(\"../ast\");\nconst ExprUtil = require(\"./util\");\n/**\n * https://github.com/microsoft/TypeScript/issues/32707#issuecomment-518347966\n *\n * This hack should only really be reserved for types that are more likely\n * to trigger max depth/max count errors.\n */\nclass ExprImpl {\n    constructor(data, ast) {\n        this.mapper = data.mapper;\n        this.usedRef = data.usedRef;\n        this.isAggregate = data.isAggregate;\n        //Gotta' play it safe.\n        //We want to preserve the order of operations.\n        this.ast = ast_1.parentheses(ast);\n    }\n    /**\n     * If you are running into \"max instantiation depth\" errors,\n     * consider adding explicit `TableExpr<>` type annotations.\n     *\n     * If that doesn't help,\n     * consider using `ExprUtil.as()` instead.\n     *\n     * Also, consider reading this to understand my frustration,\n     * https://github.com/microsoft/TypeScript/issues/29511\n     *\n     * @param alias\n     */\n    as(alias) {\n        return ExprUtil.as(this, alias);\n    }\n    /**\n     * ```sql\n     * ORDER BY\n     *  RAND() ASC\n     * ```\n     */\n    asc() {\n        return ExprUtil.asc(this);\n    }\n    /**\n     * ```sql\n     * ORDER BY\n     *  RAND() DESC\n     * ```\n     */\n    desc() {\n        return ExprUtil.desc(this);\n    }\n    /**\n     * ```sql\n     * ORDER BY\n     *  (myTable.myColumn IS NOT NULL) ASC,\n     *  RAND() DESC\n     * ```\n     */\n    sort(sortDirection) {\n        return ExprUtil.sort(this, sortDirection);\n    }\n}\nexports.ExprImpl = ExprImpl;\nfunction expr(data, ast) {\n    return new ExprImpl(data, ast);\n}\nexports.expr = expr;\n//# sourceMappingURL=expr-impl.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./expr-impl\"));\nconst ExprUtil = require(\"./util\");\nexports.ExprUtil = ExprUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst expr_impl_1 = require(\"../../expr-impl\");\nconst built_in_expr_1 = require(\"../../../built-in-expr\");\nfunction fromBuiltInExpr(builtInExpr) {\n    if (builtInExpr instanceof expr_impl_1.ExprImpl) {\n        return builtInExpr;\n    }\n    const mapper = built_in_expr_1.BuiltInExprUtil.mapper(builtInExpr);\n    const usedRef = built_in_expr_1.BuiltInExprUtil.usedRef(builtInExpr);\n    const isAggregate = built_in_expr_1.BuiltInExprUtil.isAggregate(builtInExpr);\n    const ast = built_in_expr_1.BuiltInExprUtil.buildAst(builtInExpr);\n    return expr_impl_1.expr({\n        mapper,\n        usedRef,\n        isAggregate,\n    }, ast);\n}\nexports.fromBuiltInExpr = fromBuiltInExpr;\nfunction fromRawExprNoUsedRefInput(mapper, value) {\n    if (built_in_expr_1.BuiltInExprUtil.isAnyNonValueExpr(value)) {\n        /**\n         * Cannot map a `NonValueExpr`\n         */\n        return fromBuiltInExpr(value);\n    }\n    else {\n        return fromBuiltInExpr(built_in_expr_1.BuiltInExprUtil.fromValueExpr(mapper, value));\n    }\n}\nexports.fromRawExprNoUsedRefInput = fromRawExprNoUsedRefInput;\n//# sourceMappingURL=from-built-in-expr.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./from-built-in-expr\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./constructor\"));\n__export(require(\"./operation\"));\n__export(require(\"./predicate\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_in_expr_1 = require(\"../../../built-in-expr\");\nconst expr_impl_1 = require(\"../../expr-impl\");\nfunction aggregateIntersect(mapper, args, ast) {\n    /**\n     * @todo Set the `name` parameter?\n     */\n    built_in_expr_1.BuiltInExprUtil.assertAllNonAggregate(``, args);\n    return expr_impl_1.expr({\n        mapper,\n        usedRef: built_in_expr_1.BuiltInExprUtil.intersectUsedRef(...args),\n        isAggregate: true,\n    }, ast);\n}\nexports.aggregateIntersect = aggregateIntersect;\n//# sourceMappingURL=aggregate-intersect.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../../../constants\");\nconst aliased_expr_1 = require(\"../../../aliased-expr\");\nfunction as(expr, alias) {\n    const result = new aliased_expr_1.AliasedExpr({\n        mapper: expr.mapper,\n        tableAlias: constants_1.ALIASED,\n        alias,\n        usedRef: expr.usedRef,\n        isAggregate: expr.isAggregate,\n    }, expr.ast);\n    return result;\n}\nexports.as = as;\n//# sourceMappingURL=as.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./aggregate-intersect\"));\n__export(require(\"./as\"));\n__export(require(\"./intersect\"));\n__export(require(\"./sort\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_in_expr_1 = require(\"../../../built-in-expr\");\nconst expr_impl_1 = require(\"../../expr-impl\");\nfunction intersect(mapper, args, ast) {\n    return expr_impl_1.expr({\n        mapper,\n        usedRef: built_in_expr_1.BuiltInExprUtil.intersectUsedRef(...args),\n        isAggregate: args.some(built_in_expr_1.BuiltInExprUtil.isAggregate),\n    }, ast);\n}\nexports.intersect = intersect;\n//# sourceMappingURL=intersect.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sort_direction_1 = require(\"../../../sort-direction\");\nfunction asc(expr) {\n    return [expr, sort_direction_1.SortDirection.ASC];\n}\nexports.asc = asc;\nfunction desc(expr) {\n    return [expr, sort_direction_1.SortDirection.DESC];\n}\nexports.desc = desc;\nfunction sort(expr, sortDirection) {\n    return [expr, sortDirection];\n}\nexports.sort = sort;\n//# sourceMappingURL=sort.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./is-expr\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst type_util_1 = require(\"../../../type-util\");\n//import {UsedRefUtil} from \"../../../used-ref\";\n//import {AstUtil} from \"../../../ast\";\n/**\n * Does not actually check,\n * + `x.usedRef` is `IUsedRef`\n * + `x.ast` is `Ast`\n *\n * @todo Consider adding checks for increased type safety.\n */\nfunction isExpr(x) {\n    if (!type_util_1.isObjectWithOwnEnumerableKeys()(x, [\n        \"mapper\",\n        \"usedRef\",\n        \"isAggregate\",\n        \"ast\"\n    ])) {\n        return false;\n    }\n    return ((typeof x.mapper == \"function\") //&&\n    //UsedRefUtil.isUsedRef(x.usedRef) &&\n    //AstUtil.isAst(x.ast) &&\n    //(typeof x.isAggregate == \"boolean\")\n    );\n}\nexports.isExpr = isExpr;\n//# sourceMappingURL=is-expr.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst TokenType_1 = require(\"./TokenType\");\nconst Indentation_1 = require(\"./Indentation\");\nconst InlineBlock_1 = require(\"./InlineBlock\");\nconst Params_1 = require(\"./Params\");\n/* eslint-disable local/no-method */\nclass Formatter {\n    /**\n     * @param {Object} cfg\n     *   @param {Object} cfg.indent\n     *   @param {Object} cfg.params\n     * @param {Tokenizer} tokenizer\n     */\n    constructor(cfg, tokenizer) {\n        this.cfg = (cfg == undefined) ?\n            {} :\n            cfg;\n        this.indentation = new Indentation_1.Indentation(this.cfg.indent);\n        this.inlineBlock = new InlineBlock_1.InlineBlock();\n        this.params = new Params_1.Params(this.cfg.params);\n        this.tokenizer = tokenizer;\n        this.previousReservedWord = undefined;\n        this.tokens = [];\n        this.index = 0;\n    }\n    /**\n     * Formats whitespaces in a SQL string to make it easier to read.\n     *\n     * @param {String} query The SQL query string\n     * @return {String} formatted query\n     */\n    format(query) {\n        this.tokens = this.tokenizer.tokenize(query);\n        const formattedQuery = this.getFormattedQueryFromTokens();\n        return formattedQuery.trim();\n    }\n    getFormattedQueryFromTokens() {\n        let formattedQuery = \"\";\n        this.tokens.forEach((token, index) => {\n            this.index = index;\n            if (token.type === TokenType_1.TokenType.WHITESPACE) {\n                // ignore (we do our own whitespace formatting)\n            }\n            else if (token.type === TokenType_1.TokenType.LINE_COMMENT) {\n                formattedQuery = this.formatLineComment(token, formattedQuery);\n            }\n            else if (token.type === TokenType_1.TokenType.BLOCK_COMMENT) {\n                formattedQuery = this.formatBlockComment(token, formattedQuery);\n            }\n            else if (token.type === TokenType_1.TokenType.RESERVED_TOPLEVEL) {\n                formattedQuery = this.formatToplevelReservedWord(token, formattedQuery);\n                this.previousReservedWord = token;\n            }\n            else if (token.type === TokenType_1.TokenType.RESERVED_NEWLINE) {\n                formattedQuery = this.formatNewlineReservedWord(token, formattedQuery);\n                this.previousReservedWord = token;\n            }\n            else if (token.type === TokenType_1.TokenType.RESERVED_PRE_NEWLINE) {\n                formattedQuery = this.formatPreNewlineReservedWord(token, formattedQuery);\n                this.previousReservedWord = token;\n            }\n            else if (token.type === TokenType_1.TokenType.RESERVED) {\n                formattedQuery = this.formatWithSpaces(token, formattedQuery);\n                this.previousReservedWord = token;\n            }\n            else if (token.type === TokenType_1.TokenType.OPEN_PAREN) {\n                formattedQuery = this.formatOpeningParentheses(token, formattedQuery);\n            }\n            else if (token.type === TokenType_1.TokenType.CLOSE_PAREN) {\n                formattedQuery = this.formatClosingParentheses(token, formattedQuery);\n            }\n            else if (token.type === TokenType_1.TokenType.PLACEHOLDER) {\n                formattedQuery = this.formatPlaceholder(token, formattedQuery);\n            }\n            else if (token.value === \",\") {\n                formattedQuery = this.formatComma(token, formattedQuery);\n            }\n            else if (token.value === \":\") {\n                formattedQuery = this.formatWithSpaceAfter(token, formattedQuery);\n            }\n            else if (token.value === \".\" || token.value === \";\") {\n                formattedQuery = this.formatWithoutSpaces(token, formattedQuery);\n            }\n            else {\n                formattedQuery = this.formatWithSpaces(token, formattedQuery);\n            }\n        });\n        return formattedQuery;\n    }\n    formatLineComment(token, query) {\n        return this.addNewline(query + token.value);\n    }\n    formatBlockComment(token, query) {\n        return this.addNewline(this.addNewline(query) + this.indentComment(token.value));\n    }\n    indentComment(comment) {\n        return comment.replace(/\\n/g, \"\\n\" + this.indentation.getIndent());\n    }\n    formatToplevelReservedWord(token, query) {\n        this.indentation.decreaseTopLevel();\n        query = this.addNewline(query);\n        this.indentation.increaseToplevel();\n        query += this.equalizeWhitespace(token.value);\n        return this.addNewline(query);\n    }\n    formatNewlineReservedWord(token, query) {\n        //Different from original implementation. I think this looks nicer.\n        if (query.length > 0 && !query.endsWith(\" \")) {\n            query += \" \";\n        }\n        return this.addNewline(query + this.equalizeWhitespace(token.value));\n    }\n    formatPreNewlineReservedWord(token, query) {\n        //The original formatNewlineReservedWord() implementation\n        //Useful for WHEN clause of CASE\n        return this.addNewline(query) + this.equalizeWhitespace(token.value) + \" \";\n    }\n    // Replace any sequence of whitespace characters with single space\n    equalizeWhitespace(string) {\n        return string.replace(/\\s+/g, \" \");\n    }\n    // Opening parentheses increase the block indent level and start a new line\n    formatOpeningParentheses(token, query) {\n        // Take out the preceding space unless there was whitespace there in the original query\n        // or another opening parens or line comment\n        const preserveWhitespaceFor = [\n            TokenType_1.TokenType.WHITESPACE,\n            TokenType_1.TokenType.OPEN_PAREN,\n            TokenType_1.TokenType.LINE_COMMENT,\n        ];\n        if (!this.hasPreviousToken() || !preserveWhitespaceFor.includes(this.previousToken().type)) {\n            query = query.trimRight();\n        }\n        query += token.value;\n        this.inlineBlock.beginIfPossible(this.tokens, this.index);\n        if (!this.inlineBlock.isActive()) {\n            this.indentation.increaseBlockLevel();\n            query = this.addNewline(query);\n        }\n        return query;\n    }\n    // Closing parentheses decrease the block indent level\n    formatClosingParentheses(token, query) {\n        if (this.inlineBlock.isActive()) {\n            this.inlineBlock.end();\n            return this.formatWithSpaceAfter(token, query);\n        }\n        else {\n            this.indentation.decreaseBlockLevel();\n            return this.formatWithSpaces(token, this.addNewline(query));\n        }\n    }\n    formatPlaceholder(token, query) {\n        return query + this.params.get(token) + \" \";\n    }\n    // Commas start a new line (unless within inline parentheses or SQL \"LIMIT\" clause)\n    formatComma(token, query) {\n        query = this.trimTrailingWhitespace(query) + token.value + \" \";\n        if (this.inlineBlock.isActive()) {\n            return query;\n        }\n        else if (this.previousReservedWord != undefined && /^LIMIT$/i.test(this.previousReservedWord.value)) {\n            return query;\n        }\n        else {\n            return this.addNewline(query);\n        }\n    }\n    formatWithSpaceAfter(token, query) {\n        return this.trimTrailingWhitespace(query) + token.value + \" \";\n    }\n    formatWithoutSpaces(token, query) {\n        return this.trimTrailingWhitespace(query) + token.value;\n    }\n    formatWithSpaces(token, query) {\n        if (token.value == \"HACKED_AND_NO_NEW_LINE\") {\n            return query + \"AND\" + \" \";\n        }\n        return query + token.value + \" \";\n    }\n    addNewline(query) {\n        return query.trimRight() + \"\\n\" + this.indentation.getIndent();\n    }\n    trimTrailingWhitespace(query) {\n        if (this.hasPreviousNonWhitespaceToken() && this.previousNonWhitespaceToken().type === TokenType_1.TokenType.LINE_COMMENT) {\n            return query.trimRight() + \"\\n\";\n        }\n        else {\n            return query.trimRight();\n        }\n    }\n    hasPreviousNonWhitespaceToken() {\n        let n = 1;\n        while (this.hasPreviousToken(n) && this.previousToken(n).type === TokenType_1.TokenType.WHITESPACE) {\n            n++;\n        }\n        return this.hasPreviousToken(n);\n    }\n    previousNonWhitespaceToken() {\n        let n = 1;\n        while (this.previousToken(n).type === TokenType_1.TokenType.WHITESPACE) {\n            n++;\n        }\n        return this.previousToken(n);\n    }\n    hasPreviousToken(offset = 1) {\n        return (this.index - offset) >= 0;\n    }\n    previousToken(offset = 1) {\n        const result = this.tokens[this.index - offset];\n        if (result == undefined) {\n            throw new Error(`No previous token. index ${this.index}, offset ${offset}`);\n        }\n        return result;\n    }\n}\nexports.Formatter = Formatter;\n//# sourceMappingURL=Formatter.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction last(arr) {\n    if (arr.length == 0) {\n        return undefined;\n    }\n    else {\n        return arr[arr.length - 1];\n    }\n}\n//Poor man's enum?\nconst INDENT_TYPE_TOP_LEVEL = \"top-level\";\nconst INDENT_TYPE_BLOCK_LEVEL = \"block-level\";\n/* eslint-disable local/no-method */\n/**\n * Manages indentation levels.\n *\n * There are two types of indentation levels:\n *\n * - BLOCK_LEVEL : increased by open-parenthesis\n * - TOP_LEVEL : increased by RESERVED_TOPLEVEL words\n */\nclass Indentation {\n    /**\n     * @param {String} indent Indent value, default is \"  \" (2 spaces)\n     */\n    constructor(indent) {\n        this.indent = (indent == undefined) ? \"  \" : indent;\n        this.indentTypes = [];\n    }\n    /**\n     * Returns current indentation string.\n     * @return {String}\n     */\n    getIndent() {\n        return this.indent.repeat(this.indentTypes.length);\n    }\n    /**\n     * Increases indentation by one top-level indent.\n     */\n    increaseToplevel() {\n        this.indentTypes.push(INDENT_TYPE_TOP_LEVEL);\n    }\n    /**\n     * Increases indentation by one block-level indent.\n     */\n    increaseBlockLevel() {\n        this.indentTypes.push(INDENT_TYPE_BLOCK_LEVEL);\n    }\n    /**\n     * Decreases indentation by one top-level indent.\n     * Does nothing when the previous indent is not top-level.\n     */\n    decreaseTopLevel() {\n        if (last(this.indentTypes) === INDENT_TYPE_TOP_LEVEL) {\n            this.indentTypes.pop();\n        }\n    }\n    /**\n     * Decreases indentation by one block-level indent.\n     * If there are top-level indents within the block-level indent,\n     * throws away these as well.\n     */\n    decreaseBlockLevel() {\n        while (this.indentTypes.length > 0) {\n            const type = this.indentTypes.pop();\n            if (type !== INDENT_TYPE_TOP_LEVEL) {\n                break;\n            }\n        }\n    }\n}\nexports.Indentation = Indentation;\n//# sourceMappingURL=Indentation.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst TokenType_1 = require(\"./TokenType\");\nconst INLINE_MAX_LENGTH = 50;\n/* eslint-disable local/no-method */\n/**\n * Bookkeeper for inline blocks.\n *\n * Inline blocks are parenthized expressions that are shorter than INLINE_MAX_LENGTH.\n * These blocks are formatted on a single line, unlike longer parenthized\n * expressions where open-parenthesis causes newline and increase of indentation.\n */\nclass InlineBlock {\n    constructor() {\n        this.level = 0;\n    }\n    /**\n     * Begins inline block when lookahead through upcoming tokens determines\n     * that the block would be smaller than INLINE_MAX_LENGTH.\n     * @param  {Object[]} tokens Array of all tokens\n     * @param  {Number} index Current token position\n     */\n    beginIfPossible(tokens, index) {\n        if (this.level === 0 && this.isInlineBlock(tokens, index)) {\n            this.level = 1;\n        }\n        else if (this.level > 0) {\n            this.level++;\n        }\n        else {\n            this.level = 0;\n        }\n    }\n    /**\n     * Finishes current inline block.\n     * There might be several nested ones.\n     */\n    end() {\n        this.level--;\n    }\n    /**\n     * True when inside an inline block\n     * @return {Boolean}\n     */\n    isActive() {\n        return this.level > 0;\n    }\n    // Check if this should be an inline parentheses block\n    // Examples are \"NOW()\", \"COUNT(*)\", \"int(10)\", key(`somecolumn`), DECIMAL(7,2)\n    isInlineBlock(tokens, index) {\n        let length = 0;\n        let level = 0;\n        for (let i = index; i < tokens.length; i++) {\n            const token = tokens[i];\n            length += token.value.length;\n            // Overran max length\n            if (length > INLINE_MAX_LENGTH) {\n                return false;\n            }\n            if (token.type === TokenType_1.TokenType.OPEN_PAREN) {\n                level++;\n            }\n            else if (token.type === TokenType_1.TokenType.CLOSE_PAREN) {\n                level--;\n                if (level === 0) {\n                    return true;\n                }\n            }\n            if (this.isForbiddenToken(token)) {\n                return false;\n            }\n        }\n        return false;\n    }\n    // Reserved words that cause newlines, comments and semicolons\n    // are not allowed inside inline parentheses block\n    isForbiddenToken({ type, value }) {\n        return type === TokenType_1.TokenType.RESERVED_TOPLEVEL ||\n            type === TokenType_1.TokenType.RESERVED_NEWLINE ||\n            type === TokenType_1.TokenType.RESERVED_PRE_NEWLINE ||\n            //TokenType.COMMENT does not exist.\n            //This is effectively, type === undefined\n            //This is why plain JS sucks.\n            //type === TokenType.COMMENT ||\n            type === TokenType_1.TokenType.BLOCK_COMMENT ||\n            value === \";\";\n    }\n}\nexports.InlineBlock = InlineBlock;\n//# sourceMappingURL=InlineBlock.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* eslint-disable local/no-method */\n/**\n * Handles placeholder replacement with given params.\n */\nclass Params {\n    /**\n     * @param {Object} params\n     */\n    constructor(params) {\n        this.params = params;\n        this.index = 0;\n    }\n    /**\n     * Returns param value that matches given placeholder with param key.\n     * @param {Object} token\n     * @param {String} token.key Placeholder key\n     * @param {String} token.value Placeholder value\n     * @return {String} param or token.value when params are missing\n     */\n    get({ key, value }) {\n        if (this.params == undefined) {\n            return value;\n        }\n        if (key != undefined) {\n            if (Array.isArray(this.params)) {\n                throw new Error(`Cannot use array params with named placeholders`);\n            }\n            else {\n                return this.params[key];\n            }\n        }\n        else {\n            if (Array.isArray(this.params)) {\n                return this.params[this.index++];\n            }\n            else {\n                throw new Error(`Cannot use object params with index placeholders`);\n            }\n        }\n    }\n}\nexports.Params = Params;\n//# sourceMappingURL=Params.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Formatter_1 = require(\"./Formatter\");\nconst Tokenizer_1 = require(\"./Tokenizer\");\nconst reservedWords = [\n    \"ACCESSIBLE\", \"ACTION\", \"AGAINST\", \"AGGREGATE\", \"ALGORITHM\", \"ALL\", \"ALTER\", \"ANALYSE\", \"ANALYZE\", \"AS\", \"ASC\", \"AUTOCOMMIT\",\n    \"AUTO_INCREMENT\",\n    \"BACKUP\", \"BEGIN\", \"BETWEEN\", \"BINLOG\", \"BOTH\",\n    \"CASCADE\", \"CASE\", \"CHANGE\", \"CHANGED\", \"CHARACTER SET\", \"CHARSET\", \"CHECK\", \"CHECKSUM\", \"COLLATE\", \"COLLATION\", \"COLUMN\", \"COLUMNS\",\n    \"COMMENT\", \"COMMIT\", \"COMMITTED\", \"COMPRESSED\", \"CONCURRENT\", \"CONSTRAINT\", \"CONTAINS\", \"CONVERT\", \"CREATE\", \"CROSS\",\n    \"CURRENT_TIMESTAMP\",\n    \"DATABASE\", \"DATABASES\", \"DAY\", \"DAY_HOUR\", \"DAY_MINUTE\", \"DAY_SECOND\", \"DEFAULT\", \"DEFINER\", \"DELAYED\", \"DELETE\", \"DESC\", \"DESCRIBE\",\n    \"DETERMINISTIC\", \"DISTINCT\", \"DISTINCTROW\", \"DIV\", \"DO\", \"DROP\", \"DUMPFILE\", \"DUPLICATE\", \"DYNAMIC\",\n    \"ENCLOSED\", \"END\", \"ENGINE\", \"ENGINES\", \"ENGINE_TYPE\", \"ESCAPE\", \"ESCAPED\", \"EVENTS\", \"EXEC\", \"EXECUTE\", \"EXISTS\", \"EXPLAIN\",\n    \"EXTENDED\",\n    \"FAST\", \"FETCH\", \"FIELDS\", \"FILE\", \"FIRST\", \"FIXED\", \"FLUSH\", \"FOR\", \"FORCE\", \"FOREIGN\", \"FULL\", \"FULLTEXT\", \"FUNCTION\",\n    \"GLOBAL\", \"GRANT\", \"GRANTS\", \"GROUP_CONCAT\",\n    \"HEAP\", \"HIGH_PRIORITY\", \"HOSTS\", \"HOUR\", \"HOUR_MINUTE\", \"HOUR_SECOND\",\n    \"IDENTIFIED\", \"IF\", \"IFNULL\", \"IGNORE\", \"IN\", \"INDEX\", \"INDEXES\", \"INFILE\", \"INSERT\", \"INSERT_ID\", \"INSERT_METHOD\", \"INTERVAL\",\n    \"INTO\", \"INVOKER\", \"IS\", \"ISOLATION\",\n    \"KEY\", \"KEYS\", \"KILL\",\n    \"LAST_INSERT_ID\", \"LEADING\", \"LEVEL\", \"LIKE\", \"LINEAR\", \"LINES\", \"LOAD\", \"LOCAL\", \"LOCK\", \"LOCKS\", \"LOGS\", \"LOW_PRIORITY\",\n    \"MARIA\", \"MASTER\", \"MASTER_CONNECT_RETRY\", \"MASTER_HOST\", \"MASTER_LOG_FILE\", \"MATCH\", \"MAX_CONNECTIONS_PER_HOUR\",\n    \"MAX_QUERIES_PER_HOUR\", \"MAX_ROWS\", \"MAX_UPDATES_PER_HOUR\", \"MAX_USER_CONNECTIONS\", \"MEDIUM\", \"MERGE\", \"MINUTE\", \"MINUTE_SECOND\",\n    \"MIN_ROWS\", \"MODE\", \"MODIFY\", \"MONTH\", \"MRG_MYISAM\", \"MYISAM\",\n    \"NAMES\", \"NATURAL\", \"NOT\", \"NOW()\", \"NULL\",\n    \"ON DELETE\", \"ON UPDATE\", \"ONLY\", \"OPEN\", \"OPTIMIZE\", \"OPTION\", \"OPTIONALLY\", \"OUTFILE\",\n    \"PACK_KEYS\", \"PAGE\", \"PARTIAL\", \"PARTITION\", \"PARTITIONS\", \"PASSWORD\", \"PRIMARY\", \"PRIVILEGES\", \"PROCEDURE\", \"PROCESS\", \"PROCESSLIST\",\n    \"PURGE\",\n    \"QUICK\",\n    \"RAID0\", \"RAID_CHUNKS\", \"RAID_CHUNKSIZE\", \"RAID_TYPE\", \"RANGE\", \"READ\", \"READ_ONLY\", \"READ_WRITE\", \"REFERENCES\", \"REGEXP\", \"RELOAD\",\n    \"RENAME\", \"REPAIR\", \"REPEATABLE\", \"REPLACE\", \"REPLICATION\", \"RESET\", \"RESTORE\", \"RESTRICT\", \"RETURN\", \"RETURNS\", \"REVOKE\", \"RLIKE\",\n    \"ROLLBACK\", \"ROW\", \"ROWS\", \"ROW_FORMAT\",\n    \"SECOND\", \"SECURITY\", \"SEPARATOR\", \"SERIALIZABLE\", \"SESSION\", \"SHARE\", \"SHOW\", \"SHUTDOWN\", \"SLAVE\", \"SONAME\", \"SOUNDS\", \"SQL\",\n    \"SQL_AUTO_IS_NULL\", \"SQL_BIG_RESULT\", \"SQL_BIG_SELECTS\", \"SQL_BIG_TABLES\", \"SQL_BUFFER_RESULT\", \"SQL_CACHE\", \"SQL_CALC_FOUND_ROWS\",\n    \"SQL_LOG_BIN\", \"SQL_LOG_OFF\", \"SQL_LOG_UPDATE\", \"SQL_LOW_PRIORITY_UPDATES\", \"SQL_MAX_JOIN_SIZE\", \"SQL_NO_CACHE\",\n    \"SQL_QUOTE_SHOW_CREATE\", \"SQL_SAFE_UPDATES\", \"SQL_SELECT_LIMIT\", \"SQL_SLAVE_SKIP_COUNTER\", \"SQL_SMALL_RESULT\", \"SQL_WARNINGS\",\n    \"START\", \"STARTING\", \"STATUS\", \"STOP\", \"STORAGE\", \"STRAIGHT_JOIN\", \"STRING\", \"STRIPED\", \"SUPER\",\n    \"TABLE\", \"TABLES\", \"TEMPORARY\", \"TERMINATED\", \"THEN\", \"TO\", \"TRAILING\", \"TRANSACTIONAL\", \"TRUE\", \"TRUNCATE\", \"TYPE\", \"TYPES\",\n    \"UNCOMMITTED\", \"UNIQUE\", \"UNLOCK\", \"UNSIGNED\", \"USAGE\", \"USE\", \"USING\",\n    \"VARIABLES\", \"VIEW\", \"WITH\", \"WORK\", \"WRITE\",\n    \"YEAR_MONTH\",\n    //This will be rendered as `AND` but without a new line\n    \"HACKED_AND_NO_NEW_LINE\"\n];\nconst reservedToplevelWords = [\n    \"ADD\", \"AFTER\", \"ALTER COLUMN\", \"ALTER TABLE\",\n    \"DELETE FROM\",\n    \"EXCEPT\",\n    \"FETCH FIRST\", \"FROM\",\n    \"GROUP BY\", \"GO\",\n    \"HAVING\",\n    \"INSERT INTO\", \"INSERT\", \"INTERSECT\",\n    \"LIMIT\",\n    \"MODIFY\",\n    \"ORDER BY\",\n    /*New reserved top-level word*/ \"SELECT DISTINCT SQL_CALC_FOUND_ROWS\",\n    /*New reserved top-level word*/ \"SELECT DISTINCT\",\n    /*New reserved top-level word*/ \"SELECT SQL_CALC_FOUND_ROWS\",\n    \"SELECT\", \"SET CURRENT SCHEMA\", \"SET SCHEMA\", \"SET\",\n    \"UNION ALL\", /*New reserved top-level word*/ \"UNION DISTINCT\", \"UNION\", \"UPDATE\",\n    \"VALUES\",\n    \"WHERE\",\n    //Originally in reservedNewlineWords\n    //But I think this is better to me\n    \"CROSS APPLY\", \"CROSS JOIN\",\n    \"INNER JOIN\",\n    \"JOIN\",\n    \"LEFT JOIN\", \"LEFT OUTER JOIN\",\n    \"OUTER APPLY\", \"OUTER JOIN\",\n    \"RIGHT JOIN\", \"RIGHT OUTER JOIN\",\n    //Originally in reservedWords\n    //But I think this is better to me\n    \"ON\",\n    \"OFFSET\",\n];\nconst reservedNewlineWords = [\n    \"AND\",\n    \"OR\",\n    \"XOR\"\n];\nconst reservedPreNewlineWords = [\n    \"WHEN\",\n    \"ELSE\",\n];\nexports.defaultTokenizerConfig = {\n    reservedWords,\n    reservedToplevelWords,\n    reservedNewlineWords,\n    reservedPreNewlineWords,\n    stringTypes: [/*`\"\"`,*/ \"N''\", /*\"''\",*/ \"``\", \"[]\", \"X''\", \"pascal-double\", \"pascal-single\"],\n    openParens: [\"(\", \"CASE\"],\n    closeParens: [\")\", \"END\"],\n    indexedPlaceholderTypes: [\"?\"],\n    namedPlaceholderTypes: [\"@\", \":\"],\n    lineCommentTypes: [\"#\", \"--\"],\n    specialWordChars: undefined,\n};\n/* eslint-disable local/no-method */\nclass SqlFormatter {\n    /**\n     * @param {Object} cfg Different set of configurations\n     */\n    constructor(cfg, tokenizerConfig) {\n        this.cfg = cfg;\n        /**\n         * @todo Not use this hack.\n         * We want to ignore properties set to `undefined`.\n         */\n        this.tokenizerConfig = { ...tokenizerConfig };\n        for (const key of Object.keys(this.tokenizerConfig)) {\n            if (this.tokenizerConfig[key] === undefined) {\n                delete this.tokenizerConfig[key];\n            }\n        }\n    }\n    /**\n     * Format the whitespace in a Standard SQL string to make it easier to read\n     *\n     * @param {String} query The Standard SQL string\n     * @return {String} formatted string\n     */\n    format(query) {\n        if (this.tokenizer == undefined) {\n            this.tokenizer = new Tokenizer_1.Tokenizer({\n                ...exports.defaultTokenizerConfig,\n                ...this.tokenizerConfig,\n            });\n        }\n        return new Formatter_1.Formatter(this.cfg, this.tokenizer).format(query);\n    }\n}\nexports.SqlFormatter = SqlFormatter;\n//# sourceMappingURL=SqlFormatter.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TokenType;\n(function (TokenType) {\n    TokenType[\"WHITESPACE\"] = \"whitespace\";\n    TokenType[\"WORD\"] = \"word\";\n    TokenType[\"STRING\"] = \"string\";\n    TokenType[\"RESERVED\"] = \"reserved\";\n    TokenType[\"RESERVED_TOPLEVEL\"] = \"reserved-toplevel\";\n    TokenType[\"RESERVED_NEWLINE\"] = \"reserved-newline\";\n    TokenType[\"RESERVED_PRE_NEWLINE\"] = \"reserved-pre-newline\";\n    TokenType[\"OPERATOR\"] = \"operator\";\n    TokenType[\"OPEN_PAREN\"] = \"open-paren\";\n    TokenType[\"CLOSE_PAREN\"] = \"close-paren\";\n    TokenType[\"LINE_COMMENT\"] = \"line-comment\";\n    TokenType[\"BLOCK_COMMENT\"] = \"block-comment\";\n    TokenType[\"NUMBER\"] = \"number\";\n    TokenType[\"PLACEHOLDER\"] = \"placeholder\";\n})(TokenType = exports.TokenType || (exports.TokenType = {}));\n//# sourceMappingURL=TokenType.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst TokenType_1 = require(\"./TokenType\");\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nconst reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\nconst reHasRegExpChar = RegExp(reRegExpChar.source);\nfunction escapeRegExp(str) {\n    return (str != \"\" && reHasRegExpChar.test(str))\n        ? str.replace(reRegExpChar, '\\\\$&')\n        : str;\n}\n/* eslint-disable local/no-method */\nclass Tokenizer {\n    /**\n     * @param {Object} cfg\n     *  @param {String[]} cfg.reservedWords Reserved words in SQL\n     *  @param {String[]} cfg.reservedToplevelWords Words that are set to new line separately\n     *  @param {String[]} cfg.reservedNewlineWords Words that are set to newline\n     *  @param {String[]} cfg.stringTypes String types to enable: \"\", '', ``, [], N''\n     *  @param {String[]} cfg.openParens Opening parentheses to enable, like (, [\n     *  @param {String[]} cfg.closeParens Closing parentheses to enable, like ), ]\n     *  @param {String[]} cfg.indexedPlaceholderTypes Prefixes for indexed placeholders, like ?\n     *  @param {String[]} cfg.namedPlaceholderTypes Prefixes for named placeholders, like @ and :\n     *  @param {String[]} cfg.lineCommentTypes Line comments to enable, like # and --\n     *  @param {String[]} cfg.specialWordChars Special chars that can be found inside of words, like @ and #\n     */\n    constructor(cfg) {\n        this.BLOCK_COMMENT_REGEX = /^(\\/\\*[^]*?(?:\\*\\/|$))/;\n        this.WHITESPACE_REGEX = /^(\\s+)/;\n        //The original NUMBER_REGEX was this -> /^((-\\s*)?[0-9]+(\\.[0-9]+)?|0x[0-9a-fA-F]+|0b[01]+)\\b/;\n        this.NUMBER_REGEX = /^(([-+])?([0-9]*\\.?[0-9]+)([eE]([-+])?([0-9]+))?)\\b/;\n        //Added <=> as the NULL-safe equality operator\n        this.OPERATOR_REGEX = /^(<=>|!=|<>|==|<=|>=|!<|!>|\\|\\||::|->>|->|~~\\*|~~|!~~\\*|!~~|~\\*|!~\\*|!~|.)/;\n        this.BLOCK_COMMENT_REGEX = /^(\\/\\*[^]*?(?:\\*\\/|$))/;\n        this.LINE_COMMENT_REGEX = this.createLineCommentRegex(cfg.lineCommentTypes);\n        this.RESERVED_TOPLEVEL_REGEX = this.createReservedWordRegex(cfg.reservedToplevelWords);\n        this.RESERVED_NEWLINE_REGEX = this.createReservedWordRegex(cfg.reservedNewlineWords);\n        this.RESERVED_PRE_NEWLINE_REGEX = this.createReservedWordRegex(cfg.reservedPreNewlineWords);\n        this.RESERVED_PLAIN_REGEX = this.createReservedWordRegex(cfg.reservedWords);\n        this.WORD_REGEX = this.createWordRegex(cfg.specialWordChars);\n        this.STRING_REGEX = this.createStringRegex(cfg.stringTypes);\n        this.OPEN_PAREN_REGEX = this.createParenRegex(cfg.openParens);\n        this.CLOSE_PAREN_REGEX = this.createParenRegex(cfg.closeParens);\n        this.INDEXED_PLACEHOLDER_REGEX = this.createPlaceholderRegex(cfg.indexedPlaceholderTypes, \"[0-9]*\");\n        this.IDENT_NAMED_PLACEHOLDER_REGEX = this.createPlaceholderRegex(cfg.namedPlaceholderTypes, \"[a-zA-Z0-9._$]+\");\n        this.STRING_NAMED_PLACEHOLDER_REGEX = this.createPlaceholderRegex(cfg.namedPlaceholderTypes, this.createStringPattern(cfg.stringTypes));\n    }\n    createLineCommentRegex(lineCommentTypes) {\n        return new RegExp(`^((?:${lineCommentTypes.map(c => escapeRegExp(c)).join(\"|\")}).*?(?:\\n|$))`);\n    }\n    createReservedWordRegex(reservedWords) {\n        const reservedWordsPattern = reservedWords.join(\"|\").replace(/ /g, \"\\\\s+\");\n        return new RegExp(`^(${reservedWordsPattern})\\\\b`, \"i\");\n    }\n    createWordRegex(specialChars = []) {\n        return new RegExp(`^([\\\\w${specialChars.join(\"\")}]+)`);\n    }\n    createStringRegex(stringTypes) {\n        return new RegExp(\"^(\" + this.createStringPattern(stringTypes) + \")\");\n    }\n    // This enables the following string patterns:\n    // 1. backtick quoted string using `` to escape\n    // 2. square bracket quoted string (SQL Server) using ]] to escape\n    // 3. double quoted string using \"\" or \\\" to escape\n    // 4. single quoted string using '' or \\' to escape\n    // 5. national character quoted string using N'' or N\\' to escape\n    // 6. double quoted string using \"\" to escape (should not be used with number 3)\n    // 7. single quoted string using '' to escape (should not be used with number 4)\n    createStringPattern(stringTypes) {\n        const patterns = {\n            \"``\": \"((`[^`]*($|`))+)\",\n            \"[]\": \"((\\\\[[^\\\\]]*($|\\\\]))(\\\\][^\\\\]]*($|\\\\]))*)\",\n            \"\\\"\\\"\": \"((\\\"[^\\\"\\\\\\\\]*(?:\\\\\\\\.[^\\\"\\\\\\\\]*)*(\\\"|$))+)\",\n            \"''\": \"(('[^'\\\\\\\\]*(?:\\\\\\\\.[^'\\\\\\\\]*)*('|$))+)\",\n            \"N''\": \"((N'[^N'\\\\\\\\]*(?:\\\\\\\\.[^N'\\\\\\\\]*)*('|$))+)\",\n            \"X''\": \"((X'[^X'\\\\\\\\]*(?:\\\\\\\\.[^X'\\\\\\\\]*)*('|$))+)\",\n            \"pascal-double\": `((\"[^\"]*($|\"))+)`,\n            \"pascal-single\": \"(('[^']*($|'))+)\",\n        };\n        return stringTypes.map(t => patterns[t]).join(\"|\");\n    }\n    createParenRegex(parens) {\n        return new RegExp(\"^(\" + parens.map(p => this.escapeParen(p)).join(\"|\") + \")\", \"i\");\n    }\n    escapeParen(paren) {\n        if (paren.length === 1) {\n            // A single punctuation character\n            return escapeRegExp(paren);\n        }\n        else {\n            // longer word\n            return \"\\\\b\" + paren + \"\\\\b\";\n        }\n    }\n    createPlaceholderRegex(types, pattern) {\n        if (types.length == 0) {\n            return undefined;\n        }\n        const typesRegex = types.map(escapeRegExp).join(\"|\");\n        return new RegExp(`^((?:${typesRegex})(?:${pattern}))`);\n    }\n    /**\n     * Takes a SQL string and breaks it into tokens.\n     * Each token is an object with type and value.\n     *\n     * @param {String} input The SQL string\n     * @return {Object[]} tokens An array of tokens.\n     *  @return {String} token.type\n     *  @return {String} token.value\n     */\n    tokenize(input) {\n        const tokens = [];\n        let token;\n        // Keep processing the string until it is empty\n        while (input.length > 0) {\n            // Get the next token and the token type\n            token = this.getNextToken(input, token);\n            if (token == undefined) {\n                throw new Error(`No token found`);\n            }\n            // Advance the string\n            input = input.substring(token.value.length);\n            tokens.push(token);\n        }\n        return tokens;\n    }\n    getNextToken(input, previousToken) {\n        //eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        return this.getWhitespaceToken(input) ||\n            this.getCommentToken(input) ||\n            this.getStringToken(input) ||\n            this.getOpenParenToken(input) ||\n            this.getCloseParenToken(input) ||\n            this.getPlaceholderToken(input) ||\n            this.getNumberToken(input) ||\n            this.getReservedWordToken(input, previousToken) ||\n            this.getWordToken(input) ||\n            this.getOperatorToken(input);\n    }\n    getWhitespaceToken(input) {\n        return this.getTokenOnFirstMatch({\n            input,\n            type: TokenType_1.TokenType.WHITESPACE,\n            regex: this.WHITESPACE_REGEX\n        });\n    }\n    getCommentToken(input) {\n        //eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        return this.getLineCommentToken(input) || this.getBlockCommentToken(input);\n    }\n    getLineCommentToken(input) {\n        return this.getTokenOnFirstMatch({\n            input,\n            type: TokenType_1.TokenType.LINE_COMMENT,\n            regex: this.LINE_COMMENT_REGEX\n        });\n    }\n    getBlockCommentToken(input) {\n        return this.getTokenOnFirstMatch({\n            input,\n            type: TokenType_1.TokenType.BLOCK_COMMENT,\n            regex: this.BLOCK_COMMENT_REGEX\n        });\n    }\n    getStringToken(input) {\n        return this.getTokenOnFirstMatch({\n            input,\n            type: TokenType_1.TokenType.STRING,\n            regex: this.STRING_REGEX\n        });\n    }\n    getOpenParenToken(input) {\n        return this.getTokenOnFirstMatch({\n            input,\n            type: TokenType_1.TokenType.OPEN_PAREN,\n            regex: this.OPEN_PAREN_REGEX\n        });\n    }\n    getCloseParenToken(input) {\n        return this.getTokenOnFirstMatch({\n            input,\n            type: TokenType_1.TokenType.CLOSE_PAREN,\n            regex: this.CLOSE_PAREN_REGEX\n        });\n    }\n    getPlaceholderToken(input) {\n        //eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        return this.getIdentNamedPlaceholderToken(input) ||\n            this.getStringNamedPlaceholderToken(input) ||\n            this.getIndexedPlaceholderToken(input);\n    }\n    getIdentNamedPlaceholderToken(input) {\n        return this.getPlaceholderTokenWithKey({\n            input,\n            regex: this.IDENT_NAMED_PLACEHOLDER_REGEX,\n            parseKey: (v) => v.slice(1)\n        });\n    }\n    getStringNamedPlaceholderToken(input) {\n        return this.getPlaceholderTokenWithKey({\n            input,\n            regex: this.STRING_NAMED_PLACEHOLDER_REGEX,\n            parseKey: (v) => this.getEscapedPlaceholderKey({ key: v.slice(2, -1), quoteChar: v.slice(-1) })\n        });\n    }\n    getIndexedPlaceholderToken(input) {\n        return this.getPlaceholderTokenWithKey({\n            input,\n            regex: this.INDEXED_PLACEHOLDER_REGEX,\n            parseKey: (v) => v.slice(1)\n        });\n    }\n    getPlaceholderTokenWithKey({ input, regex, parseKey }) {\n        const token = this.getTokenOnFirstMatch({ input, regex, type: TokenType_1.TokenType.PLACEHOLDER });\n        if (token == undefined) {\n            return undefined;\n        }\n        token.key = parseKey(token.value);\n        return token;\n    }\n    getEscapedPlaceholderKey({ key, quoteChar }) {\n        return key.replace(new RegExp(escapeRegExp(\"\\\\\") + quoteChar, \"g\"), quoteChar);\n    }\n    // Decimal, binary, or hex numbers\n    getNumberToken(input) {\n        return this.getTokenOnFirstMatch({\n            input,\n            type: TokenType_1.TokenType.NUMBER,\n            regex: this.NUMBER_REGEX\n        });\n    }\n    // Punctuation and symbols\n    getOperatorToken(input) {\n        return this.getTokenOnFirstMatch({\n            input,\n            type: TokenType_1.TokenType.OPERATOR,\n            regex: this.OPERATOR_REGEX\n        });\n    }\n    getReservedWordToken(input, previousToken) {\n        // A reserved word cannot be preceded by a \".\"\n        // this makes it so in \"mytable.from\", \"from\" is not considered a reserved word\n        if (previousToken != undefined && previousToken.value === \".\") {\n            return;\n        }\n        return (\n        //eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        this.getToplevelReservedToken(input) ||\n            this.getNewlineReservedToken(input) ||\n            this.getPreNewlineReservedToken(input) ||\n            this.getPlainReservedToken(input));\n    }\n    getToplevelReservedToken(input) {\n        return this.getTokenOnFirstMatch({\n            input,\n            type: TokenType_1.TokenType.RESERVED_TOPLEVEL,\n            regex: this.RESERVED_TOPLEVEL_REGEX\n        });\n    }\n    getNewlineReservedToken(input) {\n        return this.getTokenOnFirstMatch({\n            input,\n            type: TokenType_1.TokenType.RESERVED_NEWLINE,\n            regex: this.RESERVED_NEWLINE_REGEX\n        });\n    }\n    getPreNewlineReservedToken(input) {\n        return this.getTokenOnFirstMatch({\n            input,\n            type: TokenType_1.TokenType.RESERVED_PRE_NEWLINE,\n            regex: this.RESERVED_PRE_NEWLINE_REGEX\n        });\n    }\n    getPlainReservedToken(input) {\n        return this.getTokenOnFirstMatch({\n            input,\n            type: TokenType_1.TokenType.RESERVED,\n            regex: this.RESERVED_PLAIN_REGEX\n        });\n    }\n    getWordToken(input) {\n        return this.getTokenOnFirstMatch({\n            input,\n            type: TokenType_1.TokenType.WORD,\n            regex: this.WORD_REGEX\n        });\n    }\n    getTokenOnFirstMatch({ input, type, regex }) {\n        const matches = (regex == undefined) ?\n            undefined :\n            input.match(regex);\n        if (matches == undefined) {\n            return undefined;\n        }\n        const value = matches[1];\n        if (value == undefined) {\n            throw new Error(`No value found; is the regex missing a capture group?`);\n        }\n        return { type, value };\n    }\n}\nexports.Tokenizer = Tokenizer;\n//# sourceMappingURL=Tokenizer.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./Formatter\"));\n__export(require(\"./Indentation\"));\n__export(require(\"./InlineBlock\"));\n__export(require(\"./Params\"));\n__export(require(\"./SqlFormatter\"));\n__export(require(\"./Tokenizer\"));\n__export(require(\"./TokenType\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst FromClauseUtil = require(\"./util\");\nexports.FromClauseUtil = FromClauseUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./new-instance\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction newInstance() {\n    const result = {\n        outerQueryJoins: undefined,\n        currentJoins: undefined,\n    };\n    return result;\n}\nexports.newInstance = newInstance;\n//# sourceMappingURL=new-instance.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./constructor\"));\n__export(require(\"./operation\"));\n__export(require(\"./predicate\"));\n__export(require(\"./query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction correlate(fromClause) {\n    return {\n        outerQueryJoins: (fromClause.outerQueryJoins == undefined && fromClause.currentJoins == undefined ?\n            undefined :\n            [\n                ...(fromClause.outerQueryJoins == undefined ?\n                    [] :\n                    fromClause.outerQueryJoins),\n                ...(fromClause.currentJoins == undefined ?\n                    [] :\n                    fromClause.currentJoins),\n            ]),\n        currentJoins: undefined,\n    };\n}\nexports.correlate = correlate;\n//# sourceMappingURL=correlate.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst join_1 = require(\"../../../join\");\nconst predicate_1 = require(\"../predicate\");\nfunction crossJoin(fromClause, aliasedTable) {\n    predicate_1.assertAfterFromClause(fromClause);\n    predicate_1.assertValidCurrentJoinBase(fromClause, aliasedTable);\n    const result = {\n        outerQueryJoins: fromClause.outerQueryJoins,\n        currentJoins: join_1.JoinArrayUtil.append(fromClause.currentJoins, join_1.JoinUtil.fromAliasedTable(aliasedTable, false, join_1.JoinType.CROSS, undefined)),\n    };\n    return result;\n}\nexports.crossJoin = crossJoin;\n//# sourceMappingURL=cross-join.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst join_1 = require(\"../../../join\");\nconst predicate_1 = require(\"../predicate\");\nfunction from(fromClause, aliasedTable) {\n    predicate_1.assertBeforeFromClause(fromClause);\n    predicate_1.assertValidCurrentJoinBase(fromClause, aliasedTable);\n    const result = {\n        outerQueryJoins: fromClause.outerQueryJoins,\n        currentJoins: [\n            join_1.JoinUtil.fromAliasedTable(aliasedTable, false, join_1.JoinType.FROM, undefined)\n        ],\n    };\n    return result;\n}\nexports.from = from;\n//# sourceMappingURL=from.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./correlate\"));\n__export(require(\"./cross-join\"));\n__export(require(\"./from\"));\n__export(require(\"./inner-join-using-candidate-key\"));\n__export(require(\"./inner-join-using-primary-key\"));\n__export(require(\"./inner-join\"));\n__export(require(\"./left-join-using-candidate-key\"));\n__export(require(\"./left-join-using-primary-key\"));\n__export(require(\"./left-join\"));\n__export(require(\"./require-nullable-outer-query-joins\"));\n__export(require(\"./require-outer-query-joins-impl\"));\n__export(require(\"./require-outer-query-joins\"));\n__export(require(\"./where-eq-candidate-key\"));\n__export(require(\"./where-eq-columns\"));\n__export(require(\"./where-eq-inner-query-primary-key\"));\n__export(require(\"./where-eq-outer-query-candidate-key\"));\n__export(require(\"./where-eq-outer-query-primary-key\"));\n__export(require(\"./where-eq-primary-key\"));\n__export(require(\"./where-eq-super-key\"));\n__export(require(\"./where-eq\"));\n__export(require(\"./where-is-not-null\"));\n__export(require(\"./where-is-null\"));\n__export(require(\"./where-null-safe-eq\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst predicate_1 = require(\"../predicate\");\nconst join_map_1 = require(\"../../../join-map\");\nconst inner_join_1 = require(\"./inner-join\");\nconst ExprLib = require(\"../../../expr-library\");\n/**\n * Shorthand for,\n * ```ts\n *  //snip\n *  .innerJoin(\n *      otherTable,\n *      () => tsql.eqCandidateKeyOfTable(\n *          myTable,\n *          otherTable,\n *          columns => [\n *              columns.candidateKey0,\n *              columns.candidateKey1,\n *              //etc.\n *          ]\n *      )\n *  )\n * ```\n *\n * ```sql\n *  INNER JOIN\n *      otherTable\n *  ON\n *      myTable.otherTableCk0 <=> otherTable.otherTableCk0 AND\n *      myTable.otherTableCk1 <=> otherTable.otherTableCk1 AND\n *      myTable.otherTableCk2 <=> otherTable.otherTableCk2 AND\n *      --snip\n * ```\n */\nfunction innerJoinUsingCandidateKey(fromClause, srcDelegate, aliasedTable, eqCandidateKeyOfTableDelegate) {\n    predicate_1.assertAfterFromClause(fromClause);\n    predicate_1.assertValidCurrentJoinBase(fromClause, aliasedTable);\n    const src = srcDelegate(join_map_1.JoinMapUtil.fromJoinArray(fromClause.currentJoins));\n    const result = inner_join_1.innerJoin(fromClause, aliasedTable, () => {\n        /**\n         * @todo Investigate assignability\n         */\n        return ExprLib.eqCandidateKeyOfTable(src, aliasedTable, eqCandidateKeyOfTableDelegate);\n    });\n    return result;\n}\nexports.innerJoinUsingCandidateKey = innerJoinUsingCandidateKey;\n//# sourceMappingURL=inner-join-using-candidate-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst predicate_1 = require(\"../predicate\");\nconst join_map_1 = require(\"../../../join-map\");\nconst inner_join_1 = require(\"./inner-join\");\nconst ExprLib = require(\"../../../expr-library\");\n/**\n * Shorthand for,\n * ```ts\n *  //snip\n *  .innerJoin(\n *      otherTable,\n *      () => tsql.eqPrimaryKeyOfTable(\n *          myTable,\n *          otherTable\n *      )\n *  )\n * ```\n *\n * ```sql\n *  INNER JOIN\n *      otherTable\n *  ON\n *      myTable.otherTablePk0 <=> otherTable.otherTablePk0 AND\n *      myTable.otherTablePk1 <=> otherTable.otherTablePk1 AND\n *      myTable.otherTablePk2 <=> otherTable.otherTablePk2 AND\n *      --snip\n * ```\n */\nfunction innerJoinUsingPrimaryKey(fromClause, srcDelegate, aliasedTable) {\n    predicate_1.assertAfterFromClause(fromClause);\n    predicate_1.assertValidCurrentJoinBase(fromClause, aliasedTable);\n    const src = srcDelegate(join_map_1.JoinMapUtil.fromJoinArray(fromClause.currentJoins));\n    const result = inner_join_1.innerJoin(fromClause, aliasedTable, () => {\n        /**\n         * @todo Investigate assignability\n         */\n        return ExprLib.eqPrimaryKeyOfTable(src, aliasedTable);\n    });\n    return result;\n}\nexports.innerJoinUsingPrimaryKey = innerJoinUsingPrimaryKey;\n//# sourceMappingURL=inner-join-using-primary-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst predicate_1 = require(\"../predicate\");\nconst join_1 = require(\"../../../join\");\nconst on_clause_1 = require(\"../../../on-clause\");\n/**\n * ```sql\n *  INNER JOIN\n *      myTable\n *  ON\n *      --condition\n * ```\n */\nfunction innerJoin(fromClause, aliasedTable, onDelegate) {\n    predicate_1.assertAfterFromClause(fromClause);\n    predicate_1.assertValidCurrentJoinBase(fromClause, aliasedTable);\n    const result = {\n        outerQueryJoins: fromClause.outerQueryJoins,\n        currentJoins: join_1.JoinArrayUtil.append(fromClause.currentJoins, join_1.JoinUtil.fromAliasedTable(aliasedTable, false, join_1.JoinType.INNER, on_clause_1.OnClauseUtil.on(fromClause, aliasedTable, onDelegate))),\n    };\n    return result;\n}\nexports.innerJoin = innerJoin;\n//# sourceMappingURL=inner-join.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst predicate_1 = require(\"../predicate\");\nconst join_map_1 = require(\"../../../join-map\");\nconst left_join_1 = require(\"./left-join\");\nconst ExprLib = require(\"../../../expr-library\");\n/**\n * Shorthand for,\n * ```ts\n *  //snip\n *  .leftJoin(\n *      otherTable,\n *      () => tsql.eqCandidateKeyOfTable(\n *          myTable,\n *          otherTable,\n *          columns => [\n *              columns.candidateKey0,\n *              columns.candidateKey1,\n *              //etc.\n *          ]\n *      )\n *  )\n * ```\n *\n * ```sql\n *  LEFT JOIN\n *      otherTable\n *  ON\n *      myTable.otherTableCk0 <=> otherTable.otherTableCk0 AND\n *      myTable.otherTableCk1 <=> otherTable.otherTableCk1 AND\n *      myTable.otherTableCk2 <=> otherTable.otherTableCk2 AND\n *      --snip\n * ```\n */\nfunction leftJoinUsingCandidateKey(fromClause, srcDelegate, aliasedTable, eqCandidateKeyOfTableDelegate) {\n    predicate_1.assertAfterFromClause(fromClause);\n    predicate_1.assertValidCurrentJoinBase(fromClause, aliasedTable);\n    const src = srcDelegate(join_map_1.JoinMapUtil.fromJoinArray(fromClause.currentJoins));\n    const result = left_join_1.leftJoin(fromClause, aliasedTable, () => {\n        /**\n         * @todo Investigate assignability\n         */\n        return ExprLib.eqCandidateKeyOfTable(src, aliasedTable, eqCandidateKeyOfTableDelegate);\n    });\n    return result;\n}\nexports.leftJoinUsingCandidateKey = leftJoinUsingCandidateKey;\n//# sourceMappingURL=left-join-using-candidate-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst predicate_1 = require(\"../predicate\");\nconst join_map_1 = require(\"../../../join-map\");\nconst left_join_1 = require(\"./left-join\");\nconst ExprLib = require(\"../../../expr-library\");\n/**\n * Shorthand for,\n * ```ts\n *  //snip\n *  .leftJoin(\n *      otherTable,\n *      () => tsql.eqPrimaryKeyOfTable(\n *          myTable,\n *          otherTable\n *      )\n *  )\n * ```\n *\n * ```sql\n *  LEFT JOIN\n *      otherTable\n *  ON\n *      myTable.otherTablePk0 <=> otherTable.otherTablePk0 AND\n *      myTable.otherTablePk1 <=> otherTable.otherTablePk1 AND\n *      myTable.otherTablePk2 <=> otherTable.otherTablePk2 AND\n *      --snip\n * ```\n */\nfunction leftJoinUsingPrimaryKey(fromClause, srcDelegate, aliasedTable) {\n    predicate_1.assertAfterFromClause(fromClause);\n    predicate_1.assertValidCurrentJoinBase(fromClause, aliasedTable);\n    const src = srcDelegate(join_map_1.JoinMapUtil.fromJoinArray(fromClause.currentJoins));\n    const result = left_join_1.leftJoin(fromClause, aliasedTable, () => {\n        /**\n         * @todo Investigate assignability\n         */\n        return ExprLib.eqPrimaryKeyOfTable(src, aliasedTable);\n    });\n    return result;\n}\nexports.leftJoinUsingPrimaryKey = leftJoinUsingPrimaryKey;\n//# sourceMappingURL=left-join-using-primary-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst predicate_1 = require(\"../predicate\");\nconst join_1 = require(\"../../../join\");\nconst on_clause_1 = require(\"../../../on-clause\");\n/**\n * ```sql\n *  LEFT JOIN\n *      myTable\n *  ON\n *      --condition\n * ```\n */\nfunction leftJoin(fromClause, aliasedTable, onDelegate) {\n    predicate_1.assertAfterFromClause(fromClause);\n    predicate_1.assertValidCurrentJoinBase(fromClause, aliasedTable);\n    const result = {\n        outerQueryJoins: fromClause.outerQueryJoins,\n        currentJoins: join_1.JoinArrayUtil.append(fromClause.currentJoins, join_1.JoinUtil.fromAliasedTable(aliasedTable, true, join_1.JoinType.LEFT, on_clause_1.OnClauseUtil.on(fromClause, aliasedTable, onDelegate))),\n    };\n    return result;\n}\nexports.leftJoin = leftJoin;\n//# sourceMappingURL=left-join.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst require_outer_query_joins_impl_1 = require(\"./require-outer-query-joins-impl\");\nfunction requireNullableOuterQueryJoins(fromClause, ...aliasedTables) {\n    return require_outer_query_joins_impl_1.requireOuterQueryJoinsImpl(fromClause, true, ...aliasedTables);\n}\nexports.requireNullableOuterQueryJoins = requireNullableOuterQueryJoins;\n//# sourceMappingURL=require-nullable-outer-query-joins.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst join_1 = require(\"../../../join\");\nconst predicate_1 = require(\"../predicate\");\nfunction requireOuterQueryJoinsImpl(fromClause, nullable, ...aliasedTables) {\n    if (aliasedTables.length == 0) {\n        return fromClause;\n    }\n    predicate_1.assertValidOuterQueryJoins(fromClause, aliasedTables);\n    const required = aliasedTables.map(aliasedTable => (join_1.JoinUtil.fromAliasedTable(aliasedTable, nullable, \n    /**\n     * The `JoinType` does not matter for outer query joins.\n     */\n    join_1.JoinType.FROM, \n    /**\n     * The `ON` clause doesn't matter, either.\n     */\n    undefined)));\n    const outerQueryJoins = (fromClause.outerQueryJoins == undefined ?\n        required :\n        join_1.JoinArrayUtil.append(fromClause.outerQueryJoins, ...required));\n    const result = {\n        outerQueryJoins,\n        currentJoins: fromClause.currentJoins,\n    };\n    return result;\n}\nexports.requireOuterQueryJoinsImpl = requireOuterQueryJoinsImpl;\n//# sourceMappingURL=require-outer-query-joins-impl.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst require_outer_query_joins_impl_1 = require(\"./require-outer-query-joins-impl\");\nfunction requireOuterQueryJoins(fromClause, ...aliasedTables) {\n    return require_outer_query_joins_impl_1.requireOuterQueryJoinsImpl(fromClause, false, ...aliasedTables);\n}\nexports.requireOuterQueryJoins = requireOuterQueryJoins;\n//# sourceMappingURL=require-outer-query-joins.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst join_1 = require(\"../../../join\");\nconst where_clause_1 = require(\"../../../where-clause\");\nconst join_map_1 = require(\"../../../join-map\");\nconst ExprLib = require(\"../../../expr-library\");\n/**\n * Convenience function for,\n * ```ts\n *  myQuery\n *      .where(() => tsql.eqCandidateKey(\n *          myTable,\n *          myCandidateKey\n *      ));\n * ```\n *\n * -----\n *\n * It is recommended to **only** use this with **object literals**.\n * Excess property checks are disabled for non-object literals.\n * Even if they were enabled, it is possible to slip in extra properties.\n *\n * Extra properties are ignored during run-time but may indicate lapses in logic.\n *\n * -----\n *\n * Excess properties are especially dangerous for this function.\n *\n * If your `candidateKeyInput` is actually a super key of two candidate keys,\n * then the candidate key this function compares against is arbitrary.\n *\n * The extra properties will be discarded.\n *\n * If you want to compare against a super key, use `whereEqSuperKey()` instead.\n *\n */\nfunction whereEqCandidateKey(fromClause, whereClause, \n/**\n * This construction effectively makes it impossible for `WhereEqCandidateKeyDelegate<>`\n * to return a union type.\n *\n * This is unfortunate but a necessary compromise for now.\n *\n * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520199818\n *\n * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520201877\n */\n...args) {\n    const whereEqCandidateKeyDelegate = args[0];\n    const candidateKey = args[1];\n    const table = whereEqCandidateKeyDelegate(join_map_1.JoinMapUtil.fromJoinArray(join_1.JoinArrayUtil.extractWithCandidateKey(fromClause.currentJoins)));\n    const result = {\n        fromClause,\n        whereClause: where_clause_1.WhereClauseUtil.where(fromClause, whereClause, \n        /**\n         * @todo Investigate assignability\n         */\n        () => ExprLib.eqCandidateKey(table, candidateKey)),\n    };\n    return result;\n}\nexports.whereEqCandidateKey = whereEqCandidateKey;\n//# sourceMappingURL=where-eq-candidate-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst where_clause_1 = require(\"../../../where-clause\");\nconst join_map_1 = require(\"../../../join-map\");\nconst ExprLib = require(\"../../../expr-library\");\n/**\n * Convenience function for,\n * ```ts\n *  myQuery\n *      .where(() => tsql.eqColumns(\n *          myTable,\n *          myColumns\n *      ));\n * ```\n *\n * -----\n *\n * It is recommended to **only** use this with **object literals**.\n * Excess property checks are disabled for non-object literals.\n * Even if they were enabled, it is possible to slip in extra properties.\n *\n * Extra properties are ignored during run-time but may indicate lapses in logic.\n *\n */\nfunction whereEqColumns(fromClause, whereClause, \n/**\n * This construction effectively makes it impossible for `WhereEqColumnsDelegate<>`\n * to return a union type.\n *\n * This is unfortunate but a necessary compromise for now.\n *\n * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520199818\n *\n * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520201877\n */\n...args) {\n    const whereEqColumnsDelegate = args[0];\n    const columns = args[1];\n    /**\n     * @todo Investigate assignability\n     */\n    const table = whereEqColumnsDelegate(join_map_1.JoinMapUtil.fromJoinArray(fromClause.currentJoins));\n    const result = {\n        fromClause,\n        whereClause: where_clause_1.WhereClauseUtil.where(fromClause, whereClause, \n        /**\n         * @todo Investigate assignability\n         */\n        () => ExprLib.eqColumns(table, \n        /**\n         * @todo Investigate assignability\n         */\n        columns)),\n    };\n    return result;\n}\nexports.whereEqColumns = whereEqColumns;\n//# sourceMappingURL=where-eq-columns.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst join_1 = require(\"../../../join\");\nconst where_clause_1 = require(\"../../../where-clause\");\nconst ExprLib = require(\"../../../expr-library\");\nconst join_map_1 = require(\"../../../join-map\");\n/**\n * Convenience function for,\n * ```ts\n *  myQuery\n *      .where(() => tsql.eqPrimaryKeyOfTable(\n *          outerQueryTable,\n *          currentQueryTable\n *      ));\n * ```\n * -----\n *\n * + The `outerQueryTable` does not need to have keys.\n * + The `currentQueryTable` must have a primary key.\n * + The `outerQueryTable` must have columns comparable to columns of `currentQueryTable`'s primary key.\n */\nfunction whereEqInnerQueryPrimaryKey(fromClause, whereClause, srcDelegate, dstDelegate) {\n    const src = srcDelegate(join_map_1.JoinMapUtil.fromJoinArray(fromClause.outerQueryJoins));\n    const dst = dstDelegate(join_map_1.JoinMapUtil.fromJoinArray(join_1.JoinArrayUtil.extractWithNullSafeComparablePrimaryKey(fromClause.currentJoins, src.columns)));\n    const result = {\n        fromClause,\n        whereClause: where_clause_1.WhereClauseUtil.where(fromClause, whereClause, \n        /**\n         * @todo Investigate assignability\n         */\n        () => ExprLib.eqPrimaryKeyOfTable(src, dst)),\n    };\n    return result;\n}\nexports.whereEqInnerQueryPrimaryKey = whereEqInnerQueryPrimaryKey;\n//# sourceMappingURL=where-eq-inner-query-primary-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst join_1 = require(\"../../../join\");\nconst where_clause_1 = require(\"../../../where-clause\");\nconst join_map_1 = require(\"../../../join-map\");\n/**\n * Convenience function for,\n * ```ts\n *  myQuery\n *      .where(() => tsql.eqCandidateKeyOfTable(\n *          currentQueryTable,\n *          outerQueryTable,\n *          columns => [\n *              columns.candidateKey0,\n *              columns.candidateKey1,\n *              //etc.\n *          ]\n *      ));\n * ```\n * -----\n *\n * + The `currentQueryTable` does not need to have keys.\n * + The `outerQueryTable` must have at least one candidate key.\n * + The `currentQueryTable` must have columns comparable to columns of `outerQueryTable`'s candidate key.\n */\nfunction whereEqOuterQueryCandidateKey(fromClause, whereClause, \n/**\n * @todo Remove this\n */\neqCandidateKeyOfTable, srcDelegate, dstDelegate, eqCandidateKeyOfTableDelegate) {\n    const src = srcDelegate(join_map_1.JoinMapUtil.fromJoinArray(fromClause.currentJoins));\n    const dst = dstDelegate(join_map_1.JoinMapUtil.fromJoinArray(join_1.JoinArrayUtil.extractWithCandidateKey(fromClause.outerQueryJoins)));\n    ;\n    const result = {\n        fromClause,\n        whereClause: where_clause_1.WhereClauseUtil.where(fromClause, whereClause, \n        /**\n         * @todo Investigate assignability\n         */\n        () => eqCandidateKeyOfTable(src, dst, eqCandidateKeyOfTableDelegate)),\n    };\n    return result;\n}\nexports.whereEqOuterQueryCandidateKey = whereEqOuterQueryCandidateKey;\n//# sourceMappingURL=where-eq-outer-query-candidate-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst join_1 = require(\"../../../join\");\nconst where_clause_1 = require(\"../../../where-clause\");\nconst ExprLib = require(\"../../../expr-library\");\nconst join_map_1 = require(\"../../../join-map\");\n/**\n * Convenience function for,\n * ```ts\n *  myQuery\n *      .where(() => tsql.eqPrimaryKeyOfTable(\n *          currentQueryTable,\n *          outerQueryTable\n *      ));\n * ```\n * -----\n *\n * + The `currentQueryTable` does not need to have keys.\n * + The `outerQueryTable` must have a primary key.\n * + The `currentQueryTable` must have columns comparable to columns of `outerQueryTable`'s primary key.\n */\nfunction whereEqOuterQueryPrimaryKey(fromClause, whereClause, \n/**\n * This construction effectively makes it impossible for\n * `WhereEqOuterQueryPrimaryKeySrcDelegate<>`\n * to return a union type.\n *\n * This is unfortunate but a necessary compromise for now.\n *\n * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520199818\n *\n * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520201877\n */\nsrcDelegate, dstDelegate) {\n    const src = srcDelegate(join_map_1.JoinMapUtil.fromJoinArray(fromClause.currentJoins));\n    const dst = dstDelegate(join_map_1.JoinMapUtil.fromJoinArray(join_1.JoinArrayUtil.extractWithNullSafeComparablePrimaryKey(fromClause.outerQueryJoins, src.columns)));\n    const result = {\n        fromClause,\n        whereClause: where_clause_1.WhereClauseUtil.where(fromClause, whereClause, \n        /**\n         * @todo Investigate assignability\n         */\n        () => ExprLib.eqPrimaryKeyOfTable(src, dst)),\n    };\n    return result;\n}\nexports.whereEqOuterQueryPrimaryKey = whereEqOuterQueryPrimaryKey;\n//# sourceMappingURL=where-eq-outer-query-primary-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst join_1 = require(\"../../../join\");\nconst where_clause_1 = require(\"../../../where-clause\");\nconst ExprLib = require(\"../../../expr-library\");\nconst join_map_1 = require(\"../../../join-map\");\n/**\n * Convenience function for,\n * ```ts\n *  myQuery\n *      .where(() => tsql.eqPrimaryKey(\n *          myTable,\n *          myPrimaryKey\n *      ));\n * ```\n * -----\n *\n * It is recommended to **only** use this with **object literals**.\n * Excess property checks are disabled for non-object literals.\n * Even if they were enabled, it is possible to slip in extra properties.\n *\n * Extra properties are ignored during run-time but may indicate lapses in logic.\n *\n */\nfunction whereEqPrimaryKey(fromClause, whereClause, \n/**\n * This construction effectively makes it impossible for `WhereEqPrimaryKeyDelegate<>`\n * to return a union type.\n *\n * This is unfortunate but a necessary compromise for now.\n *\n * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520199818\n *\n * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520201877\n */\n...args) {\n    const whereEqPrimaryKeyDelegate = args[0];\n    const primaryKey = args[1];\n    const table = whereEqPrimaryKeyDelegate(join_map_1.JoinMapUtil.fromJoinArray(join_1.JoinArrayUtil.extractWithPrimaryKey(fromClause.currentJoins)));\n    const result = {\n        fromClause,\n        whereClause: where_clause_1.WhereClauseUtil.where(fromClause, whereClause, \n        /**\n         * @todo Investigate assignability\n         */\n        () => ExprLib.eqPrimaryKey(table, \n        /**\n         * @todo Investigate assignability\n         */\n        primaryKey)),\n    };\n    return result;\n}\nexports.whereEqPrimaryKey = whereEqPrimaryKey;\n//# sourceMappingURL=where-eq-primary-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst join_1 = require(\"../../../join\");\nconst where_clause_1 = require(\"../../../where-clause\");\nconst join_map_1 = require(\"../../../join-map\");\n/**\n * Convenience function for,\n * ```ts\n *  myQuery\n *      .where(() => tsql.eqSuperKey(\n *          myTable,\n *          mySuperKey\n *      ));\n * ```\n *\n * -----\n *\n * It is recommended to **only** use this with **object literals**.\n * Excess property checks are disabled for non-object literals.\n * Even if they were enabled, it is possible to slip in extra properties.\n *\n * Extra properties are ignored during run-time but may indicate lapses in logic.\n *\n */\nfunction whereEqSuperKey(fromClause, whereClause, \n/**\n * @todo Remove this\n */\neqSuperKey, \n/**\n * This construction effectively makes it impossible for `WhereEqSuperKeyDelegate<>`\n * to return a union type.\n *\n * This is unfortunate but a necessary compromise for now.\n *\n * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520199818\n *\n * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520201877\n */\n...args) {\n    const whereEqSuperKeyDelegate = args[0];\n    const superKey = args[1];\n    const table = whereEqSuperKeyDelegate(join_map_1.JoinMapUtil.fromJoinArray(join_1.JoinArrayUtil.extractWithCandidateKey(fromClause.currentJoins)));\n    const result = {\n        fromClause,\n        whereClause: where_clause_1.WhereClauseUtil.where(fromClause, whereClause, \n        /**\n         * @todo Investigate assignability\n         */\n        () => eqSuperKey(table, superKey)),\n    };\n    return result;\n}\nexports.whereEqSuperKey = whereEqSuperKey;\n//# sourceMappingURL=where-eq-super-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_1 = require(\"../../../column\");\nconst join_1 = require(\"../../../join\");\nconst where_clause_1 = require(\"../../../where-clause\");\nconst column_ref_1 = require(\"../../../column-ref\");\nconst column_identifier_ref_1 = require(\"../../../column-identifier-ref\");\nconst ExprLib = require(\"../../../expr-library\");\nconst built_in_expr_1 = require(\"../../../built-in-expr\");\n/**\n * Narrows a column's type based on equality to a value\n *\n * Given the below expression,\n * ```sql\n *  SELECT\n *      myTable.myColumn\n *  FROM\n *      myTable\n *  WHERE\n *      myTable.myColumn = 1\n * ```\n *\n * We know, without even executing the query,\n * that the type of `myTable.myColumn` for all rows\n * in the result set will be `1`.\n */\nfunction whereEq(fromClause, whereClause, \n/**\n * This construction effectively makes it impossible for `WhereEqDelegate<>`\n * to return a union type.\n *\n * This is unfortunate but a necessary compromise for now.\n *\n * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520199818\n *\n * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520201877\n */\n...args) {\n    const whereEqDelegate = args[0];\n    const value = args[1];\n    const columns = column_ref_1.ColumnRefUtil.extractNonNullable(column_ref_1.ColumnRefUtil.fromColumnArray(column_1.ColumnUtil.fromJoinArray(fromClause.currentJoins)));\n    const column = whereEqDelegate(column_ref_1.ColumnRefUtil.tryFlatten(columns));\n    column_identifier_ref_1.ColumnIdentifierRefUtil.assertHasColumnIdentifier(columns, column);\n    const result = {\n        fromClause: {\n            outerQueryJoins: fromClause.outerQueryJoins,\n            currentJoins: join_1.JoinArrayUtil.replaceColumn(fromClause.currentJoins, column.tableAlias, column.columnAlias, \n            /**\n             * Cast to the type of `ValueT`\n             */\n            /*\n            tm.or(\n                BuiltInExprUtil.mapper(value),\n                tm.pipe(\n                    column.mapper,\n                    BuiltInExprUtil.mapper(value)\n                )\n            )*/\n            column.mapper),\n        },\n        whereClause: where_clause_1.WhereClauseUtil.where(fromClause, whereClause, \n        /**\n         * @todo Investigate assignability\n         */\n        () => ExprLib.eq(column, built_in_expr_1.BuiltInExprUtil.fromValueExpr(column, value))),\n    };\n    return result;\n}\nexports.whereEq = whereEq;\n//# sourceMappingURL=where-eq.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst column_1 = require(\"../../../column\");\nconst join_1 = require(\"../../../join\");\nconst where_clause_1 = require(\"../../../where-clause\");\nconst column_ref_1 = require(\"../../../column-ref\");\nconst ExprLib = require(\"../../../expr-library\");\nconst column_identifier_ref_1 = require(\"../../../column-identifier-ref\");\n/**\n * Narrows a column's type to **exclude** `null`\n *\n * Given the below expression,\n * ```sql\n *  SELECT\n *      myTable.myColumn\n *  FROM\n *      myTable\n *  WHERE\n *      myTable.myColumn IS NOT NULL\n * ```\n *\n * We know, without even executing the query,\n * that the type of `myTable.myColumn` for all rows\n * in the result set **WILL NOT** be `null`.\n */\nfunction whereIsNotNull(fromClause, whereClause, whereIsNotNullDelegate) {\n    const columns = column_ref_1.ColumnRefUtil.extractNullable(column_ref_1.ColumnRefUtil.fromColumnArray(column_1.ColumnUtil.fromJoinArray(fromClause.currentJoins)));\n    const column = whereIsNotNullDelegate(column_ref_1.ColumnRefUtil.tryFlatten(columns));\n    column_identifier_ref_1.ColumnIdentifierRefUtil.assertHasColumnIdentifier(columns, column);\n    const result = {\n        fromClause: {\n            outerQueryJoins: fromClause.outerQueryJoins,\n            currentJoins: join_1.JoinArrayUtil.replaceColumn(fromClause.currentJoins, column.tableAlias, column.columnAlias, tm.excludeLiteral(column.mapper, null)),\n        },\n        whereClause: where_clause_1.WhereClauseUtil.where(fromClause, whereClause, \n        /**\n         * @todo Investigate assignability\n         */\n        () => ExprLib.isNotNull(column)),\n    };\n    return result;\n}\nexports.whereIsNotNull = whereIsNotNull;\n//# sourceMappingURL=where-is-not-null.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst column_1 = require(\"../../../column\");\nconst join_1 = require(\"../../../join\");\nconst where_clause_1 = require(\"../../../where-clause\");\nconst column_ref_1 = require(\"../../../column-ref\");\nconst ExprLib = require(\"../../../expr-library\");\nconst column_identifier_ref_1 = require(\"../../../column-identifier-ref\");\n/**\n * Narrows a column's type to `null`\n *\n * Given the below expression,\n * ```sql\n *  SELECT\n *      myTable.myColumn\n *  FROM\n *      myTable\n *  WHERE\n *      myTable.myColumn IS NULL\n * ```\n *\n * We know, without even executing the query,\n * that the type of `myTable.myColumn` for all rows\n * in the result set will be `null`.\n */\nfunction whereIsNull(fromClause, whereClause, whereIsNullDelegate) {\n    const columns = column_ref_1.ColumnRefUtil.extractNullable(column_ref_1.ColumnRefUtil.fromColumnArray(column_1.ColumnUtil.fromJoinArray(fromClause.currentJoins)));\n    const column = whereIsNullDelegate(column_ref_1.ColumnRefUtil.tryFlatten(columns));\n    column_identifier_ref_1.ColumnIdentifierRefUtil.assertHasColumnIdentifier(columns, column);\n    const result = {\n        fromClause: {\n            outerQueryJoins: fromClause.outerQueryJoins,\n            currentJoins: join_1.JoinArrayUtil.replaceColumn(fromClause.currentJoins, column.tableAlias, column.columnAlias, tm.null()),\n        },\n        whereClause: where_clause_1.WhereClauseUtil.where(fromClause, whereClause, \n        /**\n         * @todo Investigate assignability\n         */\n        () => ExprLib.isNull(column)),\n    };\n    return result;\n}\nexports.whereIsNull = whereIsNull;\n//# sourceMappingURL=where-is-null.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_1 = require(\"../../../column\");\nconst join_1 = require(\"../../../join\");\nconst where_clause_1 = require(\"../../../where-clause\");\nconst column_ref_1 = require(\"../../../column-ref\");\nconst ExprLib = require(\"../../../expr-library\");\nconst column_identifier_ref_1 = require(\"../../../column-identifier-ref\");\nconst built_in_expr_1 = require(\"../../../built-in-expr\");\n/**\n * Narrows a column's type based on null-safe equality to a value\n *\n * Given the below expression,\n * ```sql\n *  SELECT\n *      myTable.myColumn\n *  FROM\n *      myTable\n *  WHERE\n *      myTable.myColumn <=> 1\n * ```\n *\n * We know, without even executing the query,\n * that the type of `myTable.myColumn` for all rows\n * in the result set will be `1`.\n */\nfunction whereNullSafeEq(fromClause, whereClause, \n/**\n * This construction effectively makes it impossible for `WhereNullSafeEqDelegate<>`\n * to return a union type.\n *\n * This is unfortunate but a necessary compromise for now.\n *\n * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520199818\n *\n * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520201877\n */\n...args) {\n    const whereNullSafeEqDelegate = args[0];\n    const value = args[1];\n    const columns = column_ref_1.ColumnRefUtil.fromColumnArray(column_1.ColumnUtil.fromJoinArray(fromClause.currentJoins));\n    const column = whereNullSafeEqDelegate(column_ref_1.ColumnRefUtil.tryFlatten(columns));\n    column_identifier_ref_1.ColumnIdentifierRefUtil.assertHasColumnIdentifier(columns, column);\n    const result = {\n        fromClause: {\n            outerQueryJoins: fromClause.outerQueryJoins,\n            currentJoins: join_1.JoinArrayUtil.replaceColumn(fromClause.currentJoins, column.tableAlias, column.columnAlias, \n            /**\n             * Cast to the type of `ValueT`\n             */\n            /*\n            tm.or(\n                BuiltInExprUtil.mapper(value),\n                tm.pipe(\n                    column.mapper,\n                    BuiltInExprUtil.mapper(value)\n                )\n            )*/\n            column.mapper),\n        },\n        whereClause: where_clause_1.WhereClauseUtil.where(fromClause, whereClause, \n        /**\n         * @todo Investigate assignability\n         */\n        () => ExprLib.nullSafeEq(column, built_in_expr_1.BuiltInExprUtil.fromValueExpr(column_1.ColumnUtil.toNullable(column), value))),\n    };\n    return result;\n}\nexports.whereNullSafeEq = whereNullSafeEq;\n//# sourceMappingURL=where-null-safe-eq.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst used_ref_1 = require(\"../../../used-ref\");\nconst column_ref_1 = require(\"../../../column-ref\");\nconst column_identifier_ref_1 = require(\"../../../column-identifier-ref\");\nfunction allowedJoinArray(fromClause, aliasedTable) {\n    return [\n        ...((fromClause.outerQueryJoins != undefined) ?\n            fromClause.outerQueryJoins :\n            []),\n        ...((aliasedTable.isLateral && fromClause.currentJoins != undefined) ?\n            fromClause.currentJoins :\n            []),\n    ];\n}\nexports.allowedJoinArray = allowedJoinArray;\nfunction allowedColumnRef(fromClause, aliasedTable) {\n    return column_ref_1.ColumnRefUtil.fromJoinArray(allowedJoinArray(fromClause, aliasedTable));\n}\nexports.allowedColumnRef = allowedColumnRef;\nfunction allowedColumnIdentifierRef(fromClause, aliasedTable) {\n    return column_identifier_ref_1.ColumnIdentifierRefUtil.fromJoinArray(allowedJoinArray(fromClause, aliasedTable));\n}\nexports.allowedColumnIdentifierRef = allowedColumnIdentifierRef;\nfunction allowedUsedRef(fromClause, aliasedTable) {\n    return used_ref_1.UsedRefUtil.fromJoinArray(allowedJoinArray(fromClause, aliasedTable));\n}\nexports.allowedUsedRef = allowedUsedRef;\n//# sourceMappingURL=allowed-used-ref.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction assertAfterFromClause(fromClause) {\n    if (fromClause.currentJoins == undefined) {\n        throw new Error(`Must be after FROM clause`);\n    }\n}\nexports.assertAfterFromClause = assertAfterFromClause;\n//# sourceMappingURL=assert-after-from-clause.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction assertBeforeFromClause(fromClause) {\n    if (fromClause.currentJoins != undefined) {\n        throw new Error(`Must be before FROM clause`);\n    }\n}\nexports.assertBeforeFromClause = assertBeforeFromClause;\n//# sourceMappingURL=assert-before-from-clause.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction assertNoUsedRef(aliasedTable) {\n    if (Object.keys(aliasedTable.usedRef.columns).length > 0) {\n        throw new Error(`Derived table ${aliasedTable.alias} must not reference outer query tables or tables in the same FROM/JOIN clause`);\n    }\n}\nexports.assertNoUsedRef = assertNoUsedRef;\n//# sourceMappingURL=assert-no-used-ref.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction assertNotInCurrentJoins(fromClause, aliasedTable) {\n    if (fromClause.currentJoins != undefined) {\n        if (fromClause.currentJoins.some(j => j.tableAlias == aliasedTable.alias)) {\n            throw new Error(`Table alias ${aliasedTable.alias} already used in current query JOINs`);\n        }\n    }\n}\nexports.assertNotInCurrentJoins = assertNotInCurrentJoins;\n//# sourceMappingURL=assert-not-in-current-joins.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction assertNotInOuterQueryJoins(fromClause, aliasedTable) {\n    if (fromClause.outerQueryJoins != undefined) {\n        if (fromClause.outerQueryJoins.some(j => j.tableAlias == aliasedTable.alias)) {\n            throw new Error(`Table alias ${aliasedTable.alias} already used in outer query JOINs`);\n        }\n    }\n}\nexports.assertNotInOuterQueryJoins = assertNotInOuterQueryJoins;\n//# sourceMappingURL=assert-not-in-outer-query-joins.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction assertNotLateral(aliasedTable) {\n    if (aliasedTable.isLateral) {\n        throw new Error(`${aliasedTable.alias} cannot be LATERAL; does your DBMS support it?`);\n    }\n}\nexports.assertNotLateral = assertNotLateral;\n//# sourceMappingURL=assert-not-lateral.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst assert_not_in_current_joins_1 = require(\"./assert-not-in-current-joins\");\nconst assert_not_in_outer_query_joins_1 = require(\"./assert-not-in-outer-query-joins\");\nconst allowed_used_ref_1 = require(\"./allowed-used-ref\");\nconst used_ref_1 = require(\"../../../used-ref\");\nfunction assertValidCurrentJoinBase(fromClause, aliasedTable) {\n    assert_not_in_current_joins_1.assertNotInCurrentJoins(fromClause, aliasedTable);\n    assert_not_in_outer_query_joins_1.assertNotInOuterQueryJoins(fromClause, aliasedTable);\n    used_ref_1.UsedRefUtil.assertAllowed(allowed_used_ref_1.allowedUsedRef(fromClause, aliasedTable), aliasedTable.usedRef);\n}\nexports.assertValidCurrentJoinBase = assertValidCurrentJoinBase;\n//# sourceMappingURL=assert-valid-current-join-base.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst assert_not_in_current_joins_1 = require(\"./assert-not-in-current-joins\");\nconst assert_not_in_outer_query_joins_1 = require(\"./assert-not-in-outer-query-joins\");\nconst aliased_table_1 = require(\"../../../aliased-table\");\nfunction assertValidOuterQueryJoins(fromClause, aliasedTables) {\n    for (const aliasedTable of aliasedTables) {\n        assert_not_in_current_joins_1.assertNotInCurrentJoins(fromClause, aliasedTable);\n        assert_not_in_outer_query_joins_1.assertNotInOuterQueryJoins(fromClause, aliasedTable);\n    }\n    aliased_table_1.AliasedTableArrayUtil.assertNoDuplicateTableAlias(aliasedTables);\n}\nexports.assertValidOuterQueryJoins = assertValidOuterQueryJoins;\n//# sourceMappingURL=assert-valid-outer-query-joins.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./allowed-used-ref\"));\n__export(require(\"./assert-after-from-clause\"));\n__export(require(\"./assert-before-from-clause\"));\n__export(require(\"./assert-no-used-ref\"));\n__export(require(\"./assert-not-in-current-joins\"));\n__export(require(\"./assert-not-in-outer-query-joins\"));\n__export(require(\"./assert-not-lateral\"));\n__export(require(\"./assert-valid-current-join-base\"));\n__export(require(\"./assert-valid-outer-query-joins\"));\n__export(require(\"./is-after-from-clause\"));\n__export(require(\"./is-before-from-clause\"));\n__export(require(\"./is-from-clause\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_from_clause_1 = require(\"./is-from-clause\");\nfunction isAfterFromClause(x) {\n    return is_from_clause_1.isFromClause(x) && (x.currentJoins != undefined);\n}\nexports.isAfterFromClause = isAfterFromClause;\n//# sourceMappingURL=is-after-from-clause.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_from_clause_1 = require(\"./is-from-clause\");\nfunction isBeforeFromClause(x) {\n    return is_from_clause_1.isFromClause(x) && (x.currentJoins == undefined);\n}\nexports.isBeforeFromClause = isBeforeFromClause;\n//# sourceMappingURL=is-before-from-clause.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst type_util_1 = require(\"../../../type-util\");\n//import {UsedRefUtil} from \"../../../used-ref\";\n//import {AstUtil} from \"../../../ast\";\n/**\n * Only checks that the properties exist.\n * Does not actually check that they are the right data type!\n *\n * @todo Consider adding checks for increased type safety.\n */\nfunction isFromClause(x) {\n    if (!type_util_1.isObjectWithOwnEnumerableKeys()(x, [\n        \"outerQueryJoins\",\n        \"currentJoins\",\n    ])) {\n        return false;\n    }\n    return true;\n}\nexports.isFromClause = isFromClause;\n//# sourceMappingURL=is-from-clause.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./outer-query-table-alias\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction outerQueryTableAlias(fromClause) {\n    if (fromClause.outerQueryJoins == undefined) {\n        return [];\n    }\n    else {\n        return fromClause.outerQueryJoins.map(join => join.tableAlias);\n    }\n}\nexports.outerQueryTableAlias = outerQueryTableAlias;\n//# sourceMappingURL=outer-query-table-alias.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst GroupByClauseUtil = require(\"./util\");\nexports.GroupByClauseUtil = GroupByClauseUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./operation\"));\n__export(require(\"./predicate\"));\n__export(require(\"./query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_clause_1 = require(\"../../../from-clause\");\nconst query_1 = require(\"../query\");\nconst column_identifier_ref_1 = require(\"../../../column-identifier-ref\");\n/**\n * Returns the MySQL equivalent of `...groupByClause, ...groupByDelegate(columns)`\n *\n * -----\n *\n * Consider the following,\n * ```sql\n *  SELECT 1 AS a GROUP BY a\n * ```\n *\n * + The above works on PostgreSQL 9.4\n * + The above **does not** work on MySQL 5.7\n * -----\n *\n * We only allow `GROUP BY` after the `FROM` clause because\n * it isn't very useful without a `FROM` clause.\n *\n * @param fromClause\n * @param selectClause\n * @param groupByClause\n * @param groupByDelegate\n */\nfunction groupBy(fromClause, groupByClause, groupByDelegate) {\n    from_clause_1.FromClauseUtil.assertAfterFromClause(fromClause);\n    const columns = query_1.allowedColumnIdentifierRef(fromClause);\n    const groupBy = groupByDelegate(column_identifier_ref_1.ColumnIdentifierRefUtil.tryFlatten(columns));\n    column_identifier_ref_1.ColumnIdentifierRefUtil.assertHasColumnIdentifiers(columns, groupBy);\n    return (groupByClause == undefined ?\n        groupBy :\n        [...groupByClause, ...groupBy]);\n}\nexports.groupBy = groupBy;\n//# sourceMappingURL=group-by.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./group-by\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./is-non-empty\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction assertNonEmpty(groupByClause) {\n    if (groupByClause.length == 0) {\n        throw new Error(`GROUP BY clause cannot be empty`);\n    }\n}\nexports.assertNonEmpty = assertNonEmpty;\n//# sourceMappingURL=is-non-empty.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_identifier_ref_1 = require(\"../../../column-identifier-ref\");\nfunction allowedColumnIdentifierRef(fromClause) {\n    return column_identifier_ref_1.ColumnIdentifierRefUtil.fromJoinArray(fromClause.currentJoins);\n}\nexports.allowedColumnIdentifierRef = allowedColumnIdentifierRef;\n//# sourceMappingURL=allowed-used-ref.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./allowed-used-ref\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst HavingClauseUtil = require(\"./util\");\nexports.HavingClauseUtil = HavingClauseUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./operation\"));\n__export(require(\"./query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_ref_1 = require(\"../../../column-ref\");\nconst ExprLib = require(\"../../../expr-library\");\nconst query_1 = require(\"../query\");\nconst used_ref_1 = require(\"../../../used-ref\");\nconst expr_1 = require(\"../../../expr\");\nconst built_in_expr_1 = require(\"../../../built-in-expr\");\nconst group_by_clause_1 = require(\"../../../group-by-clause\");\n/**\n * Returns the MySQL equivalent of `havingClause AND havingDelegate(columns)`\n *\n * -----\n *\n * For now, this is basically the same as `WhereClauseUtil.where<>()`.\n *\n * They will diverge when,\n * + The `HAVING` clause enforces proper `GROUP BY` interactions.\n *\n * -----\n *\n * @param fromClause\n * @param havingClause\n * @param havingDelegate\n */\nfunction having(fromClause, groupByClause, havingClause, havingDelegate) {\n    group_by_clause_1.GroupByClauseUtil.assertNonEmpty(groupByClause);\n    const columns = query_1.allowedColumnRef(fromClause);\n    const operand = havingDelegate(column_ref_1.ColumnRefUtil.tryFlatten(columns));\n    if (built_in_expr_1.BuiltInExprUtil.isAggregate(operand)) {\n        used_ref_1.UsedRefUtil.assertAllowed({ columns }, built_in_expr_1.BuiltInExprUtil.usedRef(operand));\n    }\n    else {\n        used_ref_1.UsedRefUtil.assertAllowed({\n            columns: query_1.allowedNonAggregateColumnRef(fromClause, groupByClause),\n        }, built_in_expr_1.BuiltInExprUtil.usedRef(operand));\n    }\n    return (havingClause == undefined ?\n        expr_1.ExprUtil.fromBuiltInExpr(operand) :\n        ExprLib.and(havingClause, operand));\n}\nexports.having = having;\n//# sourceMappingURL=having.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./having\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_ref_1 = require(\"../../../column-ref\");\nconst used_ref_1 = require(\"../../../used-ref\");\nfunction allowedNonAggregateColumnRef(fromClause, groupByClause) {\n    const outer = column_ref_1.ColumnRefUtil.fromJoinArray(fromClause.outerQueryJoins == undefined ?\n        [] :\n        fromClause.outerQueryJoins);\n    const inner = column_ref_1.ColumnRefUtil.extractColumnIdentifiers(column_ref_1.ColumnRefUtil.fromJoinArray(fromClause.currentJoins == undefined ?\n        [] :\n        fromClause.currentJoins), groupByClause);\n    return column_ref_1.ColumnRefUtil.intersect(outer, inner);\n}\nexports.allowedNonAggregateColumnRef = allowedNonAggregateColumnRef;\nfunction allowedNonAggregateUsedRef(fromClause, groupByClause) {\n    return used_ref_1.UsedRefUtil.fromColumnRef(allowedNonAggregateColumnRef(fromClause, groupByClause));\n}\nexports.allowedNonAggregateUsedRef = allowedNonAggregateUsedRef;\n//# sourceMappingURL=allowed-non-aggregate-used-ref.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_clause_1 = require(\"../../../from-clause\");\n/**\n * For now, this is basically the same as `WhereClauseUtil.AllowedColumnRef<>`.\n *\n * They will diverge when,\n * + The `HAVING` clause enforces proper `GROUP BY` interactions.\n */\nfunction allowedColumnRef(fromClause) {\n    return from_clause_1.FromClauseUtil.allowedColumnRef(fromClause, { isLateral: true });\n}\nexports.allowedColumnRef = allowedColumnRef;\n/**\n * For now, this is basically the same as `WhereClauseUtil.AllowedUsedRef<>`.\n *\n * They will diverge when,\n * + The `HAVING` clause enforces proper `GROUP BY` interactions.\n */\nfunction allowedUsedRef(fromClause) {\n    return from_clause_1.FromClauseUtil.allowedUsedRef(fromClause, { isLateral: true });\n}\nexports.allowedUsedRef = allowedUsedRef;\n//# sourceMappingURL=allowed-used-ref.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./allowed-non-aggregate-used-ref\"));\n__export(require(\"./allowed-used-ref\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./aliased-expr\"));\n__export(require(\"./aliased-table\"));\n__export(require(\"./ast\"));\n__export(require(\"./built-in-expr\"));\n__export(require(\"./built-in-value-expr\"));\n__export(require(\"./candidate-key\"));\n__export(require(\"./column\"));\n__export(require(\"./column-identifier\"));\n__export(require(\"./column-identifier-map\"));\n__export(require(\"./column-identifier-ref\"));\n__export(require(\"./column-map\"));\n__export(require(\"./column-ref\"));\n__export(require(\"./compound-query\"));\n__export(require(\"./compound-query-clause\"));\n__export(require(\"./compound-query-order-by-clause\"));\n__export(require(\"./custom-expr\"));\n__export(require(\"./data-type\"));\n__export(require(\"./derived-table\"));\n__export(require(\"./derived-table-select-item\"));\n__export(require(\"./design-pattern-log\"));\n__export(require(\"./design-pattern-table-per-type\"));\n__export(require(\"./event\"));\n__export(require(\"./execution\"));\n__export(require(\"./expr\"));\n__export(require(\"./expr-column\"));\n__export(require(\"./expr-library\"));\n__export(require(\"./expr-select-item\"));\n__export(require(\"./from-clause\"));\n__export(require(\"./group-by-clause\"));\n__export(require(\"./having-clause\"));\n__export(require(\"./insert\"));\n__export(require(\"./insert-select\"));\n__export(require(\"./join\"));\n__export(require(\"./join-map\"));\n__export(require(\"./key\"));\n__export(require(\"./limit-clause\"));\n__export(require(\"./map-delegate\"));\n__export(require(\"./mapper-map\"));\n__export(require(\"./on-clause\"));\n__export(require(\"./order\"));\n__export(require(\"./order-by-clause\"));\n__export(require(\"./partial-row\"));\n__export(require(\"./primary-key\"));\n__export(require(\"./query-base\"));\n__export(require(\"./row\"));\n__export(require(\"./schema-validation\"));\n__export(require(\"./select-clause\"));\n__export(require(\"./select-item\"));\n__export(require(\"./sort-direction\"));\n__export(require(\"./super-key\"));\n__export(require(\"./sqlstring\"));\n__export(require(\"./table\"));\n__export(require(\"./table-where\"));\n__export(require(\"./type-map\"));\n__export(require(\"./type-ref\"));\n__export(require(\"./unified-query\"));\n__export(require(\"./update\"));\n__export(require(\"./used-ref\"));\n__export(require(\"./value-expr\"));\n__export(require(\"./where-clause\"));\n__export(require(\"./async-queue\"));\n__export(require(\"./constants\"));\n__export(require(\"./error\"));\n__export(require(\"./isolation-level\"));\n__export(require(\"./operator-type\"));\n__export(require(\"./transaction-access-mode\"));\n__export(require(\"./type-hint\"));\nconst DateTimeUtil = require(\"./date-time-util\");\nexports.DateTimeUtil = DateTimeUtil;\nconst FormatUtil = require(\"./formatter\");\nexports.FormatUtil = FormatUtil;\nconst PromiseUtil = require(\"./promise-util\");\nexports.PromiseUtil = PromiseUtil;\nconst TupleUtil = require(\"./tuple-util\");\nexports.TupleUtil = TupleUtil;\nconst TypeUtil = require(\"./type-util\");\nexports.TypeUtil = TypeUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst InsertSelectUtil = require(\"./util\");\nexports.InsertSelectUtil = InsertSelectUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./insert-select\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_ref_1 = require(\"../../../column-ref\");\nconst operation_1 = require(\"../operation\");\nfunction insertSelect(query, table, delegate) {\n    const columns = column_ref_1.ColumnRefUtil.tryFlatten(column_ref_1.ColumnRefUtil.fromSelectClause(query.selectClause));\n    const row = delegate(columns);\n    return operation_1.cleanInsertSelectRow(query, table, row);\n}\nexports.insertSelect = insertSelect;\n//# sourceMappingURL=insert-select.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./constructor\"));\n__export(require(\"./operation\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst built_in_value_expr_1 = require(\"../../../built-in-value-expr\");\nconst built_in_expr_1 = require(\"../../../built-in-expr\");\nconst query_base_1 = require(\"../../../query-base\");\nconst expr_1 = require(\"../../../expr\");\nconst expr_select_item_1 = require(\"../../../expr-select-item\");\nconst error_1 = require(\"../../../error\");\nconst column_1 = require(\"../../../column\");\nconst column_identifier_ref_1 = require(\"../../../column-identifier-ref\");\nfunction cleanInsertSelectColumn(allowedColumnRef, table, row, columnAlias, required) {\n    const customExpr = (\n    /**\n     * This is just safer.\n     *\n     * But how regularly should we access properties of mapped types this way?\n     * All the time?\n     * If so, why?\n     *\n     * Sometimes?\n     * If so, what's the criteria?\n     *\n     * @todo Figure this out\n     */\n    (Object.prototype.hasOwnProperty.call(row, columnAlias) &&\n        Object.prototype.propertyIsEnumerable.call(row, columnAlias)) ?\n        row[columnAlias] :\n        undefined);\n    if (customExpr === undefined) {\n        if (required) {\n            throw new error_1.MissingRequiredInsertColumnError({\n                message: `Expected value for ${table.alias}.${columnAlias}; received undefined`,\n                table,\n                columnAlias\n            });\n        }\n        else {\n            return undefined;\n        }\n    }\n    if (column_1.ColumnUtil.isColumn(customExpr)) {\n        if (!column_identifier_ref_1.ColumnIdentifierRefUtil.hasColumnIdentifier(allowedColumnRef, customExpr)) {\n            throw new Error(`Invalid SELECT alias ${customExpr.tableAlias}.${customExpr.columnAlias}`);\n        }\n        return customExpr;\n    }\n    else if (built_in_value_expr_1.BuiltInValueExprUtil.isBuiltInValueExpr(customExpr)) {\n        return table.columns[columnAlias].mapper(`${table.alias}.${columnAlias}`, customExpr);\n    }\n    else if (built_in_expr_1.BuiltInExprUtil.isAnySubqueryExpr(customExpr)) {\n        /**\n         * Can't really perform many checks here.\n         * We can, however, check for `NULL`s.\n         */\n        if (query_base_1.QueryBaseUtil.isZeroOrOneRow(customExpr) &&\n            !tm.canOutputNull(table.columns[columnAlias].mapper)) {\n            throw new error_1.PotentialNullInRequiredInsertColumnError({\n                message: `Cannot INSERT possibly NULL subquery expression to ${table.alias}.${columnAlias}`,\n                table,\n                columnAlias\n            });\n        }\n        return customExpr;\n    }\n    else {\n        /**\n         * Could be an `IExpr`, `IExprSelectItem`, or a custom data type\n         */\n        if (expr_1.ExprUtil.isExpr(customExpr) ||\n            expr_select_item_1.ExprSelectItemUtil.isExprSelectItem(customExpr)) {\n            /**\n             * @todo Should we validate these?\n             * How would one even do that?\n             */\n            return customExpr;\n        }\n        /**\n         * Maybe a custom data type?\n         */\n        return built_in_expr_1.BuiltInExprUtil.fromValueExpr(table.columns[columnAlias], customExpr);\n    }\n}\nexports.cleanInsertSelectColumn = cleanInsertSelectColumn;\n//# sourceMappingURL=clean-insert-select-column.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_1 = require(\"../../../table\");\nconst clean_insert_select_column_1 = require(\"./clean-insert-select-column\");\nconst column_ref_1 = require(\"../../../column-ref\");\n/**\n * + Removes excess properties.\n * + Removes properties with value `undefined`.\n * + Checks required properties are there.\n */\nfunction cleanInsertSelectRow(query, table, row) {\n    const allowedColumnRef = column_ref_1.ColumnRefUtil.fromSelectClause(query.selectClause);\n    const result = {};\n    for (const requiredColumnAlias of table_1.TableUtil.requiredColumnAlias(table)) {\n        result[requiredColumnAlias] = clean_insert_select_column_1.cleanInsertSelectColumn(allowedColumnRef, table, row, requiredColumnAlias, true);\n    }\n    for (const optionalColumnAlias of table_1.TableUtil.optionalColumnAlias(table)) {\n        const value = clean_insert_select_column_1.cleanInsertSelectColumn(allowedColumnRef, table, row, optionalColumnAlias, false);\n        if (value === undefined) {\n            continue;\n        }\n        result[optionalColumnAlias] = value;\n    }\n    return result;\n}\nexports.cleanInsertSelectRow = cleanInsertSelectRow;\n//# sourceMappingURL=clean-insert-select-row.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./clean-insert-select-column\"));\n__export(require(\"./clean-insert-select-row\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst InsertUtil = require(\"./util\");\nexports.InsertUtil = InsertUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./operation\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst built_in_value_expr_1 = require(\"../../../built-in-value-expr\");\nconst built_in_expr_1 = require(\"../../../built-in-expr\");\nconst query_base_1 = require(\"../../../query-base\");\nconst expr_1 = require(\"../../../expr\");\nconst expr_select_item_1 = require(\"../../../expr-select-item\");\nconst error_1 = require(\"../../../error\");\nfunction cleanInsertColumn(table, row, columnAlias, required) {\n    const customExpr = (\n    /**\n     * This is just safer.\n     *\n     * But how regularly should we access properties of mapped types this way?\n     * All the time?\n     * If so, why?\n     *\n     * Sometimes?\n     * If so, what's the criteria?\n     *\n     * @todo Figure this out\n     */\n    (Object.prototype.hasOwnProperty.call(row, columnAlias) &&\n        Object.prototype.propertyIsEnumerable.call(row, columnAlias)) ?\n        row[columnAlias] :\n        undefined);\n    if (customExpr === undefined) {\n        if (required) {\n            throw new error_1.MissingRequiredInsertColumnError({\n                message: `Expected value for ${table.alias}.${columnAlias}; received undefined`,\n                table,\n                columnAlias\n            });\n        }\n        else {\n            return undefined;\n        }\n    }\n    if (built_in_value_expr_1.BuiltInValueExprUtil.isBuiltInValueExpr(customExpr)) {\n        return table.columns[columnAlias].mapper(`${table.alias}.${columnAlias}`, customExpr);\n    }\n    else if (built_in_expr_1.BuiltInExprUtil.isAnySubqueryExpr(customExpr)) {\n        /**\n         * Can't really perform many checks here.\n         * We can, however, check for `NULL`s.\n         */\n        if (query_base_1.QueryBaseUtil.isZeroOrOneRow(customExpr) &&\n            !tm.canOutputNull(table.columns[columnAlias].mapper)) {\n            throw new error_1.PotentialNullInRequiredInsertColumnError({\n                message: `Cannot INSERT possibly NULL subquery expression to ${table.alias}.${columnAlias}`,\n                table,\n                columnAlias\n            });\n        }\n        return customExpr;\n    }\n    else {\n        /**\n         * Could be an `IExpr`, `IExprSelectItem`, or a custom data type\n         */\n        if (expr_1.ExprUtil.isExpr(customExpr) ||\n            expr_select_item_1.ExprSelectItemUtil.isExprSelectItem(customExpr)) {\n            /**\n             * @todo Should we validate these?\n             * How would one even do that?\n             */\n            return customExpr;\n        }\n        /**\n         * Maybe a custom data type?\n         */\n        return built_in_expr_1.BuiltInExprUtil.fromValueExpr(table.columns[columnAlias], customExpr);\n    }\n}\nexports.cleanInsertColumn = cleanInsertColumn;\n//# sourceMappingURL=clean-insert-column.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_1 = require(\"../../../table\");\nconst clean_insert_column_1 = require(\"./clean-insert-column\");\n/**\n * + Removes excess properties.\n * + Removes properties with value `undefined`.\n * + Checks required properties are there.\n */\nfunction cleanInsertRow(table, row) {\n    const result = {};\n    for (const requiredColumnAlias of table_1.TableUtil.requiredColumnAlias(table)) {\n        result[requiredColumnAlias] = clean_insert_column_1.cleanInsertColumn(table, row, requiredColumnAlias, true);\n    }\n    for (const optionalColumnAlias of table_1.TableUtil.optionalColumnAlias(table)) {\n        const value = clean_insert_column_1.cleanInsertColumn(table, row, optionalColumnAlias, false);\n        if (value === undefined) {\n            continue;\n        }\n        result[optionalColumnAlias] = value;\n    }\n    return result;\n}\nexports.cleanInsertRow = cleanInsertRow;\n//# sourceMappingURL=clean-insert-row.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./clean-insert-column\"));\n__export(require(\"./clean-insert-row\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Isolation levels ranked from weakest to strongest,\n * 1. `READ_UNCOMMITTED`\n * 2. `READ_COMMITTED`\n * 3. `REPEATABLE_READ`\n * 4. `SERIALIZABLE`\n *\n * https://github.com/AnyhowStep/tsql/issues/14\n */\nvar IsolationLevel;\n(function (IsolationLevel) {\n    IsolationLevel[\"READ_UNCOMMITTED\"] = \"READ_UNCOMMITTED\";\n    IsolationLevel[\"READ_COMMITTED\"] = \"READ_COMMITTED\";\n    IsolationLevel[\"REPEATABLE_READ\"] = \"REPEATABLE_READ\";\n    IsolationLevel[\"SERIALIZABLE\"] = \"SERIALIZABLE\";\n})(IsolationLevel = exports.IsolationLevel || (exports.IsolationLevel = {}));\nvar IsolationLevelUtil;\n(function (IsolationLevelUtil) {\n    const isolationLevelStrengths = {\n        [IsolationLevel.READ_UNCOMMITTED]: 0,\n        [IsolationLevel.READ_COMMITTED]: 1,\n        [IsolationLevel.REPEATABLE_READ]: 2,\n        [IsolationLevel.SERIALIZABLE]: 3,\n    };\n    /**\n     * Is isolation level `a` weaker than `b`?\n     */\n    function isWeakerThan(a, b) {\n        return isolationLevelStrengths[a] < isolationLevelStrengths[b];\n    }\n    IsolationLevelUtil.isWeakerThan = isWeakerThan;\n})(IsolationLevelUtil = exports.IsolationLevelUtil || (exports.IsolationLevelUtil = {}));\n//# sourceMappingURL=isolation-level.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst JoinMapUtil = require(\"./util\");\nexports.JoinMapUtil = JoinMapUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction fromJoinArray(joins) {\n    const result = {};\n    for (const join of joins) {\n        result[join.tableAlias] = join;\n    }\n    return result;\n}\nexports.fromJoinArray = fromJoinArray;\n//# sourceMappingURL=from-join-array.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./from-join-array\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./constructor\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./operation\"));\n__export(require(\"./query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction append(arr, ...join) {\n    return [...arr, ...join];\n}\nexports.append = append;\n//# sourceMappingURL=append.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./append\"));\n__export(require(\"./replace-column\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst JoinUtil = require(\"../../util\");\nfunction replaceColumn(joins, tableAlias, columnAlias, mapper) {\n    return joins.map(join => JoinUtil.replaceColumn(join, tableAlias, columnAlias, mapper));\n}\nexports.replaceColumn = replaceColumn;\n//# sourceMappingURL=replace-column.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction extractWithCandidateKey(joins) {\n    return joins.filter((join) => (join.candidateKeys.length > 0));\n}\nexports.extractWithCandidateKey = extractWithCandidateKey;\n//# sourceMappingURL=extract-with-candidate-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_1 = require(\"../../../table\");\nfunction extractWithNullSafeComparablePrimaryKey(joins, columnMap) {\n    return joins.filter((join) => {\n        if (join.primaryKey == undefined) {\n            return false;\n        }\n        return table_1.TableUtil.hasNullSafeComparablePrimaryKey({\n            columns: join.columns,\n            primaryKey: join.primaryKey,\n        }, columnMap);\n    });\n}\nexports.extractWithNullSafeComparablePrimaryKey = extractWithNullSafeComparablePrimaryKey;\n//# sourceMappingURL=extract-with-null-safe-comparable-primary-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction extractWithPrimaryKey(joins) {\n    return joins.filter((join) => (join.primaryKey != undefined));\n}\nexports.extractWithPrimaryKey = extractWithPrimaryKey;\n//# sourceMappingURL=extract-with-primary-key.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./extract-with-candidate-key\"));\n__export(require(\"./extract-with-primary-key\"));\n__export(require(\"./extract-with-null-safe-comparable-primary-key\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./join-impl\"));\n__export(require(\"./join\"));\nconst JoinArrayUtil = require(\"./array-util\");\nexports.JoinArrayUtil = JoinArrayUtil;\nconst JoinUtil = require(\"./util\");\nexports.JoinUtil = JoinUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Join {\n    constructor(data, joinType, onClause, tableAst) {\n        this.tableAlias = data.tableAlias;\n        this.columns = data.columns;\n        this.nullable = data.nullable;\n        this.originalColumns = data.originalColumns;\n        this.primaryKey = data.primaryKey;\n        this.candidateKeys = data.candidateKeys;\n        this.deleteEnabled = data.deleteEnabled;\n        this.mutableColumns = data.mutableColumns;\n        this.joinType = joinType;\n        this.onClause = onClause;\n        this.tableAst = tableAst;\n    }\n}\nexports.Join = Join;\n//# sourceMappingURL=join-impl.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nvar JoinType;\n(function (JoinType) {\n    JoinType[\"FROM\"] = \"FROM\";\n    JoinType[\"INNER\"] = \"INNER\";\n    JoinType[\"LEFT\"] = \"LEFT\";\n    /**\n     * @todo Remove this?\n     */\n    JoinType[\"RIGHT\"] = \"RIGHT\";\n    JoinType[\"CROSS\"] = \"CROSS\";\n})(JoinType = exports.JoinType || (exports.JoinType = {}));\n;\nexports.JoinTypeValues = tm.EnumUtil.getValues(JoinType);\n//# sourceMappingURL=join.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst join_impl_1 = require(\"../../join-impl\");\nconst aliased_table_1 = require(\"../../../aliased-table\");\nfunction fromAliasedTable(aliasedTable, nullable, joinType, onClause) {\n    const result = new join_impl_1.Join({\n        tableAlias: aliasedTable.alias,\n        nullable,\n        columns: aliasedTable.columns,\n        originalColumns: aliasedTable.columns,\n        primaryKey: aliased_table_1.AliasedTableUtil.primaryKey(aliasedTable),\n        candidateKeys: aliased_table_1.AliasedTableUtil.candidateKeys(aliasedTable),\n        deleteEnabled: aliased_table_1.AliasedTableUtil.deleteEnabled(aliasedTable),\n        mutableColumns: aliased_table_1.AliasedTableUtil.mutableColumns(aliasedTable),\n    }, joinType, onClause, aliasedTable.unaliasedAst);\n    return result;\n}\nexports.fromAliasedTable = fromAliasedTable;\n//# sourceMappingURL=from-aliased-table.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./from-aliased-table\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./constructor\"));\n__export(require(\"./operation\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./replace-column\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_map_1 = require(\"../../../column-map\");\nconst join_impl_1 = require(\"../../join-impl\");\nfunction replaceColumn(join, tableAlias, columnAlias, mapper) {\n    if (join.tableAlias == tableAlias &&\n        Object.prototype.hasOwnProperty.call(join.columns, columnAlias) &&\n        Object.prototype.propertyIsEnumerable.call(join.columns, columnAlias)) {\n        const { tableAlias, nullable, columns, originalColumns, primaryKey, candidateKeys, deleteEnabled, mutableColumns, } = join;\n        const result = new join_impl_1.Join({\n            tableAlias,\n            nullable,\n            columns: column_map_1.ColumnMapUtil.replaceColumn(columns, columnAlias, mapper),\n            originalColumns,\n            primaryKey,\n            candidateKeys,\n            deleteEnabled,\n            mutableColumns,\n        }, join.joinType, join.onClause, join.tableAst);\n        return result;\n    }\n    else {\n        return join;\n    }\n}\nexports.replaceColumn = replaceColumn;\n//# sourceMappingURL=replace-column.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./operation\"));\n__export(require(\"./predicate\"));\n__export(require(\"./query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst remove_duplicates_1 = require(\"./remove-duplicates\");\nfunction append(arr, key) {\n    return remove_duplicates_1.removeDuplicates([...arr, key]);\n}\nexports.append = append;\n//# sourceMappingURL=append.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./append\"));\n__export(require(\"./remove-duplicates\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst predicate_1 = require(\"../predicate\");\nconst KeyUtil = require(\"../../util\");\nfunction removeDuplicates(arr) {\n    const result = [];\n    for (const key of arr) {\n        if (!predicate_1.hasKey(result, key)) {\n            result.push(KeyUtil.removeDuplicates(key));\n        }\n    }\n    return result;\n}\nexports.removeDuplicates = removeDuplicates;\n//# sourceMappingURL=remove-duplicates.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst KeyUtil = require(\"../../util\");\nfunction hasKey(arr, key) {\n    for (const k of arr) {\n        if (KeyUtil.isEqual(k, key)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.hasKey = hasKey;\n//# sourceMappingURL=has-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst KeyUtil = require(\"../../util\");\nfunction hasSubKey(arr, key) {\n    for (const k of arr) {\n        if (KeyUtil.isSubKey(k, key)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.hasSubKey = hasSubKey;\n//# sourceMappingURL=has-sub-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst KeyUtil = require(\"../../util\");\nfunction hasSuperKey(arr, key) {\n    for (const k of arr) {\n        if (KeyUtil.isSubKey(key, k)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.hasSuperKey = hasSuperKey;\n//# sourceMappingURL=has-super-key.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./has-key\"));\n__export(require(\"./has-sub-key\"));\n__export(require(\"./has-super-key\"));\n__export(require(\"./is-key-array\"));\n__export(require(\"./is-disjoint\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst KeyUtil = require(\"../../util\");\nfunction isDisjoint(arrayA, arrayB) {\n    for (const a of arrayA) {\n        for (const b of arrayB) {\n            if (KeyUtil.isEqual(a, b)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexports.isDisjoint = isDisjoint;\n//# sourceMappingURL=is-disjoint.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst KeyUtil = require(\"../../util\");\nfunction isKeyArray(raw) {\n    if (!Array.isArray(raw)) {\n        return false;\n    }\n    for (const item of raw) {\n        if (!KeyUtil.isKey(item)) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.isKeyArray = isKeyArray;\n//# sourceMappingURL=is-key-array.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst KeyUtil = require(\"../../util\");\nfunction findSubKeys(arr, key) {\n    const result = [];\n    for (const k of arr) {\n        if (KeyUtil.isSubKey(k, key)) {\n            result.push(k);\n        }\n    }\n    return result;\n}\nexports.findSubKeys = findSubKeys;\n//# sourceMappingURL=find-sub-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst KeyUtil = require(\"../../util\");\nfunction findSuperKeys(arr, key) {\n    const result = [];\n    for (const k of arr) {\n        if (KeyUtil.isSubKey(key, k)) {\n            result.push(k);\n        }\n    }\n    return result;\n}\nexports.findSuperKeys = findSuperKeys;\n//# sourceMappingURL=find-super-key.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./find-sub-key\"));\n__export(require(\"./find-super-key\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst KeyArrayUtil = require(\"./array-util\");\nexports.KeyArrayUtil = KeyArrayUtil;\nconst KeyUtil = require(\"./util\");\nexports.KeyUtil = KeyUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst operation_1 = require(\"../operation\");\nfunction fromColumnArray(columns) {\n    const result = operation_1.removeDuplicates(columns.map(c => c.columnAlias));\n    return result;\n}\nexports.fromColumnArray = fromColumnArray;\n//# sourceMappingURL=from-column-array.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction fromColumn(column) {\n    const result = [column.columnAlias];\n    return result;\n}\nexports.fromColumn = fromColumn;\n//# sourceMappingURL=from-column.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./from-column-array\"));\n__export(require(\"./from-column\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./constructor\"));\n__export(require(\"./operation\"));\n__export(require(\"./predicate\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst remove_duplicates_1 = require(\"./remove-duplicates\");\nfunction append(key, str) {\n    return remove_duplicates_1.removeDuplicates([...key, str]);\n}\nexports.append = append;\n//# sourceMappingURL=append.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst remove_duplicates_1 = require(\"./remove-duplicates\");\nfunction concat(a, b) {\n    return remove_duplicates_1.removeDuplicates([...a, ...b]);\n}\nexports.concat = concat;\n//# sourceMappingURL=concat.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./append\"));\n__export(require(\"./concat\"));\n__export(require(\"./remove-duplicates\"));\n__export(require(\"./remove\"));\n__export(require(\"./subtract\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction removeDuplicates(key) {\n    const result = [];\n    for (const str of key) {\n        if (!result.includes(str)) {\n            result.push(str);\n        }\n    }\n    return result;\n}\nexports.removeDuplicates = removeDuplicates;\n//# sourceMappingURL=remove-duplicates.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst remove_duplicates_1 = require(\"./remove-duplicates\");\nfunction remove(key, str) {\n    const result = remove_duplicates_1.removeDuplicates(key.filter(s => s != str));\n    return result;\n}\nexports.remove = remove;\n//# sourceMappingURL=remove.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst remove_duplicates_1 = require(\"./remove-duplicates\");\nfunction subtract(a, b) {\n    const result = remove_duplicates_1.removeDuplicates(a.filter(s => !b.includes(s)));\n    return result;\n}\nexports.subtract = subtract;\n//# sourceMappingURL=subtract.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./is-key\"));\n__export(require(\"./is-equal\"));\n__export(require(\"./is-sub-key\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_sub_key_1 = require(\"./is-sub-key\");\nfunction isEqual(a, b) {\n    return (is_sub_key_1.isSubKey(a, b) &&\n        is_sub_key_1.isSubKey(b, a));\n}\nexports.isEqual = isEqual;\n//# sourceMappingURL=is-equal.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isKey(raw) {\n    if (!(Array.isArray(raw))) {\n        return false;\n    }\n    for (const item of raw) {\n        if (typeof item != \"string\") {\n            return false;\n        }\n    }\n    return true;\n}\nexports.isKey = isKey;\n//# sourceMappingURL=is-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isSubKey(a, b) {\n    return a.every(aKey => b.includes(aKey));\n}\nexports.isSubKey = isSubKey;\n//# sourceMappingURL=is-sub-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst LimitClauseUtil = require(\"./util\");\nexports.LimitClauseUtil = LimitClauseUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./operation\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./limit-bigint\"));\n__export(require(\"./limit-number\"));\n__export(require(\"./limit\"));\n__export(require(\"./offset-bigint\"));\n__export(require(\"./offset-number\"));\n__export(require(\"./offset\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst offset_bigint_1 = require(\"./offset-bigint\");\nfunction limitBigInt(limitClause, maxRowCount) {\n    const BigInt = tm.TypeUtil.getBigIntFactoryFunctionOrError();\n    if (tm.BigIntUtil.lessThan(maxRowCount, 0)) {\n        throw new Error(`Cannot LIMIT fewer than zero rows`);\n    }\n    if (tm.BigIntUtil.greaterThan(maxRowCount, offset_bigint_1.ALL_ROW_COUNT)) {\n        throw new Error(`Cannot LIMIT more than ${offset_bigint_1.ALL_ROW_COUNT} rows`);\n    }\n    if (limitClause == undefined) {\n        return {\n            maxRowCount,\n            offset: BigInt(0),\n        };\n    }\n    else {\n        return {\n            maxRowCount,\n            offset: limitClause.offset,\n        };\n    }\n}\nexports.limitBigInt = limitBigInt;\n//# sourceMappingURL=limit-bigint.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst limit_bigint_1 = require(\"./limit-bigint\");\nfunction limitNumber(limitClause, maxRowCount) {\n    const BigInt = tm.TypeUtil.getBigIntFactoryFunctionOrError();\n    return limit_bigint_1.limitBigInt(limitClause, \n    /**\n     * Will throw a run-time error if `maxRowCount` is not an integer.\n     */\n    BigInt(maxRowCount));\n}\nexports.limitNumber = limitNumber;\n//# sourceMappingURL=limit-number.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst limit_bigint_1 = require(\"./limit-bigint\");\nconst limit_number_1 = require(\"./limit-number\");\nfunction limit(limitClause, maxRowCount) {\n    if (typeof maxRowCount == \"number\") {\n        return limit_number_1.limitNumber(limitClause, maxRowCount);\n    }\n    else {\n        return limit_bigint_1.limitBigInt(limitClause, maxRowCount);\n    }\n}\nexports.limit = limit;\n//# sourceMappingURL=limit.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nexports.ALL_ROW_COUNT = tm.TypeUtil.getBigIntFactoryFunctionOrError()(\"9223372036854775807\");\nexports.MAX_OFFSET = tm.TypeUtil.getBigIntFactoryFunctionOrError()(\"9223372036854775807\");\nfunction offsetBigInt(limitClause, offset) {\n    if (tm.BigIntUtil.lessThan(offset, 0)) {\n        throw new Error(`Cannot OFFSET fewer than zero rows`);\n    }\n    if (tm.BigIntUtil.greaterThan(offset, exports.MAX_OFFSET)) {\n        throw new Error(`Cannot OFFSET more than ${exports.MAX_OFFSET} rows`);\n    }\n    if (limitClause == undefined) {\n        return {\n            maxRowCount: exports.ALL_ROW_COUNT,\n            offset,\n        };\n    }\n    else {\n        return {\n            maxRowCount: limitClause.maxRowCount,\n            offset,\n        };\n    }\n}\nexports.offsetBigInt = offsetBigInt;\n//# sourceMappingURL=offset-bigint.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst offset_bigint_1 = require(\"./offset-bigint\");\nfunction offsetNumber(limitClause, offset) {\n    const BigInt = tm.TypeUtil.getBigIntFactoryFunctionOrError();\n    return offset_bigint_1.offsetBigInt(limitClause, \n    /**\n     * Will throw a run-time error if `offset` is not an integer.\n     */\n    BigInt(offset));\n}\nexports.offsetNumber = offsetNumber;\n//# sourceMappingURL=offset-number.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst offset_bigint_1 = require(\"./offset-bigint\");\nconst offset_number_1 = require(\"./offset-number\");\nfunction offset(limitClause, offset) {\n    if (typeof offset == \"number\") {\n        return offset_number_1.offsetNumber(limitClause, offset);\n    }\n    else {\n        return offset_bigint_1.offsetBigInt(limitClause, offset);\n    }\n}\nexports.offset = offset;\n//# sourceMappingURL=offset.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst MapDelegateUtil = require(\"./util\");\nexports.MapDelegateUtil = MapDelegateUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./operation\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction compose(cur, nxt) {\n    return async (row, connection, originalRow) => {\n        const tmp = await cur(row, connection, originalRow);\n        const result = await nxt(tmp, connection, originalRow);\n        return result;\n    };\n}\nexports.compose = compose;\n//# sourceMappingURL=compose.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./compose\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst MapperMapUtil = require(\"./util\");\nexports.MapperMapUtil = MapperMapUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./nullable-key\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nfunction nullableKeys(map) {\n    const columnAliases = Object.keys(map);\n    return columnAliases.filter(columnAlias => tm.canOutputNull(map[columnAlias]));\n}\nexports.nullableKeys = nullableKeys;\n//# sourceMappingURL=nullable-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst OnClauseUtil = require(\"./util\");\nexports.OnClauseUtil = OnClauseUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./operation\"));\n__export(require(\"./predicate\"));\n__export(require(\"./query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./on\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst query_1 = require(\"../query\");\nconst predicate_1 = require(\"../predicate\");\nconst expr_1 = require(\"../../../expr\");\nfunction on(fromClause, aliasedTable, onDelegate) {\n    const columns = query_1.allowedColumnRef(fromClause, aliasedTable);\n    const rawOnClause = onDelegate(columns);\n    predicate_1.assertValidUsedRef(fromClause, aliasedTable, rawOnClause);\n    return expr_1.ExprUtil.fromBuiltInExpr(rawOnClause);\n}\nexports.on = on;\n//# sourceMappingURL=on.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_clause_1 = require(\"../../../from-clause\");\nconst built_in_expr_1 = require(\"../../../built-in-expr\");\nfunction assertNoOuterQueryUsedRef(fromClause, rawOnClause) {\n    const outerQueryTableAliases = from_clause_1.FromClauseUtil.outerQueryTableAlias(fromClause);\n    const usedOuterQueryTableAliases = Object.keys(built_in_expr_1.BuiltInExprUtil.usedRef(rawOnClause).columns)\n        .filter(usedTableAlias => {\n        return outerQueryTableAliases.includes(usedTableAlias);\n    });\n    if (usedOuterQueryTableAliases.length > 0) {\n        throw new Error(`ON clause must not reference outer query tables ${usedOuterQueryTableAliases.join(\",\")}`);\n    }\n}\nexports.assertNoOuterQueryUsedRef = assertNoOuterQueryUsedRef;\n//# sourceMappingURL=assert-no-outer-query-used-ref.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst built_in_expr_1 = require(\"../../../built-in-expr\");\nconst query_1 = require(\"../query\");\nconst used_ref_1 = require(\"../../../used-ref\");\nfunction assertValidUsedRef(fromClause, aliasedTable, rawOnClause) {\n    used_ref_1.UsedRefUtil.assertAllowed(query_1.allowedUsedRef(fromClause, aliasedTable), built_in_expr_1.BuiltInExprUtil.usedRef(rawOnClause));\n}\nexports.assertValidUsedRef = assertValidUsedRef;\n//# sourceMappingURL=assert-valid-used-ref.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./assert-no-outer-query-used-ref\"));\n__export(require(\"./assert-valid-used-ref\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_ref_1 = require(\"../../../column-ref\");\nconst join_1 = require(\"../../../join\");\nconst used_ref_1 = require(\"../../../used-ref\");\nfunction allowedColumnRef(fromClause, aliasedTable) {\n    return column_ref_1.ColumnRefUtil.fromJoinArray(join_1.JoinArrayUtil.append(join_1.JoinArrayUtil.append(fromClause.currentJoins, ...(fromClause.outerQueryJoins == undefined ?\n        [] :\n        fromClause.outerQueryJoins)), join_1.JoinUtil.fromAliasedTable(aliasedTable, false, \n    /**\n     * We don't care about the `JoinType` for this temporary array\n     */\n    join_1.JoinType.FROM, \n    /**\n     * We don't care about the `ON` clause either\n     */\n    undefined)));\n}\nexports.allowedColumnRef = allowedColumnRef;\nfunction allowedUsedRef(fromClause, aliasedTable) {\n    /**\n     * @todo Investigate assignability\n     */\n    return used_ref_1.UsedRefUtil.fromJoinArray(join_1.JoinArrayUtil.append(join_1.JoinArrayUtil.append(fromClause.currentJoins, ...(fromClause.outerQueryJoins == undefined ?\n        [] :\n        fromClause.outerQueryJoins)), join_1.JoinUtil.fromAliasedTable(aliasedTable, false, \n    /**\n     * We don't care about the `JoinType` for this temporary array\n     */\n    join_1.JoinType.FROM, \n    /**\n     * We don't care about the `ON` clause either\n     */\n    undefined)));\n}\nexports.allowedUsedRef = allowedUsedRef;\n//# sourceMappingURL=allowed-used-ref.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./allowed-used-ref\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * It's called `OperatorType` but also contains function names.\n * A function is just an operator with different syntax.\n *\n * -----\n *\n * **EVERY** new `OperatorType` added is a **BREAKING CHANGE**.\n * Make sure to bump the **MAJOR** version number.\n */\nvar OperatorType;\n(function (OperatorType) {\n    /*\n        Comparison Functions and Operators\n        https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html\n    */\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_between\n     * + https://www.postgresql.org/docs/9.1/functions-comparison.html\n     * + https://www.sqlite.org/lang_expr.html#between\n     *\n     * -----\n     *\n     * + MySQL        : `BETWEEN ... AND ...`\n     * + PostgreSQL   : `BETWEEN ... AND ...`\n     * + SQLite       : `BETWEEN ... AND ...`\n     */\n    OperatorType[\"BETWEEN_AND\"] = \"BETWEEN_AND\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#function_coalesce\n     * + https://www.postgresql.org/docs/9.5/functions-conditional.html\n     * + https://www.sqlite.org/lang_expr.html#between\n     *\n     * -----\n     *\n     * + MySQL        : `COALESCE(x, ...)`\n     * + PostgreSQL   : `COALESCE(x, ...)`\n     * + SQLite       : `COALESCE(x, ...)`\n     */\n    OperatorType[\"COALESCE\"] = \"COALESCE\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_equal\n     * + https://www.postgresql.org/docs/9.1/functions-comparison.html\n     * + https://www.sqlite.org/lang_expr.html#binaryops\n     *\n     * -----\n     *\n     * + MySQL        : `=`\n     * + PostgreSQL   : `=`\n     * + SQLite       : `=`\n     */\n    OperatorType[\"EQUAL\"] = \"EQUAL\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_equal-to\n     * + https://www.postgresql.org/docs/9.1/functions-comparison.html\n     * + https://www.sqlite.org/lang_expr.html#binaryops\n     *\n     * -----\n     *\n     * + MySQL        : `<=>`\n     * + PostgreSQL   : `IS NOT DISTINCT FROM`\n     * + SQLite       : `IS`\n     */\n    OperatorType[\"NULL_SAFE_EQUAL\"] = \"NULL_SAFE_EQUAL\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_greater-than\n     * + https://www.postgresql.org/docs/9.1/functions-comparison.html\n     * + https://www.sqlite.org/lang_expr.html#binaryops\n     *\n     * -----\n     *\n     * + MySQL        : `>`\n     * + PostgreSQL   : `>`\n     * + SQLite       : `>`\n     */\n    OperatorType[\"GREATER_THAN\"] = \"GREATER_THAN\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_greater-than-or-equal\n     * + https://www.postgresql.org/docs/9.1/functions-comparison.html\n     * + https://www.sqlite.org/lang_expr.html#binaryops\n     *\n     * -----\n     *\n     * + MySQL        : `>=`\n     * + PostgreSQL   : `>=`\n     * + SQLite       : `>=`\n     */\n    OperatorType[\"GREATER_THAN_OR_EQUAL\"] = \"GREATER_THAN_OR_EQUAL\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#function_greatest\n     * + https://www.postgresql.org/docs/8.4/functions-conditional.html#AEN15322\n     * + https://www.sqlite.org/lang_corefunc.html#maxoreunc\n     *\n     * -----\n     *\n     * + MySQL        : `GREATEST(x, y, ...)` //Requires 2 args\n     *   + `NULL` values cause return value of `NULL`\n     * + PostgreSQL   : `GREATEST(x, ...)`    //Requires 1 arg\n     *   + Ignores `NULL` values\n     * + SQLite       : `MAX(x, ...)`         //Requires 1 arg\n     *   + `NULL` values cause return value of `NULL`\n     */\n    OperatorType[\"GREATEST\"] = \"GREATEST\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_in\n     * + https://www.postgresql.org/docs/9.0/functions-subquery.html#AEN16806\n     * + https://www.sqlite.org/lang_expr.html#in_op\n     *\n     * -----\n     *\n     * + MySQL        : `IN`\n     * + PostgreSQL   : `IN`\n     * + SQLite       : `IN`\n     */\n    OperatorType[\"IN_ARRAY\"] = \"IN_ARRAY\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_in\n     * + https://www.postgresql.org/docs/9.0/functions-subquery.html#AEN16806\n     * + https://www.sqlite.org/lang_expr.html#in_op\n     *\n     * -----\n     *\n     * + MySQL        : `IN`\n     * + PostgreSQL   : `IN`\n     * + SQLite       : `IN`\n     */\n    OperatorType[\"IN_QUERY\"] = \"IN_QUERY\";\n    /*\n     * Appears to be MySQL-specific,\n     * https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#function_interval\n     */\n    //INTERVAL = \"INTERVAL\",\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_is\n     * + https://www.postgresql.org/docs/9.0/functions-comparison.html\n     * + https://www.sqlite.org/lang_expr.html#isisnot\n     *\n     * -----\n     *\n     * + MySQL        : `IS TRUE`\n     * + PostgreSQL   : `IS TRUE`\n     * + SQLite       : `<NULL_SAFE_EQUAL> TRUE`\n     */\n    OperatorType[\"IS_TRUE\"] = \"IS_TRUE\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_is\n     * + https://www.postgresql.org/docs/9.0/functions-comparison.html\n     * + https://www.sqlite.org/lang_expr.html#isisnot\n     *\n     * -----\n     *\n     * + MySQL        : `IS FALSE`\n     * + PostgreSQL   : `IS FALSE`\n     * + SQLite       : `<NULL_SAFE_EQUAL> FALSE`\n     */\n    OperatorType[\"IS_FALSE\"] = \"IS_FALSE\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_is\n     * + https://www.postgresql.org/docs/9.0/functions-comparison.html\n     * + https://www.sqlite.org/lang_expr.html#isisnot\n     *\n     * -----\n     *\n     * This does not refer to the TypeScript `unknown`.\n     * It refers to the three-valued logic `unknown`.\n     *\n     * It generally has a value equivalent to `NULL`.\n     *\n     * -----\n     *\n     * + MySQL        : `IS UNKNOWN`\n     * + PostgreSQL   : `IS UNKNOWN`\n     * + SQLite       : `<NULL_SAFE_EQUAL> UNKNOWN`\n     */\n    OperatorType[\"IS_UNKNOWN\"] = \"IS_UNKNOWN\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_is\n     * + https://www.postgresql.org/docs/9.0/functions-comparison.html\n     * + https://www.sqlite.org/lang_expr.html#isisnot\n     *\n     * -----\n     *\n     * + MySQL        : `IS NOT TRUE`\n     * + PostgreSQL   : `IS NOT TRUE`\n     * + SQLite       : `<NOT_NULL_SAFE_EQUAL> TRUE`\n     */\n    OperatorType[\"IS_NOT_TRUE\"] = \"IS_NOT_TRUE\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_is\n     * + https://www.postgresql.org/docs/9.0/functions-comparison.html\n     * + https://www.sqlite.org/lang_expr.html#isisnot\n     *\n     * -----\n     *\n     * + MySQL        : `IS NOT FALSE`\n     * + PostgreSQL   : `IS NOT FALSE`\n     * + SQLite       : `<NOT_NULL_SAFE_EQUAL> FALSE`\n     */\n    OperatorType[\"IS_NOT_FALSE\"] = \"IS_NOT_FALSE\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_is\n     * + https://www.postgresql.org/docs/9.0/functions-comparison.html\n     * + https://www.sqlite.org/lang_expr.html#isisnot\n     *\n     * -----\n     *\n     * This does not refer to the TypeScript `unknown`.\n     * It refers to the three-valued logic `unknown`.\n     *\n     * It generally has a value equivalent to `NULL`.\n     *\n     * -----\n     *\n     * + MySQL        : `IS NOT UNKNOWN`\n     * + PostgreSQL   : `IS NOT UNKNOWN`\n     * + SQLite       : `<NOT_NULL_SAFE_EQUAL> UNKNOWN`\n     */\n    OperatorType[\"IS_NOT_UNKNOWN\"] = \"IS_NOT_UNKNOWN\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_is-not-null\n     * + https://www.postgresql.org/docs/9.0/functions-comparison.html\n     * + https://www.sqlite.org/lang_expr.html#isisnot\n     *\n     * -----\n     *\n     * + MySQL        : `IS NOT NULL`\n     * + PostgreSQL   : `IS NOT NULL`\n     * + SQLite       : `<NOT_NULL_SAFE_EQUAL> NULL`\n     */\n    OperatorType[\"IS_NOT_NULL\"] = \"IS_NOT_NULL\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_is-not-null\n     * + https://www.postgresql.org/docs/9.0/functions-comparison.html\n     * + https://www.sqlite.org/lang_expr.html#isisnot\n     *\n     * -----\n     *\n     * + MySQL        : `IS NULL`\n     * + PostgreSQL   : `IS NULL`\n     * + SQLite       : `<NULL_SAFE_EQUAL> NULL`\n     */\n    OperatorType[\"IS_NULL\"] = \"IS_NULL\";\n    /*\n     * Appears to be MySQL-specific,\n     * https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#function_isnull\n     */\n    //ISNULL = \"ISNULL\",\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#function_least\n     * + https://www.postgresql.org/docs/8.4/functions-conditional.html#AEN15322\n     * + https://www.sqlite.org/lang_corefunc.html#minoreunc\n     *\n     * -----\n     *\n     * + MySQL        : `LEAST(x, y, ...)` //Requires 2 args\n     * + PostgreSQL   : `LEAST(x, ...)`    //Requires 1 arg\n     * + SQLite       : `MIN(x, ...)`         //Requires 1 arg\n     */\n    OperatorType[\"LEAST\"] = \"LEAST\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_less-than\n     * + https://www.postgresql.org/docs/9.1/functions-comparison.html\n     * + https://www.sqlite.org/lang_expr.html#binaryops\n     *\n     * -----\n     *\n     * + MySQL        : `<`\n     * + PostgreSQL   : `<`\n     * + SQLite       : `<`\n     */\n    OperatorType[\"LESS_THAN\"] = \"LESS_THAN\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_less-than\n     * + https://www.postgresql.org/docs/9.1/functions-comparison.html\n     * + https://www.sqlite.org/lang_expr.html#binaryops\n     *\n     * -----\n     *\n     * + MySQL        : `<=`\n     * + PostgreSQL   : `<=`\n     * + SQLite       : `<=`\n     */\n    OperatorType[\"LESS_THAN_OR_EQUAL\"] = \"LESS_THAN_OR_EQUAL\";\n    /*\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-comparison-functions.html#operator_like\n     * + https://www.postgresql.org/docs/9.0/functions-matching.html#FUNCTIONS-LIKE\n     * + https://www.sqlite.org/lang_expr.html#like\n     *\n     * -----\n     *\n     * + MySQL        : `LIKE`\n     * + PostgreSQL   : `LIKE`\n     * + SQLite       : `LIKE`\n     */\n    /*\n     * The `LIKE` operator has different default escape behaviours across databases.\n     * By default, SQLite does not have an escape character.\n     * By default, MySQL's is the backslash.\n     */\n    //LIKE = \"LIKE\",\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-comparison-functions.html#operator_like\n     * + https://www.postgresql.org/docs/9.0/functions-matching.html#FUNCTIONS-LIKE\n     * + https://www.sqlite.org/lang_expr.html#like\n     *\n     * -----\n     *\n     * + MySQL        : `LIKE ... ESCAPE ...`\n     * + PostgreSQL   : `LIKE ... ESCAPE ...`\n     * + SQLite       : `LIKE ... ESCAPE ...`\n     */\n    OperatorType[\"LIKE_ESCAPE\"] = \"LIKE_ESCAPE\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_not-between\n     * + https://www.postgresql.org/docs/9.1/functions-comparison.html\n     * + https://www.sqlite.org/lang_expr.html#between\n     *\n     * -----\n     *\n     * + MySQL        : `NOT BETWEEN ... AND ...`\n     * + PostgreSQL   : `NOT BETWEEN ... AND ...`\n     * + SQLite       : `NOT BETWEEN ... AND ...`\n     */\n    OperatorType[\"NOT_BETWEEN_AND\"] = \"NOT_BETWEEN_AND\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_not-equal\n     * + https://www.postgresql.org/docs/9.1/functions-comparison.html\n     * + https://www.sqlite.org/lang_expr.html#binaryops\n     *\n     * -----\n     *\n     * + MySQL        : `<>`\n     * + PostgreSQL   : `<>`\n     * + SQLite       : `<>`\n     */\n    OperatorType[\"NOT_EQUAL\"] = \"NOT_EQUAL\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_equal-to\n     * + https://www.postgresql.org/docs/9.1/functions-comparison.html\n     * + https://www.sqlite.org/lang_expr.html#isisnot\n     *\n     * -----\n     *\n     * + MySQL        : `<NOT> (x <NULL_SAFE_EQUAL>)`\n     * + PostgreSQL   : `IS DISTINCT FROM`\n     * + SQLite       : `IS NOT`\n     */\n    OperatorType[\"NOT_NULL_SAFE_EQUAL\"] = \"NOT_NULL_SAFE_EQUAL\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_not-in\n     * + https://www.postgresql.org/docs/9.0/functions-subquery.html#AEN16831\n     * + https://www.sqlite.org/lang_expr.html#in_op\n     *\n     * -----\n     *\n     * + MySQL        : `NOT IN`\n     * + PostgreSQL   : `NOT IN`\n     * + SQLite       : `NOT IN`\n     */\n    OperatorType[\"NOT_IN_ARRAY\"] = \"NOT_IN_ARRAY\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/comparison-operators.html#operator_not-in\n     * + https://www.postgresql.org/docs/9.0/functions-subquery.html#AEN16831\n     * + https://www.sqlite.org/lang_expr.html#in_op\n     *\n     * -----\n     *\n     * + MySQL        : `NOT IN`\n     * + PostgreSQL   : `NOT IN`\n     * + SQLite       : `NOT IN`\n     */\n    OperatorType[\"NOT_IN_QUERY\"] = \"NOT_IN_QUERY\";\n    /*\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-comparison-functions.html#operator_not-like\n     * + https://www.postgresql.org/docs/9.0/functions-matching.html#FUNCTIONS-LIKE\n     * + https://www.sqlite.org/lang_expr.html#like\n     *\n     * -----\n     *\n     * + MySQL        : `NOT LIKE`\n     * + PostgreSQL   : `NOT LIKE`\n     * + SQLite       : `NOT LIKE`\n     */\n    /*\n     * The `LIKE` operator has different default escape behaviours across databases.\n     * By default, SQLite does not have an escape character.\n     * By default, MySQL's is the backslash.\n     */\n    //NOT_LIKE = \"NOT_LIKE\",\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-comparison-functions.html#operator_not-like\n     * + https://www.postgresql.org/docs/9.0/functions-matching.html#FUNCTIONS-LIKE\n     * + https://www.sqlite.org/lang_expr.html#like\n     *\n     * -----\n     *\n     * + MySQL        : `NOT LIKE ... ESCAPE ...`\n     * + PostgreSQL   : `NOT LIKE ... ESCAPE ...`\n     * + SQLite       : `NOT LIKE ... ESCAPE ...`\n     */\n    OperatorType[\"NOT_LIKE_ESCAPE\"] = \"NOT_LIKE_ESCAPE\";\n    /*\n     * Appears to be MySQL-specific,\n     * https://dev.mysql.com/doc/refman/8.0/en/string-comparison-functions.html#function_strcmp\n     */\n    //STRCMP = \"STRCMP\",\n    /*\n        Logical Operators\n        https://dev.mysql.com/doc/refman/8.0/en/logical-operators.html\n    */\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/logical-operators.html#operator_and\n     * + https://www.postgresql.org/docs/9.1/functions-logical.html\n     * + https://www.sqlite.org/lang_expr.html#binaryops\n     *\n     * -----\n     *\n     * + MySQL        : `AND`\n     * + PostgreSQL   : `AND`\n     * + SQLite       : `AND`\n     */\n    OperatorType[\"AND\"] = \"AND\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/logical-operators.html#operator_not\n     * + https://www.postgresql.org/docs/9.1/functions-logical.html\n     * + https://www.sqlite.org/lang_expr.html#binaryops\n     *\n     * -----\n     *\n     * + MySQL        : `NOT`\n     * + PostgreSQL   : `NOT`\n     * + SQLite       : `NOT`\n     */\n    OperatorType[\"NOT\"] = \"NOT\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/logical-operators.html#operator_or\n     * + https://www.postgresql.org/docs/9.1/functions-logical.html\n     * + https://www.sqlite.org/lang_expr.html#binaryops\n     *\n     * -----\n     *\n     * + MySQL        : `OR`\n     * + PostgreSQL   : `OR`\n     * + SQLite       : `OR`\n     */\n    OperatorType[\"OR\"] = \"OR\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/logical-operators.html#operator_xor\n     *\n     * -----\n     *\n     * + MySQL        : `XOR`\n     * + PostgreSQL   : `<NOT_EQUAL>`\n     * + SQLite       : `<NOT_EQUAL>`\n     */\n    OperatorType[\"XOR\"] = \"XOR\";\n    /*\n        Control Flow Functions\n        https://dev.mysql.com/doc/refman/8.0/en/control-flow-functions.html\n    */\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/control-flow-functions.html#operator_case\n     * + https://www.postgresql.org/docs/8.4/functions-conditional.html#AEN15225\n     * + https://www.sqlite.org/lang_expr.html#case\n     *\n     * -----\n     *\n     * + MySQL        : `CASE value WHEN compare_value THEN result [WHEN compare_value THEN result ...] ELSE result END`\n     * + PostgreSQL   : `CASE value WHEN compare_value THEN result [WHEN compare_value THEN result ...] ELSE result END`\n     * + SQLite       : `CASE value WHEN compare_value THEN result [WHEN compare_value THEN result ...] ELSE result END`\n     */\n    /**\n     * This is handled using `CaseValueNode`\n     */\n    //CASE = \"CASE\",\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/control-flow-functions.html#operator_case\n     * + https://www.postgresql.org/docs/8.4/functions-conditional.html#AEN15225\n     * + https://www.sqlite.org/lang_expr.html#case\n     *\n     * -----\n     *\n     * + MySQL        : `CASE WHEN condition THEN result [WHEN condition THEN result ...] ELSE result END`\n     * + PostgreSQL   : `CASE WHEN condition THEN result [WHEN condition THEN result ...] ELSE result END`\n     * + SQLite       : `CASE WHEN condition THEN result [WHEN condition THEN result ...] ELSE result END`\n     */\n    /**\n     * This is handled using `CaseConditionNode`\n     */\n    //CASE_WHEN = \"CASE_WHEN\",\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/control-flow-functions.html#function_if\n     *\n     * -----\n     *\n     * + MySQL        : `IF(x, y, z)`\n     * + PostgreSQL   : `CASE WHEN x THEN y ELSE z END`\n     * + SQLite       : `CASE WHEN x THEN y ELSE z END`\n     */\n    OperatorType[\"IF\"] = \"IF\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/control-flow-functions.html#function_ifnull\n     * + https://www.postgresql.org/docs/9.2/functions-conditional.html#FUNCTIONS-COALESCE-NVL-IFNULL\n     * + https://www.sqlite.org/lang_corefunc.html#ifnull\n     *\n     * `COALESCE()` is part of the SQL standard.\n     * `IFNULL()` is DB-specific.\n     *\n     * But `IFNULL()` should behave the same as `COALESCE(x, y)`.\n     *\n     * -----\n     *\n     * + MySQL        : `IFNULL(x, y)`\n     * + PostgreSQL   : `COALESCE(x, y)`\n     * + SQLite       : `IFNULL(x, y)`\n     */\n    OperatorType[\"IF_NULL\"] = \"IF_NULL\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/control-flow-functions.html#function_nullif\n     * + https://www.postgresql.org/docs/9.2/functions-conditional.html#FUNCTIONS-NULLIF\n     * + https://www.sqlite.org/lang_corefunc.html#nullif\n     *\n     * -----\n     *\n     * + MySQL        : `NULLIF(x, y)`\n     * + PostgreSQL   : `NULLIF(x, y)`\n     * + SQLite       : `NULLIF(x, y)`\n     *\n     * -----\n     *\n     * This is the same as `CASE WHEN expr1 = expr2 THEN NULL ELSE expr1 END`\n     */\n    OperatorType[\"NULL_IF_EQUAL\"] = \"NULL_IF_EQUAL\";\n    /*\n        String Functions and Operators\n        https://dev.mysql.com/doc/refman/8.0/en/string-functions.html\n    */\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_ascii\n     * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n     *\n     * -----\n     *\n     * + MySQL          : `ASCII(x)`\n     * + PostgreSQL     : `ASCII(x)`\n     * + SQLite         : None, implement with `x.length == 0 ? 0 : x.charCodeAt(0)`\n     */\n    OperatorType[\"ASCII\"] = \"ASCII\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_bin\n     *\n     * -----\n     *\n     * + MySQL          : `BIN(x)`\n     * + PostgreSQL     : None. Implement with,\n     * ```sql\n     *  REGEXP_REPLACE(\n     *      (x)::bit(64)::varchar(64),\n     *      '^0+(\\d+)$',\n     *      '\\1'\n     *  )\n     * ```\n     * + SQLite         : None. Implement with,\n     * ```ts\n     * //x >= 0\n     * (x).toString(2)\n     * //x < 0\n     * (2n**64n + BigInt(x)).toString(2)\n     * ```\n     */\n    OperatorType[\"BIN\"] = \"BIN\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_bit-length\n     * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-SQL\n     *\n     * -----\n     *\n     * + MySQL          : `BIT_LENGTH(x)`\n     * + PostgreSQL     : `BIT_LENGTH(x)`\n     * + SQLite         : `LENGTH(CAST(x AS BLOB)) * 8`\n     */\n    OperatorType[\"BIT_LENGTH\"] = \"BIT_LENGTH\";\n    /*\n     * Appears to be MySQL and SQLite-specific,\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_char\n     * + https://www.sqlite.org/lang_corefunc.html#char\n     *\n     * They have different implementations, however.\n     */\n    //CHAR = \"CHAR\",\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_char-length\n     * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-SQL\n     * + https://www.sqlite.org/lang_corefunc.html#length\n     * + https://dmitripavlutin.com/what-every-javascript-developer-should-know-about-unicode/#33-string-length\n     *\n     * -----\n     *\n     * + MySQL          : `CHAR_LENGTH(x)`\n     *   + `CHAR_LENGTH('cafȩ́')` returns 6\n     * + PostgreSQL     : `CHAR_LENGTH(x)`\n     *   + `CHAR_LENGTH('cafȩ́')` returns 8\n     * + SQLite         : `LENGTH(x)`\n     *   + `LENGTH('cafȩ́')` returns 6\n     */\n    OperatorType[\"CHAR_LENGTH\"] = \"CHAR_LENGTH\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_concat\n     * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n     *\n     * -----\n     *\n     * + MySQL          : `CONCAT(x, ...)` Returns `NULL` if any argument is `NULL`\n     *   + MySQL actually treats `||` as the boolean `OR` operator.\n     * + PostgreSQL     : `x || ... || ...` Returns `NULL` if any argument is `NULL`\n     *   + PostgreSQL's `CONCAT(x, ...)` Ignores `NULL` arguments\n     *     + This is different from MySQL's `CONCAT()`\n     * + SQLite         : `x || ... || ...` Returns `NULL` if any argument is `NULL`\n     *   + SQLite uses an operator, not a function, to concatenate strings\n     *   + https://www.sqlite.org/lang_expr.html#collateop\n     *\n     * -----\n     *\n     * The SQL standard says,\n     * > `<concatenation operator>` is an operator, `||`,\n     * > that returns the character string made by joining its character string operands in the order given.\n     *\n     * MySQL actually treats `||` as the boolean `OR` operator.\n     */\n    OperatorType[\"CONCAT\"] = \"CONCAT\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_concat\n     * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n     *\n     * -----\n     *\n     * + MySQL          : None. Emulate with `CONCAT(COALESCE(x, ''), ...)`\n     * + PostgreSQL     : `CONCAT(x, ...)`\n     *   + PostgreSQL's `CONCAT(x, ...)` Ignores `NULL` arguments\n     *     + This is different from MySQL's `CONCAT()`\n     * + SQLite         : `COALESCE(x, '') || ... || ...`\n     *\n     * -----\n     *\n     * The SQL standard says,\n     * > `<concatenation operator>` is an operator, `||`,\n     * > that returns the character string made by joining its character string operands in the order given.\n     *\n     * MySQL actually treats `||` as the boolean `OR` operator.\n     */\n    OperatorType[\"NULL_SAFE_CONCAT\"] = \"NULL_SAFE_CONCAT\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_concat-ws\n     * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n     *\n     * -----\n     *\n     * + MySQL          : `CONCAT_WS(separator, x, ...)`\n     *   + If the separator is `NULL`, the result is `NULL`\n     *   + Ignores `NULL` arguments after the separator\n     * + PostgreSQL     : `CONCAT_WS(separator, x, ...)`\n     *   + If the separator is `NULL`, the result is `NULL`\n     *   + Ignores `NULL` arguments after the separator\n     * + SQLite         : None. Implement with user-defined function.\n     */\n    OperatorType[\"CONCAT_WS\"] = \"CONCAT_WS\";\n    /*\n     * Appears to be MySQL-specific,\n     * https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_elt\n     */\n    //ELT = \"ELT\",\n    /*\n     * Appears to be MySQL-specific,\n     * https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_export-set\n     */\n    //EXPORT_SET = \"EXPORT_SET\",\n    /*\n     * Appears to be MySQL-specific,\n     * https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_field\n     */\n    //FIELD = \"FIELD\",\n    /*\n     * Appears to be MySQL-specific,\n     * https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_find-in-set\n     *\n     * ```sql\n     * FIND_IN_SET(str, strlist)\n     * ```\n     *\n     * There is a way to emulate it with PostgreSQL,\n     * https://stackoverflow.com/questions/35169412/mysql-find-in-set-equivalent-to-postgresql\n     *\n     * ```sql\n     *  array_position(\n     *      string_to_array(strlist, ','),\n     *      str\n     *  )\n     * ```\n     *\n     * @todo Decide if we should add this\n     */\n    //FIND_IN_SET = \"FIND_IN_SET\",\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_from-base64\n     * + https://www.postgresql.org/docs/7.4/functions-string.html#FUNCTIONS-STRING-OTHER\n     *\n     * -----\n     *\n     * + MySQL          : `FROM_BASE64(x)`\n     *   + `FROM_BASE64('~')` === `NULL`\n     * + PostgreSQL     : `DECODE(x, 'base64')`\n     *   + `DECODE('~', 'base64')` throws an error\n     * + SQLite         : None, implement with user-defined function `atob()`\n     *   + `atob('~')` throws an error\n     */\n    OperatorType[\"FROM_BASE64\"] = \"FROM_BASE64\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_hex\n     * + https://www.postgresql.org/docs/7.4/functions-string.html#FUNCTIONS-STRING-OTHER\n     * + https://www.sqlite.org/lang_corefunc.html#hex\n     *\n     * -----\n     *\n     * + MySQL          : `HEX(x)`\n     * + PostgreSQL     : `ENCODE(x, 'hex')`\n     * + SQLite         : `HEX(x)`\n     */\n    OperatorType[\"HEX\"] = \"HEX\";\n    /*\n     * Appears to be MySQL-specific,\n     * https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_insert\n     */\n    //INSERT = \"INSERT\",\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_instr\n     * + https://www.sqlite.org/lang_corefunc.html#instr\n     * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n     *\n     * -----\n     *\n     * + MySQL          : `INSTR(str, substr)`\n     * + PostgreSQL     : `STRPOS(str, substr)`\n     * + SQLite         : `INSTR(str, substr)`\n     */\n    OperatorType[\"IN_STR\"] = \"IN_STR\";\n    /*\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_left\n     * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n     *\n     * -----\n     *\n     * The MySQL and PostgreSQL implementations are incompatible for negative numbers.\n     */\n    //LEFT = \"LEFT\",\n    /*\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_length\n     * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n     * + https://www.sqlite.org/lang_corefunc.html#length\n     *\n     * -----\n     *\n     * + MySQL          : `LENGTH(x)`\n     * + PostgreSQL     : `LENGTH(x)`\n     * + SQLite         : None. The `LENGTH(x)` implementation is incompatible.\n     *\n     * -----\n     *\n     * ```sql\n     *  SELECT\n     *      -- '\\u00c7'\n     *      LENGTH('Ç') AS one_length,\n     *      CHAR_LENGTH('Ç') AS one_char_length,\n     *      -- '\\u0043\\u0327'\n     *      LENGTH('Ç') AS two_length,\n     *      CHAR_LENGTH('Ç') AS two_char_length\n     * ```\n     *\n     * MySQL        : `2,1,3,2`\n     * PostgreSQL   : `2,2,3,3`\n     * SQLite       : `1,X,2,X` (`X` because SQLite does not have `CHAR_LENGTH()`)\n     *\n     * |                            | MySQL `LENGTH()` | MySQL `CHAR_LENGTH()` | PostgreSQL `LENGTH()` | PostgreSQL `CHAR_LENGTH()` | SQLite `LENGTH()` |\n     * |----------------------------|------------------|-----------------------|-----------------------|----------------------------|-------------------|\n     * | MySQL      `LENGTH()`      | X                |                       | X                     | X                          |                   |\n     * | MySQL      `CHAR_LENGTH()` |                  | X                     |                       |                            | X                 |\n     * | PostgreSQL `LENGTH()`      | X                |                       | X                     | X                          |                   |\n     * | PostgreSQL `CHAR_LENGTH()` | X                |                       | X                     | X                          |                   |\n     * | SQLite     `LENGTH()`      |                  | X                     |                       |                            | X                 |\n     *\n     * https://news.ycombinator.com/item?id=17311196\n     *\n     * + https://www.db-fiddle.com/f/aaKrWx7aAuzzC2HWPcrsBn/3\n     * + https://www.db-fiddle.com/f/aaKrWx7aAuzzC2HWPcrsBn/4\n     *\n     * -----\n     *\n     * TL;DR,\n     * We cannot provide `LENGTH` as a DB-unified operator because of the inconsistencies\n     *\n     * -----\n     *\n     * See, `OCTET_LENGTH` instead.\n     * All three databases can be made to agree on the behaviour of `OCTET_LENGTH`\n     */\n    //LENGTH = \"LENGTH\",\n    /*\n     * Appears to be MySQL-specific,\n     * https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_load-file\n     */\n    //LOAD_FILE = \"LOAD_FILE\",\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_locate\n     * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n     *\n     * -----\n     *\n     * + MySQL          : `LOCATE(substr, str)/LOCATE(substr, str, pos)`\n     * + PostgreSQL     : `STRPOS(str, substr)`, the 3-arg version is more complicated.\n     *\n     *   Tentatively, `STRPOS(SUBSTR(str, pos), substr) + pos` or something like that.\n     *\n     * + SQLite         : None. Implement with user-defined function.\n     * @todo\n     */\n    //LOCATE = \"LOCATE\",\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_lower\n     * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-SQL\n     * + https://www.sqlite.org/lang_corefunc.html#lower\n     *\n     * -----\n     *\n     * + MySQL          : `LOWER(x)`\n     * + PostgreSQL     : `LOWER(x)`\n     * + SQLite         : `LOWER(x)`\n     */\n    OperatorType[\"LOWER\"] = \"LOWER\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_lpad\n     * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n     *\n     * -----\n     *\n     * + MySQL          : `LPAD(str, len, padstr)`\n     *   + `LPAD('123', 4, '98')` === `'9123'`\n     *   + `LPAD('123', 2, '98')` === `'12'`\n     * + PostgreSQL     : `LPAD(str, len, padstr)`\n     *   + `LPAD('123', 4, '98')` === `'9123'`\n     *   + `LPAD('123', 2, '98')` === `'12'`\n     * + SQLite         : None. Implement with user-defined function.\n     */\n    OperatorType[\"LPAD\"] = \"LPAD\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_ltrim\n     * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n     * + https://www.sqlite.org/lang_corefunc.html#ltrim\n     *\n     * -----\n     *\n     * + MySQL          : `LTRIM(x)`\n     * + PostgreSQL     : `LTRIM(x)/LTRIM(x, y)`\n     * + SQLite         : `LTRIM(x)/LTRIM(x, y)`\n     */\n    OperatorType[\"LTRIM\"] = \"LTRIM\";\n    /*\n     * Appears to be MySQL-specific,\n     * https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_make-set\n     */\n    //MAKE_SET = \"MAKE_SET\",\n    /*\n     * Appears to be MySQL-specific,\n     * https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_oct\n     */\n    //OCT = \"OCT\",\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_octet-length\n     * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-SQL\n     *\n     * -----\n     *\n     * + MySQL          : `OCTET_LENGTH(x)`\n     * + PostgreSQL     : `OCTET_LENGTH(x)`\n     * + SQLite         : `LENGTH(CAST(x AS BLOB))`\n     */\n    OperatorType[\"OCTET_LENGTH\"] = \"OCTET_LENGTH\";\n    /*\n     * Appears to be MySQL-specific,\n     * https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_ord\n     */\n    //ORD = \"ORD\",\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_position\n     * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-SQL\n     *\n     * -----\n     *\n     * + MySQL          : `POSITION(substr IN str)`\n     * + PostgreSQL     : `POSITION(substr IN str)`\n     * + SQLite         : None. Implement with user-defined function.\n     */\n    OperatorType[\"POSITION\"] = \"POSITION\";\n    /*\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_quote\n     * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n     * + https://www.sqlite.org/lang_corefunc.html#quote\n     *\n     * -----\n     *\n     * + MySQL          : `QUOTE(x)`\n     * + PostgreSQL     : `QUOTE_NULLABLE(x)`\n     * + SQLite         : `QUOTE(x)`\n     *\n     * SQLite seems to not return just strings...\n     * SQLite can return string|Uint8Array|number|bigint|...\n     * So, we can't unify this.\n     */\n    //QUOTE = \"QUOTE\",\n    /*\n     * + https://dev.mysql.com/doc/refman/8.0/en/regexp.html#operator_regexp\n     *   + https://dev.mysql.com/doc/refman/8.0/en/regexp.html#operator_regexp\n     *   + https://dev.mysql.com/doc/refman/8.0/en/regexp.html#function_regexp-like\n     *   + https://dev.mysql.com/doc/refman/8.0/en/regexp.html#regexp-syntax\n     *   + http://userguide.icu-project.org/strings/regexp\n     * + `~`/`~*`/`!~`/`!~*`\n     *   + https://www.postgresql.org/docs/9.0/functions-matching.html#FUNCTIONS-POSIX-REGEXP\n     * + TODO: Find out difference between POSIX regex and ICU regex\n     */\n    //REGEXP = \"REGEXP\",\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_repeat\n     * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n     *\n     * -----\n     *\n     * + MySQL          : `REPEAT(x, count)`\n     * + PostgreSQL     : `REPEAT(x, count)`\n     * + SQLite         : None. Implement with user-defined function.\n     */\n    OperatorType[\"REPEAT\"] = \"REPEAT\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_replace\n     * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n     * + https://www.sqlite.org/lang_corefunc.html#replace\n     *\n     * -----\n     *\n     * + MySQL          : `REPLACE(str, from, to)`\n     * + PostgreSQL     : `REPLACE(str, from, to)`\n     * + SQLite         : `REPLACE(str, from, to)`\n     */\n    OperatorType[\"REPLACE\"] = \"REPLACE\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_reverse\n     * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n     *\n     * -----\n     *\n     * + MySQL          : `REVERSE(x)`\n     * + PostgreSQL     : `REVERSE(x)`\n     * + SQLite         : None. Implement with user-defined function.\n     */\n    OperatorType[\"REVERSE\"] = \"REVERSE\";\n    /*\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_right\n     * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n     *\n     * -----\n     *\n     * The MySQL and PostgreSQL implementations are incompatible for negative numbers.\n     */\n    //RIGHT = \"RIGHT\",\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_rpad\n     * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n     *\n     * -----\n     *\n     * + MySQL          : `RPAD(str, len, padstr)`\n     * + PostgreSQL     : `RPAD(str, len, padstr)`\n     * + SQLite         : None. Implement with user-defined function.\n     */\n    OperatorType[\"RPAD\"] = \"RPAD\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_rtrim\n     * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n     * + https://www.sqlite.org/lang_corefunc.html#rtrim\n     *\n     * -----\n     *\n     * + MySQL          : `RTRIM(x)`\n     * + PostgreSQL     : `RTRIM(x)/RTRIM(x, y)`\n     * + SQLite         : `RTRIM(x)/RTRIM(x, y)`\n     */\n    OperatorType[\"RTRIM\"] = \"RTRIM\";\n    /*\n     * Appears to be PostgreSQL-specific,\n     * https://www.postgresql.org/docs/9.0/functions-matching.html#FUNCTIONS-SIMILARTO-REGEXP\n     */\n    //SIMILAR_TO = \"SIMILAR_TO\",\n    /*\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_soundex\n     * + https://www.sqlite.org/lang_corefunc.html#soundex\n     * + https://www.postgresql.org/docs/9.1/fuzzystrmatch.html\n     *\n     * -----\n     *\n     * + MySQL          : `SOUNDEX(x)`\n     * + PostgreSQL     : `SOUNDEX(x)`\n     * + SQLite         : `SOUNDEX(x)`\n     */\n    //SOUNDEX = \"SOUNDEX\",\n    /*\n     * Appears to be MySQL-specific,\n     * https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#operator_sounds-like\n     */\n    //SOUNDS_LIKE = \"SOUNDS_LIKE\",\n    /*\n     * Appears to be MySQL-specific,\n     * https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_space\n     *\n     * -----\n     *\n     * `SPACE(n)` is the same as `REPEAT(' ', n)`\n     */\n    //SPACE = \"SPACE\",\n    /*\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_substr\n     * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n     * + https://www.sqlite.org/lang_corefunc.html#substr\n     *\n     * -----\n     *\n     * + MySQL          : `SUBSTR(str, pos)/SUBSTR(str, pos, len)`\n     *   + `SUBSTR('hello', -1)` === `'o'`\n     *   + `SUBSTR('hello', -1, -2)` === `''`\n     *   + `SUBSTR('hello', -2, 2)` === `'lo'`\n     * + PostgreSQL     : `SUBSTR(str, pos)/SUBSTR(str, pos, len)`\n     *   + `SUBSTR('hello', -1)` === `'hello'`\n     *   + `SUBSTR('hello', -1, -2)` throws an error\n     *   + `SUBSTR('hello', -2, 2)` === `''`\n     * + SQLite         : `SUBSTR(str, pos)/SUBSTR(str, pos, len)`\n     *   + `SUBSTR('hello', -1)` === `'o'`\n     *   + `SUBSTR('hello', -1, -2)` === `'ll'`\n     *   + `SUBSTR('hello', -2, 2)` === `'lo'`\n     *\n     * -----\n     *\n     * Behaviour varies too much.\n     */\n    //SUBSTR = \"SUBSTR\",\n    /*\n     * Appears to be MySQl-specific,\n     * https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_substring-index\n     */\n    //SUBSTRING_INDEX = \"SUBSTRING_INDEX\",\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_to-base64\n     * + https://www.postgresql.org/docs/7.4/functions-string.html#FUNCTIONS-STRING-OTHER\n     *\n     * -----\n     *\n     * + MySQL          : `TO_BASE64(x)`\n     * + PostgreSQL     : `ENCODE(x, 'base64')`\n     * + SQLite         : None, implement with user-defined function `btoa()`\n     */\n    OperatorType[\"TO_BASE64\"] = \"TO_BASE64\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_trim\n     * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-OTHER\n     * + https://www.sqlite.org/lang_corefunc.html#trim\n     *\n     * -----\n     *\n     * + MySQL          : `TRIM(x)`\n     * + PostgreSQL     : `TRIM(x)`\n     * + SQLite         : `TRIM(x)`\n     */\n    OperatorType[\"TRIM\"] = \"TRIM\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_unhex\n     * + https://www.postgresql.org/docs/7.4/functions-string.html#FUNCTIONS-STRING-OTHER\n     *\n     * -----\n     *\n     * + MySQL          : `UNHEX(x)`\n     *   + `UNHEX('~')` === `NULL`\n     * + PostgreSQL     : `DECODE(x, 'hex')`\n     *   + `DECODE('~', 'hex')` throws an error\n     * + SQLite         : None. Implement with user-defined function.\n     */\n    OperatorType[\"UNHEX\"] = \"UNHEX\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_upper\n     * + https://www.postgresql.org/docs/9.4/functions-string.html#FUNCTIONS-STRING-SQL\n     * + https://www.sqlite.org/lang_corefunc.html#upper\n     *\n     * -----\n     *\n     * + MySQL          : `UPPER(x)`\n     * + PostgreSQL     : `UPPER(x)`\n     * + SQLite         : `UPPER(x)`\n     */\n    OperatorType[\"UPPER\"] = \"UPPER\";\n    /*\n     * Appears to be MySQL-specific,\n     * https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_weight-string\n     */\n    //WEIGHT_STIRNG = \"WEIGHT_STIRNG\",\n    /*\n        Arithmetic Operators\n        https://dev.mysql.com/doc/refman/8.0/en/arithmetic-functions.html\n    */\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/arithmetic-functions.html#operator_div\n     * + https://www.postgresql.org/docs/9.0/functions-math.html\n     * + https://www.postgresql.org/docs/current/sql-expressions.html#SQL-SYNTAX-TYPE-CASTS\n     *\n     * -----\n     *\n     * Interestingly enough,\n     * MySQL uses `SIGNED` and `UNSIGNED` for integer type names when casting.\n     * PostgreSQL uses `INTEGER`\n     *\n     * -----\n     *\n     * + MySQL        : `DIV`\n     * + PostgreSQL   : `CAST(TRUNC(CAST(x AS NUMERIC) / CAST(y AS NUMERIC), 0) AS BIGINT)`\n     * + SQLite       : `CAST(x/y AS BIGINT)`\n     *   + SQLite does not have `DECIMAL` data type support...\n     *\n     */\n    OperatorType[\"INTEGER_DIVISION\"] = \"INTEGER_DIVISION\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/arithmetic-functions.html#operator_divide\n     * + https://www.postgresql.org/docs/9.0/functions-math.html\n     * + https://www.sqlite.org/lang_expr.html#binaryops\n     *\n     * -----\n     *\n     * + MySQL        : `/`\n     * + PostgreSQL   : `/`\n     * + SQLite       : `/`\n     */\n    OperatorType[\"FRACTIONAL_DIVISION\"] = \"FRACTIONAL_DIVISION\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/arithmetic-functions.html#operator_minus\n     *\n     * -----\n     *\n     * + MySQL        : `-`\n     * + PostgreSQL   : `-`\n     * + SQLite       : `-`\n     */\n    OperatorType[\"SUBTRACTION\"] = \"SUBTRACTION\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/arithmetic-functions.html#operator_mod\n     * + https://www.postgresql.org/docs/9.0/functions-math.html\n     * + https://www.sqlite.org/lang_expr.html#binaryops\n     *\n     * @todo Find out if they behave the same\n     *\n     * + MySQL        : `%`\n     *   + `1%0` === `NULL`\n     * + PostgreSQL   : `mod(x, y)` (The `%` operator does not handle negative values)\n     *   + `mod(1, 0)` throws error\n     * + SQLite       : `%`\n     *   + `1%0` === `NULL`\n     */\n    OperatorType[\"INTEGER_REMAINDER\"] = \"INTEGER_REMAINDER\";\n    /*\n     * + https://dev.mysql.com/doc/refman/8.0/en/arithmetic-functions.html#operator_mod\n     * + https://www.postgresql.org/docs/9.0/functions-math.html\n     * + https://www.sqlite.org/lang_expr.html#binaryops\n     *\n     * + MySQL        : `%`\n     * + PostgreSQL   : Not supported\n     * + SQLite       : Not supported\n     */\n    OperatorType[\"FRACTIONAL_REMAINDER\"] = \"FRACTIONAL_REMAINDER\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/arithmetic-functions.html#operator_plus\n     *\n     * -----\n     *\n     * + MySQL        : `+`\n     * + PostgreSQL   : `+`\n     * + SQLite       : `+`\n     */\n    OperatorType[\"ADDITION\"] = \"ADDITION\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/arithmetic-functions.html#operator_times\n     *\n     * -----\n     *\n     * + MySQL        : `*`\n     * + PostgreSQL   : `*`\n     * + SQLite       : `*`\n     */\n    OperatorType[\"MULTIPLICATION\"] = \"MULTIPLICATION\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/arithmetic-functions.html#operator_unary-minus\n     *\n     * -----\n     *\n     * + MySQL        : `-`\n     * + PostgreSQL   : `-`\n     * + SQLite       : `-`\n     */\n    OperatorType[\"UNARY_MINUS\"] = \"UNARY_MINUS\";\n    /*\n        Mathematical Functions\n        https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html\n    */\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_abs\n     * + https://www.postgresql.org/docs/9.0/functions-math.html\n     * + https://www.sqlite.org/lang_corefunc.html#abs\n     *\n     * -----\n     *\n     * + MySQL        : `ABS(x)`\n     * + PostgreSQL   : `@` or `ABS(x)` (Let's not use the ugly `@` operator)\n     * + SQLite       : `ABS(x)`\n     */\n    OperatorType[\"ABSOLUTE_VALUE\"] = \"ABSOLUTE_VALUE\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_acos\n     * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-TRIG-TABLE\n     *\n     * -----\n     *\n     * + MySQL          : `ACOS(x)`\n     * + PostgreSQL     : `ACOS(x)`\n     * + SQLite         : None, implement with user-defined function\n     */\n    OperatorType[\"ARC_COSINE\"] = \"ARC_COSINE\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_asin\n     * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-TRIG-TABLE\n     *\n     * -----\n     *\n     * + MySQL          : `ASIN(x)`\n     * + PostgreSQL     : `ASIN(x)`\n     * + SQLite         : None, implement with user-defined function\n     */\n    OperatorType[\"ARC_SINE\"] = \"ARC_SINE\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_atan\n     * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-TRIG-TABLE\n     *\n     * -----\n     *\n     * + MySQL          : `ATAN(x)`\n     * + PostgreSQL     : `ATAN(x)`\n     * + SQLite         : None, implement with user-defined function\n     */\n    OperatorType[\"ARC_TANGENT\"] = \"ARC_TANGENT\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_atan2\n     * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-TRIG-TABLE\n     *\n     * -----\n     *\n     * + MySQL          : `ATAN2(y, x)`\n     * + PostgreSQL     : `ATAN2(y, x)`\n     * + SQLite         : None, implement with user-defined function\n     */\n    OperatorType[\"ARC_TANGENT_2\"] = \"ARC_TANGENT_2\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_ceil\n     * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-FUNC-TABLE\n     *\n     * -----\n     *\n     * + MySQL        : `CEIL(x)/CEILING(x)`\n     * + PostgreSQL   : `CEIL(x)/CEILING(x)`\n     * + SQLite       : None, use the following instead,\n     *   + https://stackoverflow.com/questions/14969067/getting-the-ceil-value-of-a-number-in-sqlite\n     * ```sql\n     *  (\n     *      CASE\n     *          WHEN x = CAST(x AS INT) THEN\n     *              CAST(x AS INT)\n     *          ELSE\n     *              1 + CAST(x AS INT)\n     *      END\n     *  )\n     * ```\n     *\n     */\n    OperatorType[\"CEILING\"] = \"CEILING\";\n    /*\n     * Appears to be MySQL-specific,\n     * https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_conv\n     */\n    //CONV = \"CONV\"\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_cos\n     * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-TRIG-TABLE\n     *\n     * -----\n     *\n     * + MySQL          : `COS(x)`\n     * + PostgreSQL     : `COS(x)`\n     * + SQLite         : None, implement with user-defined function\n     */\n    OperatorType[\"COSINE\"] = \"COSINE\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_cot\n     * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-TRIG-TABLE\n     *\n     * -----\n     *\n     * + MySQL          : `COT(x)`\n     * + PostgreSQL     : `COT(x)`\n     * + SQLite         : None, implement with user-defined function\n     */\n    OperatorType[\"COTANGENT\"] = \"COTANGENT\";\n    /*\n     * Appears to be MySQL-specific,\n     * https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_crc32\n     */\n    //CRC32 = \"CRC32\",\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_degrees\n     * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-FUNC-TABLE\n     *\n     * -----\n     *\n     * + MySQL          : `DEGREES(x)`\n     * + PostgreSQL     : `DEGREES(x)`\n     * + SQLite         : None, use `x * (180.0/3.1415926535897932384626433832795028841971693993751)`\n     */\n    OperatorType[\"DEGREES\"] = \"DEGREES\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_exp\n     * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-FUNC-TABLE\n     *\n     * -----\n     *\n     * + MySQL          : `EXP(x)`\n     * + PostgreSQL     : `EXP(x)`\n     * + SQLite         : None, implement with user-defined function\n     */\n    OperatorType[\"NATURAL_EXPONENTIATION\"] = \"NATURAL_EXPONENTIATION\";\n    /*\n     * Appears to be PostgreSQL-specific,\n     * + Factorial; `x !` / `!! x`\n     * + https://www.postgresql.org/docs/8.2/functions-math.html\n     */\n    //FACTORIAL = \"FACTORIAL\",\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_floor\n     * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-FUNC-TABLE\n     *\n     * -----\n     *\n     * + MySQL        : `FLOOR(x)`\n     * + PostgreSQL   : `FLOOR(x)`\n     * + SQLite       : None, use the following instead,\n     *   + https://stackoverflow.com/questions/7129249/getting-the-floor-value-of-a-number-in-sqlite\n     * ```sql\n     *  (\n     *      CASE\n     *          WHEN x >= 0 THEN\n     *              CAST(x AS INT)\n     *          WHEN x = CAST(x AS INT) THEN\n     *              CAST(x AS INT)\n     *          ELSE\n     *              CAST(x - 1.0 AS INT)\n     *      END\n     *  )\n     * ```\n     */\n    OperatorType[\"FLOOR\"] = \"FLOOR\";\n    /*\n     * Appears to be MySQL-specific,\n     * https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_format\n     */\n    //FORMAT = \"FORMAT\",\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_ln\n     * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-FUNC-TABLE\n     *\n     * -----\n     *\n     * + MySQL          : `LN(x)`\n     * + PostgreSQL     : `LN(x)`\n     * + SQLite         : None, implment with user-defined function\n     */\n    OperatorType[\"LN\"] = \"LN\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_log\n     * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-FUNC-TABLE\n     *\n     * -----\n     *\n     * + MySQL          : `LOG(base, x)`\n     * + PostgreSQL     : `LOG(base, x)`\n     * + SQLite         : None, implment with user-defined function\n     */\n    OperatorType[\"LOG\"] = \"LOG\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_log2\n     *\n     * -----\n     *\n     * + MySQL          : `LOG2(x)`\n     * + PostgreSQL     : `LOG(2.0, x)`\n     * + SQLite         : None, implment with user-defined function\n     */\n    OperatorType[\"LOG2\"] = \"LOG2\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_log10\n     *\n     * -----\n     *\n     * + MySQL          : `LOG10(x)`\n     * + PostgreSQL     : `LOG(10.0, x)`\n     * + SQLite         : None, implment with user-defined function\n     */\n    OperatorType[\"LOG10\"] = \"LOG10\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_pi\n     * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-FUNC-TABLE\n     *\n     * -----\n     *\n     * + MySQL          : `PI()` Returns `3.141592653589793`\n     * + PostgreSQL     : `PI()` Returns `3.14159265358979`\n     * + SQLite         : None, implement using `3.141592653589793`\n     *\n     * -----\n     *\n     * In JS, `Math.PI` is `3.141592653589793`\n     */\n    OperatorType[\"PI\"] = \"PI\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_power\n     * + https://www.postgresql.org/docs/9.0/functions-math.html\n     * + https://stackoverflow.com/questions/13190064/how-to-find-power-of-a-number-in-sqlite\n     *\n     * + MySQL        : `POWER(x, y)`\n     * + PostgreSQL   : `^` or `POWER(x, y)` (Let's not use the ugly `^` operator)\n     * + SQLite       : Requres creating a `POWER(x, y)` user-defined function\n     */\n    OperatorType[\"POWER\"] = \"POWER\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_radians\n     * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-FUNC-TABLE\n     *\n     * -----\n     *\n     * + MySQL          : `RADIANS(x)`\n     * + PostgreSQL     : `RADIANS(x)`\n     * + SQLite         : None, use `x * (3.1415926535897932384626433832795028841971693993751/180.0)`\n     */\n    OperatorType[\"RADIANS\"] = \"RADIANS\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_rand\n     * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-RANDOM-TABLE\n     * + https://www.sqlite.org/lang_corefunc.html#random\n     *\n     * -----\n     *\n     * + MySQL          : `RAND()`      Returns `0.0 <= v < 1.0`\n     * + PostgreSQL     : `RANDOM()`    Returns `0.0 <= v < 1.0`\n     * + SQLite         : Incompatible.\n     *\n     *   SQLite's `RANDOM()` function returns a value between `-9223372036854775808` and `+9223372036854775807`.\n     *\n     *   Therefore, one should use, `ABS(RANDOM()) / 9223372036854775808`\n     */\n    OperatorType[\"RANDOM\"] = \"RANDOM\";\n    /*\n     * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_round\n     * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-FUNC-TABLE\n     * + https://www.sqlite.org/lang_corefunc.html#round\n     *\n     * -----\n     *\n     * + MySQL          : `ROUND(x)` or `ROUND(x, y)`\n     * + PostgreSQL     : `ROUND(x)` or `ROUND(x, y)`\n     * + SQLite         : `ROUND(x)` or `ROUND(x, y)`\n     */\n    //ROUND = \"ROUND\",\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_sign\n     * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-FUNC-TABLE\n     *\n     * -----\n     *\n     * + MySQL          : `SIGN(x)`\n     * + PostgreSQL     : `SIGN(x)`\n     * + SQLite         : `CASE WHEN x > 0 THEN 1e0 WHEN x < 0 THEN -1e0 ELSE 0e0 END`\n     */\n    OperatorType[\"SIGN\"] = \"SIGN\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_sin\n     * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-TRIG-TABLE\n     *\n     * -----\n     *\n     * + MySQL          : `SIN(x)`\n     * + PostgreSQL     : `SIN(x)`\n     * + SQLite         : None, implement with user-defined function\n     */\n    OperatorType[\"SINE\"] = \"SINE\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_sqrt\n     * + https://www.postgresql.org/docs/9.0/functions-math.html\n     * + https://stackoverflow.com/questions/13190064/how-to-find-power-of-a-number-in-sqlite\n     *\n     * -----\n     *\n     * + MySQL        : `SQRT(x)`\n     * + PostgreSQL   : `|/` or `SQRT(x)` (Lets not use the ugly `|/` operator)\n     * + SQLite       : Requres creating a `SQRT(x)` user-defined function\n     */\n    OperatorType[\"SQUARE_ROOT\"] = \"SQUARE_ROOT\";\n    /**\n     * + https://www.postgresql.org/docs/9.0/functions-math.html\n     * + https://stackoverflow.com/questions/13190064/how-to-find-power-of-a-number-in-sqlite\n     *\n     * -----\n     *\n     * + MySQL        : `POWER(x, 1.0/3.0)` The `.0` parts are important!\n     * + PostgreSQL   : `||/` or `CBRT(x)` (Lets not use the ugly `||/` operator)\n     * + SQLite       : Requres creating a `CBRT(x)` user-defined function\n     *\n     * -----\n     *\n     * MySQL\n     * ```sql\n     * SELECT POWER(27, 1.0/3.0)\n     * > 3\n     * ```\n     *\n     * PostgreSQL\n     * ```sql\n     * SELECT POWER(27, 1.0/3.0)\n     * > 2.99999999999999999997\n     * ```\n     */\n    OperatorType[\"CUBE_ROOT\"] = \"CUBE_ROOT\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_tan\n     * + https://www.postgresql.org/docs/9.1/functions-math.html#FUNCTIONS-MATH-TRIG-TABLE\n     *\n     * -----\n     *\n     * + MySQL          : `TAN(x)`\n     * + PostgreSQL     : `TAN(x)`\n     * + SQLite         : None, implement with user-defined function\n     */\n    OperatorType[\"TANGENT\"] = \"TANGENT\";\n    /*\n     * + https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_truncate\n     * + https://www.postgresql.org/docs/9.0/functions-math.html\n     *\n     * -----\n     *\n     * + MySQL          : `TRUNCATE(x, d)`\n     * + PostgreSQL     : `TRUNC(x, d)`\n     * + SQLite         : None, implement with `Math.trunc(x * Math.pow(10, d)) / Math.pow(10, d)`\n     */\n    //TRUNCATE = \"TRUNCATE\",\n    /*\n        Date and Time Functions\n        https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html\n    */\n    /**\n     * @todo\n     */\n    /*\n     * + MySQL          :\n     * ```sql\n     *  SELECT\n     *      adddate(date('2010-01-01'), interval 1 hour),\n     *      adddate(date('2010-01-01'), interval 1 day);\n     *  > 2010-01-01 01:00:00\n     *  > 2010-01-02\n     * ```\n     * + PostgreSQL     :\n     * ```sql\n     *  SET TIME ZONE 'EST';\n     *  SELECT\n     *      date '2010-01-01' + interval '1 hour',\n     *      date '2010-01-01' + interval '1 day',\n     *      time '10:23:45.123' + interval '1 hour',\n     *      time '10:23:45.123' + interval '1 day'\n     *  > 2010-01-01T01:00:00.000Z\n     *  > 2010-01-02T00:00:00.000Z\n     *  > 11:23:45.123\n     *  > 10:23:45.123\n     * ```\n     */\n    //ADDDATE = \"ADDDATE\",\n    /*\n     * Appears to be MySQL-specific,\n     * https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_addtime\n     *\n     * It has... Weird behaviour.\n     */\n    //ADDTIME = \"ADDTIME\",\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_current-date\n     * + https://www.postgresql.org/docs/9.4/functions-datetime.html#FUNCTIONS-DATETIME-TABLE\n     * + https://www.sqlite.org/lang_datefunc.html\n     *\n     * -----\n     *\n     * + MySQL          : `CURRENT_DATE()`\n     * + PostgreSQL     : `CURRENT_DATE()`\n     * + SQLite         : `strftime('%Y-%m-%d', 'now')`\n     */\n    OperatorType[\"CURRENT_DATE\"] = \"CURRENT_DATE\";\n    /* *\n     * Cannot use JS `Date` to represent SQL `TIME`.\n     *\n     * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_current-time\n     * + https://www.postgresql.org/docs/9.4/functions-datetime.html#FUNCTIONS-DATETIME-TABLE\n     * + https://www.sqlite.org/lang_datefunc.html\n     *\n     * -----\n     *\n     * + MySQL          : `CURRENT_TIME(0)`\n     * + PostgreSQL     : `CURRENT_TIME(0)`\n     * + SQLite         : `strftime('%H:%M:%S', 'now')`\n     */\n    //CURRENT_TIME_0 = \"CURRENT_TIME_0\",\n    /* *\n     * Cannot use JS `Date` to represent SQL `TIME`.\n     *\n     * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_current-time\n     * + https://www.postgresql.org/docs/9.4/functions-datetime.html#FUNCTIONS-DATETIME-TABLE\n     * + https://www.sqlite.org/lang_datefunc.html\n     *\n     * -----\n     *\n     * + MySQL          : `CURRENT_TIME(1)`\n     * + PostgreSQL     : `CURRENT_TIME(1)`\n     * + SQLite         : `substr(strftime('%H:%M:%f', 'now'), 1, 10)`\n     */\n    //CURRENT_TIME_1 = \"CURRENT_TIME_1\",\n    /* *\n     * Cannot use JS `Date` to represent SQL `TIME`.\n     *\n     * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_current-time\n     * + https://www.postgresql.org/docs/9.4/functions-datetime.html#FUNCTIONS-DATETIME-TABLE\n     * + https://www.sqlite.org/lang_datefunc.html\n     *\n     * -----\n     *\n     * + MySQL          : `CURRENT_TIME(2)`\n     * + PostgreSQL     : `CURRENT_TIME(2)`\n     * + SQLite         : `substr(strftime('%H:%M:%f', 'now'), 1, 11)`\n     */\n    //CURRENT_TIME_2 = \"CURRENT_TIME_2\",\n    /* *\n     * Cannot use JS `Date` to represent SQL `TIME`.\n     *\n     * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_current-time\n     * + https://www.postgresql.org/docs/9.4/functions-datetime.html#FUNCTIONS-DATETIME-TABLE\n     * + https://www.sqlite.org/lang_datefunc.html\n     *\n     * -----\n     *\n     * + MySQL          : `CURRENT_TIME(3)`\n     * + PostgreSQL     : `CURRENT_TIME(3)`\n     * + SQLite         : `strftime('%H:%M:%f', 'now')`\n     */\n    //CURRENT_TIME_3 = \"CURRENT_TIME_3\",\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_current-timestamp\n     * + https://www.postgresql.org/docs/9.4/functions-datetime.html#FUNCTIONS-DATETIME-CURRENT\n     * + https://www.sqlite.org/lang_datefunc.html\n     *\n     * -----\n     *\n     * + MySQL          : `CURRENT_TIMESTAMP(0)`\n     * ```sql\n     *  SET @@session.time_zone = 'EST';\n     *  SELECT\n     *      CURRENT_TIMESTAMP(0),\n     *      FLOOR(UNIX_TIMESTAMP(CURRENT_TIMESTAMP(0))),\n     *      UNIX_TIMESTAMP()\n     *  > 2019-09-07 19:55:03\n     *  > 1567900503\n     *  > 1567900503\n     * ```\n     * + PostgreSQL     : `CURRENT_TIMESTAMP(0)`\n     *   + http://www.postgresqltutorial.com/postgresql-localtimestamp/\n     *\n     *   > The `LOCALTIMESTAMP` function returns a `TIMESTAMP` value **without** time zone while\n     *   > the `CURRENT_TIMESTAMP` function returns a `TIMESTAMP` **with** time zone.\n     * ```sql\n     *  SET TIME ZONE 'EST';\n     *  SELECT\n     *      CURRENT_TIMESTAMP(0),\n     *      FLOOR(EXTRACT(\n     *          EPOCH FROM CURRENT_TIMESTAMP(0)\n     *      ))\n     *  > 2019-09-07T23:58:20.000Z\n     *  > 1567900700\n     * ```\n     * + SQLite         : `strftime('%Y-%m-%d %H:%M:%S', 'now')` gives precision `0`\n     * ```sql\n     *  SELECT\n     *      strftime('%Y-%m-%d %H:%M:%S', 'now'),\n     *      strftime('%s', strftime('%Y-%m-%d %H:%M:%S', 'now'));\n     *  > 2019-09-07 23:59:35\n     *  > 1567900775\n     * ```\n     */\n    OperatorType[\"CURRENT_TIMESTAMP_0\"] = \"CURRENT_TIMESTAMP_0\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_current-timestamp\n     * + https://www.postgresql.org/docs/9.4/functions-datetime.html#FUNCTIONS-DATETIME-CURRENT\n     * + https://www.sqlite.org/lang_datefunc.html\n     *\n     * -----\n     *\n     * + MySQL          : `CURRENT_TIMESTAMP(1)`\n     * ```sql\n     *  SET @@session.time_zone = 'EST';\n     *  SELECT\n     *      CURRENT_TIMESTAMP(1),\n     *      FLOOR(UNIX_TIMESTAMP(CURRENT_TIMESTAMP(1))),\n     *      UNIX_TIMESTAMP()\n     *  > 2019-09-07 19:55:03.8\n     *  > 1567900503\n     *  > 1567900503\n     * ```\n     * + PostgreSQL     : `CURRENT_TIMESTAMP(1)`\n     *   + http://www.postgresqltutorial.com/postgresql-localtimestamp/\n     *\n     *   > The `LOCALTIMESTAMP` function returns a `TIMESTAMP` value **without** time zone while\n     *   > the `CURRENT_TIMESTAMP` function returns a `TIMESTAMP` **with** time zone.\n     * ```sql\n     *  SET TIME ZONE 'EST';\n     *  SELECT\n     *      CURRENT_TIMESTAMP(1),\n     *      FLOOR(EXTRACT(\n     *          EPOCH FROM CURRENT_TIMESTAMP(1)\n     *      ))\n     *  > 2019-09-07T23:58:20.400Z\n     *  > 1567900700\n     * ```\n     * + SQLite         : `substr(strftime('%Y-%m-%d %H:%M:%f', 'now'), 1, 21)` gives precision `1`\n     * ```sql\n     *  SELECT\n     *      substr(strftime('%Y-%m-%d %H:%M:%f', 'now'), 1, 21),\n     *      strftime('%s', substr(strftime('%Y-%m-%d %H:%M:%f', 'now'), 1, 21));\n     *  > 2019-09-07 23:59:35.3\n     *  > 1567900775\n     * ```\n     */\n    OperatorType[\"CURRENT_TIMESTAMP_1\"] = \"CURRENT_TIMESTAMP_1\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_current-timestamp\n     * + https://www.postgresql.org/docs/9.4/functions-datetime.html#FUNCTIONS-DATETIME-CURRENT\n     * + https://www.sqlite.org/lang_datefunc.html\n     *\n     * -----\n     *\n     * + MySQL          : `CURRENT_TIMESTAMP(2)`\n     * ```sql\n     *  SET @@session.time_zone = 'EST';\n     *  SELECT\n     *      CURRENT_TIMESTAMP(2),\n     *      FLOOR(UNIX_TIMESTAMP(CURRENT_TIMESTAMP(2))),\n     *      UNIX_TIMESTAMP()\n     *  > 2019-09-07 19:55:03.83\n     *  > 1567900503\n     *  > 1567900503\n     * ```\n     * + PostgreSQL     : `CURRENT_TIMESTAMP(2)`\n     *   + http://www.postgresqltutorial.com/postgresql-localtimestamp/\n     *\n     *   > The `LOCALTIMESTAMP` function returns a `TIMESTAMP` value **without** time zone while\n     *   > the `CURRENT_TIMESTAMP` function returns a `TIMESTAMP` **with** time zone.\n     * ```sql\n     *  SET TIME ZONE 'EST';\n     *  SELECT\n     *      CURRENT_TIMESTAMP(2),\n     *      FLOOR(EXTRACT(\n     *          EPOCH FROM CURRENT_TIMESTAMP(2)\n     *      ))\n     *  > 2019-09-07T23:58:20.470Z\n     *  > 1567900700\n     * ```\n     * + SQLite         : `substr(strftime('%Y-%m-%d %H:%M:%f', 'now'), 1, 22)` gives precision `2`\n     * ```sql\n     *  SELECT\n     *      substr(strftime('%Y-%m-%d %H:%M:%f', 'now'), 1, 22),\n     *      strftime('%s', substr(strftime('%Y-%m-%d %H:%M:%f', 'now'), 1, 22));\n     *  > 2019-09-07 23:59:35.32\n     *  > 1567900775\n     * ```\n     */\n    OperatorType[\"CURRENT_TIMESTAMP_2\"] = \"CURRENT_TIMESTAMP_2\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_current-timestamp\n     * + https://www.postgresql.org/docs/9.4/functions-datetime.html#FUNCTIONS-DATETIME-CURRENT\n     * + https://www.sqlite.org/lang_datefunc.html\n     *\n     * -----\n     *\n     * + MySQL          : `CURRENT_TIMESTAMP(3)`\n     * ```sql\n     *  SET @@session.time_zone = 'EST';\n     *  SELECT\n     *      CURRENT_TIMESTAMP(3),\n     *      FLOOR(UNIX_TIMESTAMP(CURRENT_TIMESTAMP(3))),\n     *      UNIX_TIMESTAMP()\n     *  > 2019-09-07 19:55:03.836\n     *  > 1567900503\n     *  > 1567900503\n     * ```\n     * + PostgreSQL     : `CURRENT_TIMESTAMP(3)`\n     *   + http://www.postgresqltutorial.com/postgresql-localtimestamp/\n     *\n     *   > The `LOCALTIMESTAMP` function returns a `TIMESTAMP` value **without** time zone while\n     *   > the `CURRENT_TIMESTAMP` function returns a `TIMESTAMP` **with** time zone.\n     * ```sql\n     *  SET TIME ZONE 'EST';\n     *  SELECT\n     *      CURRENT_TIMESTAMP(3),\n     *      FLOOR(EXTRACT(\n     *          EPOCH FROM CURRENT_TIMESTAMP(3)\n     *      ))\n     *  > 2019-09-07T23:58:20.477Z\n     *  > 1567900700\n     * ```\n     * + SQLite         : `strftime('%Y-%m-%d %H:%M:%f', 'now')` gives precision `3`\n     * ```sql\n     *  SELECT\n     *      strftime('%Y-%m-%d %H:%M:%f', 'now'),\n     *      strftime('%s', strftime('%Y-%m-%d %H:%M:%f', 'now'));\n     *  > 2019-09-07 23:59:35.327\n     *  > 1567900775\n     * ```\n     */\n    OperatorType[\"CURRENT_TIMESTAMP_3\"] = \"CURRENT_TIMESTAMP_3\";\n    /**\n     *\n     * -----\n     *\n     * + MySQL          : `CONVERT_TZ(x, '+00:00', @@session.time_zone)`\n     * ```sql\n     *  SET @@session.time_zone = 'EST';\n     *  SELECT\n     *      CONVERT_TZ('1970-01-01 03:00:00.123', '+00:00', @@session.time_zone),\n     *      FLOOR(UNIX_TIMESTAMP(CONVERT_TZ('1970-01-01 03:00:00.123', '+00:00', @@session.time_zone)));\n     *  > 1969-12-31 22:00:00.123\n     *  > 10800\n     * ```\n     * + PostgreSQL     : `(x)::timestamp AT TIME ZONE '+00:00'`\n     * ```sql\n     *  SET TIME ZONE 'EST';\n     *  SELECT\n     *      '1970-01-01 03:00:00.123'::timestamp AT TIME ZONE '+00:00',\n     *      FLOOR(EXTRACT(\n     *          EPOCH FROM (\n     *              '1970-01-01 03:00:00.123'::timestamp AT TIME ZONE '+00:00'\n     *          )\n     *      ))\n     *  > 1970-01-01T03:00:00.123Z\n     *  > 10800\n     * ```\n     * + SQLite         : `strftime('%Y-%m-%d %H:%M:%f', x)`\n     * ```sql\n     *  SELECT\n     *      strftime('%Y-%m-%d %H:%M:%f', '1970-01-01 03:00:00.123'),\n     *      strftime('%s', strftime('%Y-%m-%d %H:%M:%f', '1970-01-01 03:00:00.123'));\n     *  > 1970-01-01 03:00:00.123\n     *  > 10800\n     * ```\n     *\n     * -----\n     *\n     * Treat `x` as representing a `UTC` timestamp.\n     *\n     */\n    OperatorType[\"UTC_STRING_TO_TIMESTAMP_CONSTRUCTOR\"] = \"UTC_STRING_TO_TIMESTAMP_CONSTRUCTOR\";\n    /*\n     *\n     * -----\n     *\n     * + MySQL          : `TIMESTAMP(x)`\n     * ```sql\n     *  SET @@session.time_zone = 'EST';\n     *  SELECT\n     *      TIMESTAMP('1970-01-01 00:00:00.123'),\n     *      FLOOR(UNIX_TIMESTAMP(TIMESTAMP('1970-01-01 00:00:00.123')));\n     *  > 1970-01-01 00:00:00.123\n     *  > 18000\n     * ```\n     * + PostgreSQL     : `(x)::timestamp AT TIME ZONE current_setting('TIMEZONE')`\n     * ```sql\n     *  SET TIME ZONE 'EST';\n     *  SELECT\n     *      '1970-01-01 00:00:00.123'::timestamp AT TIME ZONE current_setting('TIMEZONE'),\n     *      FLOOR(EXTRACT(\n     *          EPOCH FROM (\n     *              '1970-01-01 00:00:00.123'::timestamp AT TIME ZONE current_setting('TIMEZONE')\n     *          )\n     *      ))\n     *  > 1970-01-01T05:00:00.123Z\n     *  > 18000\n     * ```\n     * + SQLite         : `strftime('%Y-%m-%d %H:%M:%f', x, 'utc')`\n     * ```sql\n     *  SELECT\n     *      strftime('%Y-%m-%d %H:%M:%f', '1970-01-01 00:00:00.123', 'utc'),\n     *      strftime('%s', strftime('%Y-%m-%d %H:%M:%f', '1970-01-01 00:00:00.123', 'utc'));\n     *  > 1970-01-01 05:00:00.123\n     *  > 18000\n     * ```\n     *\n     * -----\n     *\n     * Treat `x` as representing a `local` timestamp.\n     *\n     */\n    //LOCAL_STRING_TO_TIMESTAMP_CONSTRUCTOR = \"LOCAL_STRING_TO_TIMESTAMP_CONSTRUCTOR\",\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_extract\n     * + https://www.postgresql.org/docs/9.4/functions-datetime.html#FUNCTIONS-DATETIME-TABLE\n     * + https://www.sqlite.org/lang_datefunc.html\n     *\n     * -----\n     *\n     * + MySQL          : `EXTRACT(SECOND FROM datetime) + FLOOR(EXTRACT(MICROSECOND FROM datetime) / 1000.0) / 1000.0`\n     * ```sql\n     *  SELECT\n     *      EXTRACT(SECOND FROM timestamp '2010-03-27 14:45:32.456789') +\n     *      FLOOR(EXTRACT(MICROSECOND FROM timestamp '2010-03-27 14:45:32.456789') / 1000.0e0) / 1000.0e0\n     *  > 32.4560\n     * ```\n     * + PostgreSQL     : `FLOOR(EXTRACT(SECOND FROM datetime) * 1000) / 1000`\n     * + SQLite         : `strftime('%f', datetime)`\n     * ```sql\n     *  SELECT\n     *      strftime('%f', '2010-03-27 14:45:32.456789')\n     *  > 32.457\n     *  -- The result is rounded, not truncated.\n     *  -- If it were truncated, we would get 32.456\n     * ```\n     * ```sql\n     *  SELECT\n     *      strftime('%f', '2010-03-27 23:59:59.999999')\n     *  > 59.999\n     *  -- The result is truncated, not rounded.\n     *  -- If it were rounded, we would get 60\n     * ```\n     *\n     * @todo Make behaviour consistent?\n     */\n    OperatorType[\"EXTRACT_FRACTIONAL_SECOND_3\"] = \"EXTRACT_FRACTIONAL_SECOND_3\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_extract\n     * + https://www.postgresql.org/docs/9.4/functions-datetime.html#FUNCTIONS-DATETIME-TABLE\n     * + https://www.sqlite.org/lang_datefunc.html\n     *\n     * -----\n     *\n     * + MySQL          : `EXTRACT(SECOND FROM datetime)`\n     * + PostgreSQL     : `CAST(FLOOR(EXTRACT(SECOND FROM datetime)) AS BIGINT)`\n     * + SQLite         : `CAST(strftime('%S', datetime) AS BIGINT)`\n     */\n    OperatorType[\"EXTRACT_INTEGER_SECOND\"] = \"EXTRACT_INTEGER_SECOND\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_extract\n     * + https://www.postgresql.org/docs/9.4/functions-datetime.html#FUNCTIONS-DATETIME-TABLE\n     * + https://www.sqlite.org/lang_datefunc.html\n     *\n     * -----\n     *\n     * + MySQL          : `EXTRACT(MINUTE FROM datetime)`\n     * + PostgreSQL     : `CAST(EXTRACT(MINUTE FROM datetime) AS BIGINT)`\n     * + SQLite         : `CAST(strftime('%M', datetime) AS BIGINT)`\n     */\n    OperatorType[\"EXTRACT_MINUTE\"] = \"EXTRACT_MINUTE\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_extract\n     * + https://www.postgresql.org/docs/9.4/functions-datetime.html#FUNCTIONS-DATETIME-TABLE\n     * + https://www.sqlite.org/lang_datefunc.html\n     *\n     * -----\n     *\n     * + MySQL          : `EXTRACT(HOUR FROM datetime)`\n     * + PostgreSQL     : `CAST(EXTRACT(HOUR FROM datetime) AS BIGINT)`\n     * + SQLite         : `CAST(strftime('%H', datetime) AS BIGINT)`\n     */\n    OperatorType[\"EXTRACT_HOUR\"] = \"EXTRACT_HOUR\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_extract\n     * + https://www.postgresql.org/docs/9.4/functions-datetime.html#FUNCTIONS-DATETIME-TABLE\n     * + https://www.sqlite.org/lang_datefunc.html\n     *\n     * -----\n     *\n     * + MySQL          : `EXTRACT(DAY FROM datetime)`\n     * + PostgreSQL     : `CAST(EXTRACT(DAY FROM datetime) AS BIGINT)`\n     * + SQLite         : `CAST(strftime('%d', datetime) AS BIGINT)`\n     */\n    OperatorType[\"EXTRACT_DAY\"] = \"EXTRACT_DAY\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_extract\n     * + https://www.postgresql.org/docs/9.4/functions-datetime.html#FUNCTIONS-DATETIME-TABLE\n     * + https://www.sqlite.org/lang_datefunc.html\n     *\n     * -----\n     *\n     * + MySQL          : `EXTRACT(MONTH FROM datetime)`\n     * + PostgreSQL     : `CAST(EXTRACT(MONTH FROM datetime) AS BIGINT)`\n     * + SQLite         : `CAST(strftime('%m', datetime) AS BIGINT)`\n     */\n    OperatorType[\"EXTRACT_MONTH\"] = \"EXTRACT_MONTH\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_extract\n     * + https://www.postgresql.org/docs/9.4/functions-datetime.html#FUNCTIONS-DATETIME-TABLE\n     * + https://www.sqlite.org/lang_datefunc.html\n     *\n     * -----\n     *\n     * + MySQL          : `EXTRACT(YEAR FROM datetime)`\n     * + PostgreSQL     : `CAST(EXTRACT(YEAR FROM datetime) AS BIGINT)`\n     * + SQLite         : `CAST(strftime('%Y', datetime) AS BIGINT)`\n     */\n    OperatorType[\"EXTRACT_YEAR\"] = \"EXTRACT_YEAR\";\n    /**\n     * + https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html#function_last-day\n     *\n     * -----\n     *\n     * + MySQL          : `LAST_DAY(datetime)`\n     * ```sql\n     *  SELECT\n     *      LAST_DAY(timestamp '2010-03-27 14:45:32.456789')\n     *  > 2010-03-31\n     * ```\n     * + PostgreSQL     :\n     * ```sql\n     *  SELECT\n     *      (\n     *          datetime +\n     *          interval '1 month' -\n     *          CONCAT(EXTRACT(DAY FROM datetime), ' day')::interval\n     *      )::date\n     * > 2010-03-31T00:00:00.000Z\n     * ```\n     * + SQLite         :\n     * ```sql\n     *  SELECT\n     *      strftime(\n     *          '%Y-%m-%d',\n     *          '2010-03-27 14:45:32.456789',\n     *          '+1 month',\n     *          '-' || strftime('%d', '2010-03-27 14:45:32.456789') || ' day'\n     *      )\n     *  > 2010-03-31\n     * ```\n     */\n    OperatorType[\"LAST_DAY\"] = \"LAST_DAY\";\n    /*\n     * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_timestampadd\n     * + https://www.postgresql.org/docs/9.4/functions-datetime.html#OPERATORS-DATETIME-TABLE\n     * + https://www.sqlite.org/lang_datefunc.html\n     *\n     * -----\n     *\n     * + MySQL          : `TIMESTAMPADD(MICROSECOND, x, datetime)`\n     * + PostgreSQL     : `datetime + concat(x/1000.0, ' millisecond')::interval`\n     *\n     *   1 millisecond is 1000 microseconds\n     *\n     * + SQLite         :\n     * ```sql\n     *  strftime(\n     *      '%Y-%m-%d %H:%M:%f',\n     *      datetime,\n     *      -- 1 second is 1,000,000 microseconds\n     *      (x/1000000.0) || ' second'\n     *  );\n     * ```\n     *\n     * However, SQLite only displays up to millisecond precision (3 decimal places for seconds).\n     * JS' `Date` also only has up to millisecond precision.\n     */\n    //TIMESTAMPADD_MICROSECOND = \"TIMESTAMPADD_MICROSECOND\",\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_timestampadd\n     * + https://www.postgresql.org/docs/9.4/functions-datetime.html#OPERATORS-DATETIME-TABLE\n     * + https://www.sqlite.org/lang_datefunc.html\n     *\n     * -----\n     *\n     * + MySQL          : `TIMESTAMPADD(SECOND, x/1000.0, datetime)`\n     * + PostgreSQL     : `datetime + concat(x, ' millisecond')::interval`\n     * + SQLite         :\n     * ```sql\n     *  strftime(\n     *      '%Y-%m-%d %H:%M:%f',\n     *      datetime,\n     *      (x/1000e0) || ' second'\n     *  );\n     * ```\n     */\n    OperatorType[\"TIMESTAMPADD_MILLISECOND\"] = \"TIMESTAMPADD_MILLISECOND\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_timestampadd\n     * + https://www.postgresql.org/docs/9.4/functions-datetime.html#OPERATORS-DATETIME-TABLE\n     * + https://www.sqlite.org/lang_datefunc.html\n     *\n     * -----\n     *\n     * + MySQL          : `TIMESTAMPADD(SECOND, x, datetime)`\n     * + PostgreSQL     : `datetime + concat(x, ' second')::interval`\n     * + SQLite         :\n     * ```sql\n     *  strftime(\n     *      '%Y-%m-%d %H:%M:%f',\n     *      datetime,\n     *      x || ' second'\n     *  );\n     * ```\n     */\n    OperatorType[\"TIMESTAMPADD_SECOND\"] = \"TIMESTAMPADD_SECOND\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_timestampadd\n     * + https://www.postgresql.org/docs/9.4/functions-datetime.html#OPERATORS-DATETIME-TABLE\n     * + https://www.sqlite.org/lang_datefunc.html\n     *\n     * -----\n     *\n     * + MySQL          : `TIMESTAMPADD(SECOND, x*60.0, datetime)`\n     *   + `TIMESTAMPADD(MINUTE, x, datetime)` ignores the fractional part of `x`.\n     *   + We convert `x` to seconds as a workaround.\n     * + PostgreSQL     : `datetime + concat(x, ' minute')::interval`\n     * + SQLite         :\n     * ```sql\n     *  strftime(\n     *      '%Y-%m-%d %H:%M:%f',\n     *      datetime,\n     *      x || ' minute'\n     *  );\n     * ```\n     */\n    OperatorType[\"TIMESTAMPADD_MINUTE\"] = \"TIMESTAMPADD_MINUTE\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_timestampadd\n     * + https://www.postgresql.org/docs/9.4/functions-datetime.html#OPERATORS-DATETIME-TABLE\n     * + https://www.sqlite.org/lang_datefunc.html\n     *\n     * -----\n     *\n     * + MySQL          : `TIMESTAMPADD(SECOND, x*60.0*60.0, datetime)`\n     *   + `TIMESTAMPADD(HOUR, x, datetime)` ignores the fractional part of `x`.\n     *   + We convert `x` to seconds as a workaround.\n     * + PostgreSQL     : `datetime + concat(x, ' hour')::interval`\n     * + SQLite         :\n     * ```sql\n     *  strftime(\n     *      '%Y-%m-%d %H:%M:%f',\n     *      datetime,\n     *      x || ' hour'\n     *  );\n     * ```\n     */\n    OperatorType[\"TIMESTAMPADD_HOUR\"] = \"TIMESTAMPADD_HOUR\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_timestampadd\n     * + https://www.postgresql.org/docs/9.4/functions-datetime.html#OPERATORS-DATETIME-TABLE\n     * + https://www.sqlite.org/lang_datefunc.html\n     *\n     * -----\n     *\n     * + MySQL          : `TIMESTAMPADD(SECOND, x*24.0*60.0*60.0, datetime)`\n     *   + `TIMESTAMPADD(DAY, x, datetime)` ignores the fractional part of `x`.\n     *   + We convert `x` to seconds as a workaround.\n     * + PostgreSQL     : `datetime + concat(x, ' day')::interval`\n     * + SQLite         :\n     * ```sql\n     *  strftime(\n     *      '%Y-%m-%d %H:%M:%f',\n     *      datetime,\n     *      x || ' day'\n     *  );\n     * ```\n     */\n    OperatorType[\"TIMESTAMPADD_DAY\"] = \"TIMESTAMPADD_DAY\";\n    /**\n     * Seems to be a MySQL and PostgreSQL thing.\n     * SQLite does not have `week` intervals.\n     *\n     * Could probably be emulated with `7 day` being `1 week`\n     */\n    //TIMESTAMPADD_WEEK = \"TIMESTAMPADD_WEEK\",\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_timestampadd\n     * + https://www.postgresql.org/docs/9.4/functions-datetime.html#OPERATORS-DATETIME-TABLE\n     * + https://www.sqlite.org/lang_datefunc.html\n     *\n     * -----\n     *\n     * + MySQL          : `TIMESTAMPADD(MONTH, x, datetime)`\n     * + PostgreSQL     : `datetime + concat(x, ' month')::interval`\n     * + SQLite         :\n     * ```sql\n     *  strftime(\n     *      '%Y-%m-%d %H:%M:%f',\n     *      datetime,\n     *      x || ' month'\n     *  );\n     * ```\n     */\n    OperatorType[\"TIMESTAMPADD_MONTH\"] = \"TIMESTAMPADD_MONTH\";\n    /**\n     * Seems to be a MySQL thing.\n     * PostgreSQL and SQLite do not have `quarter` intervals.\n     *\n     * Could probably be emulated with `3 month` being `1 quarter`\n     */\n    //TIMESTAMPADD_QUARTER = \"TIMESTAMPADD_QUARTER\",\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_timestampadd\n     * + https://www.postgresql.org/docs/9.4/functions-datetime.html#OPERATORS-DATETIME-TABLE\n     * + https://www.sqlite.org/lang_datefunc.html\n     *\n     * -----\n     *\n     * + MySQL          : `TIMESTAMPADD(YEAR, x, datetime)`\n     * + PostgreSQL     : `datetime + concat(x, ' year')::interval`\n     * + SQLite         :\n     * ```sql\n     *  strftime(\n     *      '%Y-%m-%d %H:%M:%f',\n     *      datetime,\n     *      x || ' year'\n     *  );\n     * ```\n     */\n    OperatorType[\"TIMESTAMPADD_YEAR\"] = \"TIMESTAMPADD_YEAR\";\n    /*\n     * SQLite does not have microsecond precision.\n     */\n    //TIMESTAMPDIFF_MICROSECOND = \"TIMESTAMPDIFF_MICROSECOND\",\n    /**\n     * + MySQL          : `CAST(TIMESTAMPDIFF(MICROSECOND, from, to)/1000.0 AS SIGNED INTEGER)`\n     * + PostgreSQL     : `EXTRACT(DAY FROM (to - from))*24*60*60*1000 + EXTRACT(HOUR FROM (to - from))*60*60*1000 + EXTRACT(MINUTE FROM (to - from))*60*1000 + TRUNC(EXTRACT(SECOND FROM (to - from))*1000)`\n     *   + The `TRUNC()` at the end is necessary\n     *   + Extracting `SECOND` gives a number with decimal places for milliseconds\n     *   + Every `EXTRACT()/TRUNC()` should be wrapped with a cast to `BIGINT`\n     * + SQLite         : `CAST( (strftime('%J', to) - strftime('%J', from)) * 24 * 60 * 60 * 1000 AS BIGINT)`\n     *   + We cast to `BIGINT` to be consistent with MySQL\n     */\n    OperatorType[\"TIMESTAMPDIFF_MILLISECOND\"] = \"TIMESTAMPDIFF_MILLISECOND\";\n    /**\n     * + MySQL          : `TIMESTAMPDIFF(SECOND, from, to)`\n     * + PostgreSQL     : `EXTRACT(DAY FROM (to - from))*24*60*60 + EXTRACT(HOUR FROM (to - from))*60*60 + EXTRACT(MINUTE FROM (to - from))*60 + TRUNC(EXTRACT(SECOND FROM (to - from)))`\n     *   + The `TRUNC()` at the end is necessary\n     *   + Extracting `SECOND` gives a number with decimal places for milliseconds\n     * + SQLite         : `CAST( (strftime('%J', to) - strftime('%J', from)) * 24 * 60 * 60 AS BIGINT)`\n     *   + We cast to `BIGINT` to be consistent with MySQL\n     */\n    OperatorType[\"TIMESTAMPDIFF_SECOND\"] = \"TIMESTAMPDIFF_SECOND\";\n    /**\n     * + MySQL          : `TIMESTAMPDIFF(MINUTE, from, to)`\n     * + PostgreSQL     : `EXTRACT(DAY FROM (to - from))*24*60 + EXTRACT(HOUR FROM (to - from))*60 + EXTRACT(MINUTE FROM (to - from))`\n     * + SQLite         : `CAST( (strftime('%J', to) - strftime('%J', from)) * 24 * 60 AS BIGINT)`\n     *   + We cast to `BIGINT` to be consistent with MySQL\n     */\n    OperatorType[\"TIMESTAMPDIFF_MINUTE\"] = \"TIMESTAMPDIFF_MINUTE\";\n    /**\n     * + MySQL          : `TIMESTAMPDIFF(HOUR, from, to)`\n     * + PostgreSQL     : `EXTRACT(DAY FROM (to - from))*24 + EXTRACT(HOUR FROM (to - from))`\n     * + SQLite         : `CAST( (strftime('%J', to) - strftime('%J', from)) * 24 AS BIGINT)`\n     *   + We cast to `BIGINT` to be consistent with MySQL\n     */\n    OperatorType[\"TIMESTAMPDIFF_HOUR\"] = \"TIMESTAMPDIFF_HOUR\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_timestampdiff\n     *\n     * + MySQL          : `TIMESTAMPDIFF(DAY, from, to)`\n     * + PostgreSQL     : `EXTRACT(DAY FROM (to - from))`\n     * + SQLite         : `CAST(strftime('%J', to) - strftime('%J', from) AS BIGINT)`\n     *   + We cast to `BIGINT` to be consistent with MySQL\n     */\n    OperatorType[\"TIMESTAMPDIFF_DAY\"] = \"TIMESTAMPDIFF_DAY\";\n    /*\n     * Seems to be MySQL-specific\n     */\n    //TIMESTAMPDIFF_WEEK = \"TIMESTAMPDIFF_WEEK\",\n    /*\n     * + MySQL          : `TIMESTAMPDIFF(MONTH, from, to)`\n     * + PostgreSQL     :\n     * ```sql\n     * EXTRACT(YEAR FROM AGE(to, from))*12 +\n     * EXTRACT(MONTH FROM AGE(to, from))\n     * ```\n     * + SQLite         : @todo? Doesn't seem possible to compute properly\n     */\n    //TIMESTAMPDIFF_MONTH = \"TIMESTAMPDIFF_MONTH\",\n    /*\n     * Seems to be MySQL-specific\n     */\n    //TIMESTAMPDIFF_QUARTER = \"TIMESTAMPDIFF_QUARTER\",\n    /*\n     * + MySQL          : `TIMESTAMPDIFF(YEAR, from, to)`\n     * + PostgreSQL     :\n     * ```sql\n     * EXTRACT(YEAR FROM AGE(to, from))\n     * ```\n     * + SQLite         : @todo? Doesn't seem possible to compute properly\n     */\n    //TIMESTAMPDIFF_YEAR = \"TIMESTAMPDIFF_YEAR\",\n    /*\n     * The different databases implement this differently,\n     * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_time-format\n     * + https://www.postgresql.org/docs/9.4/functions-formatting.html\n     * + https://www.sqlite.org/lang_datefunc.html\n     */\n    //TIME_FORMAT = \"TIME_FORMAT\",\n    /*\n     * Appears to be MySQL-specific,\n     * https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_time-to-sec\n     */\n    //TIME_TO_SEC = \"TIME_TO_SEC\",\n    /*\n     * Appears to be MySQL-specific,\n     * https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_to-days\n     */\n    //TO_DAYS = \"TO_DAYS\",\n    /*\n     * Appears to be MySQL-specific,\n     * https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_to-seconds\n     */\n    //TO_SECONDS = \"TO_SECONDS\",\n    /*\n     * @todo\n     *\n     * I don't think this can easily be made portable across different database systems\n     * **AND** made to behave consistently across different session time zone settings.\n     *\n     * -----\n     *\n     * + MySQL          : `UNIX_TIMESTAMP(datetime)`\n     *   + The return value is an integer if no argument is given or the argument does not include a fractional seconds part,\n     *   + or `DECIMAL` if an argument is given that includes a fractional seconds part.\n     *   + returns a Unix timestamp representing seconds since '1970-01-01 00:00:00' UTC.\n     *   + The server interprets date as a value in the session time zone and converts it to an internal Unix timestamp value in UTC.\n     * +\n     */\n    //UNIX_TIMESTAMP_AT_DATETIME = \"UNIX_TIMESTAMP_AT_DATETIME\",\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_unix-timestamp\n     * + https://www.sqlite.org/lang_datefunc.html\n     *\n     * -----\n     *\n     * + MySQL          : `UNIX_TIMESTAMP()`\n     * + PostgreSQL     :\n     * ```sql\n     *  FLOOR(\n     *      EXTRACT(EPOCH FROM (\n     *          CURRENT_TIMESTAMP -\n     *          timestamp '1970-01-01 00:00:00' AT TIME ZONE '00:00'\n     *      ))\n     *  )\n     * ```\n     * + SQLite         : `strftime('%s', 'now')`\n     */\n    OperatorType[\"UNIX_TIMESTAMP_NOW\"] = \"UNIX_TIMESTAMP_NOW\";\n    /*\n     * Appears to be MySQL-specific,\n     * https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_utc-date\n     */\n    //UTC_DATE = \"UTC_DATE\",\n    /*\n     * Appears to be MySQL-specific,\n     * https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_utc-time\n     */\n    //UTC_TIME = \"UTC_TIME\",\n    /*\n     * Appears to be MySQL-specific,\n     * https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_current-timestamp\n     *\n     * Also, it does not play well with the other MySQL date-time functions.\n     * Do not implement in base package unless a **VERY** good reason exists.\n     */\n    //UTC_TIMESTAMP = \"UTC_TIMESTAMP\",\n    /*\n     * Wtf is this, even?\n     * https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_week\n     */\n    //WEEK = \"WEEK\",\n    /*\n     * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_weekday\n     * + https://www.postgresql.org/docs/9.4/functions-datetime.html#FUNCTIONS-DATETIME-EXTRACT\n     * + https://www.sqlite.org/lang_datefunc.html\n     *\n     * -----\n     *\n     * + MySQL          : `WEEKDAY(date)`           ; `0=Monday, 1=Tuesday, ..., 6=Sunday`\n     * + PostgreSQL     : `EXTRACT(DOW FROM date)`  ; `0=Sunday, 1=Monday , ..., 6=Saturday`\n     * + SQLite         : `strftime('%w', date)`    ; `0=Sunday, 1=Monday , ..., 6=Saturday`\n     *\n     * -----\n     *\n     * Implementations are incompatible.\n     * Can possibly use a different name and unify their implementations, however.\n     */\n    //WEEKDAY = \"WEEKDAY\",\n    /*\n     * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_weekofyear\n     * + https://www.postgresql.org/docs/9.4/functions-datetime.html#FUNCTIONS-DATETIME-EXTRACT\n     * + https://www.sqlite.org/lang_datefunc.html\n     *\n     * -----\n     *\n     * + MySQL          : `WEEKOFYEAR(date)`        ; `1-53`\n     * + PostgreSQL     : `EXTRACT(WEEK FROM date)` ; `@todo`\n     * + SQLite         : `strftime('%W', date)`    ; `0-53`\n     *\n     * -----\n     *\n     * Implementations are incompatible.\n     * Can possibly use a different name and unify their implementations, however.\n     */\n    //WEEKOFYEAR = \"WEEKOFYEAR\",\n    /*\n     * + https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_year\n     * + https://www.postgresql.org/docs/9.4/functions-datetime.html#FUNCTIONS-DATETIME-EXTRACT\n     * + https://www.sqlite.org/lang_datefunc.html\n     *\n     * -----\n     *\n     * + MySQL          : `YEAR(date)`\n     * + PostgreSQL     : `EXTRACT(YEAR FROM date)`\n     * + SQLite         : `strftime('%Y', date)`\n     *\n     * @todo How is this different from `EXTRACT(YEAR FROM date)`?\n     */\n    //YEAR = \"YEAR\",\n    /*\n     * Appears to be MySQL-specific,\n     * https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_yearweek\n     */\n    //YEARWEEK = \"YEARWEEK\",\n    /*\n        Cast Functions and Operators\n        https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html\n    */\n    /**\n     * @todo\n     */\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#function_cast\n     * + https://www.postgresql.org/docs/9.2/datatype.html#DATATYPE-TABLE\n     * + https://www.sqlite.org/datatype3.html\n     *\n     * -----\n     *\n     * + MySQL          : `CAST(x AS BINARY)`\n     * + PostgreSQL     : `CAST(x AS bytea)`\n     * + SQLite         : `CAST(x AS BLOB)`\n     */\n    OperatorType[\"CAST_AS_BINARY\"] = \"CAST_AS_BINARY\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#function_cast\n     * + https://www.postgresql.org/docs/9.2/datatype.html#DATATYPE-TABLE\n     * + https://www.sqlite.org/datatype3.html\n     *\n     * -----\n     *\n     * + MySQL          : `CAST(x AS CHAR) [charset_info]`\n     * + PostgreSQL     : `CAST(x AS VARCHAR) [charset_info]`\n     * + SQLite         : `CAST(x AS VARCHAR) [charset_info]`\n     */\n    OperatorType[\"CAST_AS_VARCHAR\"] = \"CAST_AS_VARCHAR\";\n    /*\n     * + https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#function_cast\n     * + https://www.postgresql.org/docs/9.2/datatype.html#DATATYPE-TABLE\n     * + https://www.sqlite.org/datatype3.html\n     *\n     * -----\n     *\n     * + MySQL          : `CAST(x AS DATE)`\n     * + PostgreSQL     : `CAST(x AS DATE)`\n     * + SQLite         :\n     *   **DO NOT** use `CAST(x AS DATE)`!\n     * ```sql\n     * SELECT CAST('2010-10-27 12:00:00' AS DATE)\n     * > 2019\n     * ```\n     *\n     * The above happens because `DATE` has `NUMERIC` affinity.\n     * And so, the cast is the same as saying `CAST(x AS DECIMAL)`\n     *\n     * -----\n     *\n     * Actually, don't even use `CAST_AS_DATE`.\n     * Just use one of the two `TIMESTAMP` constructors.\n     */\n    //CAST_AS_DATE = \"CAST_AS_DATE\",\n    /*\n     * Actually, don't even use `CAST_AS_DATETIME`.\n     * Just use one of the two `TIMESTAMP` constructors.\n     */\n    //CAST_AS_DATETIME = \"CAST_AS_DATETIME\",\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#function_cast\n     * + https://www.postgresql.org/docs/9.2/datatype.html#DATATYPE-TABLE\n     * + https://www.sqlite.org/datatype3.html\n     *\n     * -----\n     *\n     * + MySQL          : `CAST(x AS DECIMAL(precision, scale))`\n     *   + Max precision : 65\n     *   + Max scale     : 30\n     * + PostgreSQL     : `CAST(x AS DECIMAL(precision, scale))`\n     *   + Max precision : 1000\n     *   + Max scale     : 1000\n     * + SQLite         : `CAST(x AS DECIMAL(precision, scale))`\n     * ```sql\n     * SELECT CAST('1e308' AS DECIMAL)\n     * > 1e+308\n     * ```\n     *\n     * For SQLite, this doesn't even cast to an arbitrary precision number.\n     * SQLite does not support arbitrary precision numbers.\n     * You will get a `double` instead.\n     *\n     * -----\n     *\n     * Precision and scale cannot be omitted.\n     *\n     * When omitted, MySQL defaults to `DECIMAL(10, 0)`\n     * When omitted, PostgreSQL defaults to a precision and scale that will contain `x`\n     *\n     * -----\n     *\n     * ### Notes about MySQL's `DECIMAL`\n     *\n     * https://github.com/mysql/mysql-server/blob/8.0/strings/decimal.cc#L1253-L1313\n     * https://github.com/mysql/mysql-server/blob/8.0/strings/decimal.cc#L1576-L1598\n     *\n     * ```js\n     * DIG_PER_DEC1 = 9\n     * dig2bytes = [0,1,1,2,2,3,3,4,4,4]\n     * precision = 65\n     * scale = 30\n     * //typedef int32 decimal_digit_t;\n     * //typedef decimal_digit_t dec1;\n     * dec1 = 4\n     * function sizeof (arg) { return arg }\n     * var\n     *      intg = precision - scale,\n     *      intg0  = Math.floor(intg / DIG_PER_DEC1),\n     *      frac0  = Math.floor(scale / DIG_PER_DEC1),\n     *      intg0x = intg - intg0 * DIG_PER_DEC1,\n     *      frac0x = scale - frac0 * DIG_PER_DEC1;\n     * result = intg0 * sizeof(dec1) + dig2bytes[intg0x] + frac0 * sizeof(dec1) + dig2bytes[frac0x]\n     * ```\n     *\n     * http://ftp.nchu.edu.tw/MySQL/doc/refman/5.0/en/precision-math-decimal-changes.html\n     *\n     * -----\n     *\n     * ```js\n     * DIG_PER_DEC1 = 9;\n     * dig2bytes = [0, 1, 1, 2, 2, 3, 3, 4, 4, 4];\n     *\n     * res = {};\n     *\n     * for (let precision = 1; precision < 73; precision++) {\n     *      for (let scale = 0; scale <= precision; scale++) {\n     *          const intg = precision - scale;\n     *          const intg0 = Math.floor(intg / DIG_PER_DEC1);\n     *          const frac0 = Math.floor(scale / DIG_PER_DEC1);\n     *          const intg0x = intg - intg0 * DIG_PER_DEC1;\n     *          const frac0x = scale - frac0 * DIG_PER_DEC1;\n     *          const result = (\n     *              intg0 * 4 + dig2bytes[intg0x] + frac0 * 4 + dig2bytes[frac0x]\n     *          );\n     *          res[`${precision}.${scale}`] = result;\n     *      }\n     * }\n     * console.log(res);\n     * ```\n     *\n     * -----\n     *\n     * ### Notes about PostgreSQL's `DECIMAL`\n     *\n     * https://doxygen.postgresql.org/numeric_8h.html#a12ab0e498cc609664248b5c9bb6c0a43\n     *\n     * @karanlyons said,\n     * > 511 bytes for 1000 digits in postgres.\n     * >\n     * > And I think they use the extra byte for some additional bookeeping of the sign, etc.\n     * >\n     * > So 512, which makes sense!\n     * >\n     * > <3 u pg.\n     * >\n     * > Postgres’ source code is way better to read.\n     * >\n     * > It helps that they’re not insane.\n     * >\n     * > ~~That extra byte is actually for the type header I think, not internal bookkeeping of the number itself.~~\n     * >\n     * > The extra byte is for the `typmod` I think, which is 32 bits encoding the precision and scale in the upper 16 and lower 16.\n     * >\n     * > https://doxygen.postgresql.org/backend_2utils_2adt_2numeric_8c_source.html#l00703\n     * >\n     * > https://doxygen.postgresql.org/structNumericVar.html\n     */\n    OperatorType[\"CAST_AS_DECIMAL\"] = \"CAST_AS_DECIMAL\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#function_cast\n     * + https://www.postgresql.org/docs/9.2/datatype.html#DATATYPE-TABLE\n     * + https://www.sqlite.org/datatype3.html\n     *\n     * -----\n     *\n     * + MySQL 5.7      : `x + 0e0`\n     * + PostgreSQL     : `CAST(x AS DOUBLE PRECISION)`\n     * + SQLite         : `CAST(x AS DOUBLE)`\n     */\n    OperatorType[\"CAST_AS_DOUBLE\"] = \"CAST_AS_DOUBLE\";\n    /*\n     * Can't do it in MySQL 5.7.\n     */\n    //CAST_AS_FLOAT = \"CAST_AS_FLOAT\",\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#function_cast\n     * + https://www.postgresql.org/docs/9.2/datatype.html#DATATYPE-TABLE\n     * + https://www.sqlite.org/datatype3.html\n     *\n     * -----\n     *\n     * + MySQL          : `CAST(x AS JSON)`\n     * + PostgreSQL     : `CAST(x AS JSON)`\n     * + SQLite         : `CAST(x AS TEXT)`; Or implement with user-defined function.\n     *\n     *   SQLite does not have a `JSON` data type\n     */\n    OperatorType[\"CAST_AS_JSON\"] = \"CAST_AS_JSON\";\n    /* *\n     * + https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#function_cast\n     * + https://www.postgresql.org/docs/9.2/datatype.html#DATATYPE-TABLE\n     * + https://www.sqlite.org/datatype3.html\n     * + https://dev.mysql.com/doc/refman/8.0/en/charset-national.html\n     *\n     * -----\n     *\n     * + MySQL          : `CAST(x AS NCHAR)`\n     * + PostgreSQL     : `CAST(x AS VARCHAR) utf8`\n     *   + https://dev.mysql.com/doc/refman/8.0/en/charset-national.html\n     *   + `utf8` is the charset of MySQL's `NCHAR`\n     * + SQLite         : `CAST(x AS TEXT)`\n     *   + SQLite does not have character sets\n     */\n    //CAST_AS_N_CHAR = \"CAST_AS_N_CHAR\",\n    /*\n     * The behaviour is too unpredictable on MySQL.\n     * > Produces a result of type REAL.\n     * This is actually FLOAT if REAL_AS_FLOAT SQL mode is enabled; otherwise the result is of type DOUBLE.\n     */\n    //CAST_AS_REAL = \"CAST_AS_REAL\",\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#function_cast\n     * + https://www.postgresql.org/docs/9.2/datatype.html#DATATYPE-TABLE\n     * + https://www.sqlite.org/datatype3.html\n     *\n     * -----\n     *\n     * + MySQL          : `CAST(x AS SIGNED INTEGER)`\n     *   + Actually gives a signed `bigint`\n     *   + Trying to cast `'123e2'` gives `123`\n     * + PostgreSQL     : `CAST(x AS bigint)`\n     *   + Trying to cast `'123e2'` throws an error\n     * + SQLite         : `CAST(x AS BIGINT)`\n     *   + Trying to cast `'123e2'` gives `123`\n     */\n    OperatorType[\"CAST_AS_BIGINT_SIGNED\"] = \"CAST_AS_BIGINT_SIGNED\";\n    /*\n     * Use one of the `TIMESTAMP` constructors instead\n     */\n    //CAST_AS_TIME = \"CAST_AS_TIME\",\n    /*\n     * + https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#function_cast\n     * + https://www.postgresql.org/docs/9.2/datatype.html#DATATYPE-TABLE\n     * + https://www.sqlite.org/datatype3.html\n     *\n     * -----\n     *\n     * + MySQL          : `CAST(x AS UNSIGNED INTEGER)`\n     *   + Actually gives an unsigned `bigint`\n     * + PostgreSQL     : `CAST(x AS bigint)`\n     *   + PostgreSQL does not have unsigned types!\n     * + SQLite         : `CAST(x AS BIGINT)`\n     *   + SQLite does not have unsigned types!\n     *\n     * -----\n     *\n     * ~~Even though **ONLY** MySQL supports `UNSIGNED` types,~~\n     * ~~we're still adding this because it's too useful to give up.~~\n     * Support for `BIGINT UNSIGNED` has been dropped.\n     *\n     * It means that trying to use `BIGINT UNSIGNED` with other databases\n     * will produce varying behaviours, though...\n     *\n     * For example, the range of `BIGINT SIGNED` is much smaller than\n     * `BIGINT UNSIGNED` if we are only looking at the non-negative range.\n     *\n     * Math with `BIGINT UNSIGNED` fails if the result becomes negative.\n     * `BIGINT SIGNED` has no such inhibitions.\n     */\n    //CAST_AS_UNSIGNED_BIG_INTEGER = \"CAST_AS_UNSIGNED_BIG_INTEGER\",\n    /*\n        Bit Functions and Operators\n        https://dev.mysql.com/doc/refman/8.0/en/bit-functions.html\n    */\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/bit-functions.html#operator_bitwise-and\n     * + https://www.postgresql.org/docs/9.0/functions-math.html\n     * + https://www.sqlite.org/lang_expr.html#binaryops\n     *\n     * -----\n     *\n     * + MySQL        : `CAST(x & y AS SIGNED)`\n     * + PostgreSQL   : `&`\n     * + SQLite       : `&`\n     */\n    OperatorType[\"BITWISE_AND\"] = \"BITWISE_AND\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/bit-functions.html#operator_bitwise-invert\n     * + https://www.postgresql.org/docs/9.0/functions-math.html\n     * + https://www.sqlite.org/lang_expr.html#binaryops\n     *\n     * -----\n     *\n     * + MySQL        : `CAST(~x AS SIGNED)`\n     *   + `~1337` === `18446744073709550278`\n     *   + `CAST(~1337 AS SIGNED)` === `-1338`\n     * + PostgreSQL   : `~x`\n     *   + `~1337` === `-1338`\n     * + SQLite       : `~x`\n     *   + `~1337` === `-1338`\n     */\n    OperatorType[\"BITWISE_NOT\"] = \"BITWISE_NOT\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/bit-functions.html#operator_bitwise-or\n     * + https://www.postgresql.org/docs/9.0/functions-math.html\n     * + https://www.sqlite.org/lang_expr.html#binaryops\n     *\n     * -----\n     *\n     * + MySQL        : `CAST(x | y AS SIGNED)`\n     * + PostgreSQL   : `|`\n     * + SQLite       : `|`\n     */\n    OperatorType[\"BITWISE_OR\"] = \"BITWISE_OR\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/bit-functions.html#operator_bitwise-xor\n     * + https://www.postgresql.org/docs/9.0/functions-math.html\n     * + https://www.sqlite.org/lang_expr.html#binaryops\n     *\n     * -----\n     *\n     * + MySQL        : `CAST(x ^ y AS SIGNED)`\n     * + PostgreSQL   : `#`\n     * + SQLite       : None, use `(~(a&b))&(a|b)` instead\n     *   + https://stackoverflow.com/questions/16440831/bitwise-xor-in-sqlite-bitwise-not-not-working-as-i-expect\n     *   + https://www.mail-archive.com/sqlite-users@mailinglists.sqlite.org/msg02250.html\n     */\n    OperatorType[\"BITWISE_XOR\"] = \"BITWISE_XOR\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/bit-functions.html#operator_left-shift\n     * + https://www.postgresql.org/docs/9.0/functions-math.html\n     * + https://www.sqlite.org/lang_expr.html#binaryops\n     *\n     * -----\n     *\n     * + MySQL        : `CAST(x << y AS SIGNED)`\n     * + PostgreSQL   : `<<`\n     * + SQLite       : `<<`\n     */\n    OperatorType[\"BITWISE_LEFT_SHIFT\"] = \"BITWISE_LEFT_SHIFT\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/bit-functions.html#operator_right-shift\n     * + https://www.postgresql.org/docs/9.0/functions-math.html\n     * + https://www.sqlite.org/lang_expr.html#binaryops\n     *\n     * -----\n     *\n     * + MySQL        : `CAST(x >> y AS SIGNED)`\n     * + PostgreSQL   : `>>`\n     * + SQLite       : `>>`\n     */\n    OperatorType[\"BITWISE_RIGHT_SHIFT\"] = \"BITWISE_RIGHT_SHIFT\";\n    /*\n        Functions That Create JSON Values\n        https://dev.mysql.com/doc/refman/8.0/en/json-creation-functions.html\n    */\n    /**\n     * @todo\n     */\n    /*\n        Functions That Search JSON Values\n        https://dev.mysql.com/doc/refman/8.0/en/json-search-functions.html\n    */\n    /**\n     * @todo\n     */\n    /*\n        Functions That Modify JSON Values\n        https://dev.mysql.com/doc/refman/8.0/en/json-modification-functions.html\n    */\n    /**\n     * @todo\n     */\n    /*\n        Functions That Return JSON Value Attributes\n        https://dev.mysql.com/doc/refman/8.0/en/json-attribute-functions.html\n    */\n    /**\n     * @todo\n     */\n    /*\n        JSON Table Functions\n        https://dev.mysql.com/doc/refman/8.0/en/json-table-functions.html\n    */\n    /**\n     * @todo\n     */\n    /*\n        JSON Schema Validation Functions\n        https://dev.mysql.com/doc/refman/8.0/en/json-validation-functions.html\n    */\n    /**\n     * @todo\n     */\n    /*\n        JSON Utility Functions\n        https://dev.mysql.com/doc/refman/8.0/en/json-utility-functions.html\n    */\n    /**\n     * @todo\n     */\n    /*\n        Spatial Analysis Functions\n        https://dev.mysql.com/doc/refman/8.0/en/spatial-analysis-functions.html\n\n        @todo Split into subchapters\n    */\n    /*\n        Aggregate (GROUP BY) Function Descriptions\n        https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html\n    */\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_avg\n     * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n     * + https://www.sqlite.org/lang_aggfunc.html#avg\n     *\n     * -----\n     *\n     * + MySQL      : `AVG(DISTINCT x)/AVG(x)/AVG(x) OVER()`\n     * + PostgreSQL : `AVG(DISTINCT x)/AVG(x)/AVG(x) OVER()`\n     * + SQLite     : `AVG(DISTINCT x)/AVG(x)/AVG(x) OVER()`\n     */\n    OperatorType[\"AGGREGATE_AVERAGE\"] = \"AGGREGATE_AVERAGE\";\n    /*\n     * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_bit-and\n     * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n     *\n     * -----\n     *\n     * + MySQL      : `BIT_AND(x)/BIT_AND(x) OVER()`\n     *   + If `myTable` is empty, `SELECT BIT_AND(myTableId) FROM myTable` === `18446744073709551615`\n     * + PostgreSQL : `BIT_AND(x)/BIT_AND(x) OVER()`\n     *   + If `myTable` is empty, `SELECT BIT_AND(myTableId) FROM myTable` === `NULL`\n     * + SQLite     : None. Implement with user-defined function.\n     */\n    //AGGREGATE_BITWISE_AND = \"AGGREGATE_BITWISE_AND\",\n    /*\n     * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_bit-or\n     * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n     *\n     * -----\n     *\n     * + MySQL      : `BIT_OR(x)/BIT_OR(x) OVER()`\n     *   + If `myTable` is empty, `SELECT BIT_OR(myTableId) FROM myTable` === `0`\n     * + PostgreSQL : `BIT_OR(x)/BIT_OR(x) OVER()`\n     *   + If `myTable` is empty, `SELECT BIT_OR(myTableId) FROM myTable` === `NULL`\n     * + SQLite     : None. Implement with user-defined function.\n     */\n    //AGGREGATE_BITWISE_OR = \"AGGREGATE_BITWISE_OR\",\n    /**\n     * Appears to be MySQL-specific,\n     * https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_bit-xor\n     */\n    //BIT_XOR = \"BIT_XOR\",\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_count\n     * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n     * + https://www.sqlite.org/lang_aggfunc.html#count\n     *\n     * -----\n     *\n     * + MySQL      : `COUNT(DISTINCT x)/COUNT(x)/COUNT(x) OVER()`\n     *   + `COUNT(x) OVER()` always returns one row\n     * + PostgreSQL : `COUNT(DISTINCT x)/COUNT(x)/COUNT(x) OVER()`\n     *   + `COUNT(x) OVER()` can return zero rows\n     * + SQLite     : `COUNT(DISTINCT x)/COUNT(x)/COUNT(x) OVER()`\n     *   + `COUNT(x) OVER()` can return zero rows\n     */\n    OperatorType[\"AGGREGATE_COUNT_EXPR\"] = \"AGGREGATE_COUNT_EXPR\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_count\n     * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n     * + https://www.sqlite.org/lang_aggfunc.html#count\n     *\n     * -----\n     *\n     * + MySQL      : `COUNT(*)/COUNT(*) OVER()`\n     *   + `COUNT(*) OVER()` can return zero rows\n     * + PostgreSQL : `COUNT(*)/COUNT(*) OVER()`\n     *   + `COUNT(*) OVER()` can return zero rows\n     * + SQLite     : `COUNT(*)/COUNT(*) OVER()`\n     *   + `COUNT(*) OVER()` can return zero rows\n     */\n    OperatorType[\"AGGREGATE_COUNT_ALL\"] = \"AGGREGATE_COUNT_ALL\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_group-concat\n     * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n     * + https://www.sqlite.org/lang_aggfunc.html#groupconcat\n     *\n     * + MySQL      : `GROUP_CONCAT(DISTINCT expr SEPARATOR separator)`\n     * + PostgreSQL : `STRING_AGG(DISTINCT expr, separator)`\n     * + SQLite     : `GROUP_CONCAT(DISTINCT expr)`\n     *   + The order of the concatenated elements is arbitrary.\n     *   + Uses comma as separator\n     *\n     * -----\n     *\n     * Seems like `GROUP_CONCAT()` with `DISTINCT` cannot take a separator\n     * for the DB-unified implementation.\n     *\n     * Unless we modify the SQLite implementation with a user-defined function?\n     * @todo Investigate\n     */\n    OperatorType[\"AGGREGATE_GROUP_CONCAT_DISTINCT\"] = \"AGGREGATE_GROUP_CONCAT_DISTINCT\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_group-concat\n     * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n     * + https://www.sqlite.org/lang_aggfunc.html#groupconcat\n     *\n     * + MySQL      : `GROUP_CONCAT(expr SEPARATOR separator)`\n     * + PostgreSQL : `STRING_AGG(expr, separator)`\n     * + SQLite     : `GROUP_CONCAT(expr, separator)`\n     *   + The order of the concatenated elements is arbitrary.\n     */\n    OperatorType[\"AGGREGATE_GROUP_CONCAT_ALL\"] = \"AGGREGATE_GROUP_CONCAT_ALL\";\n    /*\n     * Appears to be MySQL-specific,\n     * https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_json-arrayagg\n     * @todo?\n     *\n     * Could also be related to `ARRAY_AGG()` from PostgreSQL,\n     */\n    //JSON_ARRAYAGG = \"JSON_ARRAYAGG\",\n    /*\n     * Appears to be MySQL-specific,\n     * https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_json-objectagg\n     */\n    //JSON_OBJECTAGG = \"JSON_OBJECTAGG\",\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_max\n     * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n     * + https://www.sqlite.org/lang_corefunc.html#maxoreunc\n     *\n     * -----\n     *\n     * + MySQL      : `MAX(DISTINCT x)/MAX(x)/MAX(x) OVER()`\n     * + PostgreSQL : `MAX(DISTINCT x)/MAX(x)/MAX(x) OVER()`\n     * + SQLite     : `MAX(DISTINCT x)/MAX(x)/MAX(x) OVER()`\n     */\n    OperatorType[\"AGGREGATE_MAX\"] = \"AGGREGATE_MAX\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_min\n     * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n     * + https://www.sqlite.org/lang_corefunc.html#minoreunc\n     *\n     * -----\n     *\n     * + MySQL      : `MIN(DISTINCT x)/MIN(x) OVER()`\n     * + PostgreSQL : `MIN(DISTINCT x)/MIN(x) OVER()`\n     * + SQLite     : `MIN(DISTINCT x)/MIN(x)/MIN(x) OVER()`\n     */\n    OperatorType[\"AGGREGATE_MIN\"] = \"AGGREGATE_MIN\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_stddev-pop\n     * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n     * + https://stackoverflow.com/questions/2298339/standard-deviation-for-sqlite\n     *\n     * -----\n     *\n     * + MySQL      : `STDDEV_POP(x)/STDDEV_POP(x) OVER()`\n     * + PostgreSQL : `STDDEV_POP(x)/STDDEV_POP(x) OVER()`\n     * + SQLite     : None. Implement with user-defined function.\n     *\n     * Should only be provided for `double` because MySQL treats all `x` as `double`.\n     */\n    OperatorType[\"AGGREGATE_POPULATION_STANDARD_DEVIATION\"] = \"AGGREGATE_POPULATION_STANDARD_DEVIATION\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_stddev-samp\n     * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n     * + https://stackoverflow.com/questions/2298339/standard-deviation-for-sqlite\n     *\n     * -----\n     *\n     * + MySQL      : `STDDEV_SAMP(x)/STDDEV_SAMP(x) OVER()`\n     * + PostgreSQL : `STDDEV_SAMP(x)/STDDEV_SAMP(x) OVER()`\n     * + SQLite     : None. Implement with user-defined function.\n     *\n     * Should only be provided for `double` because MySQL treats all `x` as `double`.\n     */\n    OperatorType[\"AGGREGATE_SAMPLE_STANDARD_DEVIATION\"] = \"AGGREGATE_SAMPLE_STANDARD_DEVIATION\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_min\n     * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n     * + https://www.sqlite.org/lang_corefunc.html#minoreunc\n     *\n     * -----\n     *\n     * + MySQL      : `SUM(DISTINCT x)/SUM(x)/SUM(x) OVER()`\n     * + PostgreSQL : `SUM(DISTINCT x)/SUM(x)/SUM(x) OVER()`\n     * + SQLite     : `SUM(DISTINCT x)/SUM(x)/SUM(x) OVER()`\n     */\n    OperatorType[\"AGGREGATE_SUM\"] = \"AGGREGATE_SUM\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_min\n     * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n     * + https://www.sqlite.org/lang_corefunc.html#minoreunc\n     *\n     * -----\n     *\n     * + MySQL      : `SUM(DISTINCT x)/SUM(x)/SUM(x) OVER()`\n     * + PostgreSQL : `SUM(DISTINCT x)/SUM(x)/SUM(x) OVER()`\n     * + SQLite     : `SUM(DISTINCT x)/SUM(x)/SUM(x) OVER()`\n     */\n    OperatorType[\"AGGREGATE_SUM_AS_DECIMAL\"] = \"AGGREGATE_SUM_AS_DECIMAL\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_min\n     * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n     * + https://www.sqlite.org/lang_corefunc.html#minoreunc\n     *\n     * -----\n     *\n     * + MySQL      : `SUM(DISTINCT x)/SUM(x)/SUM(x) OVER()`\n     * + PostgreSQL : `SUM(DISTINCT x)/SUM(x)/SUM(x) OVER()`\n     * + SQLite     : `SUM(DISTINCT x)/SUM(x)/SUM(x) OVER()`\n     */\n    OperatorType[\"AGGREGATE_SUM_AS_BIGINT_SIGNED\"] = \"AGGREGATE_SUM_AS_BIGINT_SIGNED\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_var-pop\n     * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n     *\n     * -----\n     *\n     * + MySQL      : `VAR_POP(x)/VAR_POP(x) OVER()`\n     * + PostgreSQL : `VAR_POP(x)/VAR_POP(x) OVER()`\n     * + SQLite     : None. Implement with user-defined function.\n     *\n     * Should only be provided for `double` because MySQL treats all `x` as `double`.\n     */\n    OperatorType[\"AGGREGATE_POPULATION_VARIANCE\"] = \"AGGREGATE_POPULATION_VARIANCE\";\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_var-samp\n     * + https://www.postgresql.org/docs/9.2/functions-aggregate.html#FUNCTIONS-AGGREGATE-TABLE\n     *\n     * -----\n     *\n     * + MySQL      : `VAR_SAMP(x)/VAR_SAMP(x) OVER()`\n     * + PostgreSQL : `VAR_SAMP(x)/VAR_SAMP(x) OVER()`\n     * + SQLite     : None. Implement with user-defined function.\n     *\n     * Should only be provided for `double` because MySQL treats all `x` as `double`.\n     */\n    OperatorType[\"AGGREGATE_SAMPLE_VARIANCE\"] = \"AGGREGATE_SAMPLE_VARIANCE\";\n    /*\n        https://dev.mysql.com/doc/refman/5.5/en/exists-and-not-exists-subqueries.html\n\n        Subqueries with `EXISTS` or `NOT EXISTS`\n    */\n    /**\n     * + https://dev.mysql.com/doc/refman/5.5/en/exists-and-not-exists-subqueries.html\n     * + https://www.postgresql.org/docs/8.1/functions-subquery.html#AEN13171\n     * + https://www.sqlite.org/lang_expr.html#exists_op\n     *\n     * -----\n     *\n     * + MySQL      : `EXISTS(query)`\n     * + PostgreSQL : `EXISTS(query)`\n     * + SQLite     : `EXISTS(query)`\n     */\n    OperatorType[\"EXISTS\"] = \"EXISTS\";\n    /*\n        https://dev.mysql.com/doc/refman/5.7/en/information-functions.html\n\n        Information Functions\n    */\n    /**\n     * + https://dev.mysql.com/doc/refman/8.0/en/information-functions.html#function_database\n     * + https://www.postgresql.org/docs/9.2/functions-info.html\n     * + https://www.sqlite.org/lang_attach.html\n     *\n     * -----\n     *\n     * + MySQL      : `DATABASE()`\n     * + PostgreSQL : `CURRENT_SCHEMA`\n     * + SQLite     : `'main'` should always be the current database.\n     *   + There's also `'temp'`, I guess\n     */\n    OperatorType[\"CURRENT_SCHEMA\"] = \"CURRENT_SCHEMA\";\n    /**\n     * + https://dev.mysql.com/doc/refman/5.7/en/information-functions.html#function_current-user\n     * + https://www.postgresql.org/docs/9.2/functions-info.html\n     * + https://stackoverflow.com/questions/16658880/sqlite-user-password-security/28566503\n     *\n     * -----\n     *\n     * + MySQL      : `CURRENT_USER`\n     * + PostgreSQL : `CURRENT_USER`\n     * + SQLite     : None. It does not make sense to ask what the current user is.\n     */\n    OperatorType[\"CURRENT_USER\"] = \"CURRENT_USER\";\n    /*\n        Custom library functions\n\n        These functions are not standard SQL,\n        but can be implemented using standard SQL.\n    */\n    /*\n     * An invalid expression that is syntactically valid.\n     * So, it will run.\n     * But evaluating it will throw a run-time error.\n     *\n     * Good for stuff like,\n     * ```sql\n     *  -- Throw if the condition is false\n     *  -- Otherwise, return the expression\n     *  IF(\n     *      -- condition,\n     *      -- expression,\n     *      THROW()\n     *  )\n     * ```\n     *\n     * Or,\n     * ```sql\n     *  -- Throw if expression is null\n     *  -- Otherwise, return the expression\n     *  COALESCE(\n     *      -- possibly null expression,\n     *      throw()\n     *  )\n     * ```\n     *\n     * A good example of such a throwing expression is,\n     * ```sql\n     *  -- Returns two rows,\n     *  (SELECT NULL UNION ALL SELECT NULL)\n     * ```\n     *\n     * @todo Find other such throwing expressions?\n     *\n     * This cannot be done in PostgreSQL.\n     * PostgeSQL's type system does not allow mixing types like,\n     * ```sql\n     *  COALESCE(true, (SELECT NULL UNION ALL SELECT NULL))\n     * ```\n     */\n    //THROW = \"THROW\",\n    /**\n     * + MySQL      - `COALESCE(x, (SELECT NULL UNION ALL SELECT NULL))`\n     * + PostgreSQL - `COALESCE(x, (SELECT NULL UNION ALL SELECT x))`\n     *   Unfortunately, with PostgreSQL, we need to duplicate the expression...\n     *   But this is a debug expression, anyway, and should not be used often.\n     * + SQLite     - `COALESCE(x, (SELECT NULL UNION ALL SELECT NULL))`\n     */\n    OperatorType[\"THROW_IF_NULL\"] = \"THROW_IF_NULL\";\n})(OperatorType = exports.OperatorType || (exports.OperatorType = {}));\n//# sourceMappingURL=operator-type.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst OrderByClauseUtil = require(\"./util\");\nexports.OrderByClauseUtil = OrderByClauseUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./operation\"));\n__export(require(\"./query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./order-by\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_ref_1 = require(\"../../../column-ref\");\nconst query_1 = require(\"../query\");\nconst used_ref_1 = require(\"../../../used-ref\");\nconst order_1 = require(\"../../../order\");\nconst column_1 = require(\"../../../column\");\nconst column_identifier_ref_1 = require(\"../../../column-identifier-ref\");\nconst built_in_expr_1 = require(\"../../../built-in-expr\");\n/**\n * Returns the MySQL equivalent of `...orderBy, orderByDelegate(columns)`\n *\n * This will change when,\n * + The `ORDER BY` clause enforces proper `GROUP BY` interactions.\n *\n * -----\n *\n * @param fromClause\n * @param orderByClause\n * @param orderByDelegate\n */\nfunction orderBy(fromClause, groupByClause, selectClause, orderByClause, orderByDelegate) {\n    const columns = query_1.allowedColumnRef(fromClause, selectClause);\n    const orderBy = orderByDelegate(column_ref_1.ColumnRefUtil.tryFlatten(columns));\n    if (groupByClause == undefined) {\n        for (const rawOrder of orderBy) {\n            const sortExpr = order_1.OrderUtil.extractSortExpr(rawOrder);\n            if (built_in_expr_1.BuiltInExprUtil.isAggregate(sortExpr)) {\n                throw new Error(`Aggregate expressions in ORDER BY clause not allowed without GROUP BY clause`);\n            }\n            if (column_1.ColumnUtil.isColumn(sortExpr)) {\n                column_identifier_ref_1.ColumnIdentifierRefUtil.assertHasColumnIdentifier(columns, sortExpr);\n            }\n            else {\n                used_ref_1.UsedRefUtil.assertAllowed({ columns }, sortExpr.usedRef);\n            }\n        }\n    }\n    else {\n        const nonAggregateColumns = query_1.allowedNonAggregateColumnRef(fromClause, groupByClause, selectClause);\n        for (const rawOrder of orderBy) {\n            const sortExpr = order_1.OrderUtil.extractSortExpr(rawOrder);\n            if (column_1.ColumnUtil.isColumn(sortExpr)) {\n                column_identifier_ref_1.ColumnIdentifierRefUtil.assertHasColumnIdentifier(nonAggregateColumns, sortExpr);\n            }\n            else {\n                if (built_in_expr_1.BuiltInExprUtil.isAggregate(sortExpr)) {\n                    used_ref_1.UsedRefUtil.assertAllowed({ columns }, sortExpr.usedRef);\n                }\n                else {\n                    used_ref_1.UsedRefUtil.assertAllowed({ columns: nonAggregateColumns }, sortExpr.usedRef);\n                }\n            }\n        }\n    }\n    return (orderByClause == undefined ?\n        orderBy.map(order_1.OrderUtil.fromRawOrder) :\n        [...orderByClause, ...orderBy.map(order_1.OrderUtil.fromRawOrder)]);\n}\nexports.orderBy = orderBy;\n//# sourceMappingURL=order-by.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_ref_1 = require(\"../../../column-ref\");\nconst used_ref_1 = require(\"../../../used-ref\");\nfunction allowedNonAggregateColumnRef(fromClause, groupByClause, selectClause) {\n    const inner = column_ref_1.ColumnRefUtil.extractColumnIdentifiers(column_ref_1.ColumnRefUtil.fromJoinArray(fromClause.currentJoins == undefined ?\n        [] :\n        fromClause.currentJoins), groupByClause);\n    const selectClauseColumns = (selectClause == undefined ?\n        {} :\n        column_ref_1.ColumnRefUtil.fromSelectClause(selectClause));\n    const result = column_ref_1.ColumnRefUtil.intersect(inner, selectClauseColumns);\n    return result;\n}\nexports.allowedNonAggregateColumnRef = allowedNonAggregateColumnRef;\nfunction allowedNonAggregateUsedRef(fromClause, groupByClause, selectClause) {\n    const usedRef = used_ref_1.UsedRefUtil.fromColumnRef(allowedNonAggregateColumnRef(fromClause, groupByClause, selectClause));\n    return usedRef;\n}\nexports.allowedNonAggregateUsedRef = allowedNonAggregateUsedRef;\n//# sourceMappingURL=allowed-non-aggregate-used-ref.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_ref_1 = require(\"../../../column-ref\");\nconst used_ref_1 = require(\"../../../used-ref\");\n/**\n * For now, this is basically the same as `HavingClauseUtil.AllowedColumnRef<>`.\n *\n * They will diverge when,\n * + The `ORDER BY` clause enforces proper `GROUP BY` interactions.\n */\nfunction allowedColumnRef(fromClause, selectClause) {\n    const fromClauseColumns = column_ref_1.ColumnRefUtil.fromJoinArray((fromClause.currentJoins != undefined) ?\n        fromClause.currentJoins :\n        []);\n    const selectClauseColumns = (selectClause == undefined ?\n        {} :\n        column_ref_1.ColumnRefUtil.fromSelectClause(selectClause));\n    const result = column_ref_1.ColumnRefUtil.intersect(fromClauseColumns, selectClauseColumns);\n    return result;\n}\nexports.allowedColumnRef = allowedColumnRef;\n/**\n * For now, this is basically the same as `HavingClauseUtil.AllowedUsedRef<>`.\n *\n * They will diverge when,\n * + The `ORDER BY` clause enforces proper `GROUP BY` interactions.\n */\nfunction allowedUsedRef(fromClause, selectClause) {\n    const usedRef = used_ref_1.UsedRefUtil.fromColumnRef(allowedColumnRef(fromClause, selectClause));\n    return usedRef;\n}\nexports.allowedUsedRef = allowedUsedRef;\n//# sourceMappingURL=allowed-used-ref.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./allowed-non-aggregate-used-ref\"));\n__export(require(\"./allowed-used-ref\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst OrderUtil = require(\"./util\");\nexports.OrderUtil = OrderUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sort_direction_1 = require(\"../../../sort-direction\");\nconst predicate_1 = require(\"../predicate\");\nfunction fromRawOrder(rawOrder) {\n    if (predicate_1.isOrder(rawOrder)) {\n        return rawOrder;\n    }\n    else {\n        return [rawOrder, sort_direction_1.SortDirection.ASC];\n    }\n}\nexports.fromRawOrder = fromRawOrder;\n//# sourceMappingURL=from-raw-order.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./from-raw-order\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./constructor\"));\n__export(require(\"./predicate\"));\n__export(require(\"./query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./is-order\"));\n__export(require(\"./is-sort-expr\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sort_direction_1 = require(\"../../../sort-direction\");\n/**\n * Checks,\n * + If it is an 2-tuple\n * + If the second element is a `SortDirection`\n *\n * Does not check,\n * + If the first element is a `SortExpr` (for run-time performance)\n *\n * @param mixed\n */\nfunction isOrder(mixed) {\n    return (Array.isArray(mixed) &&\n        mixed.length == 2 &&\n        sort_direction_1.SortDirectionUtil.isSortDirection(mixed[1]));\n}\nexports.isOrder = isOrder;\n//# sourceMappingURL=is-order.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_1 = require(\"../../../column\");\nconst expr_1 = require(\"../../../expr\");\nconst expr_select_item_1 = require(\"../../../expr-select-item\");\nfunction isSortExpr(mixed) {\n    return (column_1.ColumnUtil.isColumn(mixed) ||\n        expr_1.ExprUtil.isExpr(mixed) ||\n        expr_select_item_1.ExprSelectItemUtil.isExprSelectItem(mixed));\n}\nexports.isSortExpr = isSortExpr;\n//# sourceMappingURL=is-sort-expr.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst predicate_1 = require(\"../predicate\");\nfunction extractSortExpr(rawOrder) {\n    if (predicate_1.isOrder(rawOrder)) {\n        return rawOrder[0];\n    }\n    else {\n        return rawOrder;\n    }\n}\nexports.extractSortExpr = extractSortExpr;\n//# sourceMappingURL=extract-sort-expr.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./extract-sort-expr\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst PartialRowUtil = require(\"./util\");\nexports.PartialRowUtil = PartialRowUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./mapper\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_map_1 = require(\"../../../column-map\");\nfunction mapper(table) {\n    return column_map_1.ColumnMapUtil.partialMapper(table.columns);\n}\nexports.mapper = mapper;\n//# sourceMappingURL=mapper.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst PrimaryKeyUtil = require(\"./util\");\nexports.PrimaryKeyUtil = PrimaryKeyUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./mapper\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_map_1 = require(\"../../../column-map\");\nconst type_util_1 = require(\"../../../type-util\");\nfunction mapper(table) {\n    return column_map_1.ColumnMapUtil.mapper(type_util_1.pickOwnEnumerable(table.columns, table.primaryKey));\n}\nexports.mapper = mapper;\n//# sourceMappingURL=mapper.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./invoke-async-callback-safely\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nasync function invokeAsyncCallbackSafely(asyncCallback, thenCallback, catchCallback) {\n    try {\n        return asyncCallback()\n            .then(thenCallback, catchCallback);\n    }\n    catch (syncErr) {\n        return catchCallback(syncErr);\n    }\n}\nexports.invokeAsyncCallbackSafely = invokeAsyncCallbackSafely;\n//# sourceMappingURL=invoke-async-callback-safely.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst QueryBaseUtil = require(\"./util\");\nexports.QueryBaseUtil = QueryBaseUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./operation\"));\n__export(require(\"./predicate\"));\n__export(require(\"./query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst derived_table_1 = require(\"../../../derived-table\");\nconst used_ref_1 = require(\"../../../used-ref\");\nconst column_map_1 = require(\"../../../column-map\");\nconst query_1 = require(\"../query\");\nconst constants_1 = require(\"../../../constants\");\nconst derived_table_select_item_1 = require(\"../../../derived-table-select-item\");\nconst select_clause_1 = require(\"../../../select-clause\");\nconst predicate_1 = require(\"../predicate\");\nconst ast_1 = require(\"../../../ast\");\nfunction assertAliasable(query) {\n    const duplicateColumnAlias = select_clause_1.SelectClauseUtil.duplicateColumnAlias(query.selectClause);\n    if (duplicateColumnAlias.length > 0) {\n        throw new Error(`Cannot alias query with duplicate names in SELECT clause; ${duplicateColumnAlias.join(\", \")}`);\n    }\n}\nfunction as(query, alias) {\n    assertAliasable(query);\n    if (predicate_1.isOneSelectItem(query) && predicate_1.isZeroOrOneRow(query)) {\n        const result = new derived_table_select_item_1.DerivedTableSelectItem({\n            mapper: query_1.mapper(query),\n            isLateral: false,\n            tableAlias: constants_1.ALIASED,\n            alias,\n            columns: (column_map_1.ColumnMapUtil.fromSelectClause(query.selectClause, alias, false)),\n            usedRef: used_ref_1.UsedRefUtil.fromJoinArray(query.fromClause.outerQueryJoins == undefined ?\n                [] :\n                query.fromClause.outerQueryJoins),\n            isAggregate: false,\n        }, ast_1.parentheses(query, false));\n        /**\n         * @todo Investigate why we can't cast to `As<>` directly\n         */\n        return result;\n    }\n    else {\n        const result = new derived_table_1.DerivedTable({\n            isLateral: false,\n            alias,\n            columns: (column_map_1.ColumnMapUtil.fromSelectClause(query.selectClause, alias, false)),\n            usedRef: used_ref_1.UsedRefUtil.fromJoinArray(query.fromClause.outerQueryJoins == undefined ?\n                [] :\n                query.fromClause.outerQueryJoins),\n        }, query);\n        /**\n         * @todo Investigate why we can't cast to `As<>` directly\n         */\n        return result;\n    }\n}\nexports.as = as;\n//# sourceMappingURL=as.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sort_direction_1 = require(\"../../../sort-direction\");\nconst coalesce_1 = require(\"./coalesce\");\nfunction asc(query) {\n    return [\n        coalesce_1.coalesce(query, null),\n        sort_direction_1.SortDirection.ASC\n    ];\n}\nexports.asc = asc;\n//# sourceMappingURL=asc.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ExprLib = require(\"../../../expr-library\");\nfunction coalesce(query, defaultValue) {\n    return ExprLib.coalesce(query, defaultValue);\n}\nexports.coalesce = coalesce;\n//# sourceMappingURL=coalesce.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sort_direction_1 = require(\"../../../sort-direction\");\nconst coalesce_1 = require(\"./coalesce\");\nfunction desc(query) {\n    return [\n        coalesce_1.coalesce(query, null),\n        sort_direction_1.SortDirection.DESC\n    ];\n}\nexports.desc = desc;\n//# sourceMappingURL=desc.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./as\"));\n__export(require(\"./asc\"));\n__export(require(\"./coalesce\"));\n__export(require(\"./desc\"));\n__export(require(\"./sort\"));\n__export(require(\"./throw-if-null\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst coalesce_1 = require(\"./coalesce\");\nfunction sort(query, sortDirection) {\n    return [\n        coalesce_1.coalesce(query, null),\n        sortDirection\n    ];\n}\nexports.sort = sort;\n//# sourceMappingURL=sort.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ExprLib = require(\"../../../expr-library\");\nfunction throwIfNull(query) {\n    return ExprLib.throwIfNull(query);\n}\nexports.throwIfNull = throwIfNull;\n//# sourceMappingURL=throw-if-null.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./is-after-from-clause\"));\n__export(require(\"./is-after-select-clause\"));\n__export(require(\"./is-before-compound-query-clause\"));\n__export(require(\"./is-before-select-clause\"));\n__export(require(\"./is-one-row\"));\n__export(require(\"./is-one-select-item\"));\n__export(require(\"./is-query\"));\n__export(require(\"./is-zero-or-one-row-using-limit\"));\n__export(require(\"./is-zero-or-one-row-using-compound-query-limit\"));\n__export(require(\"./is-zero-or-one-row\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_query_1 = require(\"./is-query\");\nconst from_clause_1 = require(\"../../../from-clause\");\nfunction isAfterFromClause(x) {\n    return is_query_1.isQuery(x) && from_clause_1.FromClauseUtil.isAfterFromClause(x.fromClause);\n}\nexports.isAfterFromClause = isAfterFromClause;\n//# sourceMappingURL=is-after-from-clause.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_query_1 = require(\"./is-query\");\nfunction isAfterSelectClause(x) {\n    return is_query_1.isQuery(x) && (x.selectClause != undefined);\n}\nexports.isAfterSelectClause = isAfterSelectClause;\n//# sourceMappingURL=is-after-select-clause.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_query_1 = require(\"./is-query\");\nfunction isBeforeCompoundQueryClause(x) {\n    return is_query_1.isQuery(x) && (x.compoundQueryClause == undefined);\n}\nexports.isBeforeCompoundQueryClause = isBeforeCompoundQueryClause;\n//# sourceMappingURL=is-before-compound-query-clause.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_query_1 = require(\"./is-query\");\nfunction isBeforeSelectClause(x) {\n    return is_query_1.isQuery(x) && (x.selectClause == undefined);\n}\nexports.isBeforeSelectClause = isBeforeSelectClause;\n//# sourceMappingURL=is-before-select-clause.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_query_1 = require(\"./is-query\");\nconst from_clause_1 = require(\"../../../from-clause\");\nfunction isOneRow(x) {\n    return (is_query_1.isQuery(x) &&\n        ((from_clause_1.FromClauseUtil.isBeforeFromClause(x.fromClause) &&\n            x.compoundQueryClause == undefined) ||\n            (x.groupByClause != undefined &&\n                x.groupByClause.length == 0 &&\n                x.compoundQueryClause == undefined)));\n}\nexports.isOneRow = isOneRow;\n//# sourceMappingURL=is-one-row.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_after_select_clause_1 = require(\"./is-after-select-clause\");\nconst select_item_1 = require(\"../../../select-item\");\nfunction isOneSelectItem(x) {\n    return (is_after_select_clause_1.isAfterSelectClause(x) &&\n        x.selectClause.length == 1 &&\n        select_item_1.SelectItemUtil.isSingleValueSelectItem(x.selectClause[0]));\n}\nexports.isOneSelectItem = isOneSelectItem;\n//# sourceMappingURL=is-one-select-item.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst type_util_1 = require(\"../../../type-util\");\n//import {UsedRefUtil} from \"../../../used-ref\";\n//import {AstUtil} from \"../../../ast\";\n/**\n * Only checks that the properties exist.\n * Does not actually check that they are the right data type!\n *\n * @todo Consider adding checks for increased type safety.\n */\nfunction isQuery(x) {\n    if (!type_util_1.isObjectWithOwnEnumerableKeys()(x, [\n        \"fromClause\",\n        \"selectClause\",\n        \"limitClause\",\n        \"compoundQueryClause\",\n        \"compoundQueryLimitClause\",\n        \"mapDelegate\",\n        \"whereClause\",\n        \"groupByClause\",\n        \"havingClause\",\n        \"orderByClause\",\n        \"compoundQueryOrderByClause\",\n        \"isDistinct\",\n    ])) {\n        return false;\n    }\n    return true;\n}\nexports.isQuery = isQuery;\n//# sourceMappingURL=is-query.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst is_query_1 = require(\"./is-query\");\nfunction isZeroOrOneRowUsingCompoundQueryLimit(x) {\n    const BigInt = tm.TypeUtil.getBigIntFactoryFunctionOrError();\n    return (is_query_1.isQuery(x) &&\n        x.compoundQueryLimitClause != undefined &&\n        (tm.BigIntUtil.equal(x.compoundQueryLimitClause.maxRowCount, BigInt(0)) ||\n            tm.BigIntUtil.equal(x.compoundQueryLimitClause.maxRowCount, BigInt(1))));\n}\nexports.isZeroOrOneRowUsingCompoundQueryLimit = isZeroOrOneRowUsingCompoundQueryLimit;\n//# sourceMappingURL=is-zero-or-one-row-using-compound-query-limit.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst is_query_1 = require(\"./is-query\");\nfunction isZeroOrOneRowUsingLimit(x) {\n    const BigInt = tm.TypeUtil.getBigIntFactoryFunctionOrError();\n    return (is_query_1.isQuery(x) &&\n        x.limitClause != undefined &&\n        (tm.BigIntUtil.equal(x.limitClause.maxRowCount, BigInt(0)) ||\n            tm.BigIntUtil.equal(x.limitClause.maxRowCount, BigInt(1))) &&\n        x.compoundQueryClause == undefined &&\n        x.compoundQueryLimitClause == undefined);\n}\nexports.isZeroOrOneRowUsingLimit = isZeroOrOneRowUsingLimit;\n//# sourceMappingURL=is-zero-or-one-row-using-limit.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_one_row_1 = require(\"./is-one-row\");\nconst is_zero_or_one_row_using_limit_1 = require(\"./is-zero-or-one-row-using-limit\");\nconst is_zero_or_one_row_using_compound_query_limit_1 = require(\"./is-zero-or-one-row-using-compound-query-limit\");\nfunction isZeroOrOneRow(x) {\n    return (\n    /**\n     * This `OR` expression is sorted from most likely to least likely.\n     * Do not change the order unless you have a good reason!\n     */\n    is_zero_or_one_row_using_limit_1.isZeroOrOneRowUsingLimit(x) ||\n        is_zero_or_one_row_using_compound_query_limit_1.isZeroOrOneRowUsingCompoundQueryLimit(x) ||\n        is_one_row_1.isOneRow(x));\n}\nexports.isZeroOrOneRow = isZeroOrOneRow;\n//# sourceMappingURL=is-zero-or-one-row.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./mapper\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst predicate_1 = require(\"../predicate\");\nfunction mapper(query) {\n    if (predicate_1.isOneRow(query)) {\n        return query.selectClause[0].mapper;\n    }\n    else {\n        return tm.orNull(query.selectClause[0].mapper);\n    }\n}\nexports.mapper = mapper;\n//# sourceMappingURL=mapper.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst RowUtil = require(\"./util\");\nexports.RowUtil = RowUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./mapper\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_map_1 = require(\"../../../column-map\");\nfunction mapper(table) {\n    return column_map_1.ColumnMapUtil.mapper(table.columns);\n}\nexports.mapper = mapper;\n//# sourceMappingURL=mapper.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./schema-validation-error\"));\n__export(require(\"./schema-validation-warning\"));\nconst SchemaValidationUtil = require(\"./util\");\nexports.SchemaValidationUtil = SchemaValidationUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SchemaValidationErrorType;\n(function (SchemaValidationErrorType) {\n    SchemaValidationErrorType[\"TABLE_ON_APPLICATION_ONLY\"] = \"TABLE_ON_APPLICATION_ONLY\";\n    SchemaValidationErrorType[\"TABLE_ALIAS_MISMATCH\"] = \"TABLE_ALIAS_MISMATCH\";\n    SchemaValidationErrorType[\"PRIMARY_KEY_ON_APPLICATION_ONLY\"] = \"PRIMARY_KEY_ON_APPLICATION_ONLY\";\n    SchemaValidationErrorType[\"PRIMARY_KEY_MISMATCH\"] = \"PRIMARY_KEY_MISMATCH\";\n    SchemaValidationErrorType[\"CANDIDATE_KEY_ON_APPLICATION_ONLY\"] = \"CANDIDATE_KEY_ON_APPLICATION_ONLY\";\n    SchemaValidationErrorType[\"DATABASE_TABLE_HAS_NO_PRIMARY_OR_CANDIDATE_KEY\"] = \"DATABASE_TABLE_HAS_NO_PRIMARY_OR_CANDIDATE_KEY\";\n    SchemaValidationErrorType[\"COLUMN_ON_DATABASE_ONLY_INSERT_WILL_FAIL\"] = \"COLUMN_ON_DATABASE_ONLY_INSERT_WILL_FAIL\";\n    SchemaValidationErrorType[\"COLUMN_ON_APPLICATION_ONLY\"] = \"COLUMN_ON_APPLICATION_ONLY\";\n    SchemaValidationErrorType[\"COLUMN_ALIAS_MISMATCH\"] = \"COLUMN_ALIAS_MISMATCH\";\n    SchemaValidationErrorType[\"AUTO_INCREMENT_ON_APPLICATION_ONLY_INSERT_WILL_FAIL\"] = \"AUTO_INCREMENT_ON_APPLICATION_ONLY_INSERT_WILL_FAIL\";\n    SchemaValidationErrorType[\"AUTO_INCREMENT_MISMATCH_INSERT_WILL_FAIL\"] = \"AUTO_INCREMENT_MISMATCH_INSERT_WILL_FAIL\";\n    SchemaValidationErrorType[\"COLUMN_NULLABLE_ON_DATABASE_ONLY\"] = \"COLUMN_NULLABLE_ON_DATABASE_ONLY\";\n    SchemaValidationErrorType[\"COLUMN_NULLABLE_ON_APPLICATION_ONLY_INSERT_WILL_FAIL\"] = \"COLUMN_NULLABLE_ON_APPLICATION_ONLY_INSERT_WILL_FAIL\";\n    SchemaValidationErrorType[\"COLUMN_NULLABLE_ON_APPLICATION_ONLY_UPDATE_WILL_FAIL\"] = \"COLUMN_NULLABLE_ON_APPLICATION_ONLY_UPDATE_WILL_FAIL\";\n    SchemaValidationErrorType[\"COLUMN_GENERATED_ON_DATABASE_ONLY_INSERT_WILL_FAIL\"] = \"COLUMN_GENERATED_ON_DATABASE_ONLY_INSERT_WILL_FAIL\";\n    SchemaValidationErrorType[\"COLUMN_GENERATED_ON_DATABASE_ONLY_UPDATE_WILL_FAIL\"] = \"COLUMN_GENERATED_ON_DATABASE_ONLY_UPDATE_WILL_FAIL\";\n    SchemaValidationErrorType[\"COLUMN_GENERATED_AND_AUTO_INCREMENT_ON_APPLICATION\"] = \"COLUMN_GENERATED_AND_AUTO_INCREMENT_ON_APPLICATION\";\n    SchemaValidationErrorType[\"COLUMN_GENERATED_ON_APPLICATION_ONLY_INSERT_WILL_FAIL\"] = \"COLUMN_GENERATED_ON_APPLICATION_ONLY_INSERT_WILL_FAIL\";\n    SchemaValidationErrorType[\"COLUMN_EXPLICIT_DEFAULT_VALUE_ON_APPLICATION_ONLY_INSERT_WILL_FAIL\"] = \"COLUMN_EXPLICIT_DEFAULT_VALUE_ON_APPLICATION_ONLY_INSERT_WILL_FAIL\";\n})(SchemaValidationErrorType = exports.SchemaValidationErrorType || (exports.SchemaValidationErrorType = {}));\n//# sourceMappingURL=schema-validation-error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SchemaValidationWarningType;\n(function (SchemaValidationWarningType) {\n    SchemaValidationWarningType[\"TABLE_ON_DATABASE_ONLY\"] = \"TABLE_ON_DATABASE_ONLY\";\n    SchemaValidationWarningType[\"TABLE_HAS_NO_PRIMARY_KEY\"] = \"TABLE_HAS_NO_PRIMARY_KEY\";\n    SchemaValidationWarningType[\"PRIMARY_KEY_ON_DATABASE_ONLY\"] = \"PRIMARY_KEY_ON_DATABASE_ONLY\";\n    SchemaValidationWarningType[\"CANDIDATE_KEY_ON_DATABASE_ONLY\"] = \"CANDIDATE_KEY_ON_DATABASE_ONLY\";\n    SchemaValidationWarningType[\"COLUMN_ON_DATABASE_ONLY_WITH_DEFAULT_OR_GENERATED_VALUE\"] = \"COLUMN_ON_DATABASE_ONLY_WITH_DEFAULT_OR_GENERATED_VALUE\";\n    SchemaValidationWarningType[\"COLUMN_ON_DATABASE_ONLY_INSERT_DISABLED\"] = \"COLUMN_ON_DATABASE_ONLY_INSERT_DISABLED\";\n    SchemaValidationWarningType[\"AUTO_INCREMENT_ON_APPLICATION_ONLY_INSERT_DISABLED\"] = \"AUTO_INCREMENT_ON_APPLICATION_ONLY_INSERT_DISABLED\";\n    SchemaValidationWarningType[\"AUTO_INCREMENT_ON_DATABASE_ONLY\"] = \"AUTO_INCREMENT_ON_DATABASE_ONLY\";\n    SchemaValidationWarningType[\"AUTO_INCREMENT_MISMATCH_INSERT_DISABLED\"] = \"AUTO_INCREMENT_MISMATCH_INSERT_DISABLED\";\n    SchemaValidationWarningType[\"COLUMN_NULLABLE_ON_APPLICATION_ONLY_INSERT_AND_UPDATE_DISABLED\"] = \"COLUMN_NULLABLE_ON_APPLICATION_ONLY_INSERT_AND_UPDATE_DISABLED\";\n    SchemaValidationWarningType[\"COLUMN_GENERATED_ON_DATABASE_ONLY_INSERT_AND_UPDATE_DISABLED\"] = \"COLUMN_GENERATED_ON_DATABASE_ONLY_INSERT_AND_UPDATE_DISABLED\";\n    SchemaValidationWarningType[\"COLUMN_GENERATED_ON_APPLICATION_ONLY_USING_DATABASE_DEFAULT_VALUE\"] = \"COLUMN_GENERATED_ON_APPLICATION_ONLY_USING_DATABASE_DEFAULT_VALUE\";\n    SchemaValidationWarningType[\"COLUMN_GENERATED_ON_APPLICATION_ONLY_INSERT_DISABLED\"] = \"COLUMN_GENERATED_ON_APPLICATION_ONLY_INSERT_DISABLED\";\n    SchemaValidationWarningType[\"COLUMN_EXPLICIT_DEFAULT_VALUE_ON_DATABASE_ONLY\"] = \"COLUMN_EXPLICIT_DEFAULT_VALUE_ON_DATABASE_ONLY\";\n    SchemaValidationWarningType[\"COLUMN_EXPLICIT_DEFAULT_VALUE_ON_APPLICATION_ONLY_USING_DATABASE_GENERATED_OR_NULL_VALUE\"] = \"COLUMN_EXPLICIT_DEFAULT_VALUE_ON_APPLICATION_ONLY_USING_DATABASE_GENERATED_OR_NULL_VALUE\";\n    SchemaValidationWarningType[\"COLUMN_EXPLICIT_DEFAULT_VALUE_ON_APPLICATION_ONLY_INSERT_DISABLED\"] = \"COLUMN_EXPLICIT_DEFAULT_VALUE_ON_APPLICATION_ONLY_INSERT_DISABLED\";\n})(SchemaValidationWarningType = exports.SchemaValidationWarningType || (exports.SchemaValidationWarningType = {}));\n//# sourceMappingURL=schema-validation-warning.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./operation\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./validate-column\"));\n__export(require(\"./validate-schema\"));\n__export(require(\"./validate-table\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst schema_validation_error_1 = require(\"../../schema-validation-error\");\nconst schema_validation_warning_1 = require(\"../../schema-validation-warning\");\nconst sqlstring_1 = require(\"../../../sqlstring\");\nfunction validateColumn(applicationTable, applicationColumn, columnMeta) {\n    const result = {\n        errors: [],\n        warnings: [],\n    };\n    /**\n     * Sanity check...\n     */\n    if (applicationColumn.columnAlias != columnMeta.columnAlias) {\n        result.errors.push({\n            type: schema_validation_error_1.SchemaValidationErrorType.COLUMN_ALIAS_MISMATCH,\n            description: `Application column is named ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)}.${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationColumn.columnAlias)}, database column is named ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)}.${sqlstring_1.escapeIdentifierWithDoubleQuotes(columnMeta.columnAlias)}`,\n            tableAlias: applicationTable.alias,\n            applicationColumnAlias: applicationColumn.columnAlias,\n            databaseColumnAlias: columnMeta.columnAlias,\n        });\n        return result;\n    }\n    const applicationNullable = applicationTable.nullableColumns.includes(columnMeta.columnAlias);\n    const applicationMutable = applicationTable.mutableColumns.includes(applicationColumn.columnAlias);\n    /*const applicationAutoIncrement = (\n        applicationTable.autoIncrement != undefined &&\n        applicationTable.autoIncrement == applicationColumn.columnAlias\n    );*/\n    const applicationGenerated = applicationTable.generatedColumns.includes(applicationColumn.columnAlias);\n    const applicationExplicitDefaultValue = applicationTable.explicitDefaultValueColumns.includes(applicationColumn.columnAlias);\n    if (columnMeta.isNullable) {\n        if (applicationNullable) {\n            /**\n             * OK\n             */\n        }\n        else {\n            /**\n             * + Database is nullable.\n             * + Application is **not** nullable.\n             *\n             * -----\n             *\n             * + Attempts to `SELECT` the `NULL` value will fail.\n             * + Attempts to `INSERT` are fine.\n             * + Attempts to `UPDATE` are fine.\n             * + Attempts to `DELETE` are fine.\n             * + Attempts to use as expression expecting non-`NULL` will fail.\n             *\n             */\n            result.errors.push({\n                type: schema_validation_error_1.SchemaValidationErrorType.COLUMN_NULLABLE_ON_DATABASE_ONLY,\n                description: `Column ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)}.${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationColumn.columnAlias)} is nullable on database only; SELECTs will fail`,\n                tableAlias: applicationTable.alias,\n                columnAlias: applicationColumn.columnAlias,\n            });\n        }\n    }\n    else {\n        if (applicationNullable) {\n            /**\n             * + Database is **not** nullable.\n             * + Application is nullable.\n             *\n             * -----\n             *\n             * + Attempts to `SELECT` are fine.\n             * + Attempts to `INSERT` the `NULL` value will fail.\n             * + Attempts to `UPDATE` to the `NULL` value will fail.\n             * + Attempts to `DELETE` are fine.\n             * + Attempts to use as expression expecting nullable are fine.\n             *\n             */\n            if (applicationTable.insertEnabled) {\n                result.errors.push({\n                    type: schema_validation_error_1.SchemaValidationErrorType.COLUMN_NULLABLE_ON_APPLICATION_ONLY_INSERT_WILL_FAIL,\n                    description: `Column ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)}.${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationColumn.columnAlias)} is nullable on application only; INSERTs using NULL value will fail`,\n                    tableAlias: applicationTable.alias,\n                    columnAlias: applicationColumn.columnAlias,\n                });\n            }\n            else if (applicationMutable) {\n                result.errors.push({\n                    type: schema_validation_error_1.SchemaValidationErrorType.COLUMN_NULLABLE_ON_APPLICATION_ONLY_UPDATE_WILL_FAIL,\n                    description: `Column ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)}.${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationColumn.columnAlias)} is nullable on application only; UPDATEs using NULL value will fail`,\n                    tableAlias: applicationTable.alias,\n                    columnAlias: applicationColumn.columnAlias,\n                });\n            }\n            else {\n                result.warnings.push({\n                    type: schema_validation_warning_1.SchemaValidationWarningType.COLUMN_NULLABLE_ON_APPLICATION_ONLY_INSERT_AND_UPDATE_DISABLED,\n                    description: `Column ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)}.${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationColumn.columnAlias)} is nullable on application only; INSERTs and UPDATEs using NULL value will fail but both are disabled`,\n                    tableAlias: applicationTable.alias,\n                    columnAlias: applicationColumn.columnAlias,\n                });\n            }\n        }\n        else {\n            /**\n             * OK\n             */\n        }\n    }\n    if (columnMeta.generationExpression != undefined) {\n        if (applicationGenerated) {\n            /**\n             * OK\n             */\n        }\n        else {\n            /**\n             * + This column is generated on the database\n             * + This column is **not** generated on the application\n             *\n             * -----\n             *\n             * + Attempts to `SELECT` are fine.\n             * + Attempts to `INSERT` will fail because you cannot set values for generated columns.\n             * + Attsmpts to `UPDATE` will fail because you cannot set values for generated columns.\n             * + Attempts to `DELETE` are fine.\n             * + Attempts to use as expression are fine.\n             */\n            if (applicationTable.insertEnabled) {\n                result.errors.push({\n                    type: schema_validation_error_1.SchemaValidationErrorType.COLUMN_GENERATED_ON_DATABASE_ONLY_INSERT_WILL_FAIL,\n                    description: `Column ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)}.${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationColumn.columnAlias)} is generated on database only; INSERTs will fail`,\n                    tableAlias: applicationTable.alias,\n                    columnAlias: applicationColumn.columnAlias,\n                });\n            }\n            else if (applicationMutable) {\n                result.errors.push({\n                    type: schema_validation_error_1.SchemaValidationErrorType.COLUMN_GENERATED_ON_DATABASE_ONLY_UPDATE_WILL_FAIL,\n                    description: `Column ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)}.${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationColumn.columnAlias)} is generated on database only; UPDATEs will fail`,\n                    tableAlias: applicationTable.alias,\n                    columnAlias: applicationColumn.columnAlias,\n                });\n            }\n            else {\n                result.warnings.push({\n                    type: schema_validation_warning_1.SchemaValidationWarningType.COLUMN_GENERATED_ON_DATABASE_ONLY_INSERT_AND_UPDATE_DISABLED,\n                    description: `Column ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)}.${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationColumn.columnAlias)} is generated on database only; INSERTs and UPDATEs will fail but both are disabled`,\n                    tableAlias: applicationTable.alias,\n                    columnAlias: applicationColumn.columnAlias,\n                });\n            }\n        }\n    }\n    else {\n        if (applicationGenerated) {\n            if (applicationTable.autoIncrement != undefined &&\n                applicationTable.autoIncrement == applicationColumn.columnAlias) {\n                result.errors.push({\n                    type: schema_validation_error_1.SchemaValidationErrorType.COLUMN_GENERATED_AND_AUTO_INCREMENT_ON_APPLICATION,\n                    description: `Column ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)}.${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationColumn.columnAlias)} cannot be generated and auto-increment at the same time`,\n                    tableAlias: applicationTable.alias,\n                    applicationColumnAlias: applicationTable.autoIncrement,\n                });\n            }\n            else {\n                if (columnMeta.isNullable ||\n                    columnMeta.isAutoIncrement ||\n                    columnMeta.explicitDefaultValue != undefined) {\n                    /**\n                     * + This column has an implicit/explicit default/generated value on the database\n                     *\n                     * So, we can kind of pretend it's generated on application code, anyway.\n                     *\n                     * + Attempts to `SELECT` are fine.\n                     * + Attempts to `INSERT` won't set the value because we say it is generated.\n                     * + Attempts to `UPDATE` won't set the value because we say it is generated.\n                     * + Attempts to `DELETE` are fine.\n                     * + Attempts to use as expression are fine.\n                     */\n                    result.warnings.push({\n                        type: schema_validation_warning_1.SchemaValidationWarningType.COLUMN_GENERATED_ON_APPLICATION_ONLY_USING_DATABASE_DEFAULT_VALUE,\n                        description: `Column ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)}.${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationColumn.columnAlias)} is generated on application only; INSERTs will use database default value`,\n                        tableAlias: applicationTable.alias,\n                        columnAlias: applicationColumn.columnAlias,\n                    });\n                }\n                else {\n                    /**\n                     * We say it is generated on application code.\n                     * But it has **no** default/generated value on the database.\n                     *\n                     * + Attempts to `SELECT` are fine.\n                     * + Attempts to `INSERT` will fail because we cannot set the value on application code,\n                     *   and there is no default/generated value on the database.\n                     * + Attempts to `UPDATE` won't set the value because we say it is generated.\n                     * + Attempts to `DELETE` are fine.\n                     * + Attempts to use as expression are fine.\n                     */\n                    if (applicationTable.insertEnabled) {\n                        result.errors.push({\n                            type: schema_validation_error_1.SchemaValidationErrorType.COLUMN_GENERATED_ON_APPLICATION_ONLY_INSERT_WILL_FAIL,\n                            description: `Column ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)}.${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationColumn.columnAlias)} is generated on application only; INSERTs will fail`,\n                            tableAlias: applicationTable.alias,\n                            columnAlias: applicationColumn.columnAlias,\n                        });\n                    }\n                    else {\n                        result.warnings.push({\n                            type: schema_validation_warning_1.SchemaValidationWarningType.COLUMN_GENERATED_ON_APPLICATION_ONLY_INSERT_DISABLED,\n                            description: `Column ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)}.${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationColumn.columnAlias)} is generated on application only; INSERTs will fail but INSERTs are disabled`,\n                            tableAlias: applicationTable.alias,\n                            columnAlias: applicationColumn.columnAlias,\n                        });\n                    }\n                }\n            }\n        }\n        else {\n            /**\n             * OK\n             */\n        }\n    }\n    if (columnMeta.explicitDefaultValue != undefined) {\n        if (applicationExplicitDefaultValue) {\n            /**\n             * OK\n             */\n        }\n        else {\n            /**\n             * It has an explicit default value on the database.\n             * But not on application code.\n             *\n             * + Attempts to `SELECT` are fine.\n             * + Attempts to `INSERT` are fine; they just cannot use the default value.\n             * + Attempts to `UPDATE` are fine.\n             * + Attempts to `DELETE` are fine.\n             * + Attempts to use as expression are fine.\n             */\n            result.warnings.push({\n                type: schema_validation_warning_1.SchemaValidationWarningType.COLUMN_EXPLICIT_DEFAULT_VALUE_ON_DATABASE_ONLY,\n                description: `Column ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)}.${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationColumn.columnAlias)} has explicit default value on database only`,\n                tableAlias: applicationTable.alias,\n                columnAlias: applicationColumn.columnAlias,\n                explicitDefaultValue: columnMeta.explicitDefaultValue,\n            });\n        }\n    }\n    else {\n        if (applicationExplicitDefaultValue) {\n            if (columnMeta.isNullable ||\n                columnMeta.isAutoIncrement ||\n                columnMeta.generationExpression != undefined) {\n                /**\n                 * It **does not** have an explicit default value on the database.\n                 * But it does, on application code.\n                 *\n                 * However, it does have other default/generated values on the database...\n                 *\n                 * + Attempts to `SELECT` are fine.\n                 * + Attempts to `INSERT` are fine; they will just use the other default/generated values on the database.\n                 * + Attempts to `UPDATE` are fine.\n                 * + Attempts to `DELETE` are fine.\n                 * + Attempts to use as expression are fine.\n                 */\n                result.warnings.push({\n                    type: schema_validation_warning_1.SchemaValidationWarningType.COLUMN_EXPLICIT_DEFAULT_VALUE_ON_APPLICATION_ONLY_USING_DATABASE_GENERATED_OR_NULL_VALUE,\n                    description: `Column ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)}.${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationColumn.columnAlias)} has explicit default value on application only; INSERTs will use database generated or NULL value`,\n                    tableAlias: applicationTable.alias,\n                    columnAlias: applicationColumn.columnAlias,\n                    isNullable: columnMeta.isNullable,\n                    isAutoIncrement: columnMeta.isAutoIncrement,\n                    generationExpression: columnMeta.generationExpression,\n                    explicitDefaultValue: columnMeta.explicitDefaultValue,\n                });\n            }\n            else {\n                /**\n                 * It **does not** have an explicit default value on the database.\n                 * But it does, on application code.\n                 *\n                 * There are also no other default/generated values on the database...\n                 *\n                 * + Attempts to `SELECT` are fine.\n                 * + Attempts to `INSERT` will fail; there is no default/generated value on the database to use.\n                 * + Attempts to `UPDATE` are fine.\n                 * + Attempts to `DELETE` are fine.\n                 * + Attempts to use as expression are fine.\n                 */\n                if (applicationTable.insertEnabled) {\n                    result.errors.push({\n                        type: schema_validation_error_1.SchemaValidationErrorType.COLUMN_EXPLICIT_DEFAULT_VALUE_ON_APPLICATION_ONLY_INSERT_WILL_FAIL,\n                        description: `Column ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)}.${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationColumn.columnAlias)} has explicit default value on application only; INSERTs will fail`,\n                        tableAlias: applicationTable.alias,\n                        columnAlias: applicationColumn.columnAlias,\n                    });\n                }\n                else {\n                    result.warnings.push({\n                        type: schema_validation_warning_1.SchemaValidationWarningType.COLUMN_EXPLICIT_DEFAULT_VALUE_ON_APPLICATION_ONLY_INSERT_DISABLED,\n                        description: `Column ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)}.${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationColumn.columnAlias)} has explicit default value on application only; INSERTs will fail but INSERTs are disabled`,\n                        tableAlias: applicationTable.alias,\n                        columnAlias: applicationColumn.columnAlias,\n                    });\n                }\n            }\n        }\n        else {\n            /**\n             * OK\n             */\n        }\n    }\n    return result;\n}\nexports.validateColumn = validateColumn;\n//# sourceMappingURL=validate-column.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst schema_validation_warning_1 = require(\"../../schema-validation-warning\");\nconst validate_table_1 = require(\"./validate-table\");\nconst schema_validation_error_1 = require(\"../../schema-validation-error\");\nconst sqlstring_1 = require(\"../../../sqlstring\");\nfunction validateSchema(applicationTables, schemaMeta) {\n    const result = {\n        errors: [],\n        warnings: [],\n    };\n    const tablesOnDatabaseOnly = schemaMeta.tables.filter(tableMeta => {\n        const applicationTable = applicationTables.find(applicationTable => applicationTable.alias == tableMeta.tableAlias);\n        return (applicationTable == undefined);\n    });\n    for (const tableMeta of tablesOnDatabaseOnly) {\n        result.warnings.push({\n            type: schema_validation_warning_1.SchemaValidationWarningType.TABLE_ON_DATABASE_ONLY,\n            description: `Table ${sqlstring_1.escapeIdentifierWithDoubleQuotes(schemaMeta.schemaAlias)}.${sqlstring_1.escapeIdentifierWithDoubleQuotes(tableMeta.tableAlias)} exists on database only`,\n            databaseTableAlias: tableMeta.tableAlias,\n        });\n    }\n    const tablesOnApplicationOnly = applicationTables.filter(applicationTable => {\n        const tableMeta = schemaMeta.tables.find(tableMeta => applicationTable.alias == tableMeta.tableAlias);\n        return (tableMeta == undefined);\n    });\n    for (const applicationTable of tablesOnApplicationOnly) {\n        result.errors.push({\n            type: schema_validation_error_1.SchemaValidationErrorType.TABLE_ON_APPLICATION_ONLY,\n            description: `Table ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)} exists on application only; not found on schema ${sqlstring_1.escapeIdentifierWithDoubleQuotes(schemaMeta.schemaAlias)}`,\n            applicationTableAlias: applicationTable.alias,\n            databaseSchemaAlias: schemaMeta.schemaAlias,\n        });\n    }\n    for (const applicationTable of applicationTables) {\n        const tableMeta = schemaMeta.tables.find(tableMeta => tableMeta.tableAlias == applicationTable.alias);\n        if (tableMeta == undefined) {\n            continue;\n        }\n        const validateTableResult = validate_table_1.validateTable(applicationTable, tableMeta);\n        result.errors.push(...validateTableResult.errors);\n        result.warnings.push(...validateTableResult.warnings);\n    }\n    return result;\n}\nexports.validateSchema = validateSchema;\n//# sourceMappingURL=validate-schema.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst schema_validation_error_1 = require(\"../../schema-validation-error\");\nconst key_1 = require(\"../../../key\");\nconst schema_validation_warning_1 = require(\"../../schema-validation-warning\");\nconst validate_column_1 = require(\"./validate-column\");\nconst sqlstring_1 = require(\"../../../sqlstring\");\nfunction validateTable(applicationTable, tableMeta) {\n    const result = {\n        errors: [],\n        warnings: [],\n    };\n    /**\n     * Sanity check...\n     */\n    if (applicationTable.alias != tableMeta.tableAlias) {\n        result.errors.push({\n            type: schema_validation_error_1.SchemaValidationErrorType.TABLE_ALIAS_MISMATCH,\n            description: `Application table is named ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)}, database table is named ${sqlstring_1.escapeIdentifierWithDoubleQuotes(tableMeta.tableAlias)}`,\n            applicationTableAlias: applicationTable.alias,\n            databaseTableAlias: tableMeta.tableAlias,\n        });\n        return result;\n    }\n    /**\n     * Primary key check\n     */\n    if (tableMeta.primaryKey == undefined) {\n        if (applicationTable.primaryKey == undefined) {\n            result.warnings.push({\n                type: schema_validation_warning_1.SchemaValidationWarningType.TABLE_HAS_NO_PRIMARY_KEY,\n                description: `Table ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)} has no PRIMARY KEY`,\n                tableAlias: applicationTable.alias,\n            });\n        }\n        else {\n            result.errors.push({\n                type: schema_validation_error_1.SchemaValidationErrorType.PRIMARY_KEY_ON_APPLICATION_ONLY,\n                description: `Table ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)} has PRIMARY KEY (${applicationTable.primaryKey.map(sqlstring_1.escapeIdentifierWithDoubleQuotes).join(\", \")}) on application only`,\n                tableAlias: applicationTable.alias,\n                primaryKey: [...applicationTable.primaryKey],\n            });\n        }\n    }\n    else {\n        if (applicationTable.primaryKey == undefined) {\n            result.warnings.push({\n                type: schema_validation_warning_1.SchemaValidationWarningType.PRIMARY_KEY_ON_DATABASE_ONLY,\n                description: `Table ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)} has PRIMARY KEY (${tableMeta.primaryKey.columnAliases.map(sqlstring_1.escapeIdentifierWithDoubleQuotes).join(\", \")}) on database only`,\n                tableAlias: applicationTable.alias,\n                primaryKey: [...tableMeta.primaryKey.columnAliases],\n            });\n        }\n        else {\n            if (key_1.KeyUtil.isEqual(applicationTable.primaryKey, tableMeta.primaryKey.columnAliases)) {\n                //OK, no problems here\n            }\n            else {\n                result.errors.push({\n                    type: schema_validation_error_1.SchemaValidationErrorType.PRIMARY_KEY_MISMATCH,\n                    description: `Table ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)} has PRIMARY KEY (${applicationTable.primaryKey.map(sqlstring_1.escapeIdentifierWithDoubleQuotes).join(\", \")}) on application, PRIMARY KEY (${tableMeta.primaryKey.columnAliases.map(sqlstring_1.escapeIdentifierWithDoubleQuotes).join(\", \")}) on database`,\n                    tableAlias: applicationTable.alias,\n                    applicationPrimaryKey: [...applicationTable.primaryKey],\n                    databasePrimaryKey: [...tableMeta.primaryKey.columnAliases],\n                });\n            }\n        }\n    }\n    /**\n     * Candidate keys check\n     */\n    const candidateKeysOnDatabaseOnly = tableMeta.candidateKeys.filter(candidateKeyMeta => {\n        if (applicationTable.primaryKey != undefined &&\n            key_1.KeyUtil.isEqual(applicationTable.primaryKey, candidateKeyMeta.columnAliases)) {\n            return false;\n        }\n        const applicationCandidateKey = applicationTable.candidateKeys.find(applicationCandidateKey => {\n            return key_1.KeyUtil.isEqual(applicationCandidateKey, candidateKeyMeta.columnAliases);\n        });\n        return (applicationCandidateKey == undefined);\n    });\n    for (const candidateKey of candidateKeysOnDatabaseOnly) {\n        result.warnings.push({\n            type: schema_validation_warning_1.SchemaValidationWarningType.CANDIDATE_KEY_ON_DATABASE_ONLY,\n            description: `Table ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)} has CANDIDATE KEY (${candidateKey.columnAliases.map(sqlstring_1.escapeIdentifierWithDoubleQuotes).join(\", \")}) on database only`,\n            tableAlias: applicationTable.alias,\n            databaseCandidateKey: [...candidateKey.columnAliases],\n        });\n    }\n    const candidateKeysOnApplicationOnly = applicationTable.candidateKeys.filter(applicationCandidateKey => {\n        if (tableMeta.primaryKey != undefined &&\n            key_1.KeyUtil.isEqual(tableMeta.primaryKey.columnAliases, applicationCandidateKey)) {\n            return false;\n        }\n        const candidateKeyMeta = tableMeta.candidateKeys.find(candidateKeyMeta => {\n            return key_1.KeyUtil.isEqual(applicationCandidateKey, candidateKeyMeta.columnAliases);\n        });\n        return (candidateKeyMeta == undefined);\n    });\n    for (const candidateKey of candidateKeysOnApplicationOnly) {\n        result.errors.push({\n            type: schema_validation_error_1.SchemaValidationErrorType.CANDIDATE_KEY_ON_APPLICATION_ONLY,\n            description: `Table ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)} has CANDIDATE KEY (${candidateKey.map(sqlstring_1.escapeIdentifierWithDoubleQuotes).join(\", \")}) on application only`,\n            tableAlias: applicationTable.alias,\n            applicationCandidateKey: [...candidateKey],\n        });\n    }\n    /**\n     * Tables should really have a candidate key...\n     */\n    if (tableMeta.primaryKey == undefined && tableMeta.candidateKeys.length == 0) {\n        result.errors.push({\n            type: schema_validation_error_1.SchemaValidationErrorType.DATABASE_TABLE_HAS_NO_PRIMARY_OR_CANDIDATE_KEY,\n            description: `Table ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)} has no PRIMARY KEY or CANDIDATE KEY on database`,\n            tableAlias: applicationTable.alias,\n        });\n    }\n    /**\n     * There should only be zero or one auto-increment column on tables.\n     * We validate them here.\n     */\n    const autoIncrementColumnMeta = tableMeta.columns.find(columnMeta => columnMeta.isAutoIncrement);\n    if (autoIncrementColumnMeta == undefined) {\n        if (applicationTable.autoIncrement == undefined) {\n            /**\n             * OK!\n             */\n        }\n        else {\n            /**\n             * + The database has **no** auto-increment column.\n             * + The application has an auto-increment column.\n             *\n             * -----\n             *\n             * + Attempts to `SELECT` are fine.\n             * + Attempts to `INSERT` will fail because `.insertOne()` expects the auto-increment columns to be the same.\n             * + Attempts to `UPDATE` are fine.\n             * + Attempts to `DELETE` are fine.\n             * + Attempts to use as expression are fine.\n             */\n            if (applicationTable.insertEnabled) {\n                result.errors.push({\n                    type: schema_validation_error_1.SchemaValidationErrorType.AUTO_INCREMENT_ON_APPLICATION_ONLY_INSERT_WILL_FAIL,\n                    description: `Column ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)}.${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.autoIncrement)} is auto-increment on application only; INSERTs will fail`,\n                    tableAlias: applicationTable.alias,\n                    columnAlias: applicationTable.autoIncrement,\n                });\n            }\n            else {\n                result.warnings.push({\n                    type: schema_validation_warning_1.SchemaValidationWarningType.AUTO_INCREMENT_ON_APPLICATION_ONLY_INSERT_DISABLED,\n                    description: `Column ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)}.${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.autoIncrement)} is auto-increment on application only; INSERTs will fail but INSERTs are disabled`,\n                    tableAlias: applicationTable.alias,\n                    columnAlias: applicationTable.autoIncrement,\n                });\n            }\n        }\n    }\n    else {\n        if (applicationTable.autoIncrement == undefined) {\n            result.warnings.push({\n                type: schema_validation_warning_1.SchemaValidationWarningType.AUTO_INCREMENT_ON_DATABASE_ONLY,\n                description: `Column ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)}.${sqlstring_1.escapeIdentifierWithDoubleQuotes(autoIncrementColumnMeta.columnAlias)} is auto-increment on database only`,\n                tableAlias: tableMeta.tableAlias,\n                columnAlias: autoIncrementColumnMeta.columnAlias,\n            });\n        }\n        else {\n            if (autoIncrementColumnMeta.columnAlias == applicationTable.autoIncrement) {\n                /**\n                 * OK!\n                 */\n            }\n            else {\n                /**\n                 * The database and application disagree what the auto-increment column is.\n                 *\n                 * + Attempts to `SELECT` are fine.\n                 * + Attempts to `INSERT` will fail because `.insertOne()` expects the auto-increment columns to be the same.\n                 * + Attempts to `UPDATE` are fine.\n                 * + Attempts to `DELETE` are fine.\n                 * + Attempts to use as expression are fine.\n                 */\n                if (applicationTable.insertEnabled) {\n                    result.errors.push({\n                        type: schema_validation_error_1.SchemaValidationErrorType.AUTO_INCREMENT_MISMATCH_INSERT_WILL_FAIL,\n                        description: `Column ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)}.${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.autoIncrement)} is auto-increment on application, ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)}.${sqlstring_1.escapeIdentifierWithDoubleQuotes(autoIncrementColumnMeta.columnAlias)} on database; INSERTs will fail`,\n                        tableAlias: tableMeta.tableAlias,\n                        databaseColumnAlias: autoIncrementColumnMeta.columnAlias,\n                        applicationColumnAlias: applicationTable.autoIncrement,\n                    });\n                }\n                else {\n                    result.warnings.push({\n                        type: schema_validation_warning_1.SchemaValidationWarningType.AUTO_INCREMENT_MISMATCH_INSERT_DISABLED,\n                        description: `Column ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)}.${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.autoIncrement)} is auto-increment on application, ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)}.${sqlstring_1.escapeIdentifierWithDoubleQuotes(autoIncrementColumnMeta.columnAlias)} on database; INSERTs will fail but INSERTs are disabled`,\n                        tableAlias: tableMeta.tableAlias,\n                        databaseColumnAlias: autoIncrementColumnMeta.columnAlias,\n                        applicationColumnAlias: applicationTable.autoIncrement,\n                    });\n                }\n            }\n        }\n    }\n    /**\n     * Validate columns\n     */\n    for (const columnMeta of tableMeta.columns) {\n        const applicationColumn = applicationTable.columns[columnMeta.columnAlias];\n        if (applicationColumn == undefined) {\n            if (applicationTable.insertEnabled) {\n                if (\n                /**\n                 * There's an implicit default/generated value\n                 */\n                columnMeta.isNullable ||\n                    columnMeta.isAutoIncrement ||\n                    /**\n                     * There's an explicit default/generated value\n                     */\n                    columnMeta.generationExpression != undefined ||\n                    columnMeta.explicitDefaultValue != undefined) {\n                    /**\n                     * + Database has column\n                     * + Application **does not** have column\n                     * + Database column has default/generated value\n                     * + `INSERT` is enabled\n                     *\n                     * -----\n                     *\n                     * + Attempts to `SELECT` are fine.\n                     * + Attempts to `INSERT` are fine; will just use default/generated value on database.\n                     * + Attempts to `UPDATE` will never happen; does not exist on application.\n                     * + Attempts to `DELETE` are fine.\n                     * + Attempts to use as expression will never happen; does not exist on application.\n                     *\n                     */\n                    result.warnings.push({\n                        type: schema_validation_warning_1.SchemaValidationWarningType.COLUMN_ON_DATABASE_ONLY_WITH_DEFAULT_OR_GENERATED_VALUE,\n                        description: `Column ${sqlstring_1.escapeIdentifierWithDoubleQuotes(tableMeta.tableAlias)}.${sqlstring_1.escapeIdentifierWithDoubleQuotes(columnMeta.columnAlias)} exists on database only; but has a default or generated value`,\n                        tableAlias: tableMeta.tableAlias,\n                        databaseColumnAlias: columnMeta.columnAlias,\n                        isNullable: columnMeta.isNullable,\n                        isAutoIncrement: columnMeta.isAutoIncrement,\n                        generationExpression: columnMeta.generationExpression,\n                        explicitDefaultValue: columnMeta.explicitDefaultValue,\n                        insertEnabled: applicationTable.insertEnabled,\n                    });\n                }\n                else {\n                    /**\n                     * + Database has column\n                     * + Application **does not** have column\n                     * + Database column **does not** have default/generated value\n                     * + `INSERT` is enabled\n                     *\n                     * -----\n                     *\n                     * + Attempts to `SELECT` are fine.\n                     * + Attempts to `INSERT` will fail; does not exist on application, and no default/generated value on database.\n                     * + Attempts to `UPDATE` will never happen; does not exist on application.\n                     * + Attempts to `DELETE` are fine.\n                     * + Attempts to use as expression will never happen; does not exist on application.\n                     *\n                     */\n                    result.errors.push({\n                        type: schema_validation_error_1.SchemaValidationErrorType.COLUMN_ON_DATABASE_ONLY_INSERT_WILL_FAIL,\n                        description: `Column ${sqlstring_1.escapeIdentifierWithDoubleQuotes(tableMeta.tableAlias)}.${sqlstring_1.escapeIdentifierWithDoubleQuotes(columnMeta.columnAlias)} exists on database only; INSERTs will fail`,\n                        tableAlias: tableMeta.tableAlias,\n                        databaseColumnAlias: columnMeta.columnAlias,\n                        isNullable: columnMeta.isNullable,\n                        isAutoIncrement: columnMeta.isAutoIncrement,\n                        generationExpression: columnMeta.generationExpression,\n                        explicitDefaultValue: columnMeta.explicitDefaultValue,\n                        insertEnabled: applicationTable.insertEnabled,\n                    });\n                }\n            }\n            else {\n                /**\n                 * + Database has column\n                 * + Application **does not** have column\n                 * + `INSERT` is disabled\n                 *\n                 * -----\n                 *\n                 * + Attempts to `SELECT` are fine.\n                 * + Attempts to `INSERT` will never happen; it is disabled.\n                 * + Attempts to `UPDATE` will never happen; does not exist on application.\n                 * + Attempts to `DELETE` are fine.\n                 * + Attempts to use as expression will never happen; does not exist on application.\n                 *\n                 */\n                result.warnings.push({\n                    type: schema_validation_warning_1.SchemaValidationWarningType.COLUMN_ON_DATABASE_ONLY_INSERT_DISABLED,\n                    description: `Column ${sqlstring_1.escapeIdentifierWithDoubleQuotes(tableMeta.tableAlias)}.${sqlstring_1.escapeIdentifierWithDoubleQuotes(columnMeta.columnAlias)} exists on database only; INSERTs may fail but INSERTs are disabled`,\n                    tableAlias: tableMeta.tableAlias,\n                    databaseColumnAlias: columnMeta.columnAlias,\n                    isNullable: columnMeta.isNullable,\n                    isAutoIncrement: columnMeta.isAutoIncrement,\n                    generationExpression: columnMeta.generationExpression,\n                    explicitDefaultValue: columnMeta.explicitDefaultValue,\n                    insertEnabled: applicationTable.insertEnabled,\n                });\n            }\n        }\n        else {\n            const validateColumnResult = validate_column_1.validateColumn(applicationTable, applicationColumn, columnMeta);\n            result.errors.push(...validateColumnResult.errors);\n            result.warnings.push(...validateColumnResult.warnings);\n        }\n    }\n    for (const columnAlias of Object.keys(applicationTable.columns)) {\n        const applicationColumn = applicationTable.columns[columnAlias];\n        const columnMeta = tableMeta.columns.find(columnMeta => columnMeta.columnAlias == columnAlias);\n        if (columnMeta == undefined) {\n            /**\n             *\n             * + Attempts to `SELECT` will fail.\n             * + Attempts to `INSERT` will fail.\n             * + Attempts to `UPDATE` will fail.\n             * + Attempts to `DELETE` are fine.\n             * + Attempts to use as expression will fail.\n             *\n             */\n            result.errors.push({\n                type: schema_validation_error_1.SchemaValidationErrorType.COLUMN_ON_APPLICATION_ONLY,\n                description: `Column ${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationTable.alias)}.${sqlstring_1.escapeIdentifierWithDoubleQuotes(applicationColumn.columnAlias)} exists on application only`,\n                tableAlias: applicationTable.alias,\n                applicationColumnAlias: applicationColumn.columnAlias,\n            });\n        }\n    }\n    return result;\n}\nexports.validateTable = validateTable;\n//# sourceMappingURL=validate-table.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SelectClauseUtil = require(\"./util\");\nexports.SelectClauseUtil = SelectClauseUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./value-from-built-in-expr\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst expr_1 = require(\"../../../expr\");\nconst expr_select_item_1 = require(\"../../../expr-select-item\");\nconst column_1 = require(\"../../../column\");\nexports.SELECT_VALUE_ALIAS = \"value\";\nfunction valueFromBuiltInExpr(builtInExpr) {\n    if (column_1.ColumnUtil.isColumn(builtInExpr) || expr_select_item_1.ExprSelectItemUtil.isExprSelectItem(builtInExpr)) {\n        return [builtInExpr];\n    }\n    else {\n        return [\n            expr_1.ExprUtil.as(expr_1.ExprUtil.fromBuiltInExpr(builtInExpr), exports.SELECT_VALUE_ALIAS)\n        ];\n    }\n}\nexports.valueFromBuiltInExpr = valueFromBuiltInExpr;\n//# sourceMappingURL=value-from-built-in-expr.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./constructor\"));\n__export(require(\"./operation\"));\n__export(require(\"./predicate\"));\n__export(require(\"./query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./left-compound\"));\n__export(require(\"./select-value\"));\n__export(require(\"./select\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst column_1 = require(\"../../../column\");\nconst expr_select_item_1 = require(\"../../../expr-select-item\");\nconst column_map_1 = require(\"../../../column-map\");\nconst column_ref_1 = require(\"../../../column-ref\");\n/**\n * Assumes `A` is shorter than, or the same length as `B`\n */\nfunction leftCompound(a, b) {\n    const result = [];\n    for (let i = 0; i < a.length; ++i) {\n        const itemA = a[i];\n        const itemB = b[i];\n        if (column_1.ColumnUtil.isColumn(itemA)) {\n            if (column_1.ColumnUtil.isColumn(itemB) || expr_select_item_1.ExprSelectItemUtil.isExprSelectItem(itemB)) {\n                result.push(column_1.ColumnUtil.withType(itemA, tm.or(itemA.mapper, itemB.mapper)));\n            }\n            else {\n                throw new Error(`Expected index ${i} to be Column or ExprSelectItem`);\n            }\n        }\n        else if (expr_select_item_1.ExprSelectItemUtil.isExprSelectItem(itemA)) {\n            if (column_1.ColumnUtil.isColumn(itemB) || expr_select_item_1.ExprSelectItemUtil.isExprSelectItem(itemB)) {\n                result.push(expr_select_item_1.ExprSelectItemUtil.withType(itemA, tm.or(itemA.mapper, itemB.mapper)));\n            }\n            else {\n                throw new Error(`Expected index ${i} to be Column or ExprSelectItem`);\n            }\n        }\n        else if (column_map_1.ColumnMapUtil.isColumnMap(itemA)) {\n            if (column_map_1.ColumnMapUtil.isColumnMap(itemB)) {\n                result.push(column_map_1.ColumnMapUtil.compound(itemA, itemB));\n            }\n            else {\n                throw new Error(`Expected index ${i} to be ColumnMap`);\n            }\n        }\n        else if (column_ref_1.ColumnRefUtil.isColumnRef(itemA)) {\n            if (column_ref_1.ColumnRefUtil.isColumnRef(itemB)) {\n                result.push(column_ref_1.ColumnRefUtil.compound(itemA, itemB));\n            }\n            else {\n                throw new Error(`Expected index ${i} to be ColumnMap`);\n            }\n        }\n        else {\n            throw new Error(`Unknown SELECT item at index ${i}`);\n        }\n    }\n    return result;\n}\nexports.leftCompound = leftCompound;\n//# sourceMappingURL=left-compound.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst select_1 = require(\"./select\");\nconst constructor_1 = require(\"../constructor\");\n/**\n * Convenience function for,\n * ```ts\n *  myQuery\n *      .select(() => [myExpr.as(\"value\")])\n * ```\n *\n * Intended usage,\n * ```ts\n *  myQuery\n *      .selectValue(() => myExpr)\n * ```\n */\nfunction selectValue(fromClause, groupByClause, selectClause, selectValueDelegate) {\n    return select_1.select(fromClause, groupByClause, selectClause, columns => constructor_1.valueFromBuiltInExpr(selectValueDelegate(columns)));\n}\nexports.selectValue = selectValue;\n//# sourceMappingURL=select-value.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_ref_1 = require(\"../../../column-ref\");\nconst query_1 = require(\"../query\");\nconst expr_select_item_1 = require(\"../../../expr-select-item\");\nconst predicate_1 = require(\"../predicate\");\n/**\n * Returns the MySQL equivalent of `...selectClause, ...selectClauseDelegate(fromClause)`\n *\n * @param fromClause\n * @param selectClause\n * @param selectDelegate\n *\n * @todo This should only be allowed **BEFORE** the `COMPOUND QUERY` clause.\n * If we `SELECT` after the `COMPOUND QUERY` clause, it'll change the number of columns, leading to bugs.\n */\nfunction select(fromClause, groupByClause, selectClause, selectDelegate) {\n    const columns = query_1.allowedColumnRef(fromClause);\n    const selects = selectDelegate(column_ref_1.ColumnRefUtil.tryFlatten(columns));\n    predicate_1.assertValidColumnIdentifier(selectClause, selects);\n    if (groupByClause == undefined) {\n        if (selects.some(selectItem => expr_select_item_1.ExprSelectItemUtil.isExprSelectItem(selectItem) && selectItem.isAggregate) ||\n            (selectClause != undefined &&\n                selectClause.some(selectItem => expr_select_item_1.ExprSelectItemUtil.isExprSelectItem(selectItem) && selectItem.isAggregate))) {\n            predicate_1.assertValidUsedRef_Aggregate(fromClause, selects);\n            predicate_1.assertValidUsedRef_NonAggregate(fromClause, [], selects);\n        }\n        else {\n            predicate_1.assertValidUsedRef(fromClause, selects);\n        }\n    }\n    else {\n        predicate_1.assertValidUsedRef_Aggregate(fromClause, selects);\n        predicate_1.assertValidUsedRef_NonAggregate(fromClause, groupByClause, selects);\n    }\n    return (selectClause == undefined ?\n        selects :\n        [...selectClause, ...selects]);\n}\nexports.select = select;\n//# sourceMappingURL=select.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_identifier_1 = require(\"../../../column-identifier\");\nfunction assertValidColumnIdentifier(selectClause, selects) {\n    const selectsIdentifiers = column_identifier_1.ColumnIdentifierUtil.fromSelectClause(selects);\n    column_identifier_1.ColumnIdentifierArrayUtil.assertNoDuplicate(selectsIdentifiers);\n    if (selectClause != undefined) {\n        const selectClauseIdentifiers = column_identifier_1.ColumnIdentifierUtil.fromSelectClause(selectClause);\n        column_identifier_1.ColumnIdentifierArrayUtil.assertDisjoint(selectClauseIdentifiers, selectsIdentifiers);\n    }\n}\nexports.assertValidColumnIdentifier = assertValidColumnIdentifier;\n//# sourceMappingURL=assert-valid-column-identifier.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst expr_select_item_1 = require(\"../../../expr-select-item\");\nconst used_ref_1 = require(\"../../../used-ref\");\nconst query_1 = require(\"../query\");\nfunction assertValidUsedRef_Aggregate(fromClause, selects) {\n    const columns = query_1.allowedColumnRef(fromClause);\n    for (const selectItem of selects) {\n        if (expr_select_item_1.ExprSelectItemUtil.isExprSelectItem(selectItem)) {\n            if (selectItem.isAggregate) {\n                used_ref_1.UsedRefUtil.assertAllowed({ columns }, selectItem.usedRef);\n            }\n        }\n    }\n}\nexports.assertValidUsedRef_Aggregate = assertValidUsedRef_Aggregate;\n//# sourceMappingURL=assert-valid-used-ref-aggregate.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst expr_select_item_1 = require(\"../../../expr-select-item\");\nconst used_ref_1 = require(\"../../../used-ref\");\nconst column_1 = require(\"../../../column\");\nconst column_map_1 = require(\"../../../column-map\");\nconst query_1 = require(\"../query\");\nconst column_identifier_ref_1 = require(\"../../../column-identifier-ref\");\nfunction assertValidUsedRef_NonAggregate(fromClause, groupByClause, selects) {\n    const columns = query_1.allowedNonAggregateColumnRef(fromClause, groupByClause);\n    for (const selectItem of selects) {\n        if (expr_select_item_1.ExprSelectItemUtil.isExprSelectItem(selectItem)) {\n            if (!selectItem.isAggregate) {\n                used_ref_1.UsedRefUtil.assertAllowed({ columns }, selectItem.usedRef);\n            }\n        }\n        else if (column_1.ColumnUtil.isColumn(selectItem)) {\n            column_identifier_ref_1.ColumnIdentifierRefUtil.assertHasColumnIdentifier(columns, selectItem);\n        }\n        else if (column_map_1.ColumnMapUtil.isColumnMap(selectItem)) {\n            used_ref_1.UsedRefUtil.assertAllowed({ columns }, used_ref_1.UsedRefUtil.fromColumnMap(selectItem));\n        }\n        else {\n            used_ref_1.UsedRefUtil.assertAllowed({ columns }, used_ref_1.UsedRefUtil.fromColumnRef(selectItem));\n        }\n    }\n}\nexports.assertValidUsedRef_NonAggregate = assertValidUsedRef_NonAggregate;\n//# sourceMappingURL=assert-valid-used-ref-non-aggregate.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst expr_select_item_1 = require(\"../../../expr-select-item\");\nconst used_ref_1 = require(\"../../../used-ref\");\nconst column_1 = require(\"../../../column\");\nconst column_map_1 = require(\"../../../column-map\");\nconst query_1 = require(\"../query\");\nconst column_identifier_ref_1 = require(\"../../../column-identifier-ref\");\nfunction assertValidUsedRef(fromClause, selects) {\n    const columns = query_1.allowedColumnRef(fromClause);\n    for (const selectItem of selects) {\n        if (expr_select_item_1.ExprSelectItemUtil.isExprSelectItem(selectItem)) {\n            used_ref_1.UsedRefUtil.assertAllowed({ columns }, selectItem.usedRef);\n        }\n        else if (column_1.ColumnUtil.isColumn(selectItem)) {\n            column_identifier_ref_1.ColumnIdentifierRefUtil.assertHasColumnIdentifier(columns, selectItem);\n        }\n        else if (column_map_1.ColumnMapUtil.isColumnMap(selectItem)) {\n            used_ref_1.UsedRefUtil.assertAllowed({ columns }, used_ref_1.UsedRefUtil.fromColumnMap(selectItem));\n        }\n        else {\n            used_ref_1.UsedRefUtil.assertAllowed({ columns }, used_ref_1.UsedRefUtil.fromColumnRef(selectItem));\n        }\n    }\n}\nexports.assertValidUsedRef = assertValidUsedRef;\n//# sourceMappingURL=assert-valid-used-ref.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./assert-valid-column-identifier\"));\n__export(require(\"./assert-valid-used-ref-aggregate\"));\n__export(require(\"./assert-valid-used-ref-non-aggregate\"));\n__export(require(\"./assert-valid-used-ref\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_ref_1 = require(\"../../../column-ref\");\nconst used_ref_1 = require(\"../../../used-ref\");\nfunction allowedNonAggregateColumnRef(fromClause, groupByClause) {\n    const outer = column_ref_1.ColumnRefUtil.fromJoinArray(fromClause.outerQueryJoins == undefined ?\n        [] :\n        fromClause.outerQueryJoins);\n    const inner = column_ref_1.ColumnRefUtil.extractColumnIdentifiers(column_ref_1.ColumnRefUtil.fromJoinArray(fromClause.currentJoins == undefined ?\n        [] :\n        fromClause.currentJoins), groupByClause);\n    return column_ref_1.ColumnRefUtil.intersect(outer, inner);\n}\nexports.allowedNonAggregateColumnRef = allowedNonAggregateColumnRef;\nfunction allowedNonAggregateUsedRef(fromClause, groupByClause) {\n    return used_ref_1.UsedRefUtil.fromColumnRef(allowedNonAggregateColumnRef(fromClause, groupByClause));\n}\nexports.allowedNonAggregateUsedRef = allowedNonAggregateUsedRef;\n//# sourceMappingURL=allowed-non-aggregate-used-ref.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_clause_1 = require(\"../../../from-clause\");\nfunction allowedColumnRef(fromClause) {\n    return from_clause_1.FromClauseUtil.allowedColumnRef(fromClause, { isLateral: true });\n}\nexports.allowedColumnRef = allowedColumnRef;\nfunction allowedUsedRef(fromClause) {\n    return from_clause_1.FromClauseUtil.allowedUsedRef(fromClause, { isLateral: true });\n}\nexports.allowedUsedRef = allowedUsedRef;\n//# sourceMappingURL=allowed-used-ref.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst select_item_1 = require(\"../../../select-item\");\nconst column_ref_1 = require(\"../../../column-ref\");\nfunction duplicateColumnAlias(selectClause) {\n    const duplicateTracker = {};\n    const result = [];\n    for (const item of selectClause) {\n        for (const columnAlias of select_item_1.SelectItemUtil.columnAlias(item)) {\n            const isDuplicate = duplicateTracker[columnAlias];\n            if (isDuplicate === undefined) {\n                /**\n                 * We had never encountered it, and now we have.\n                 * But it isn't a duplicate.\n                 */\n                duplicateTracker[columnAlias] = false;\n            }\n            else if (!isDuplicate) {\n                /**\n                 * We had encountered it when it wasn't a duplicate.\n                 * Now, it is a duplicate.\n                 */\n                duplicateTracker[columnAlias] = true;\n                result.push(columnAlias);\n            }\n        }\n        if (column_ref_1.ColumnRefUtil.isColumnRef(item)) {\n            for (const columnAlias of column_ref_1.ColumnRefUtil.duplicateColumnAlias(item)) {\n                const isDuplicate = duplicateTracker[columnAlias];\n                if (isDuplicate === undefined) {\n                    /**\n                     * We had never encountered it, and now we have.\n                     * But it isn't a duplicate.\n                     */\n                    duplicateTracker[columnAlias] = false;\n                }\n                else if (!isDuplicate) {\n                    /**\n                     * We had encountered it when it wasn't a duplicate.\n                     * Now, it is a duplicate.\n                     */\n                    duplicateTracker[columnAlias] = true;\n                    result.push(columnAlias);\n                }\n            }\n        }\n    }\n    return result;\n}\nexports.duplicateColumnAlias = duplicateColumnAlias;\n//# sourceMappingURL=duplicate-column-alias.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./allowed-non-aggregate-used-ref\"));\n__export(require(\"./allowed-used-ref\"));\n__export(require(\"./duplicate-column-alias\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SelectItemUtil = require(\"./util\");\nexports.SelectItemUtil = SelectItemUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./predicate\"));\n__export(require(\"./query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./is-single-value-select-item\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_1 = require(\"../../../column\");\nconst expr_select_item_1 = require(\"../../../expr-select-item\");\nfunction isSingleValueSelectItem(x) {\n    return (column_1.ColumnUtil.isColumn(x) ||\n        expr_select_item_1.ExprSelectItemUtil.isExprSelectItem(x));\n}\nexports.isSingleValueSelectItem = isSingleValueSelectItem;\n//# sourceMappingURL=is-single-value-select-item.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_1 = require(\"../../../column\");\nconst expr_select_item_1 = require(\"../../../expr-select-item\");\nconst column_map_1 = require(\"../../../column-map\");\nconst column_ref_1 = require(\"../../../column-ref\");\nfunction columnAlias(item) {\n    if (column_1.ColumnUtil.isColumn(item)) {\n        return [item.columnAlias];\n    }\n    else if (expr_select_item_1.ExprSelectItemUtil.isExprSelectItem(item)) {\n        return [item.alias];\n    }\n    else if (column_map_1.ColumnMapUtil.isColumnMap(item)) {\n        return column_map_1.ColumnMapUtil.columnAlias(item);\n    }\n    else if (column_ref_1.ColumnRefUtil.isColumnRef(item)) {\n        return column_ref_1.ColumnRefUtil.columnAlias(item);\n    }\n    else {\n        throw new Error(\"Unknown select item\");\n    }\n}\nexports.columnAlias = columnAlias;\n//# sourceMappingURL=column-alias.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./column-alias\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./sort-direction\"));\nconst SortDirectionUtil = require(\"./util\");\nexports.SortDirectionUtil = SortDirectionUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * The direction to sort the result set\n */\nvar SortDirection;\n(function (SortDirection) {\n    /**\n     * Sorts the result set in ascending order\n     */\n    SortDirection.ASC = \"ASC\";\n    /**\n     * Sorts the result set in descending order\n     */\n    SortDirection.DESC = \"DESC\";\n})(SortDirection = exports.SortDirection || (exports.SortDirection = {}));\n;\n//# sourceMappingURL=sort-direction.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./predicate\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./is-sort-direction\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sort_direction_1 = require(\"../../sort-direction\");\nfunction isSortDirection(mixed) {\n    return (mixed == sort_direction_1.SortDirection.ASC ||\n        mixed == sort_direction_1.SortDirection.DESC);\n}\nexports.isSortDirection = isSortDirection;\n//# sourceMappingURL=is-sort-direction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst ID_BACKTICK_GLOBAL_REGEXP = /`/g;\nconst ID_DOUBLE_QUOTE_GLOBAL_REGEXP = /\"/g;\nconst CHARS_GLOBAL_REGEXP = /[\\0\\b\\t\\n\\r\\x1a\\\"\\'\\\\]/g; // eslint-disable-line no-control-regex\nconst CHARS_ESCAPE_MAP = {\n    \"\\0\": \"\\\\0\",\n    \"\\b\": \"\\\\b\",\n    \"\\t\": \"\\\\t\",\n    \"\\n\": \"\\\\n\",\n    \"\\r\": \"\\\\r\",\n    \"\\x1a\": \"\\\\Z\",\n    \"\\\"\": \"\\\\\\\"\",\n    \"\\'\": \"\\\\\\'\",\n    \"\\\\\": \"\\\\\\\\\",\n};\n/**\n * Escapes a MySQL identifier.\n *\n * For example,\n * + Database name\n * + Table name\n * + Column name\n * + Alias\n *\n * -----\n *\n * ```ts\n * escapeIdentifier(\"x\") == \"`x`\"\n * escapeIdentifier(\"x.y\") == \"`x.y`\"\n * escapeIdentifier(\"x`x.y\") == \"`x``x.y`\"\n * ```\n *\n * @param rawIdentifier - The identifier to escape\n *\n * @todo Refactor this.\n * + MySQL uses backticks.\n * + PostgreSQL uses double quotes. (Following the same rules as MySQL)\n * + MySQL can be made to use double quotes by enabling `ANSI_QUOTES` but this is disabled by default\n *\n * Each database adapter will need to create their own `escaoeIdentifier` function\n * and pass it around.\n *\n * A pain in the butt. Necessary, however.\n *\n * -----\n *\n * Another option would be forcing the MySQL adapter to always run a SQL query\n * to enable `ANSI_QUOTES`...\n *\n * Definitely less of a hassle there.\n *\n * @deprecated Use the `Identifier` AST Node instead\n */\nfunction escapeIdentifierWithBackticks(rawIdentifier) {\n    return (\"`\" +\n        String(rawIdentifier).replace(ID_BACKTICK_GLOBAL_REGEXP, \"``\") +\n        \"`\");\n}\nexports.escapeIdentifierWithBackticks = escapeIdentifierWithBackticks;\nfunction escapeIdentifierWithDoubleQuotes(rawIdentifier) {\n    return (\"\\\"\" +\n        String(rawIdentifier).replace(ID_DOUBLE_QUOTE_GLOBAL_REGEXP, \"\\\"\\\"\") +\n        \"\\\"\");\n}\nexports.escapeIdentifierWithDoubleQuotes = escapeIdentifierWithDoubleQuotes;\nfunction tryUnescapeIdentifierWithDoubleQuotes(rawIdentifier) {\n    rawIdentifier = rawIdentifier.trim();\n    if (rawIdentifier.startsWith(`\"`) && rawIdentifier.endsWith(`\"`)) {\n        rawIdentifier = rawIdentifier.substr(1, rawIdentifier.length - 2);\n        return rawIdentifier.replace(/\"\"/g, `\"`);\n    }\n    else {\n        return rawIdentifier;\n    }\n}\nexports.tryUnescapeIdentifierWithDoubleQuotes = tryUnescapeIdentifierWithDoubleQuotes;\n/**\n * Escapes a MySQL value.\n *\n * Does not handle `Date` as timezones are a pain.\n *\n * @param rawValue - The value to escape\n */\nfunction escapeValue(rawValue) {\n    if (rawValue === null) {\n        return \"NULL\";\n    }\n    if (tm.TypeUtil.isBigInt(rawValue)) {\n        /**\n         * Max `BIGINT SIGNED` value: `SELECT 9223372036854775807+9223372036854775807`\n         *\n         * + MySQL      : `SELECT 9223372036854775807+9223372036854775807`; Error, out of range of bigint signed value\n         * + PostgreSQL : `SELECT 9223372036854775807+9223372036854775807`; Error, out of range of bigint signed value\n         * + SQLite     : `SELECT 9223372036854775807+9223372036854775807`; `18446744073709552000` (incorrect value)\n         * + Expected   : `18446744073709551614`\n         *\n         * -----\n         *\n         * + MySQL      : `SELECT 18446744073709551615+18446744073709551615`; Error, out of range of bigint unsigned value\n         * + PostgreSQL : `SELECT 18446744073709551615+18446744073709551615`; `36893488147419103230` (DECIMAL, not bigint unsigned)\n         * + SQLite     : `SELECT 18446744073709551615+18446744073709551615`; `36893488147419103000` (incorrect value)\n         * + Expected   : `36893488147419103230`\n         *\n         * PostgreSQL and SQLite do not support `BIGINT UNSIGNED`.\n         * Selecting an integer larger than bigint signed in PostgreSQL will give you a `DECIMAL` value.\n         *\n         * @todo Fix this\n         */\n        return String(rawValue);\n    }\n    switch (typeof rawValue) {\n        case \"boolean\": {\n            return rawValue ?\n                \"TRUE\" :\n                \"FALSE\";\n        }\n        case \"number\": {\n            if (!isFinite(rawValue)) {\n                return \"NULL\";\n            }\n            const result = String(rawValue);\n            if (result.indexOf(\"e\") < 0) {\n                /**\n                 * We add `e0` at the end to signal to the DBMS that this is a double value.\n                 * Not a `DECIMAL` value.\n                 */\n                /**\n                 * + MySQL      : `SELECT 1e300`; `1e300`\n                 * + PostgreSQL : `SELECT 1e300`; `1000000000...` (total 300 zeroes) (DECIMAL)\n                 * + SQLite     : `SELECT 1e300`; `1e300`\n                 *\n                 * -----\n                 *\n                 * PostgreSQL:\n                 * ```sql\n                 *  SELECT\n                 *      pg_typeof(1e19), -- numeric\n                 *      pg_typeof(1e1),  -- numeric\n                 *      pg_typeof(10)    -- integer\n                 * ```\n                 *\n                 * SQLite:\n                 * ```sql\n                 *  SELECT\n                 *      typeof(1e19), -- real\n                 *      typeof(1e1),  -- real\n                 *      typeof(10)    -- integer\n                 * ```\n                 */\n                return result + \"e0\";\n            }\n            else {\n                return result;\n            }\n        }\n        case \"object\": {\n            if (rawValue instanceof Uint8Array) {\n                return uint8ArrayToString(rawValue);\n            }\n            else {\n                throw new Error(`Don't know how to escape non-Uint8Array object`);\n            }\n        }\n        default: {\n            throw new Error(`Don't know how to escape ${typeof rawValue}`);\n        }\n    }\n}\nexports.escapeValue = escapeValue;\n;\n//https://stackoverflow.com/questions/40031688/javascript-arraybuffer-to-hex\nfunction buf2hex(buffer) {\n    return Array.prototype.map\n        .call(new Uint8Array(buffer), \n    //Should always return a string of length 2\n    x => (\"0\" + x.toString(16)).slice(-2))\n        .join(\"\");\n}\nfunction uint8ArrayToString(buffer) {\n    return \"X\" + cStyleEscapeString(buf2hex(buffer));\n}\n;\n/**\n * Only MySQL supports C-style escapes (using the backslash character).\n */\nfunction cStyleEscapeString(rawString) {\n    let result = \"\";\n    let chunkIndex = CHARS_GLOBAL_REGEXP.lastIndex = 0;\n    let match = CHARS_GLOBAL_REGEXP.exec(rawString);\n    while (match != undefined) {\n        const escapedChar = CHARS_ESCAPE_MAP[match[0]];\n        if (escapedChar == undefined) {\n            throw new Error(`Unknown escapable character ${match[0]}`);\n        }\n        result += rawString.slice(chunkIndex, match.index) + escapedChar;\n        chunkIndex = CHARS_GLOBAL_REGEXP.lastIndex;\n        match = CHARS_GLOBAL_REGEXP.exec(rawString);\n    }\n    if (chunkIndex === 0) {\n        //Nothing was escaped\n        return \"'\" + rawString + \"'\";\n    }\n    if (chunkIndex < rawString.length) {\n        return \"'\" + result + rawString.slice(chunkIndex) + \"'\";\n    }\n    return \"'\" + result + \"'\";\n}\nexports.cStyleEscapeString = cStyleEscapeString;\n/**\n * PostgreSQL and SQLite use Pascal-style escapes\n */\nfunction pascalStyleEscapeString(rawString) {\n    const result = rawString.replace(/\\'/g, `''`);\n    return \"'\" + result + \"'\";\n}\nexports.pascalStyleEscapeString = pascalStyleEscapeString;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./zero-pad\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n    zeroPad(1, 4)     === \"0001\"\n    zeroPad(34, 4)    === \"0034\"\n    zeroPad(678, 4)   === \"0678\"\n    zeroPad(1337, 4)  === \"1337\"\n    zeroPad(92678, 4) === \"92678\"\n*/\nfunction zeroPad(num, length) {\n    const str = num.toString();\n    if (str.length < length) {\n        return \"0\".repeat(length - str.length) + str;\n    }\n    else {\n        return str;\n    }\n}\nexports.zeroPad = zeroPad;\nfunction trailingZeroPad(num, length) {\n    const str = num.toString();\n    if (str.length < length) {\n        return str + \"0\".repeat(length - str.length);\n    }\n    else {\n        return str;\n    }\n}\nexports.trailingZeroPad = trailingZeroPad;\n//# sourceMappingURL=zero-pad.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SuperKeyUtil = require(\"./util\");\nexports.SuperKeyUtil = SuperKeyUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./mapper\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst column_map_1 = require(\"../../../column-map\");\nconst type_util_1 = require(\"../../../type-util\");\nfunction mapper(table) {\n    return tm.unsafeOr(...table.candidateKeys.map((candidateKey) => {\n        /**\n         * This usage of `tm.deepMerge()` is safe.\n         * This is not true, in general.\n         *\n         * The two objects we'll be deep merging do not share any\n         * properties.\n         */\n        return tm.deepMerge(column_map_1.ColumnMapUtil.mapper(type_util_1.pickOwnEnumerable(table.columns, candidateKey)), column_map_1.ColumnMapUtil.partialMapper(type_util_1.omitOwnEnumerable(table.columns, candidateKey)));\n    }));\n}\nexports.mapper = mapper;\n//# sourceMappingURL=mapper.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./table-where\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst execution_1 = require(\"../execution\");\nconst table_1 = require(\"../table\");\nconst ExprLib = require(\"../expr-library\");\n/**\n * @todo Implement something like `TableWhereOrderBy`?\n *\n * `.fetchAll()` is not provided here\n * because \"proper\" usage would minimally require,\n * + `ORDER BY` clause - For deterministic ordering\n * + `LIMIT` clause - To prevent accidental OOMs\n *\n * `.paginate()`, `.emulatedCursor()` are not provided here\n * because \"proper\" usage of them would minimally require,\n * + `ORDER BY` clause - For deterministic ordering\n *\n */\n/**\n * @todo Better name\n * This is basically a `table` + `WHERE` clause.\n */\nclass TableWhere {\n    constructor(table, whereDelegate) {\n        this.table = table;\n        this.whereDelegate = whereDelegate;\n    }\n    where(whereDelegate) {\n        return new TableWhere(this.table, (columns) => {\n            return ExprLib.and(this.whereDelegate(columns), whereDelegate(columns));\n        });\n    }\n    assertExists(connection) {\n        return table_1.TableUtil.assertExists(this.table, connection, this.whereDelegate);\n    }\n    exists(connection) {\n        return table_1.TableUtil.exists(this.table, connection, this.whereDelegate);\n    }\n    fetchOne(connection, selectDelegate) {\n        return table_1.TableUtil.__fetchOneHelper(this.table, connection, this.whereDelegate, selectDelegate);\n    }\n    fetchValue(connection, selectValueDelegate) {\n        return table_1.TableUtil.fetchValue(this.table, connection, this.whereDelegate, selectValueDelegate);\n    }\n    delete(connection) {\n        return execution_1.ExecutionUtil.delete(this.table, connection, this.whereDelegate);\n    }\n    deleteOne(connection) {\n        return execution_1.ExecutionUtil.deleteOne(this.table, connection, this.whereDelegate);\n    }\n    deleteZeroOrOne(connection) {\n        return execution_1.ExecutionUtil.deleteZeroOrOne(this.table, connection, this.whereDelegate);\n    }\n    update(connection, assignmentMapDelegate) {\n        return execution_1.ExecutionUtil.update(this.table, connection, this.whereDelegate, assignmentMapDelegate);\n    }\n    updateOne(connection, assignmentMapDelegate) {\n        return execution_1.ExecutionUtil.updateOne(this.table, connection, this.whereDelegate, assignmentMapDelegate);\n    }\n    updateZeroOrOne(connection, assignmentMapDelegate) {\n        return execution_1.ExecutionUtil.updateZeroOrOne(this.table, connection, this.whereDelegate, assignmentMapDelegate);\n    }\n    /**\n     * The `table` must have at least one `candidateKey` to use this method.\n     *\n     * Internally,\n     * 1. Fetch the candidate key of the row specified by the `WHERE` clause.\n     * 2. Calculate what the new candidate key will be after the `UPDATE` statement is run.\n     *    (if the candidate key will not be updated, this step is skipped)\n     * 3. Run the `UPDATE` statement.\n     * 4. Fetch the row using the new candidate key.\n     *\n     * This algorithm will probably fail if you have triggers that modify the candidate key\n     * `ON UPDATE`.\n     */\n    updateAndFetchOne(connection, assignmentMapDelegate) {\n        return execution_1.ExecutionUtil.updateAndFetchOne(this.table, connection, this.whereDelegate, assignmentMapDelegate);\n    }\n    /**\n     * The `table` must have at least one `candidateKey` to use this method.\n     *\n     * Internally,\n     * 1. Fetch the candidate key of the row specified by the `WHERE` clause.\n     * 2. Calculate what the new candidate key will be after the `UPDATE` statement is run.\n     *    (if the candidate key will not be updated, this step is skipped)\n     * 3. Run the `UPDATE` statement.\n     * 4. Fetch the row using the new candidate key (if any were found during the `UPDATE`)\n     *\n     * This algorithm will probably fail if you have triggers that modify the candidate key\n     * `ON UPDATE`.\n     */\n    updateAndFetchZeroOrOne(connection, assignmentMapDelegate) {\n        return execution_1.ExecutionUtil.updateAndFetchZeroOrOne(this.table, connection, this.whereDelegate, assignmentMapDelegate);\n    }\n}\nexports.TableWhere = TableWhere;\n//# sourceMappingURL=table-where.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./table-impl\"));\nconst TableUtil = require(\"./util\");\nexports.TableUtil = TableUtil;\nconst util_1 = require(\"./util\");\nexports.table = util_1.fromTableAlias;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst TableUtil = require(\"./util\");\nconst execution_1 = require(\"../execution\");\nconst ExprLib = require(\"../expr-library\");\nconst table_where_1 = require(\"../table-where\");\nclass Table {\n    /**\n     * You should never need to explicitly instantiate a `Table`.\n     * Use `table()` instead.\n     *\n     * @param data\n     * @param unaliasedAst\n     */\n    constructor(data, unaliasedAst) {\n        this.isLateral = data.isLateral;\n        this.alias = data.alias;\n        this.columns = data.columns;\n        this.usedRef = data.usedRef;\n        this.unaliasedAst = unaliasedAst;\n        this.insertEnabled = data.insertEnabled;\n        this.deleteEnabled = data.deleteEnabled;\n        this.autoIncrement = data.autoIncrement;\n        this.id = data.id;\n        this.primaryKey = data.primaryKey;\n        this.candidateKeys = data.candidateKeys;\n        this.generatedColumns = data.generatedColumns;\n        this.nullableColumns = data.nullableColumns;\n        this.explicitDefaultValueColumns = data.explicitDefaultValueColumns;\n        this.mutableColumns = data.mutableColumns;\n        this.explicitAutoIncrementValueEnabled = data.explicitAutoIncrementValueEnabled;\n    }\n    /**\n     * Makes all non-generated columns mutable.\n     *\n     * + Mutable columns may be modified with `UPDATE` statements using this library.\n     * + Immutable columns may not be modified with this library\n     *   (but could still be modified outside of this library)\n     */\n    addAllMutable() {\n        return TableUtil.addAllMutable(this);\n    }\n    /**\n     * Adds a candidate key to the table.\n     *\n     * A candidate key is a minimal set of columns that uniquely identifies a row in a table.\n     *\n     * + A table may have zero-to-many candidate keys. (recommended to have at least one)\n     * + A candidate key cannot be a subset of other candidate keys.\n     * + A candidate key cannot be a superset of other candidate keys.\n     * + A candidate key can intersect other candidate keys.\n     * + A candidate key can be disjoint from other candidate keys.\n     */\n    addCandidateKey(delegate) {\n        return TableUtil.addCandidateKey(this, delegate);\n    }\n    addColumns(rawColumns) {\n        return TableUtil.addColumns(this, rawColumns);\n    }\n    /**\n     * Tells the library that these columns have explicit `DEFAULT` values.\n     *\n     * An example of an \"explicit\" default value,\n     * ```sql\n     * `createdAt` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP\n     * ```\n     *\n     * + Columns with server default values are optional with `INSERT` statements.\n     * + Generated columns have implicit default values.\n     * + Nullable columns have implicit default values.\n     * + `AUTO_INCREMENT` columns have implicit default values\n     */\n    addExplicitDefaultValue(delegate) {\n        return TableUtil.addExplicitDefaultValue(this, delegate);\n    }\n    /**\n     * Adds a `GENERATED` column to the table.\n     *\n     * + Setting generated column values will not be allowed with `INSERT` statements.\n     * + Updating generated column values will also not be allowed with `UPDATE` statements.\n     */\n    addGenerated(delegate) {\n        return TableUtil.addGenerated(this, delegate);\n    }\n    /**\n     * Lets these columns be updated through this library.\n     */\n    addMutable(delegate) {\n        return TableUtil.addMutable(this, delegate);\n    }\n    /**\n     * Aliases a table reference in a query.\n     *\n     * ```sql\n     *  SELECT\n     *      *\n     *  FROM\n     *      myTable AS aliasedTable\n     * ```\n     */\n    as(newTableAlias) {\n        return TableUtil.as(this, newTableAlias);\n    }\n    /**\n     * Prevents rows of this table from being deleted through this library.\n     *\n     * Good for look-up tables, or append-only tables.\n     */\n    disableDelete() {\n        return TableUtil.disableDelete(this);\n    }\n    /**\n     * Prevents rows from being inserted through this library.\n     *\n     * Good for look-up tables.\n     */\n    disableInsert() {\n        return TableUtil.disableInsert(this);\n    }\n    /**\n     * The opposite of `disableInsert()`.\n     * You really shouldn't need to use this as tables allow insert by default.\n     */\n    enableInsert() {\n        return TableUtil.enableInsert(this);\n    }\n    /**\n     * Makes all columns immutable.\n     */\n    removeAllMutable() {\n        return TableUtil.removeAllMutable(this);\n    }\n    /**\n     * Removes columns from the set of columns with explicit `DEFAULT` values\n     *\n     */\n    removeExplicitDefaultValue(delegate) {\n        return TableUtil.removeExplicitDefaultValue(this, delegate);\n    }\n    /**\n     * Removes columns from the set of `GENERATED` columns.\n     *\n     */\n    removeGenerated(delegate) {\n        return TableUtil.removeGenerated(this, delegate);\n    }\n    /**\n     * Removes columns from the set of mutable columns.\n     *\n     * You will not be able to update them through this library.\n     *\n     */\n    removeMutable(delegate) {\n        return TableUtil.removeMutable(this, delegate);\n    }\n    /**\n     * Designates one column as the `AUTO_INCREMENT` column.\n     *\n     * -----\n     *\n     * + `AUTO_INCREMENT` columns cannot be nullable\n     * + `AUTO_INCREMENT` columns must be a candidate key\n     * + `AUTO_INCREMENT` columns must be a `PRIMARY KEY`\n     * + The `number|string|bigint` requirement is only a compile-time constraint\n     */\n    setAutoIncrement(delegate) {\n        return TableUtil.setAutoIncrement(this, delegate);\n    }\n    enableExplicitAutoIncrementValue() {\n        return TableUtil.enableExplicitAutoIncrementValue(this);\n    }\n    /**\n     * Sets a column as the single-column identifier for this table.\n     *\n     * -----\n     *\n     * + `id-column`s cannot be nullable\n     * + `id-column`s must be a candidate key\n     * + `id-column`s must be a `PRIMARY KEY`\n     *\n     */\n    setId(delegate) {\n        return TableUtil.setId(this, delegate);\n    }\n    /**\n     * Sets the `PRIMARY KEY` of the table.\n     *\n     * In MySQL, a `PRIMARY KEY` is just a candidate key\n     * where all its columns are non-nullable.\n     *\n     * -----\n     *\n     * + `PRIMARY KEY` columns cannot be nullable\n     * + `PRIMARY KEY` columns must be a candidate key\n     */\n    setPrimaryKey(delegate) {\n        return TableUtil.setPrimaryKey(this, delegate);\n    }\n    /**\n     * Sets the `schema` that this table belongs to.\n     *\n     * This is usually not required because the schema used\n     * will be the one your database connection session is using.\n     *\n     * -----\n     *\n     * This library does not support cross-schema compile-time safe queries.\n     *\n     * However, if you **do** need cross-schema support,\n     * this library can support it somewhat.\n     */\n    setSchemaName(newSchemaName) {\n        return TableUtil.setSchemaName(this, newSchemaName);\n    }\n    /**\n     * Changes the alias of the table.\n     *\n     * Useful if you have multiple tables with exactly the same structure.\n     *\n     * This is different from `.as()`!\n     *\n     * -----\n     *\n     * You will have to call `.setSchemaName()` again if you called it before.\n     */\n    setTableAlias(newTableAlias) {\n        return TableUtil.setTableAlias(this, newTableAlias);\n    }\n    ;\n    /*\n    addParent<\n        ParentT extends ITable\n    > (\n        parent : TableUtil.Parent<this, ParentT>\n    ) : (\n        TableUtil.AddParent<this, ParentT>\n    ) {\n        return TableUtil.addParent<this, ParentT>(this, parent);\n    }\n\n    /*\n    validate (connection : IConnection, result : TableUtil.ValidateTableResult) {\n        return TableUtil.validate(this, connection, result);\n    }*/\n    pickColumns(delegate) {\n        return TableUtil.pickColumns(this, delegate);\n    }\n    insertOne(connection, row) {\n        return execution_1.ExecutionUtil.insertOne(this, connection, row);\n    }\n    insertMany(connection, rows) {\n        return execution_1.ExecutionUtil.insertMany(this, connection, rows);\n    }\n    insertIgnoreOne(connection, row) {\n        return execution_1.ExecutionUtil.insertIgnoreOne(this, connection, row);\n    }\n    insertIgnoreMany(connection, rows) {\n        return execution_1.ExecutionUtil.insertIgnoreMany(this, connection, rows);\n    }\n    replaceOne(connection, row) {\n        return execution_1.ExecutionUtil.replaceOne(this, connection, row);\n    }\n    replaceMany(connection, rows) {\n        return execution_1.ExecutionUtil.replaceMany(this, connection, rows);\n    }\n    insertAndFetch(connection, row) {\n        return execution_1.ExecutionUtil.insertAndFetch(this, connection, row);\n    }\n    where(whereDelegate) {\n        return new table_where_1.TableWhere(this, whereDelegate);\n    }\n    whereEqCandidateKey(candidateKey) {\n        return new table_where_1.TableWhere(this, () => ExprLib.eqCandidateKey(this, candidateKey));\n    }\n    whereEqPrimaryKey(primaryKey) {\n        return new table_where_1.TableWhere(this, () => ExprLib.eqPrimaryKey(this, primaryKey));\n    }\n    whereEqSuperKey(superKey) {\n        return new table_where_1.TableWhere(this, () => ExprLib.eqSuperKey(this, superKey));\n    }\n}\nexports.Table = Table;\n//# sourceMappingURL=table-impl.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_impl_1 = require(\"../../table-impl\");\nconst used_ref_1 = require(\"../../../used-ref\");\nconst ast_1 = require(\"../../../ast\");\n/**\n * Creates a table with the given alias\n *\n * @param tableAlias\n */\nfunction fromTableAlias(tableAlias) {\n    const result = new table_impl_1.Table({\n        isLateral: false,\n        alias: tableAlias,\n        columns: {},\n        usedRef: used_ref_1.UsedRefUtil.fromColumnRef({}),\n        autoIncrement: undefined,\n        id: undefined,\n        primaryKey: undefined,\n        candidateKeys: [],\n        insertEnabled: true,\n        deleteEnabled: true,\n        generatedColumns: [],\n        nullableColumns: [],\n        explicitDefaultValueColumns: [],\n        mutableColumns: [],\n        explicitAutoIncrementValueEnabled: false,\n    }, ast_1.identifierNode(tableAlias));\n    return result;\n}\nexports.fromTableAlias = fromTableAlias;\n//# sourceMappingURL=from-table-alias.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_impl_1 = require(\"../../table-impl\");\n/**\n * Creates a copy of the `table`\n *\n * @param table\n */\nfunction fromTable(table) {\n    const result = new table_impl_1.Table(table, table.unaliasedAst);\n    return result;\n}\nexports.fromTable = fromTable;\n//# sourceMappingURL=from-table.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./from-table-alias\"));\n__export(require(\"./from-table\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst unified_query_1 = require(\"../../../unified-query\");\nasync function assertExists(table, connection, whereDelegate) {\n    return unified_query_1.QueryUtil.newInstance()\n        .from(table)\n        .where(whereDelegate)\n        .assertExists(connection);\n}\nexports.assertExists = assertExists;\n//# sourceMappingURL=assert-exists.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst unified_query_1 = require(\"../../../unified-query\");\nasync function exists(table, connection, whereDelegate) {\n    return unified_query_1.QueryUtil.newInstance()\n        .from(table)\n        .where(whereDelegate)\n        .exists(connection);\n}\nexports.exists = exists;\n//# sourceMappingURL=exists.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst unified_query_1 = require(\"../../../unified-query\");\nfunction fetchOne(table, connection, whereDelegate, selectDelegate) {\n    try {\n        const query = unified_query_1.QueryUtil.newInstance()\n            .from(table)\n            .where(whereDelegate);\n        if (selectDelegate == undefined) {\n            return query\n                .select(((columns) => [columns]))\n                .fetchOne(connection);\n        }\n        else {\n            return query\n                .select(selectDelegate)\n                .fetchOne(connection);\n        }\n    }\n    catch (err) {\n        const result = Promise.reject(err);\n        //eslint-disable-next-line @typescript-eslint/unbound-method\n        result.or = () => {\n            //To avoid `unhandled rejection` warnings\n            result.catch(() => { });\n            return Promise.reject(err);\n        };\n        //eslint-disable-next-line @typescript-eslint/unbound-method\n        result.orUndefined = () => {\n            //To avoid `unhandled rejection` warnings\n            result.catch(() => { });\n            return Promise.reject(err);\n        };\n        return result;\n    }\n}\nexports.fetchOne = fetchOne;\n/**\n * Not meant to be invoked directly\n */\nfunction __fetchOneHelper(table, connection, whereDelegate, selectDelegate) {\n    if (selectDelegate == undefined) {\n        return fetchOne(table, connection, whereDelegate);\n    }\n    else {\n        return fetchOne(table, connection, whereDelegate, selectDelegate);\n    }\n}\nexports.__fetchOneHelper = __fetchOneHelper;\n//# sourceMappingURL=fetch-one.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst unified_query_1 = require(\"../../../unified-query\");\nfunction fetchValue(table, connection, whereDelegate, selectValueDelegate) {\n    try {\n        return unified_query_1.QueryUtil.newInstance()\n            .from(table)\n            .where(whereDelegate)\n            .selectValue(selectValueDelegate)\n            .fetchValue(connection);\n    }\n    catch (err) {\n        const result = Promise.reject(err);\n        //eslint-disable-next-line @typescript-eslint/unbound-method\n        result.or = () => {\n            //To avoid `unhandled rejection` warnings\n            result.catch(() => { });\n            return Promise.reject(err);\n        };\n        //eslint-disable-next-line @typescript-eslint/unbound-method\n        result.orUndefined = () => {\n            //To avoid `unhandled rejection` warnings\n            result.catch(() => { });\n            return Promise.reject(err);\n        };\n        return result;\n    }\n}\nexports.fetchValue = fetchValue;\n//# sourceMappingURL=fetch-value.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./assert-exists\"));\n__export(require(\"./exists\"));\n__export(require(\"./fetch-one\"));\n__export(require(\"./fetch-value\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./constructor\"));\n__export(require(\"./execution\"));\n__export(require(\"./operation\"));\n__export(require(\"./predicate\"));\n__export(require(\"./query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_impl_1 = require(\"../../table-impl\");\nconst column_1 = require(\"../../../column\");\nconst key_1 = require(\"../../../key\");\nconst query_1 = require(\"../query\");\n/**\n * Makes all non-generated columns, and non-implicit auto-increment mutable.\n *\n * + Mutable columns may be modified with `UPDATE` statements using this library.\n * + Immutable columns may not be modified with this library\n *   (but could still be modified outside of this library)\n *\n * @param table\n */\nfunction addAllMutable(table) {\n    const mutableColumns = (key_1.KeyUtil.fromColumnArray(column_1.ColumnArrayUtil\n        .fromColumnMap(table.columns)\n        .filter(column => {\n        return (!table.generatedColumns.includes(column.columnAlias) &&\n            !query_1.isImplicitAutoIncrement(table, column.columnAlias));\n    })));\n    const { isLateral, alias, columns, usedRef, autoIncrement, id, primaryKey, candidateKeys, insertEnabled, deleteEnabled, generatedColumns, nullableColumns, explicitDefaultValueColumns, \n    //mutableColumns,\n    explicitAutoIncrementValueEnabled, } = table;\n    const result = new table_impl_1.Table({\n        isLateral,\n        alias,\n        columns,\n        usedRef,\n        autoIncrement,\n        id,\n        primaryKey,\n        candidateKeys,\n        insertEnabled,\n        deleteEnabled,\n        generatedColumns,\n        nullableColumns,\n        explicitDefaultValueColumns,\n        mutableColumns,\n        explicitAutoIncrementValueEnabled,\n    }, table.unaliasedAst);\n    return result;\n}\nexports.addAllMutable = addAllMutable;\n//# sourceMappingURL=add-all-mutable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_impl_1 = require(\"../../table-impl\");\nconst key_1 = require(\"../../../key\");\nconst predicate_1 = require(\"../predicate\");\nfunction assertNotEmptyKey(columns) {\n    if (columns.length == 0) {\n        throw new Error(`Key cannot be empty`);\n    }\n}\nexports.assertNotEmptyKey = assertNotEmptyKey;\nfunction assertNotSubKey(table, columns) {\n    const key = key_1.KeyUtil.fromColumnArray(columns);\n    const superKeys = key_1.KeyArrayUtil.findSuperKeys(table.candidateKeys, key);\n    if (superKeys.length > 0) {\n        throw new Error(`${key.join(\"|\")} is a sub key of ${superKeys[0].join(\"|\")}`);\n    }\n}\nexports.assertNotSubKey = assertNotSubKey;\nfunction assertNotSuperKey(table, columns) {\n    const key = key_1.KeyUtil.fromColumnArray(columns);\n    const subKeys = key_1.KeyArrayUtil.findSubKeys(table.candidateKeys, key);\n    if (subKeys.length > 0) {\n        throw new Error(`${key.join(\"|\")} is a super key of ${subKeys[0].join(\"|\")}`);\n    }\n}\nexports.assertNotSuperKey = assertNotSuperKey;\nfunction assertValidCandidateKey(table, columns) {\n    predicate_1.assertHasColumnIdentifiers(table, columns);\n    assertNotEmptyKey(columns);\n    assertNotSubKey(table, columns);\n    assertNotSuperKey(table, columns);\n}\nexports.assertValidCandidateKey = assertValidCandidateKey;\n/**\n * Adds a candidate key to the table.\n *\n * A candidate key is a minimal set of columns that uniquely identifies a row in a table.\n *\n * + A table may have zero-to-many candidate keys. (recommended to have at least one)\n * + A candidate key cannot be a subset of other candidate keys.\n * + A candidate key cannot be a superset of other candidate keys.\n * + A candidate key can intersect other candidate keys.\n * + A candidate key can be disjoint from other candidate keys.\n *\n * @param table\n * @param delegate\n */\nfunction addCandidateKey(table, delegate) {\n    const newCandidateKey = delegate(table.columns);\n    assertValidCandidateKey(table, newCandidateKey);\n    const candidateKeys = key_1.KeyArrayUtil.append(table.candidateKeys, key_1.KeyUtil.fromColumnArray(newCandidateKey));\n    const { isLateral, alias, columns, usedRef, autoIncrement, id, primaryKey, \n    //candidateKeys,\n    insertEnabled, deleteEnabled, generatedColumns, nullableColumns, explicitDefaultValueColumns, mutableColumns, explicitAutoIncrementValueEnabled, } = table;\n    const result = new table_impl_1.Table({\n        isLateral,\n        alias,\n        columns,\n        usedRef,\n        autoIncrement,\n        id,\n        primaryKey,\n        candidateKeys,\n        insertEnabled,\n        deleteEnabled,\n        generatedColumns,\n        nullableColumns,\n        explicitDefaultValueColumns,\n        mutableColumns,\n        explicitAutoIncrementValueEnabled,\n    }, table.unaliasedAst);\n    return result;\n}\nexports.addCandidateKey = addCandidateKey;\n//# sourceMappingURL=add-candidate-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_impl_1 = require(\"../../table-impl\");\nconst column_map_1 = require(\"../../../column-map\");\n/**\n * Converts an array of fields to columns of the table\n *\n * @param table\n * @param fields\n *\n * @deprecated\n */\nfunction addColumnsFromFieldArray(table, fields) {\n    //https://github.com/Microsoft/TypeScript/issues/28592\n    const tableColumns = table.columns;\n    //https://github.com/Microsoft/TypeScript/issues/28592\n    const columnMapFromFieldArray = column_map_1.ColumnMapUtil.fromFieldArray(table.alias, fields);\n    const columns = column_map_1.ColumnMapUtil.intersect(tableColumns, columnMapFromFieldArray);\n    const nullableColumns = column_map_1.ColumnMapUtil.nullableColumnAliases(columns);\n    const result = new table_impl_1.Table({\n        /**\n         * This fails,\n         * ```ts\n         * ...table\n         * ```\n         *\n         * This fails,\n         * ```ts\n         * ...(table as ITable)\n         * ```\n         *\n         * This succeeds,\n         * ```ts\n         * ...(table as TableData)\n         * ```\n         *\n         * @todo Investigate and possibly file issue\n         */\n        ...table,\n        columns,\n        nullableColumns,\n    }, table.unaliasedAst);\n    return result;\n}\nexports.addColumnsFromFieldArray = addColumnsFromFieldArray;\n//# sourceMappingURL=add-columns-from-field-array.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_impl_1 = require(\"../../table-impl\");\nconst column_map_1 = require(\"../../../column-map\");\n/**\n * Converts a map of `columnAlias -> mapper` to columns of the table\n *\n * @param table\n * @param mapperMap\n */\nfunction addColumnsFromMapperMap(table, mapperMap) {\n    //https://github.com/Microsoft/TypeScript/issues/28592\n    const tableColumns = table.columns;\n    const columns = column_map_1.ColumnMapUtil.intersect(tableColumns, column_map_1.ColumnMapUtil.fromMapperMap(table.alias, mapperMap));\n    const nullableColumns = column_map_1.ColumnMapUtil.nullableColumnAliases(columns);\n    const result = new table_impl_1.Table({\n        ...table,\n        columns,\n        nullableColumns,\n    }, table.unaliasedAst);\n    return result;\n}\nexports.addColumnsFromMapperMap = addColumnsFromMapperMap;\n//# sourceMappingURL=add-columns-from-mapper-map.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst add_columns_from_field_array_1 = require(\"./add-columns-from-field-array\");\nconst add_columns_from_mapper_map_1 = require(\"./add-columns-from-mapper-map\");\nfunction addColumns(table, rawColumns) {\n    if (Array.isArray(rawColumns)) {\n        return add_columns_from_field_array_1.addColumnsFromFieldArray(table, rawColumns);\n    }\n    else {\n        return add_columns_from_mapper_map_1.addColumnsFromMapperMap(table, rawColumns);\n    }\n}\nexports.addColumns = addColumns;\n//# sourceMappingURL=add-columns.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_impl_1 = require(\"../../table-impl\");\nconst column_1 = require(\"../../../column\");\nconst key_1 = require(\"../../../key\");\nconst type_util_1 = require(\"../../../type-util\");\nconst column_identifier_map_1 = require(\"../../../column-identifier-map\");\nfunction addExplicitDefaultValueColumnMap(table) {\n    const result = type_util_1.pickOwnEnumerable(table.columns, column_1.ColumnArrayUtil.fromColumnMap(table.columns)\n        .filter(column => {\n        return (!table.generatedColumns.includes(column.columnAlias) &&\n            //!table.nullableColumns.includes(column.columnAlias) &&\n            (table.autoIncrement != column.columnAlias) &&\n            !table.explicitDefaultValueColumns.includes(column.columnAlias));\n    })\n        .map(column => column.columnAlias));\n    return result;\n}\nexports.addExplicitDefaultValueColumnMap = addExplicitDefaultValueColumnMap;\n/**\n * Tells the library that these columns have explicit `DEFAULT` values.\n *\n * An example of an \"explicit\" default value,\n * ```sql\n * `createdAt` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP\n * ```\n *\n * + Columns with server default values are optional with `INSERT` statements.\n * + Generated columns have implicit default values.\n * + Nullable columns have implicit default values.\n * + `AUTO_INCREMENT` columns have implicit default values\n *\n * -----\n *\n * @param table\n * @param delegate\n */\nfunction addExplicitDefaultValue(table, delegate) {\n    const columnMap = addExplicitDefaultValueColumnMap(table);\n    const columnsT = delegate(columnMap);\n    column_identifier_map_1.ColumnIdentifierMapUtil.assertHasColumnIdentifiers(columnMap, columnsT);\n    const explicitDefaultValueColumns = key_1.KeyUtil.concat(table.explicitDefaultValueColumns, key_1.KeyUtil.fromColumnArray(columnsT));\n    const { isLateral, alias, columns, usedRef, autoIncrement, id, primaryKey, candidateKeys, insertEnabled, deleteEnabled, generatedColumns, nullableColumns, \n    //explicitDefaultValueColumns,\n    mutableColumns, explicitAutoIncrementValueEnabled, } = table;\n    const result = new table_impl_1.Table({\n        isLateral,\n        alias,\n        columns,\n        usedRef,\n        autoIncrement,\n        id,\n        primaryKey,\n        candidateKeys,\n        insertEnabled,\n        deleteEnabled,\n        generatedColumns,\n        nullableColumns,\n        explicitDefaultValueColumns,\n        mutableColumns,\n        explicitAutoIncrementValueEnabled,\n    }, table.unaliasedAst);\n    return result;\n}\nexports.addExplicitDefaultValue = addExplicitDefaultValue;\n//# sourceMappingURL=add-explicit-default-value.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_impl_1 = require(\"../../table-impl\");\nconst column_1 = require(\"../../../column\");\nconst key_1 = require(\"../../../key\");\nconst type_util_1 = require(\"../../../type-util\");\nconst column_identifier_map_1 = require(\"../../../column-identifier-map\");\nfunction addGeneratedColumnMap(table) {\n    const result = type_util_1.pickOwnEnumerable(table.columns, column_1.ColumnArrayUtil.fromColumnMap(table.columns)\n        .filter(column => {\n        return (!table.generatedColumns.includes(column.columnAlias) &&\n            column.columnAlias != table.autoIncrement);\n    })\n        .map(column => column.columnAlias));\n    return result;\n}\nexports.addGeneratedColumnMap = addGeneratedColumnMap;\n/**\n * Adds a `GENERATED` column to the table.\n *\n * + Setting generated column values will not be allowed with `INSERT` statements.\n * + Updating generated column values will also not be allowed with `UPDATE` statements.\n *\n * @param table\n * @param delegate\n */\nfunction addGenerated(table, delegate) {\n    const columnMap = addGeneratedColumnMap(table);\n    const columnsT = delegate(columnMap);\n    column_identifier_map_1.ColumnIdentifierMapUtil.assertHasColumnIdentifiers(columnMap, columnsT);\n    const generatedColumns = key_1.KeyUtil.concat(table.generatedColumns, key_1.KeyUtil.fromColumnArray(columnsT));\n    const explicitDefaultValueColumns = key_1.KeyUtil.subtract(table.explicitDefaultValueColumns, key_1.KeyUtil.fromColumnArray(columnsT));\n    const mutableColumns = key_1.KeyUtil.subtract(table.mutableColumns, key_1.KeyUtil.fromColumnArray(columnsT));\n    const { isLateral, alias, columns, usedRef, autoIncrement, id, primaryKey, candidateKeys, insertEnabled, deleteEnabled, \n    //generatedColumns,\n    nullableColumns, \n    //explicitDefaultValueColumns,\n    //mutableColumns,\n    explicitAutoIncrementValueEnabled, } = table;\n    const result = new table_impl_1.Table({\n        isLateral,\n        alias,\n        columns,\n        usedRef,\n        autoIncrement,\n        id,\n        primaryKey,\n        candidateKeys,\n        insertEnabled,\n        deleteEnabled,\n        generatedColumns,\n        nullableColumns,\n        explicitDefaultValueColumns,\n        mutableColumns,\n        explicitAutoIncrementValueEnabled,\n    }, table.unaliasedAst);\n    return result;\n}\nexports.addGenerated = addGenerated;\n//# sourceMappingURL=add-generated.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_impl_1 = require(\"../../table-impl\");\nconst column_1 = require(\"../../../column\");\nconst key_1 = require(\"../../../key\");\nconst type_util_1 = require(\"../../../type-util\");\nconst column_identifier_map_1 = require(\"../../../column-identifier-map\");\nconst query_1 = require(\"../query\");\nfunction addMutableColumnMap(table) {\n    const result = type_util_1.pickOwnEnumerable(table.columns, column_1.ColumnArrayUtil.fromColumnMap(table.columns)\n        .filter(column => {\n        return (!table.generatedColumns.includes(column.columnAlias) &&\n            !table.mutableColumns.includes(column.columnAlias) &&\n            !query_1.isImplicitAutoIncrement(table, column.columnAlias));\n    })\n        .map(column => column.columnAlias));\n    return result;\n}\nexports.addMutableColumnMap = addMutableColumnMap;\n/**\n * Lets these columns be updated through this library.\n *\n * @param table\n * @param delegate\n */\nfunction addMutable(table, delegate) {\n    const columnMap = addMutableColumnMap(table);\n    const columnsT = delegate(columnMap);\n    column_identifier_map_1.ColumnIdentifierMapUtil.assertHasColumnIdentifiers(columnMap, columnsT);\n    const mutableColumns = key_1.KeyUtil.concat(table.mutableColumns, key_1.KeyUtil.fromColumnArray(columnsT));\n    const { isLateral, alias, columns, usedRef, autoIncrement, id, primaryKey, candidateKeys, insertEnabled, deleteEnabled, generatedColumns, nullableColumns, explicitDefaultValueColumns, \n    //mutableColumns,\n    explicitAutoIncrementValueEnabled, } = table;\n    const result = new table_impl_1.Table({\n        isLateral,\n        alias,\n        columns,\n        usedRef,\n        autoIncrement,\n        id,\n        primaryKey,\n        candidateKeys,\n        insertEnabled,\n        deleteEnabled,\n        generatedColumns,\n        nullableColumns,\n        explicitDefaultValueColumns,\n        mutableColumns,\n        explicitAutoIncrementValueEnabled,\n    }, table.unaliasedAst);\n    return result;\n}\nexports.addMutable = addMutable;\n//# sourceMappingURL=add-mutable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_map_1 = require(\"../../../column-map\");\nconst table_impl_1 = require(\"../../table-impl\");\n/**\n * Aliases a table reference in a query.\n *\n * ```sql\n *  SELECT\n *      *\n *  FROM\n *      myTable AS aliasedTable\n * ```\n */\nfunction as(table, newTableAlias) {\n    const { isLateral, \n    //alias,\n    columns, usedRef, autoIncrement, id, primaryKey, candidateKeys, insertEnabled, deleteEnabled, generatedColumns, nullableColumns, explicitDefaultValueColumns, mutableColumns, explicitAutoIncrementValueEnabled, } = table;\n    const result = new table_impl_1.Table({\n        isLateral,\n        alias: newTableAlias,\n        columns: column_map_1.ColumnMapUtil.withTableAlias(columns, newTableAlias),\n        usedRef,\n        autoIncrement,\n        id,\n        primaryKey,\n        candidateKeys,\n        insertEnabled,\n        deleteEnabled,\n        generatedColumns,\n        nullableColumns,\n        explicitDefaultValueColumns,\n        mutableColumns,\n        explicitAutoIncrementValueEnabled,\n    }, table.unaliasedAst);\n    return result;\n}\nexports.as = as;\n//# sourceMappingURL=as.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_impl_1 = require(\"../../table-impl\");\n/**\n * Prevents rows of this table from being deleted through this library.\n *\n * Good for look-up tables, or append-only tables.\n *\n * @param table\n */\nfunction disableDelete(table) {\n    const { isLateral, alias, columns, usedRef, autoIncrement, id, primaryKey, candidateKeys, insertEnabled, \n    //deleteEnabled,\n    generatedColumns, nullableColumns, explicitDefaultValueColumns, mutableColumns, explicitAutoIncrementValueEnabled, } = table;\n    const result = new table_impl_1.Table({\n        isLateral,\n        alias,\n        columns,\n        usedRef,\n        autoIncrement,\n        id,\n        primaryKey,\n        candidateKeys,\n        insertEnabled,\n        deleteEnabled: false,\n        generatedColumns,\n        nullableColumns,\n        explicitDefaultValueColumns,\n        mutableColumns,\n        explicitAutoIncrementValueEnabled,\n    }, table.unaliasedAst);\n    return result;\n}\nexports.disableDelete = disableDelete;\n//# sourceMappingURL=disable-delete.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_impl_1 = require(\"../../table-impl\");\n/**\n * Prevents rows from being inserted through this library.\n *\n * Good for look-up tables.\n *\n * @param table\n */\nfunction disableInsert(table) {\n    const { isLateral, alias, columns, usedRef, autoIncrement, id, primaryKey, candidateKeys, \n    //insertEnabled,\n    deleteEnabled, generatedColumns, nullableColumns, explicitDefaultValueColumns, mutableColumns, explicitAutoIncrementValueEnabled, } = table;\n    const result = new table_impl_1.Table({\n        isLateral,\n        alias,\n        columns,\n        usedRef,\n        autoIncrement,\n        id,\n        primaryKey,\n        candidateKeys,\n        insertEnabled: false,\n        deleteEnabled,\n        generatedColumns,\n        nullableColumns,\n        explicitDefaultValueColumns,\n        mutableColumns,\n        explicitAutoIncrementValueEnabled,\n    }, table.unaliasedAst);\n    return result;\n}\nexports.disableInsert = disableInsert;\n//# sourceMappingURL=disable-insert.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_impl_1 = require(\"../../table-impl\");\n/**\n * Allows explicit values for auto-increment columns.\n */\nfunction enableExplicitAutoIncrementValue(table) {\n    const { isLateral, alias, columns, usedRef, autoIncrement, id, primaryKey, candidateKeys, insertEnabled, deleteEnabled, generatedColumns, nullableColumns, explicitDefaultValueColumns, mutableColumns, } = table;\n    const result = new table_impl_1.Table({\n        isLateral,\n        alias,\n        columns,\n        usedRef,\n        autoIncrement,\n        id,\n        primaryKey,\n        candidateKeys,\n        insertEnabled,\n        deleteEnabled,\n        generatedColumns,\n        nullableColumns,\n        explicitDefaultValueColumns,\n        mutableColumns,\n        explicitAutoIncrementValueEnabled: true,\n    }, table.unaliasedAst);\n    return result;\n}\nexports.enableExplicitAutoIncrementValue = enableExplicitAutoIncrementValue;\n//# sourceMappingURL=enable-explicit-auto-increment-value.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_impl_1 = require(\"../../table-impl\");\nfunction enableInsert(table) {\n    const { isLateral, alias, columns, usedRef, autoIncrement, id, primaryKey, candidateKeys, \n    //insertEnabled,\n    deleteEnabled, generatedColumns, nullableColumns, explicitDefaultValueColumns, mutableColumns, explicitAutoIncrementValueEnabled, } = table;\n    const result = new table_impl_1.Table({\n        isLateral,\n        alias,\n        columns,\n        usedRef,\n        autoIncrement,\n        id,\n        primaryKey,\n        candidateKeys,\n        insertEnabled: true,\n        deleteEnabled,\n        generatedColumns,\n        nullableColumns,\n        explicitDefaultValueColumns,\n        mutableColumns,\n        explicitAutoIncrementValueEnabled,\n    }, table.unaliasedAst);\n    return result;\n}\nexports.enableInsert = enableInsert;\n//# sourceMappingURL=enable-insert.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./add-all-mutable\"));\n__export(require(\"./add-candidate-key\"));\n__export(require(\"./add-columns-from-field-array\"));\n__export(require(\"./add-columns-from-mapper-map\"));\n__export(require(\"./add-columns\"));\n__export(require(\"./add-explicit-default-value\"));\n__export(require(\"./add-generated\"));\n__export(require(\"./add-mutable\"));\n__export(require(\"./as\"));\n__export(require(\"./disable-delete\"));\n__export(require(\"./disable-insert\"));\n__export(require(\"./enable-explicit-auto-increment-value\"));\n__export(require(\"./enable-insert\"));\n__export(require(\"./pick-columns\"));\n__export(require(\"./remove-all-mutable\"));\n__export(require(\"./remove-explicit-default-value\"));\n__export(require(\"./remove-generated\"));\n__export(require(\"./remove-mutable\"));\n__export(require(\"./set-auto-increment\"));\n__export(require(\"./set-id\"));\n__export(require(\"./set-primary-key\"));\n__export(require(\"./set-schema-name\"));\n__export(require(\"./set-table-alias\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst aliased_table_1 = require(\"../../../aliased-table\");\nconst type_util_1 = require(\"../../../type-util\");\nfunction pickColumns(table, delegate) {\n    const newColumns = delegate(table.columns);\n    const { isLateral, alias, columns, usedRef, } = table;\n    const result = new aliased_table_1.AliasedTable({\n        isLateral,\n        alias,\n        columns: type_util_1.pickOwnEnumerable(columns, newColumns.map(column => column.columnAlias)),\n        usedRef,\n    }, table.unaliasedAst);\n    return result;\n}\nexports.pickColumns = pickColumns;\n//# sourceMappingURL=pick-columns.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_impl_1 = require(\"../../table-impl\");\n/**\n * Makes all columns immutable.\n *\n * @param table\n */\nfunction removeAllMutable(table) {\n    const mutableColumns = [];\n    const { isLateral, alias, columns, usedRef, autoIncrement, id, primaryKey, candidateKeys, insertEnabled, deleteEnabled, generatedColumns, nullableColumns, explicitDefaultValueColumns, \n    //mutableColumns,\n    explicitAutoIncrementValueEnabled, } = table;\n    const result = new table_impl_1.Table({\n        isLateral,\n        alias,\n        columns,\n        usedRef,\n        autoIncrement,\n        id,\n        primaryKey,\n        candidateKeys,\n        insertEnabled,\n        deleteEnabled,\n        generatedColumns,\n        nullableColumns,\n        explicitDefaultValueColumns,\n        mutableColumns,\n        explicitAutoIncrementValueEnabled,\n    }, table.unaliasedAst);\n    return result;\n}\nexports.removeAllMutable = removeAllMutable;\n//# sourceMappingURL=remove-all-mutable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_impl_1 = require(\"../../table-impl\");\nconst column_1 = require(\"../../../column\");\nconst key_1 = require(\"../../../key\");\nconst type_util_1 = require(\"../../../type-util\");\nconst column_identifier_map_1 = require(\"../../../column-identifier-map\");\nfunction removeExplicitDefaultValueColumnMap(table) {\n    const result = type_util_1.pickOwnEnumerable(table.columns, column_1.ColumnArrayUtil.fromColumnMap(table.columns)\n        .filter(column => {\n        return (table.explicitDefaultValueColumns.includes(column.columnAlias));\n    })\n        .map(column => column.columnAlias));\n    return result;\n}\nexports.removeExplicitDefaultValueColumnMap = removeExplicitDefaultValueColumnMap;\n/**\n * Removes columns from the set of columns with explicit `DEFAULT` values\n *\n * @param table\n * @param delegate\n */\nfunction removeExplicitDefaultValue(table, delegate) {\n    const columnMap = removeExplicitDefaultValueColumnMap(table);\n    const columnsT = delegate(columnMap);\n    column_identifier_map_1.ColumnIdentifierMapUtil.assertHasColumnIdentifiers(columnMap, columnsT);\n    const explicitDefaultValueColumns = key_1.KeyUtil.subtract(table.explicitDefaultValueColumns, key_1.KeyUtil.fromColumnArray(columnsT));\n    const { isLateral, alias, columns, usedRef, autoIncrement, id, primaryKey, candidateKeys, insertEnabled, deleteEnabled, generatedColumns, nullableColumns, \n    //explicitDefaultValueColumns,\n    mutableColumns, explicitAutoIncrementValueEnabled, } = table;\n    const result = new table_impl_1.Table({\n        isLateral,\n        alias,\n        columns,\n        usedRef,\n        autoIncrement,\n        id,\n        primaryKey,\n        candidateKeys,\n        insertEnabled,\n        deleteEnabled,\n        generatedColumns,\n        nullableColumns,\n        explicitDefaultValueColumns,\n        mutableColumns,\n        explicitAutoIncrementValueEnabled,\n    }, table.unaliasedAst);\n    return result;\n}\nexports.removeExplicitDefaultValue = removeExplicitDefaultValue;\n//# sourceMappingURL=remove-explicit-default-value.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_impl_1 = require(\"../../table-impl\");\nconst column_1 = require(\"../../../column\");\nconst key_1 = require(\"../../../key\");\nconst type_util_1 = require(\"../../../type-util\");\nconst column_identifier_map_1 = require(\"../../../column-identifier-map\");\nfunction removeGeneratedColumnMap(table) {\n    const result = type_util_1.pickOwnEnumerable(table.columns, column_1.ColumnArrayUtil.fromColumnMap(table.columns)\n        .filter(column => {\n        return (table.generatedColumns.includes(column.columnAlias));\n    })\n        .map(column => column.columnAlias));\n    return result;\n}\nexports.removeGeneratedColumnMap = removeGeneratedColumnMap;\n/**\n * Removes columns from the set of `GENERATED` columns.\n *\n * @param table\n * @param delegate\n */\nfunction removeGenerated(table, delegate) {\n    const columnMap = removeGeneratedColumnMap(table);\n    const columnsT = delegate(columnMap);\n    column_identifier_map_1.ColumnIdentifierMapUtil.assertHasColumnIdentifiers(columnMap, columnsT);\n    const generatedColumns = key_1.KeyUtil.subtract(table.generatedColumns, key_1.KeyUtil.fromColumnArray(columnsT));\n    const { isLateral, alias, columns, usedRef, autoIncrement, id, primaryKey, candidateKeys, insertEnabled, deleteEnabled, \n    //generatedColumns,\n    nullableColumns, explicitDefaultValueColumns, mutableColumns, explicitAutoIncrementValueEnabled, } = table;\n    const result = new table_impl_1.Table({\n        isLateral,\n        alias,\n        columns,\n        usedRef,\n        autoIncrement,\n        id,\n        primaryKey,\n        candidateKeys,\n        insertEnabled,\n        deleteEnabled,\n        generatedColumns,\n        nullableColumns,\n        explicitDefaultValueColumns,\n        mutableColumns,\n        explicitAutoIncrementValueEnabled,\n    }, table.unaliasedAst);\n    return result;\n}\nexports.removeGenerated = removeGenerated;\n//# sourceMappingURL=remove-generated.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_impl_1 = require(\"../../table-impl\");\nconst column_1 = require(\"../../../column\");\nconst key_1 = require(\"../../../key\");\nconst type_util_1 = require(\"../../../type-util\");\nconst column_identifier_map_1 = require(\"../../../column-identifier-map\");\nfunction removeMutableColumnMap(table) {\n    const result = type_util_1.pickOwnEnumerable(table.columns, column_1.ColumnArrayUtil.fromColumnMap(table.columns)\n        .filter(column => {\n        return (table.mutableColumns.includes(column.columnAlias));\n    })\n        .map(column => column.columnAlias));\n    return result;\n}\nexports.removeMutableColumnMap = removeMutableColumnMap;\n/**\n * Removes columns from the set of mutable columns.\n *\n * You will not be able to update them through this library.\n *\n * @param table\n * @param delegate\n */\nfunction removeMutable(table, delegate) {\n    const columnMap = removeMutableColumnMap(table);\n    const columnsT = delegate(columnMap);\n    column_identifier_map_1.ColumnIdentifierMapUtil.assertHasColumnIdentifiers(columnMap, columnsT);\n    const mutableColumns = key_1.KeyUtil.subtract(table.mutableColumns, key_1.KeyUtil.fromColumnArray(columnsT));\n    const { isLateral, alias, columns, usedRef, autoIncrement, id, primaryKey, candidateKeys, insertEnabled, deleteEnabled, generatedColumns, nullableColumns, explicitDefaultValueColumns, \n    //mutableColumns,\n    explicitAutoIncrementValueEnabled, } = table;\n    const result = new table_impl_1.Table({\n        isLateral,\n        alias,\n        columns,\n        usedRef,\n        autoIncrement,\n        id,\n        primaryKey,\n        candidateKeys,\n        insertEnabled,\n        deleteEnabled,\n        generatedColumns,\n        nullableColumns,\n        explicitDefaultValueColumns,\n        mutableColumns,\n        explicitAutoIncrementValueEnabled,\n    }, table.unaliasedAst);\n    return result;\n}\nexports.removeMutable = removeMutable;\n//# sourceMappingURL=remove-mutable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst table_impl_1 = require(\"../../table-impl\");\nconst column_1 = require(\"../../../column\");\nconst key_1 = require(\"../../../key\");\nconst type_util_1 = require(\"../../../type-util\");\nconst set_primary_key_1 = require(\"./set-primary-key\");\nconst column_identifier_map_1 = require(\"../../../column-identifier-map\");\nfunction setAutoIncrementColumnMap(table) {\n    const result = type_util_1.pickOwnEnumerable(table.columns, column_1.ColumnArrayUtil.fromColumnMap(table.columns)\n        .filter(column => {\n        return (!tm.canOutputNull(column.mapper) &&\n            !key_1.KeyArrayUtil.hasSuperKey(table.candidateKeys, [column.columnAlias]));\n    })\n        .map(column => column.columnAlias));\n    return result;\n}\nexports.setAutoIncrementColumnMap = setAutoIncrementColumnMap;\nfunction assertValidAutoIncrement(table, autoIncrement) {\n    const columnMap = setAutoIncrementColumnMap(table);\n    column_identifier_map_1.ColumnIdentifierMapUtil.assertHasColumnIdentifier(columnMap, autoIncrement);\n    set_primary_key_1.assertValidPrimaryKey(table, [autoIncrement]);\n}\nexports.assertValidAutoIncrement = assertValidAutoIncrement;\n/**\n * Designates one column as the `AUTO_INCREMENT` column.\n *\n * -----\n *\n * + `AUTO_INCREMENT` columns cannot be nullable\n * + `AUTO_INCREMENT` columns must be a candidate key\n * + `AUTO_INCREMENT` columns must be a `PRIMARY KEY`\n * + The `number|string|bigint` requirement is only a compile-time constraint\n *\n * @todo Consider having run-time checks to see if it allows 1,2,3,4,5,... ?\n */\nfunction setAutoIncrement(table, delegate) {\n    const newAutoIncrement = delegate(setAutoIncrementColumnMap(table));\n    assertValidAutoIncrement(table, newAutoIncrement);\n    const primaryKey = (key_1.KeyUtil.fromColumn(newAutoIncrement));\n    const candidateKeys = key_1.KeyArrayUtil.append(table.candidateKeys, primaryKey);\n    const generatedColumns = key_1.KeyUtil.remove(table.generatedColumns, newAutoIncrement.columnAlias);\n    const explicitDefaultValueColumns = key_1.KeyUtil.remove(table.explicitDefaultValueColumns, newAutoIncrement.columnAlias);\n    const mutableColumns = key_1.KeyUtil.remove(table.mutableColumns, newAutoIncrement.columnAlias);\n    const { isLateral, alias, columns, usedRef, \n    //autoIncrement,\n    //id,\n    //primaryKey,\n    //candidateKeys,\n    insertEnabled, deleteEnabled, \n    //generatedColumns,\n    nullableColumns, \n    //explicitDefaultValueColumns,\n    //mutableColumns,\n    explicitAutoIncrementValueEnabled, } = table;\n    const result = new table_impl_1.Table({\n        isLateral,\n        alias,\n        columns,\n        usedRef,\n        autoIncrement: newAutoIncrement.columnAlias,\n        id: newAutoIncrement.columnAlias,\n        primaryKey,\n        candidateKeys,\n        insertEnabled,\n        deleteEnabled,\n        generatedColumns,\n        nullableColumns,\n        explicitDefaultValueColumns,\n        mutableColumns,\n        explicitAutoIncrementValueEnabled,\n    }, table.unaliasedAst);\n    return result;\n}\nexports.setAutoIncrement = setAutoIncrement;\n//# sourceMappingURL=set-auto-increment.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst table_impl_1 = require(\"../../table-impl\");\nconst column_1 = require(\"../../../column\");\nconst key_1 = require(\"../../../key\");\nconst set_primary_key_1 = require(\"./set-primary-key\");\nconst type_util_1 = require(\"../../../type-util\");\nconst column_identifier_map_1 = require(\"../../../column-identifier-map\");\nfunction setIdColumnMap(table) {\n    const result = type_util_1.pickOwnEnumerable(table.columns, column_1.ColumnArrayUtil.fromColumnMap(table.columns)\n        .filter(column => {\n        return (!tm.canOutputNull(column.mapper) &&\n            !key_1.KeyArrayUtil.hasSuperKey(table.candidateKeys, [column.columnAlias]));\n    })\n        .map(column => column.columnAlias));\n    return result;\n}\nexports.setIdColumnMap = setIdColumnMap;\nfunction assertValidId(table, id) {\n    const columnMap = setIdColumnMap(table);\n    column_identifier_map_1.ColumnIdentifierMapUtil.assertHasColumnIdentifier(columnMap, id);\n    set_primary_key_1.assertValidPrimaryKey(table, [id]);\n}\nexports.assertValidId = assertValidId;\n/**\n * Sets a column as the single-column identifier for this table.\n *\n * -----\n *\n * + `id-column`s cannot be nullable\n * + `id-column`s must be a candidate key\n * + `id-column`s must be a `PRIMARY KEY`\n *\n */\nfunction setId(table, delegate) {\n    const newId = delegate(setIdColumnMap(table));\n    assertValidId(table, newId);\n    const primaryKey = (key_1.KeyUtil.fromColumn(newId));\n    const candidateKeys = key_1.KeyArrayUtil.append(table.candidateKeys, primaryKey);\n    const { isLateral, alias, columns, usedRef, autoIncrement, \n    //id,\n    //primaryKey,\n    //candidateKeys,\n    insertEnabled, deleteEnabled, generatedColumns, nullableColumns, explicitDefaultValueColumns, mutableColumns, explicitAutoIncrementValueEnabled, } = table;\n    const result = new table_impl_1.Table({\n        isLateral,\n        alias,\n        columns,\n        usedRef,\n        autoIncrement,\n        id: newId.columnAlias,\n        primaryKey,\n        candidateKeys,\n        insertEnabled,\n        deleteEnabled,\n        generatedColumns,\n        nullableColumns,\n        explicitDefaultValueColumns,\n        mutableColumns,\n        explicitAutoIncrementValueEnabled,\n    }, table.unaliasedAst);\n    return result;\n}\nexports.setId = setId;\n//# sourceMappingURL=set-id.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tm = require(\"type-mapping\");\nconst table_impl_1 = require(\"../../table-impl\");\nconst column_1 = require(\"../../../column\");\nconst add_candidate_key_1 = require(\"./add-candidate-key\");\nconst key_1 = require(\"../../../key\");\nconst type_util_1 = require(\"../../../type-util\");\nfunction setPrimaryKeyColumnMap(table) {\n    const result = type_util_1.pickOwnEnumerable(table.columns, column_1.ColumnArrayUtil.fromColumnMap(table.columns)\n        .filter(column => !tm.canOutputNull(column.mapper))\n        .map(column => column.columnAlias));\n    return result;\n}\nexports.setPrimaryKeyColumnMap = setPrimaryKeyColumnMap;\nfunction assertValidPrimaryKey(table, columns) {\n    //An extra run-time check, just to be safe...\n    //For all the JS-land users\n    for (const column of columns) {\n        if (tm.canOutputNull(column.mapper)) {\n            throw new Error(`${column.tableAlias}.${column.columnAlias} cannot be part of a PRIMARY KEY; it is nullable`);\n        }\n    }\n    add_candidate_key_1.assertValidCandidateKey(table, columns);\n}\nexports.assertValidPrimaryKey = assertValidPrimaryKey;\n/**\n * Sets the `PRIMARY KEY` of the table.\n *\n * In MySQL, a `PRIMARY KEY` is just a candidate key\n * where all its columns are non-nullable.\n *\n * -----\n *\n * + `PRIMARY KEY` columns cannot be nullable\n * + `PRIMARY KEY` columns must be a candidate key\n */\nfunction setPrimaryKey(table, delegate) {\n    const newPrimaryKey = delegate(setPrimaryKeyColumnMap(table));\n    assertValidPrimaryKey(table, newPrimaryKey);\n    const primaryKey = (key_1.KeyUtil.fromColumnArray(newPrimaryKey));\n    const candidateKeys = key_1.KeyArrayUtil.append(table.candidateKeys, primaryKey);\n    const { isLateral, alias, columns, usedRef, autoIncrement, id, \n    //primaryKey,\n    //candidateKeys,\n    insertEnabled, deleteEnabled, generatedColumns, nullableColumns, explicitDefaultValueColumns, mutableColumns, explicitAutoIncrementValueEnabled, } = table;\n    const result = new table_impl_1.Table({\n        isLateral,\n        alias,\n        columns,\n        usedRef,\n        autoIncrement,\n        id,\n        primaryKey,\n        candidateKeys,\n        insertEnabled,\n        deleteEnabled,\n        generatedColumns,\n        nullableColumns,\n        explicitDefaultValueColumns,\n        mutableColumns,\n        explicitAutoIncrementValueEnabled,\n    }, table.unaliasedAst);\n    return result;\n}\nexports.setPrimaryKey = setPrimaryKey;\n//# sourceMappingURL=set-primary-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_impl_1 = require(\"../../table-impl\");\nconst ast_1 = require(\"../../../ast\");\n/**\n * Sets the `schema` that this table belongs to.\n *\n * This is usually not required because the schema used\n * will be the one your database connection session is using.\n *\n * -----\n *\n * This library does not support cross-schema compile-time safe queries.\n *\n * However, if you **do** need cross-schema support,\n * this library can support it somewhat.\n *\n * -----\n *\n * @param table\n * @param newSchemaName\n */\nfunction setSchemaName(table, newSchemaName) {\n    const { isLateral, alias, columns, usedRef, autoIncrement, id, primaryKey, candidateKeys, insertEnabled, deleteEnabled, generatedColumns, nullableColumns, explicitDefaultValueColumns, mutableColumns, explicitAutoIncrementValueEnabled, } = table;\n    return new table_impl_1.Table({\n        isLateral,\n        alias,\n        columns,\n        usedRef,\n        autoIncrement,\n        id,\n        primaryKey,\n        candidateKeys,\n        insertEnabled,\n        deleteEnabled,\n        generatedColumns,\n        nullableColumns,\n        explicitDefaultValueColumns,\n        mutableColumns,\n        explicitAutoIncrementValueEnabled,\n    }, (ast_1.isIdentifierNode(table.unaliasedAst) ?\n        ast_1.identifierNode(newSchemaName, \n        //The table alias on the database\n        table.unaliasedAst.identifiers[table.unaliasedAst.identifiers.length - 1]) :\n        ast_1.identifierNode(newSchemaName, alias)));\n}\nexports.setSchemaName = setSchemaName;\n//# sourceMappingURL=set-schema-name.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst table_impl_1 = require(\"../../table-impl\");\nconst column_map_1 = require(\"../../../column-map\");\nconst ast_1 = require(\"../../../ast\");\n/**\n * Changes the alias of the table.\n *\n * Useful if you have multiple tables with exactly the same structure.\n *\n * This is different from `.as()`!\n *\n * -----\n *\n * You will have to call `.setSchemaName()` again if you called it before.\n *\n * @param table\n * @param newTableAlias\n */\nfunction setTableAlias(table, newTableAlias) {\n    //https://github.com/Microsoft/TypeScript/issues/28592\n    const columns = table.columns;\n    const { isLateral, \n    //tableAlias,\n    //columns,\n    usedRef, autoIncrement, id, primaryKey, candidateKeys, insertEnabled, deleteEnabled, generatedColumns, nullableColumns, explicitDefaultValueColumns, mutableColumns, explicitAutoIncrementValueEnabled, } = table;\n    return new table_impl_1.Table({\n        isLateral,\n        alias: newTableAlias,\n        columns: column_map_1.ColumnMapUtil.withTableAlias(columns, newTableAlias),\n        usedRef,\n        autoIncrement,\n        id,\n        primaryKey,\n        candidateKeys,\n        insertEnabled,\n        deleteEnabled,\n        generatedColumns,\n        nullableColumns,\n        explicitDefaultValueColumns,\n        mutableColumns,\n        explicitAutoIncrementValueEnabled,\n    }, ((ast_1.isIdentifierNode(table.unaliasedAst) &&\n        table.unaliasedAst.identifiers.length == 2) ?\n        ast_1.identifierNode(\n        //The `schemaName`\n        table.unaliasedAst.identifiers[0], newTableAlias) :\n        ast_1.identifierNode(newTableAlias)));\n}\nexports.setTableAlias = setTableAlias;\n//# sourceMappingURL=set-table-alias.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isDeleteEnabled(table) {\n    return table.deleteEnabled;\n}\nexports.isDeleteEnabled = isDeleteEnabled;\nfunction assertDeleteEnabled(table) {\n    if (!isDeleteEnabled(table)) {\n        throw new Error(`Cannot DELETE FROM/REPLACE INTO ${table.alias}`);\n    }\n}\nexports.assertDeleteEnabled = assertDeleteEnabled;\n//# sourceMappingURL=assert-delete-enabled.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction assertHasCandidateKey(table) {\n    if (table.candidateKeys.length == 0) {\n        throw new Error(`${table.alias} must have a candidate key`);\n    }\n}\nexports.assertHasCandidateKey = assertHasCandidateKey;\n//# sourceMappingURL=assert-has-candidate-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_identifier_map_1 = require(\"../../../column-identifier-map\");\n/**\n * A run-time check mostly for JS-land users.\n *\n * Checks that the `table` contains all `columns` passed through,\n * using just the `tableAlias` and `columnAlias`.\n *\n * @param table\n * @param columns\n */\nfunction assertHasColumnIdentifiers(table, columns) {\n    for (const column of columns) {\n        column_identifier_map_1.ColumnIdentifierMapUtil.assertHasColumnIdentifier(table.columns, column);\n    }\n}\nexports.assertHasColumnIdentifiers = assertHasColumnIdentifiers;\n//# sourceMappingURL=assert-has-column-identifiers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_map_1 = require(\"../../../column-map\");\nconst has_null_safe_comparable_primary_key_1 = require(\"./has-null-safe-comparable-primary-key\");\nfunction assertHasNullSafeComparablePrimaryKey(table, columnMap) {\n    if (!has_null_safe_comparable_primary_key_1.hasNullSafeComparablePrimaryKey(table, columnMap)) {\n        const myTableAlias = column_map_1.ColumnMapUtil.tableAlias(table.columns);\n        const myPrimaryKey = table.primaryKey.join(\",\");\n        const otherTableAlias = column_map_1.ColumnMapUtil.tableAlias(columnMap);\n        const otherColumnAliases = table.primaryKey\n            .filter(pk => (Object.prototype.hasOwnProperty.call(columnMap, pk) &&\n            Object.prototype.propertyIsEnumerable.call(columnMap, pk)))\n            .join(\",\");\n        throw new Error(`${myTableAlias} primary key (${myPrimaryKey}) is not null-safe comparable to ${otherTableAlias} (${otherColumnAliases})`);\n    }\n}\nexports.assertHasNullSafeComparablePrimaryKey = assertHasNullSafeComparablePrimaryKey;\n//# sourceMappingURL=assert-has-null-safe-comparable-primary-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isInsertEnabled(table) {\n    return table.insertEnabled;\n}\nexports.isInsertEnabled = isInsertEnabled;\nfunction assertInsertEnabled(table) {\n    if (!isInsertEnabled(table)) {\n        throw new Error(`Cannot INSERT INTO ${table.alias}`);\n    }\n}\nexports.assertInsertEnabled = assertInsertEnabled;\n//# sourceMappingURL=assert-insert-enabled.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Ideally, we'd want to have run-time checks\n * ensuring PK columns and `columnMap` columns\n * have null-safe comparable types.\n *\n * However, due to how the project is structured,\n * this is not possible.\n *\n * So, at the very least, we just check\n * the columns exist.\n */\nfunction hasNullSafeComparablePrimaryKey(table, columnMap) {\n    /**\n     * Ideally, we'd want to have run-time checks\n     * ensuring PK columns and `columnMap` columns\n     * have null-safe comparable types.\n     *\n     * However, due to how the project is structured,\n     * this is not possible.\n     *\n     * So, at the very least, we just check\n     * the columns exist.\n     */\n    const myColumnAliases = Object.keys(table.columns);\n    for (const pkColumnAlias of table.primaryKey) {\n        if (!myColumnAliases.includes(pkColumnAlias)) {\n            /**\n             * My column does not exist\n             */\n            return false;\n        }\n    }\n    const otherColumnAliases = Object.keys(columnMap);\n    for (const pkColumnAlias of table.primaryKey) {\n        if (!otherColumnAliases.includes(pkColumnAlias)) {\n            /**\n             * Other column does not exist\n             */\n            return false;\n        }\n    }\n    return true;\n}\nexports.hasNullSafeComparablePrimaryKey = hasNullSafeComparablePrimaryKey;\n//# sourceMappingURL=has-null-safe-comparable-primary-key.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./assert-delete-enabled\"));\n__export(require(\"./assert-has-candidate-key\"));\n__export(require(\"./assert-has-column-identifiers\"));\n__export(require(\"./assert-has-null-safe-comparable-primary-key\"));\n__export(require(\"./assert-insert-enabled\"));\n__export(require(\"./has-null-safe-comparable-primary-key\"));\n__export(require(\"./is-table\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst type_util_1 = require(\"../../../type-util\");\n/**\n * Actually only checks if it has all the properties of `ITable`.\n *\n * So, if it has all the properties but they're of the wrong data type...\n */\nfunction isTable(mixed) {\n    return type_util_1.isObjectWithOwnEnumerableKeys()(mixed, [\n        \"isLateral\",\n        \"alias\",\n        \"columns\",\n        \"usedRef\",\n        \"unaliasedAst\",\n        \"autoIncrement\",\n        \"id\",\n        \"primaryKey\",\n        \"candidateKeys\",\n        \"insertEnabled\",\n        \"deleteEnabled\",\n        \"generatedColumns\",\n        \"nullableColumns\",\n        \"explicitDefaultValueColumns\",\n        \"mutableColumns\",\n        \"explicitAutoIncrementValueEnabled\",\n    ]);\n}\nexports.isTable = isTable;\n//# sourceMappingURL=is-table.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_map_1 = require(\"../../../column-map\");\n/**\n * @todo Pluralize this and others where relevant?\n * Be more consistent with pluralization.\n */\nfunction columnAlias(table) {\n    return column_map_1.ColumnMapUtil.columnAlias(table.columns);\n}\nexports.columnAlias = columnAlias;\n//# sourceMappingURL=column-alias.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isExplicitAutoIncrement(table, columnAlias) {\n    if (table.explicitAutoIncrementValueEnabled) {\n        return columnAlias === table.autoIncrement;\n    }\n    else {\n        return false;\n    }\n}\nexports.isExplicitAutoIncrement = isExplicitAutoIncrement;\nfunction isImplicitAutoIncrement(table, columnAlias) {\n    if (!table.explicitAutoIncrementValueEnabled) {\n        return columnAlias === table.autoIncrement;\n    }\n    else {\n        return false;\n    }\n}\nexports.isImplicitAutoIncrement = isImplicitAutoIncrement;\n//# sourceMappingURL=explicit-auto-increment.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst key_1 = require(\"../../../key\");\nfunction extractCandidateKeysWithColumnAliasInTable(candidateKeysTable, columnAliasesTable) {\n    const result = [];\n    const columnAliases = Object.keys(columnAliasesTable.columns);\n    for (const candidateKey of candidateKeysTable.candidateKeys) {\n        if (key_1.KeyUtil.isSubKey(candidateKey, columnAliases)) {\n            result.push(candidateKey);\n        }\n    }\n    return result;\n}\nexports.extractCandidateKeysWithColumnAliasInTable = extractCandidateKeysWithColumnAliasInTable;\n//# sourceMappingURL=extract-candidate-keys-with-column-alias-in-table.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./column-alias\"));\n__export(require(\"./explicit-auto-increment\"));\n__export(require(\"./extract-candidate-keys-with-column-alias-in-table\"));\n__export(require(\"./insertable-column-alias\"));\n__export(require(\"./optional-column-alias\"));\n__export(require(\"./required-column-alias\"));\n__export(require(\"./try-get-schema-name\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_alias_1 = require(\"./column-alias\");\nconst explicit_auto_increment_1 = require(\"./explicit-auto-increment\");\nfunction isInsertableColumnAlias(table, columnAlias) {\n    return (Object.prototype.hasOwnProperty.call(table.columns, columnAlias) &&\n        Object.prototype.propertyIsEnumerable.call(table.columns, columnAlias) &&\n        !table.generatedColumns.includes(columnAlias) &&\n        !explicit_auto_increment_1.isImplicitAutoIncrement(table, columnAlias));\n}\nexports.isInsertableColumnAlias = isInsertableColumnAlias;\nfunction insertableColumnAlias(table) {\n    return column_alias_1.columnAlias(table).filter((columnAlias) => (isInsertableColumnAlias(table, columnAlias)));\n}\nexports.insertableColumnAlias = insertableColumnAlias;\n//# sourceMappingURL=insertable-column-alias.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_alias_1 = require(\"./column-alias\");\nconst explicit_auto_increment_1 = require(\"./explicit-auto-increment\");\nfunction isOptionalColumnAlias(table, columnAlias) {\n    return (explicit_auto_increment_1.isExplicitAutoIncrement(table, columnAlias) ||\n        ((table.nullableColumns.indexOf(columnAlias) >= 0 ||\n            table.explicitDefaultValueColumns.indexOf(columnAlias) >= 0) &&\n            table.generatedColumns.indexOf(columnAlias) < 0));\n}\nexports.isOptionalColumnAlias = isOptionalColumnAlias;\nfunction optionalColumnAlias(table) {\n    return column_alias_1.columnAlias(table).filter((columnAlias) => (isOptionalColumnAlias(table, columnAlias)));\n}\nexports.optionalColumnAlias = optionalColumnAlias;\n//# sourceMappingURL=optional-column-alias.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_alias_1 = require(\"./column-alias\");\nfunction isRequiredColumnAlias(table, columnAlias) {\n    return (Object.prototype.hasOwnProperty.call(table.columns, columnAlias) &&\n        Object.prototype.propertyIsEnumerable.call(table.columns, columnAlias) &&\n        table.generatedColumns.indexOf(columnAlias) < 0 &&\n        table.nullableColumns.indexOf(columnAlias) < 0 &&\n        table.explicitDefaultValueColumns.indexOf(columnAlias) < 0 &&\n        table.autoIncrement !== columnAlias);\n}\nexports.isRequiredColumnAlias = isRequiredColumnAlias;\nfunction requiredColumnAlias(table) {\n    return column_alias_1.columnAlias(table).filter((columnAlias) => (isRequiredColumnAlias(table, columnAlias)));\n}\nexports.requiredColumnAlias = requiredColumnAlias;\n//# sourceMappingURL=required-column-alias.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ast_1 = require(\"../../../ast\");\nfunction tryGetSchemaName(table) {\n    return ((ast_1.isIdentifierNode(table.unaliasedAst) &&\n        table.unaliasedAst.identifiers.length == 2) ?\n        table.unaliasedAst.identifiers[0] :\n        undefined);\n}\nexports.tryGetSchemaName = tryGetSchemaName;\n//# sourceMappingURL=try-get-schema-name.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Transaction access modes ranked from least to most permissive,\n * 1. `READ_ONLY`\n * 2. `READ_WRITE`\n *\n * https://github.com/AnyhowStep/tsql/issues/14\n */\nvar TransactionAccessMode;\n(function (TransactionAccessMode) {\n    TransactionAccessMode[\"READ_ONLY\"] = \"READ_ONLY\";\n    TransactionAccessMode[\"READ_WRITE\"] = \"READ_WRITE\";\n})(TransactionAccessMode = exports.TransactionAccessMode || (exports.TransactionAccessMode = {}));\nvar TransactionAccessModeUtil;\n(function (TransactionAccessModeUtil) {\n    const transactionAccessModePermissions = {\n        [TransactionAccessMode.READ_ONLY]: 0,\n        [TransactionAccessMode.READ_WRITE]: 1,\n    };\n    /**\n     * Is transaction access mode `a` less permissive than `b`?\n     */\n    function isLessPermissiveThan(a, b) {\n        return transactionAccessModePermissions[a] < transactionAccessModePermissions[b];\n    }\n    TransactionAccessModeUtil.isLessPermissiveThan = isLessPermissiveThan;\n})(TransactionAccessModeUtil = exports.TransactionAccessModeUtil || (exports.TransactionAccessModeUtil = {}));\n//# sourceMappingURL=transaction-access-mode.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TypeHint;\n(function (TypeHint) {\n    TypeHint[\"DECIMAL\"] = \"DECIMAL\";\n    TypeHint[\"STRING\"] = \"STRING\";\n    TypeHint[\"DOUBLE\"] = \"DOUBLE\";\n    TypeHint[\"BIGINT_SIGNED\"] = \"BIGINT_SIGNED\";\n    TypeHint[\"BOOLEAN\"] = \"BOOLEAN\";\n    TypeHint[\"BUFFER\"] = \"BUFFER\";\n    TypeHint[\"NULL\"] = \"NULL\";\n    TypeHint[\"DATE_TIME\"] = \"DATE_TIME\";\n})(TypeHint = exports.TypeHint || (exports.TypeHint = {}));\n//# sourceMappingURL=type-hint.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst TypeMapUtil = require(\"./util\");\nexports.TypeMapUtil = TypeMapUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst TypeRefUtil = require(\"./util\");\nexports.TypeRefUtil = TypeRefUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction assertSameOwnEnumerableKeys(a, b) {\n    const aKeys = Object.keys(a);\n    const bKeys = Object.keys(b);\n    const extraKeys = aKeys.filter(k => !bKeys.includes(k));\n    const missingKeys = bKeys.filter(k => !aKeys.includes(k));\n    if (extraKeys.length > 0) {\n        if (missingKeys.length > 0) {\n            throw new Error(`Extra keys found: ${extraKeys.join(\",\")}; Missing keys found: ${missingKeys.join(\",\")}`);\n        }\n        else {\n            throw new Error(`Extra keys found: ${extraKeys.join(\",\")}`);\n        }\n    }\n    else {\n        if (missingKeys.length > 0) {\n            throw new Error(`Missing keys found: ${missingKeys.join(\",\")}`);\n        }\n        else {\n            //Do nothing\n        }\n    }\n}\nexports.assertSameOwnEnumerableKeys = assertSameOwnEnumerableKeys;\n//# sourceMappingURL=assert-same-own-enumerable-keys.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./assert-same-own-enumerable-keys\"));\n__export(require(\"./is-object-with-own-enumerable-keys\"));\n__export(require(\"./omit-own-enumerable\"));\n__export(require(\"./pick-own-enumerable\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isObjectWithOwnEnumerableKeys() {\n    return (raw, keys) => {\n        if (raw == undefined) {\n            return false;\n        }\n        if (!(raw instanceof Object)) {\n            return false;\n        }\n        for (const k of keys) {\n            if (!Object.prototype.hasOwnProperty.call(raw, k)) {\n                return false;\n            }\n            if (!Object.prototype.propertyIsEnumerable.call(raw, k)) {\n                return false;\n            }\n        }\n        return true;\n    };\n}\nexports.isObjectWithOwnEnumerableKeys = isObjectWithOwnEnumerableKeys;\n//# sourceMappingURL=is-object-with-own-enumerable-keys.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction omitOwnEnumerable(obj, keys) {\n    const result = {};\n    for (const k of Object.keys(obj)) {\n        if (Object.prototype.propertyIsEnumerable.call(obj, k) &&\n            keys.indexOf(k) < 0) {\n            result[k] = obj[k];\n        }\n    }\n    return result;\n}\nexports.omitOwnEnumerable = omitOwnEnumerable;\n//# sourceMappingURL=omit-own-enumerable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction pickOwnEnumerable(obj, keys) {\n    const result = {};\n    for (const k of keys) {\n        if (Object.prototype.hasOwnProperty.call(obj, k) &&\n            Object.prototype.propertyIsEnumerable.call(obj, k)) {\n            result[k] = obj[k];\n        }\n    }\n    return result;\n}\nexports.pickOwnEnumerable = pickOwnEnumerable;\n//# sourceMappingURL=pick-own-enumerable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst QueryUtil = require(\"./util\");\nfunction from(aliasedTable) {\n    return QueryUtil.newInstance()\n        .from(aliasedTable);\n}\nexports.from = from;\nfunction requireOuterQueryJoins(...aliasedTables) {\n    return QueryUtil.newInstance()\n        .requireOuterQueryJoins(...aliasedTables);\n}\nexports.requireOuterQueryJoins = requireOuterQueryJoins;\nfunction requireNullableOuterQueryJoins(...aliasedTables) {\n    return QueryUtil.newInstance()\n        .requireNullableOuterQueryJoins(...aliasedTables);\n}\nexports.requireNullableOuterQueryJoins = requireNullableOuterQueryJoins;\nfunction select(selectDelegate) {\n    return QueryUtil.newInstance()\n        .select(selectDelegate);\n}\nexports.select = select;\nfunction selectValue(selectValueDelegate) {\n    return QueryUtil.newInstance()\n        .selectValue(selectValueDelegate);\n}\nexports.selectValue = selectValue;\n//# sourceMappingURL=convenience.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./convenience\"));\n__export(require(\"./query-impl\"));\nconst QueryUtil = require(\"./util\");\nexports.QueryUtil = QueryUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @todo Rename to `UnifiedQueryUtil` or something\n */\nconst QueryUtil = require(\"./util\");\nconst query_base_1 = require(\"../query-base\");\nconst compound_query_1 = require(\"../compound-query\");\nconst execution_1 = require(\"../execution\");\nclass Query {\n    constructor(data, extraData) {\n        this.fromClause = data.fromClause;\n        this.selectClause = data.selectClause;\n        this.limitClause = data.limitClause;\n        this.compoundQueryClause = data.compoundQueryClause;\n        this.compoundQueryLimitClause = data.compoundQueryLimitClause;\n        this.mapDelegate = data.mapDelegate;\n        this.groupByClause = data.groupByClause;\n        this.whereClause = extraData.whereClause;\n        this.havingClause = extraData.havingClause;\n        this.orderByClause = extraData.orderByClause;\n        this.compoundQueryOrderByClause = extraData.compoundQueryOrderByClause;\n        this.isDistinct = extraData.isDistinct;\n    }\n    limit(maxRowCount) {\n        return QueryUtil.limit(this, maxRowCount);\n    }\n    offset(offset) {\n        return QueryUtil.offset(this, offset);\n    }\n    compoundQueryLimit(maxRowCount) {\n        return QueryUtil.compoundQueryLimit(this, maxRowCount);\n    }\n    compoundQueryOffset(offset) {\n        return QueryUtil.compoundQueryOffset(this, offset);\n    }\n    requireOuterQueryJoins(...aliasedTables) {\n        return QueryUtil.requireOuterQueryJoins(this, ...aliasedTables);\n    }\n    requireNullableOuterQueryJoins(...aliasedTables) {\n        return QueryUtil.requireNullableOuterQueryJoins(this, ...aliasedTables);\n    }\n    from(aliasedTable) {\n        return QueryUtil.from(this, aliasedTable);\n    }\n    crossJoin(aliasedTable) {\n        return QueryUtil.crossJoin(this, aliasedTable);\n    }\n    groupBy(groupByDelegate) {\n        return QueryUtil.groupBy(this, groupByDelegate);\n    }\n    having(havingDelegate) {\n        return QueryUtil.having(this, havingDelegate);\n    }\n    innerJoinUsingCandidateKey(srcDelegate, aliasedTable, eqCandidateKeyOfTableDelegate) {\n        return QueryUtil.innerJoinUsingCandidateKey(this, srcDelegate, aliasedTable, eqCandidateKeyOfTableDelegate);\n    }\n    innerJoinUsingPrimaryKey(srcDelegate, aliasedTable) {\n        return QueryUtil.innerJoinUsingPrimaryKey(this, srcDelegate, aliasedTable);\n    }\n    innerJoin(aliasedTable, onDelegate) {\n        return QueryUtil.innerJoin(this, aliasedTable, onDelegate);\n    }\n    leftJoinUsingCandidateKey(srcDelegate, aliasedTable, eqCandidateKeyOfTableDelegate) {\n        return QueryUtil.leftJoinUsingCandidateKey(this, srcDelegate, aliasedTable, eqCandidateKeyOfTableDelegate);\n    }\n    leftJoinUsingPrimaryKey(srcDelegate, aliasedTable) {\n        return QueryUtil.leftJoinUsingPrimaryKey(this, srcDelegate, aliasedTable);\n    }\n    leftJoin(aliasedTable, onDelegate) {\n        return QueryUtil.leftJoin(this, aliasedTable, onDelegate);\n    }\n    orderBy(orderByDelegate) {\n        return QueryUtil.orderBy(this, orderByDelegate);\n    }\n    selectValue(selectValueDelegate) {\n        return QueryUtil.selectValue(this, selectValueDelegate);\n    }\n    select(selectDelegate) {\n        return QueryUtil.select(this, selectDelegate);\n    }\n    compoundQueryOrderBy(compoundQueryOrderByDelegate) {\n        return QueryUtil.compoundQueryOrderBy(this, compoundQueryOrderByDelegate);\n    }\n    unionDistinct(targetQuery) {\n        return QueryUtil.compoundQuery(this, compound_query_1.CompoundQueryType.UNION, true, targetQuery);\n    }\n    unionAll(targetQuery) {\n        return QueryUtil.compoundQuery(this, compound_query_1.CompoundQueryType.UNION, false, targetQuery);\n    }\n    whereEqCandidateKey(\n    /**\n     * This construction effectively makes it impossible for `WhereEqCandidateKeyDelegate<>`\n     * to return a union type.\n     *\n     * This is unfortunate but a necessary compromise for now.\n     *\n     * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520199818\n     *\n     * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520201877\n     */\n    ...args) {\n        return QueryUtil.whereEqCandidateKey(this, ...args);\n    }\n    whereEqColumns(\n    /**\n     * This construction effectively makes it impossible for `WhereEqColumnsDelegate<>`\n     * to return a union type.\n     *\n     * This is unfortunate but a necessary compromise for now.\n     *\n     * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520199818\n     *\n     * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520201877\n     */\n    ...args) {\n        return QueryUtil.whereEqColumns(this, ...args);\n    }\n    whereEqInnerQueryPrimaryKey(srcDelegate, dstDelegate) {\n        return QueryUtil.whereEqInnerQueryPrimaryKey(this, srcDelegate, dstDelegate);\n    }\n    whereEqOuterQueryPrimaryKey(\n    /**\n     * This construction effectively makes it impossible for\n     * `WhereEqOuterQueryPrimaryKeySrcDelegate<>`\n     * to return a union type.\n     *\n     * This is unfortunate but a necessary compromise for now.\n     *\n     * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520199818\n     *\n     * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520201877\n     */\n    srcDelegate, dstDelegate) {\n        return QueryUtil.whereEqOuterQueryPrimaryKey(this, srcDelegate, dstDelegate);\n    }\n    whereEqPrimaryKey(\n    /**\n     * This construction effectively makes it impossible for `WhereEqPrimaryKeyDelegate<>`\n     * to return a union type.\n     *\n     * This is unfortunate but a necessary compromise for now.\n     *\n     * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520199818\n     *\n     * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520201877\n     */\n    ...args) {\n        return QueryUtil.whereEqPrimaryKey(this, ...args);\n    }\n    whereEqSuperKey(\n    /**\n     * This construction effectively makes it impossible for `WhereEqSuperKeyDelegate<>`\n     * to return a union type.\n     *\n     * This is unfortunate but a necessary compromise for now.\n     *\n     * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520199818\n     *\n     * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520201877\n     */\n    ...args) {\n        return QueryUtil.whereEqSuperKey(this, ...args);\n    }\n    whereEq(\n    /**\n     * This construction effectively makes it impossible for `WhereEqDelegate<>`\n     * to return a union type.\n     *\n     * This is unfortunate but a necessary compromise for now.\n     *\n     * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520199818\n     *\n     * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520201877\n     */\n    ...args) {\n        return QueryUtil.whereEq(this, ...args);\n    }\n    whereIsNotNull(whereIsNotNullDelegate) {\n        return QueryUtil.whereIsNotNull(this, whereIsNotNullDelegate);\n    }\n    whereIsNull(whereIsNullDelegate) {\n        return QueryUtil.whereIsNull(this, whereIsNullDelegate);\n    }\n    whereNullSafeEq(\n    /**\n     * This construction effectively makes it impossible for `WhereNullSafeEqDelegate<>`\n     * to return a union type.\n     *\n     * This is unfortunate but a necessary compromise for now.\n     *\n     * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520199818\n     *\n     * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520201877\n     */\n    ...args) {\n        return QueryUtil.whereNullSafeEq(this, ...args);\n    }\n    where(whereDelegate) {\n        return QueryUtil.where(this, whereDelegate);\n    }\n    as(alias) {\n        return query_base_1.QueryBaseUtil.as(this, alias);\n    }\n    correlate() {\n        return QueryUtil.correlate(this);\n    }\n    /**\n     * @todo Maybe implement `selectDistinct()` as a convenience method?\n     */\n    distinct() {\n        return QueryUtil.distinct(this);\n    }\n    /**\n     * Convenience method for,\n     * ```ts\n     *  tsql.coalesce(myQuery.limit(1), myDefaultValue);\n     * ```\n     *\n     * Usage,\n     * ```ts\n     *  myQuery.limit(1).coalesce(myDefaultValue);\n     * ```\n     */\n    coalesce(defaultValue) {\n        return query_base_1.QueryBaseUtil.coalesce(this, defaultValue);\n    }\n    /**\n     * Convenience method for,\n     * ```ts\n     *  tsql.throwIfNull(myQuery.limit(1));\n     * ```\n     *\n     * Usage,\n     * ```ts\n     *  myQuery.limit(1).throwIfNull();\n     * ```\n     */\n    throwIfNull() {\n        return query_base_1.QueryBaseUtil.throwIfNull(this);\n    }\n    /**\n     * Convenience method for,\n     * ```ts\n     *  myQuery.limit(1).coalesce(null).asc();\n     * ```\n     *\n     * Usage,\n     * ```ts\n     *  myQuery.limit(1).asc();\n     * ```\n     */\n    asc() {\n        return query_base_1.QueryBaseUtil.asc(this);\n    }\n    /**\n     * Convenience method for,\n     * ```ts\n     *  myQuery.limit(1).coalesce(null).desc();\n     * ```\n     *\n     * Usage,\n     * ```ts\n     *  myQuery.limit(1).desc();\n     * ```\n     */\n    desc() {\n        return query_base_1.QueryBaseUtil.desc(this);\n    }\n    /**\n     * Convenience method for,\n     * ```ts\n     *  myQuery.limit(1).coalesce(null).sort(sortDirection);\n     * ```\n     *\n     * Usage,\n     * ```ts\n     *  myQuery.limit(1).sort(sortDirection);\n     * ```\n     */\n    sort(sortDirection) {\n        return query_base_1.QueryBaseUtil.sort(this, sortDirection);\n    }\n    map(mapDelegate) {\n        if (this.mapDelegate == undefined) {\n            return QueryUtil.mapInitial(this, mapDelegate);\n        }\n        else {\n            return QueryUtil.mapCompose(this, mapDelegate);\n        }\n    }\n    fetchAllMapped(connection) {\n        return execution_1.ExecutionUtil.fetchAllMapped(this, connection);\n    }\n    fetchAllUnmappedFlattened(connection) {\n        return execution_1.ExecutionUtil.fetchAllUnmappedFlattened(this, connection);\n    }\n    fetchAllUnmapped(connection) {\n        return execution_1.ExecutionUtil.fetchAllUnmapped(this, connection);\n    }\n    fetchAll(connection) {\n        return execution_1.ExecutionUtil.fetchAll(this, connection);\n    }\n    fetchOneOrUndefined(connection) {\n        return execution_1.ExecutionUtil.fetchOneOrUndefined(this, connection);\n    }\n    fetchOneOr(connection, defaultValue) {\n        return execution_1.ExecutionUtil.fetchOneOr(this, connection, defaultValue);\n    }\n    fetchOne(connection) {\n        return execution_1.ExecutionUtil.fetchOne(this, connection);\n    }\n    fetchValueArray(connection) {\n        return execution_1.ExecutionUtil.fetchValueArray(this, connection);\n    }\n    fetchValueOrUndefined(connection) {\n        return execution_1.ExecutionUtil.fetchValueOrUndefined(this, connection);\n    }\n    fetchValueOr(connection, defaultValue) {\n        return execution_1.ExecutionUtil.fetchValueOr(this, connection, defaultValue);\n    }\n    fetchValue(connection) {\n        return execution_1.ExecutionUtil.fetchValue(this, connection);\n    }\n    count(connection) {\n        return execution_1.ExecutionUtil.count(this, connection);\n    }\n    paginate(connection, rawArgs) {\n        return execution_1.ExecutionUtil.paginate(this, connection, rawArgs);\n    }\n    exists(connection) {\n        return execution_1.ExecutionUtil.exists(this, connection);\n    }\n    assertExists(connection) {\n        return execution_1.ExecutionUtil.assertExists(this, connection);\n    }\n    emulatedCursor(connection, \n    /**\n     * If set, determines the starting `page` of the cursor.\n     * The `rowsPerPage` setting determines how many rows are buffered into memory at a time.\n     */\n    rawArgs = {}) {\n        return execution_1.ExecutionUtil.emulatedCursor(this, connection, rawArgs);\n    }\n    insert(connection, table, rowDelegate) {\n        return execution_1.ExecutionUtil.insertSelect(connection, this, table, rowDelegate);\n    }\n    insertIgnore(connection, table, rowDelegate) {\n        return execution_1.ExecutionUtil.insertIgnoreSelect(connection, this, table, rowDelegate);\n    }\n    replace(connection, table, rowDelegate) {\n        return execution_1.ExecutionUtil.replaceSelect(connection, this, table, rowDelegate);\n    }\n}\nexports.Query = Query;\n//# sourceMappingURL=query-impl.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./new-instance\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_clause_1 = require(\"../../../from-clause\");\nconst query_impl_1 = require(\"../../query-impl\");\nfunction newInstance() {\n    const result = new query_impl_1.Query({\n        fromClause: from_clause_1.FromClauseUtil.newInstance(),\n        selectClause: undefined,\n        limitClause: undefined,\n        compoundQueryClause: undefined,\n        compoundQueryLimitClause: undefined,\n        mapDelegate: undefined,\n        groupByClause: undefined,\n    }, {\n        whereClause: undefined,\n        havingClause: undefined,\n        orderByClause: undefined,\n        compoundQueryOrderByClause: undefined,\n        isDistinct: false,\n    });\n    return result;\n}\nexports.newInstance = newInstance;\n//# sourceMappingURL=new-instance.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./constructor\"));\n__export(require(\"./operation\"));\n__export(require(\"./predicate\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst limit_clause_1 = require(\"../../../../limit-clause\");\nconst query_impl_1 = require(\"../../../query-impl\");\nfunction compoundQueryLimit(query, maxRowCount) {\n    const compoundQueryLimitClause = limit_clause_1.LimitClauseUtil.limit(query.compoundQueryLimitClause, maxRowCount);\n    const { fromClause, selectClause, limitClause, compoundQueryClause, \n    //compoundQueryLimitClause,\n    mapDelegate, groupByClause, } = query;\n    const result = new query_impl_1.Query({\n        fromClause,\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate,\n        groupByClause,\n    }, query);\n    return result;\n}\nexports.compoundQueryLimit = compoundQueryLimit;\n//# sourceMappingURL=compound-query-limit.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./compound-query-limit\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst limit_clause_1 = require(\"../../../../limit-clause\");\nconst query_impl_1 = require(\"../../../query-impl\");\nfunction compoundQueryOffset(query, offset) {\n    const compoundQueryLimitClause = limit_clause_1.LimitClauseUtil.offset(query.compoundQueryLimitClause, offset);\n    const { fromClause, selectClause, limitClause, compoundQueryClause, \n    //compoundQueryLimitClause,\n    mapDelegate, groupByClause, } = query;\n    const result = new query_impl_1.Query({\n        fromClause,\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate,\n        groupByClause,\n    }, query);\n    return result;\n}\nexports.compoundQueryOffset = compoundQueryOffset;\n//# sourceMappingURL=compound-query-offset.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./compound-query-offset\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compound_query_order_by_clause_1 = require(\"../../../compound-query-order-by-clause\");\nconst query_impl_1 = require(\"../../query-impl\");\nfunction compoundQueryOrderBy(query, compoundQueryOrderByDelegate) {\n    const compoundQueryOrderByClause = compound_query_order_by_clause_1.CompoundQueryOrderByClauseUtil.compoundQueryOrderBy(query.selectClause, query.compoundQueryOrderByClause, compoundQueryOrderByDelegate);\n    const { fromClause, selectClause, limitClause, compoundQueryClause, compoundQueryLimitClause, mapDelegate, groupByClause, whereClause, havingClause, orderByClause, \n    //compoundQueryOrderByClause,\n    isDistinct, } = query;\n    const result = new query_impl_1.Query({\n        fromClause,\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate,\n        groupByClause,\n    }, {\n        whereClause,\n        havingClause,\n        orderByClause,\n        compoundQueryOrderByClause,\n        isDistinct,\n    });\n    return result;\n}\nexports.compoundQueryOrderBy = compoundQueryOrderBy;\n//# sourceMappingURL=compound-query-order-by.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst query_impl_1 = require(\"../../query-impl\");\nconst compound_query_clause_1 = require(\"../../../compound-query-clause\");\nfunction compoundQuery(query, compoundQueryType, isDistinct, targetQuery) {\n    const { selectClause, compoundQueryClause, } = compound_query_clause_1.CompoundQueryClauseUtil.compoundQuery(query.fromClause, query.selectClause, query.compoundQueryClause, compoundQueryType, isDistinct, targetQuery);\n    const { fromClause, \n    //selectClause,\n    limitClause, \n    //compoundQueryClause,\n    compoundQueryLimitClause, mapDelegate, groupByClause, } = query;\n    const result = new query_impl_1.Query({\n        fromClause,\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate,\n        groupByClause,\n    }, query);\n    return result;\n}\nexports.compoundQuery = compoundQuery;\n//# sourceMappingURL=compound-query.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_clause_1 = require(\"../../../from-clause\");\nconst query_impl_1 = require(\"../../query-impl\");\n/**\n * @todo A reference to the `query` needs to be added to the following,\n * + `OnDelegate`\n * + `HavingDelegate`\n * + `OrderByDelegate`\n * + `SelectDelegate`\n * + `WhereDelegate`\n *\n * Basically, anywhere a correlated subquery is allowed.\n */\nfunction correlate(query) {\n    const result = new query_impl_1.Query({\n        fromClause: from_clause_1.FromClauseUtil.correlate(query.fromClause),\n        selectClause: undefined,\n        limitClause: undefined,\n        compoundQueryClause: undefined,\n        compoundQueryLimitClause: undefined,\n        mapDelegate: undefined,\n        groupByClause: undefined,\n    }, {\n        whereClause: undefined,\n        havingClause: undefined,\n        orderByClause: undefined,\n        compoundQueryOrderByClause: undefined,\n        isDistinct: false,\n    });\n    return result;\n}\nexports.correlate = correlate;\n//# sourceMappingURL=correlate.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_clause_1 = require(\"../../../from-clause\");\nconst query_impl_1 = require(\"../../query-impl\");\nconst predicate_1 = require(\"../predicate\");\nfunction crossJoin(query, aliasedTable) {\n    predicate_1.assertValidJoinTarget(query, aliasedTable);\n    const { \n    //fromClause,\n    selectClause, limitClause, compoundQueryClause, compoundQueryLimitClause, mapDelegate, groupByClause, } = query;\n    const result = new query_impl_1.Query({\n        fromClause: from_clause_1.FromClauseUtil.crossJoin(query.fromClause, aliasedTable),\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate,\n        groupByClause,\n    }, query);\n    return result;\n}\nexports.crossJoin = crossJoin;\n//# sourceMappingURL=cross-join.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst query_impl_1 = require(\"../../query-impl\");\nfunction distinct(query) {\n    const { fromClause, selectClause, limitClause, compoundQueryClause, compoundQueryLimitClause, mapDelegate, groupByClause, whereClause, havingClause, orderByClause, compoundQueryOrderByClause, } = query;\n    const result = new query_impl_1.Query(\n    /**\n     * If you replace the below object literal with\n     * just the variable `query`, you will cause `tsc`\n     * to OOM.\n     */\n    //query\n    {\n        fromClause,\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate,\n        groupByClause,\n    }, {\n        whereClause,\n        havingClause,\n        orderByClause,\n        compoundQueryOrderByClause,\n        isDistinct: true,\n    });\n    return result;\n}\nexports.distinct = distinct;\n//# sourceMappingURL=distinct.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_clause_1 = require(\"../../../from-clause\");\nconst query_impl_1 = require(\"../../query-impl\");\nconst predicate_1 = require(\"../predicate\");\nfunction from(query, aliasedTable) {\n    predicate_1.assertValidJoinTarget(query, aliasedTable);\n    const { \n    //fromClause,\n    selectClause, limitClause, compoundQueryClause, compoundQueryLimitClause, mapDelegate, groupByClause, } = query;\n    const result = new query_impl_1.Query({\n        fromClause: from_clause_1.FromClauseUtil.from(query.fromClause, aliasedTable),\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate,\n        groupByClause,\n    }, query);\n    return result;\n}\nexports.from = from;\n//# sourceMappingURL=from.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst group_by_clause_1 = require(\"../../../group-by-clause\");\nconst query_impl_1 = require(\"../../query-impl\");\nfunction groupBy(query, groupByDelegate) {\n    const groupByClause = group_by_clause_1.GroupByClauseUtil.groupBy(query.fromClause, query.groupByClause, groupByDelegate);\n    const { fromClause, selectClause, limitClause, compoundQueryClause, compoundQueryLimitClause, mapDelegate, whereClause, havingClause, orderByClause, compoundQueryOrderByClause, isDistinct, } = query;\n    const result = new query_impl_1.Query({\n        fromClause,\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate,\n        groupByClause,\n    }, {\n        whereClause,\n        havingClause,\n        orderByClause,\n        compoundQueryOrderByClause,\n        isDistinct,\n    });\n    return result;\n}\nexports.groupBy = groupBy;\n//# sourceMappingURL=group-by.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst having_clause_1 = require(\"../../../having-clause\");\nconst query_impl_1 = require(\"../../query-impl\");\nfunction having(query, havingDelegate) {\n    const havingClause = having_clause_1.HavingClauseUtil.having(query.fromClause, query.groupByClause, query.havingClause, havingDelegate);\n    const { fromClause, selectClause, limitClause, compoundQueryClause, compoundQueryLimitClause, mapDelegate, groupByClause, whereClause, orderByClause, compoundQueryOrderByClause, isDistinct, } = query;\n    const result = new query_impl_1.Query({\n        fromClause,\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate,\n        groupByClause,\n    }, {\n        whereClause,\n        havingClause,\n        orderByClause,\n        compoundQueryOrderByClause,\n        isDistinct,\n    });\n    return result;\n}\nexports.having = having;\n//# sourceMappingURL=having.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./compound-query-limit\"));\n__export(require(\"./compound-query-offset\"));\n__export(require(\"./limit\"));\n__export(require(\"./map\"));\n__export(require(\"./offset\"));\n__export(require(\"./compound-query-order-by\"));\n__export(require(\"./compound-query\"));\n__export(require(\"./correlate\"));\n__export(require(\"./cross-join\"));\n__export(require(\"./distinct\"));\n__export(require(\"./from\"));\n__export(require(\"./group-by\"));\n__export(require(\"./having\"));\n__export(require(\"./inner-join-using-candidate-key\"));\n__export(require(\"./inner-join-using-primary-key\"));\n__export(require(\"./inner-join\"));\n__export(require(\"./left-join-using-candidate-key\"));\n__export(require(\"./left-join-using-primary-key\"));\n__export(require(\"./left-join\"));\n__export(require(\"./order-by\"));\n__export(require(\"./require-nullable-outer-query-joins\"));\n__export(require(\"./require-outer-query-joins\"));\n__export(require(\"./select-value\"));\n__export(require(\"./select\"));\n__export(require(\"./where-eq-candidate-key\"));\n__export(require(\"./where-eq-columns\"));\n__export(require(\"./where-eq-inner-query-primary-key\"));\n__export(require(\"./where-eq-outer-query-primary-key\"));\n__export(require(\"./where-eq-primary-key\"));\n__export(require(\"./where-eq-super-key\"));\n__export(require(\"./where-eq\"));\n__export(require(\"./where-is-not-null\"));\n__export(require(\"./where-is-null\"));\n__export(require(\"./where-null-safe-eq\"));\n__export(require(\"./where\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_clause_1 = require(\"../../../from-clause\");\nconst query_impl_1 = require(\"../../query-impl\");\nconst predicate_1 = require(\"../predicate\");\nfunction innerJoinUsingCandidateKey(query, srcDelegate, aliasedTable, eqCandidateKeyOfTableDelegate) {\n    predicate_1.assertValidJoinTarget(query, aliasedTable);\n    const { \n    //fromClause,\n    selectClause, limitClause, compoundQueryClause, compoundQueryLimitClause, mapDelegate, groupByClause, } = query;\n    const result = new query_impl_1.Query({\n        fromClause: from_clause_1.FromClauseUtil.innerJoinUsingCandidateKey(query.fromClause, srcDelegate, aliasedTable, eqCandidateKeyOfTableDelegate),\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate,\n        groupByClause,\n    }, query);\n    return result;\n}\nexports.innerJoinUsingCandidateKey = innerJoinUsingCandidateKey;\n//# sourceMappingURL=inner-join-using-candidate-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_clause_1 = require(\"../../../from-clause\");\nconst query_impl_1 = require(\"../../query-impl\");\nconst predicate_1 = require(\"../predicate\");\nfunction innerJoinUsingPrimaryKey(query, srcDelegate, aliasedTable) {\n    predicate_1.assertValidJoinTarget(query, aliasedTable);\n    const { \n    //fromClause,\n    selectClause, limitClause, compoundQueryClause, compoundQueryLimitClause, mapDelegate, groupByClause, } = query;\n    const result = new query_impl_1.Query({\n        fromClause: from_clause_1.FromClauseUtil.innerJoinUsingPrimaryKey(query.fromClause, srcDelegate, aliasedTable),\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate,\n        groupByClause,\n    }, query);\n    return result;\n}\nexports.innerJoinUsingPrimaryKey = innerJoinUsingPrimaryKey;\n//# sourceMappingURL=inner-join-using-primary-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_clause_1 = require(\"../../../from-clause\");\nconst on_clause_1 = require(\"../../../on-clause\");\nconst query_impl_1 = require(\"../../query-impl\");\nconst predicate_1 = require(\"../predicate\");\nfunction innerJoin(query, aliasedTable, onDelegate) {\n    predicate_1.assertValidJoinTarget(query, aliasedTable);\n    const { \n    //fromClause,\n    selectClause, limitClause, compoundQueryClause, compoundQueryLimitClause, mapDelegate, groupByClause, } = query;\n    const result = new query_impl_1.Query({\n        fromClause: from_clause_1.FromClauseUtil.innerJoin(query.fromClause, aliasedTable, columns => {\n            const rawOnClause = onDelegate(columns);\n            /**\n             * @todo Investigate assignability\n             */\n            const result = rawOnClause;\n            on_clause_1.OnClauseUtil.assertNoOuterQueryUsedRef(query.fromClause, result);\n            return result;\n        }),\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate,\n        groupByClause,\n    }, query);\n    return result;\n}\nexports.innerJoin = innerJoin;\n//# sourceMappingURL=inner-join.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_clause_1 = require(\"../../../from-clause\");\nconst query_impl_1 = require(\"../../query-impl\");\nconst predicate_1 = require(\"../predicate\");\nfunction leftJoinUsingCandidateKey(query, srcDelegate, aliasedTable, eqCandidateKeyOfTableDelegate) {\n    predicate_1.assertValidJoinTarget(query, aliasedTable);\n    const { \n    //fromClause,\n    selectClause, limitClause, compoundQueryClause, compoundQueryLimitClause, mapDelegate, groupByClause, } = query;\n    const result = new query_impl_1.Query({\n        fromClause: from_clause_1.FromClauseUtil.leftJoinUsingCandidateKey(query.fromClause, srcDelegate, aliasedTable, eqCandidateKeyOfTableDelegate),\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate,\n        groupByClause,\n    }, query);\n    return result;\n}\nexports.leftJoinUsingCandidateKey = leftJoinUsingCandidateKey;\n//# sourceMappingURL=left-join-using-candidate-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_clause_1 = require(\"../../../from-clause\");\nconst query_impl_1 = require(\"../../query-impl\");\nconst predicate_1 = require(\"../predicate\");\nfunction leftJoinUsingPrimaryKey(query, srcDelegate, aliasedTable) {\n    predicate_1.assertValidJoinTarget(query, aliasedTable);\n    const { \n    //fromClause,\n    selectClause, limitClause, compoundQueryClause, compoundQueryLimitClause, mapDelegate, groupByClause, } = query;\n    const result = new query_impl_1.Query({\n        fromClause: from_clause_1.FromClauseUtil.leftJoinUsingPrimaryKey(query.fromClause, srcDelegate, aliasedTable),\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate,\n        groupByClause,\n    }, query);\n    return result;\n}\nexports.leftJoinUsingPrimaryKey = leftJoinUsingPrimaryKey;\n//# sourceMappingURL=left-join-using-primary-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_clause_1 = require(\"../../../from-clause\");\nconst on_clause_1 = require(\"../../../on-clause\");\nconst query_impl_1 = require(\"../../query-impl\");\nconst predicate_1 = require(\"../predicate\");\nfunction leftJoin(query, aliasedTable, onDelegate) {\n    predicate_1.assertValidJoinTarget(query, aliasedTable);\n    const { \n    //fromClause,\n    selectClause, limitClause, compoundQueryClause, compoundQueryLimitClause, mapDelegate, groupByClause, } = query;\n    const result = new query_impl_1.Query({\n        fromClause: from_clause_1.FromClauseUtil.leftJoin(query.fromClause, aliasedTable, columns => {\n            const rawOnClause = onDelegate(columns);\n            /**\n             * @todo Investigate assignability\n             */\n            const result = rawOnClause;\n            on_clause_1.OnClauseUtil.assertNoOuterQueryUsedRef(query.fromClause, result);\n            return result;\n        }),\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate,\n        groupByClause,\n    }, query);\n    return result;\n}\nexports.leftJoin = leftJoin;\n//# sourceMappingURL=left-join.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./limit\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst limit_clause_1 = require(\"../../../../limit-clause\");\nconst query_impl_1 = require(\"../../../query-impl\");\nfunction limit(query, maxRowCount) {\n    const limitClause = limit_clause_1.LimitClauseUtil.limit(query.limitClause, maxRowCount);\n    const { fromClause, selectClause, \n    //limitClause,\n    compoundQueryClause, compoundQueryLimitClause, mapDelegate, groupByClause, } = query;\n    const result = new query_impl_1.Query({\n        fromClause,\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate,\n        groupByClause,\n    }, query);\n    return result;\n}\nexports.limit = limit;\n//# sourceMappingURL=limit.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./map-compose\"));\n__export(require(\"./map-initial\"));\n__export(require(\"./map\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst query_impl_1 = require(\"../../../query-impl\");\nconst map_delegate_1 = require(\"../../../../map-delegate\");\nfunction mapCompose(query, mapDelegate) {\n    const { fromClause, selectClause, limitClause, compoundQueryClause, compoundQueryLimitClause, \n    //mapDelegate,\n    groupByClause, } = query;\n    const result = new query_impl_1.Query({\n        fromClause,\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate: (map_delegate_1.MapDelegateUtil.compose(\n        /**\n         * @todo Clean up?\n         */\n        query.mapDelegate, mapDelegate)),\n        groupByClause,\n    }, query);\n    return result;\n}\nexports.mapCompose = mapCompose;\n//# sourceMappingURL=map-compose.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst query_impl_1 = require(\"../../../query-impl\");\nfunction mapInitial(query, mapDelegate) {\n    const { fromClause, selectClause, limitClause, compoundQueryClause, compoundQueryLimitClause, \n    //mapDelegate,\n    groupByClause, } = query;\n    const result = new query_impl_1.Query({\n        fromClause,\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate: mapDelegate,\n        groupByClause,\n    }, query);\n    return result;\n}\nexports.mapInitial = mapInitial;\n//# sourceMappingURL=map-initial.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst map_initial_1 = require(\"./map-initial\");\nconst map_compose_1 = require(\"./map-compose\");\n/**\n * @todo Clean up usages of `any`\n *\n * Removing the usages of `any` will cause build times to jump 30s!\n */\nfunction map(query, mapDelegate) {\n    if (query.mapDelegate == undefined) {\n        return map_initial_1.mapInitial(query, mapDelegate);\n    }\n    else {\n        return map_compose_1.mapCompose(query, mapDelegate);\n    }\n}\nexports.map = map;\n//# sourceMappingURL=map.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./offset\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst limit_clause_1 = require(\"../../../../limit-clause\");\nconst query_impl_1 = require(\"../../../query-impl\");\nfunction offset(query, offset) {\n    const limitClause = limit_clause_1.LimitClauseUtil.offset(query.limitClause, offset);\n    const { fromClause, selectClause, \n    //limitClause,\n    compoundQueryClause, compoundQueryLimitClause, mapDelegate, groupByClause, } = query;\n    const result = new query_impl_1.Query({\n        fromClause,\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate,\n        groupByClause,\n    }, query);\n    return result;\n}\nexports.offset = offset;\n//# sourceMappingURL=offset.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst order_by_clause_1 = require(\"../../../order-by-clause\");\nconst query_impl_1 = require(\"../../query-impl\");\nconst correlate_1 = require(\"./correlate\");\nfunction orderBy(query, orderByDelegate) {\n    const orderByClause = order_by_clause_1.OrderByClauseUtil.orderBy(query.fromClause, query.groupByClause, query.selectClause, query.orderByClause, (columns) => {\n        return orderByDelegate(columns, correlate_1.correlate(query));\n    });\n    const { fromClause, selectClause, limitClause, compoundQueryClause, compoundQueryLimitClause, mapDelegate, groupByClause, whereClause, havingClause, compoundQueryOrderByClause, isDistinct, } = query;\n    const result = new query_impl_1.Query({\n        fromClause,\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate,\n        groupByClause,\n    }, {\n        whereClause,\n        havingClause,\n        orderByClause,\n        compoundQueryOrderByClause,\n        isDistinct,\n    });\n    return result;\n}\nexports.orderBy = orderBy;\n//# sourceMappingURL=order-by.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_clause_1 = require(\"../../../from-clause\");\nconst query_impl_1 = require(\"../../query-impl\");\nfunction requireNullableOuterQueryJoins(query, ...aliasedTables) {\n    const { \n    //fromClause,\n    selectClause, limitClause, compoundQueryClause, compoundQueryLimitClause, mapDelegate, groupByClause, } = query;\n    const result = new query_impl_1.Query({\n        fromClause: from_clause_1.FromClauseUtil.requireNullableOuterQueryJoins(query.fromClause, ...aliasedTables),\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate,\n        groupByClause,\n    }, query);\n    return result;\n}\nexports.requireNullableOuterQueryJoins = requireNullableOuterQueryJoins;\n//# sourceMappingURL=require-nullable-outer-query-joins.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_clause_1 = require(\"../../../from-clause\");\nconst query_impl_1 = require(\"../../query-impl\");\nfunction requireOuterQueryJoins(query, ...aliasedTables) {\n    const { \n    //fromClause,\n    selectClause, limitClause, compoundQueryClause, compoundQueryLimitClause, mapDelegate, groupByClause, } = query;\n    const result = new query_impl_1.Query({\n        fromClause: from_clause_1.FromClauseUtil.requireOuterQueryJoins(query.fromClause, ...aliasedTables),\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate,\n        groupByClause,\n    }, query);\n    return result;\n}\nexports.requireOuterQueryJoins = requireOuterQueryJoins;\n//# sourceMappingURL=require-outer-query-joins.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst select_clause_1 = require(\"../../../select-clause\");\nconst select_1 = require(\"./select\");\n/**\n * @todo Rename to `selectScalar`?\n */\nfunction selectValue(query, selectValueDelegate) {\n    return select_1.select(query, (columns, subquery) => select_clause_1.SelectClauseUtil.valueFromBuiltInExpr(selectValueDelegate(columns, subquery)));\n}\nexports.selectValue = selectValue;\n//# sourceMappingURL=select-value.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst select_clause_1 = require(\"../../../select-clause\");\nconst query_base_1 = require(\"../../../query-base\");\nconst query_impl_1 = require(\"../../query-impl\");\nconst correlate_1 = require(\"./correlate\");\nconst built_in_expr_1 = require(\"../../../built-in-expr\");\nfunction select(query, selectDelegate\n//selectDelegate : SelectDelegate<QueryT[\"fromClause\"], QueryT[\"selectClause\"], SelectsT>\n) {\n    if (!query_base_1.QueryBaseUtil.isBeforeCompoundQueryClause(query)) {\n        throw new Error(`Cannot SELECT after COMPOUND QUERY clause; this will change the number of columns`);\n    }\n    //const correlated = correlate<QueryT>(query);\n    const selectClause = select_clause_1.SelectClauseUtil.select(query.fromClause, query.groupByClause, query.selectClause, (columns) => {\n        return selectDelegate(columns, correlate_1.correlate(query));\n    });\n    const { fromClause, \n    //selectClause,\n    limitClause, compoundQueryClause, compoundQueryLimitClause, mapDelegate, groupByClause, } = query;\n    const result = new query_impl_1.Query({\n        fromClause,\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate,\n        groupByClause: (groupByClause != undefined ?\n            groupByClause :\n            selectClause.some(selectItem => (built_in_expr_1.BuiltInExprUtil.isBuiltInExpr(selectItem) &&\n                built_in_expr_1.BuiltInExprUtil.isAggregate(selectItem))) ?\n                [] :\n                undefined),\n    }, query);\n    return result;\n}\nexports.select = select;\n//# sourceMappingURL=select.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_clause_1 = require(\"../../../from-clause\");\nconst query_impl_1 = require(\"../../query-impl\");\nfunction whereEqCandidateKey(query, \n/**\n * This construction effectively makes it impossible for `WhereEqCandidateKeyDelegate<>`\n * to return a union type.\n *\n * This is unfortunate but a necessary compromise for now.\n *\n * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520199818\n *\n * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520201877\n */\n...args) {\n    const { fromClause, whereClause, } = from_clause_1.FromClauseUtil.whereEqCandidateKey(query.fromClause, query.whereClause, ...args);\n    const { \n    //fromClause,\n    selectClause, limitClause, compoundQueryClause, compoundQueryLimitClause, mapDelegate, groupByClause, havingClause, orderByClause, compoundQueryOrderByClause, isDistinct, } = query;\n    const result = new query_impl_1.Query({\n        fromClause,\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate,\n        groupByClause,\n    }, {\n        whereClause,\n        havingClause,\n        orderByClause,\n        compoundQueryOrderByClause,\n        isDistinct,\n    });\n    return result;\n}\nexports.whereEqCandidateKey = whereEqCandidateKey;\n//# sourceMappingURL=where-eq-candidate-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_clause_1 = require(\"../../../from-clause\");\nconst query_impl_1 = require(\"../../query-impl\");\nfunction whereEqColumns(query, \n/**\n * This construction effectively makes it impossible for `WhereEqColumnsDelegate<>`\n * to return a union type.\n *\n * This is unfortunate but a necessary compromise for now.\n *\n * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520199818\n *\n * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520201877\n */\n...args) {\n    const { fromClause, whereClause, } = from_clause_1.FromClauseUtil.whereEqColumns(query.fromClause, query.whereClause, ...args);\n    const { \n    //fromClause,\n    selectClause, limitClause, compoundQueryClause, compoundQueryLimitClause, mapDelegate, groupByClause, havingClause, orderByClause, compoundQueryOrderByClause, isDistinct, } = query;\n    const result = new query_impl_1.Query({\n        fromClause,\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate,\n        groupByClause,\n    }, {\n        whereClause,\n        havingClause,\n        orderByClause,\n        compoundQueryOrderByClause,\n        isDistinct,\n    });\n    return result;\n}\nexports.whereEqColumns = whereEqColumns;\n//# sourceMappingURL=where-eq-columns.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_clause_1 = require(\"../../../from-clause\");\nconst query_impl_1 = require(\"../../query-impl\");\nfunction whereEqInnerQueryPrimaryKey(query, srcDelegate, dstDelegate) {\n    const { fromClause, whereClause, } = from_clause_1.FromClauseUtil.whereEqInnerQueryPrimaryKey(query.fromClause, query.whereClause, srcDelegate, dstDelegate);\n    const { \n    //fromClause,\n    selectClause, limitClause, compoundQueryClause, compoundQueryLimitClause, mapDelegate, groupByClause, havingClause, orderByClause, compoundQueryOrderByClause, isDistinct, } = query;\n    const result = new query_impl_1.Query({\n        fromClause,\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate,\n        groupByClause,\n    }, {\n        whereClause,\n        havingClause,\n        orderByClause,\n        compoundQueryOrderByClause,\n        isDistinct,\n    });\n    return result;\n}\nexports.whereEqInnerQueryPrimaryKey = whereEqInnerQueryPrimaryKey;\n//# sourceMappingURL=where-eq-inner-query-primary-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_clause_1 = require(\"../../../from-clause\");\nconst query_impl_1 = require(\"../../query-impl\");\nfunction whereEqOuterQueryPrimaryKey(query, \n/**\n * This construction effectively makes it impossible for\n * `WhereEqOuterQueryPrimaryKeySrcDelegate<>`\n * to return a union type.\n *\n * This is unfortunate but a necessary compromise for now.\n *\n * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520199818\n *\n * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520201877\n */\nsrcDelegate, dstDelegate) {\n    const { fromClause, whereClause, } = from_clause_1.FromClauseUtil.whereEqOuterQueryPrimaryKey(query.fromClause, query.whereClause, srcDelegate, dstDelegate);\n    const { \n    //fromClause,\n    selectClause, limitClause, compoundQueryClause, compoundQueryLimitClause, mapDelegate, groupByClause, havingClause, orderByClause, compoundQueryOrderByClause, isDistinct, } = query;\n    const result = new query_impl_1.Query({\n        fromClause,\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate,\n        groupByClause,\n    }, {\n        whereClause,\n        havingClause,\n        orderByClause,\n        compoundQueryOrderByClause,\n        isDistinct,\n    });\n    return result;\n}\nexports.whereEqOuterQueryPrimaryKey = whereEqOuterQueryPrimaryKey;\n//# sourceMappingURL=where-eq-outer-query-primary-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_clause_1 = require(\"../../../from-clause\");\nconst query_impl_1 = require(\"../../query-impl\");\nfunction whereEqPrimaryKey(query, \n/**\n * This construction effectively makes it impossible for `WhereEqPrimaryKeyDelegate<>`\n * to return a union type.\n *\n * This is unfortunate but a necessary compromise for now.\n *\n * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520199818\n *\n * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520201877\n */\n...args) {\n    const { fromClause, whereClause, } = from_clause_1.FromClauseUtil.whereEqPrimaryKey(query.fromClause, query.whereClause, ...args);\n    const { \n    //fromClause,\n    selectClause, limitClause, compoundQueryClause, compoundQueryLimitClause, mapDelegate, groupByClause, havingClause, orderByClause, compoundQueryOrderByClause, isDistinct, } = query;\n    const result = new query_impl_1.Query({\n        fromClause,\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate,\n        groupByClause,\n    }, {\n        whereClause,\n        havingClause,\n        orderByClause,\n        compoundQueryOrderByClause,\n        isDistinct,\n    });\n    return result;\n}\nexports.whereEqPrimaryKey = whereEqPrimaryKey;\n//# sourceMappingURL=where-eq-primary-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_clause_1 = require(\"../../../from-clause\");\nconst query_impl_1 = require(\"../../query-impl\");\nconst expr_library_1 = require(\"../../../expr-library\");\nfunction whereEqSuperKey(query, \n/**\n * This construction effectively makes it impossible for `WhereEqSuperKeyDelegate<>`\n * to return a union type.\n *\n * This is unfortunate but a necessary compromise for now.\n *\n * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520199818\n *\n * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520201877\n */\n...args) {\n    const { fromClause, whereClause, } = from_clause_1.FromClauseUtil.whereEqSuperKey(query.fromClause, query.whereClause, expr_library_1.eqSuperKey, ...args);\n    const { \n    //fromClause,\n    selectClause, limitClause, compoundQueryClause, compoundQueryLimitClause, mapDelegate, groupByClause, havingClause, orderByClause, compoundQueryOrderByClause, isDistinct, } = query;\n    const result = new query_impl_1.Query({\n        fromClause,\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate,\n        groupByClause,\n    }, {\n        whereClause,\n        havingClause,\n        orderByClause,\n        compoundQueryOrderByClause,\n        isDistinct,\n    });\n    return result;\n}\nexports.whereEqSuperKey = whereEqSuperKey;\n//# sourceMappingURL=where-eq-super-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_clause_1 = require(\"../../../from-clause\");\nconst query_impl_1 = require(\"../../query-impl\");\nfunction whereEq(query, \n/**\n * This construction effectively makes it impossible for `WhereEqDelegate<>`\n * to return a union type.\n *\n * This is unfortunate but a necessary compromise for now.\n *\n * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520199818\n *\n * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520201877\n */\n...args) {\n    const { fromClause, whereClause, } = from_clause_1.FromClauseUtil.whereEq(query.fromClause, query.whereClause, ...args);\n    const { \n    //fromClause,\n    selectClause, limitClause, compoundQueryClause, compoundQueryLimitClause, mapDelegate, groupByClause, havingClause, orderByClause, compoundQueryOrderByClause, isDistinct, } = query;\n    const result = new query_impl_1.Query({\n        fromClause,\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate,\n        groupByClause,\n    }, {\n        whereClause,\n        havingClause,\n        orderByClause,\n        compoundQueryOrderByClause,\n        isDistinct,\n    });\n    return result;\n}\nexports.whereEq = whereEq;\n//# sourceMappingURL=where-eq.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_clause_1 = require(\"../../../from-clause\");\nconst query_impl_1 = require(\"../../query-impl\");\nfunction whereIsNotNull(query, whereIsNotNullDelegate) {\n    const { fromClause, whereClause, } = from_clause_1.FromClauseUtil.whereIsNotNull(query.fromClause, query.whereClause, whereIsNotNullDelegate);\n    const { \n    //fromClause,\n    selectClause, limitClause, compoundQueryClause, compoundQueryLimitClause, mapDelegate, groupByClause, havingClause, orderByClause, compoundQueryOrderByClause, isDistinct, } = query;\n    const result = new query_impl_1.Query({\n        fromClause,\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate,\n        groupByClause,\n    }, {\n        whereClause,\n        havingClause,\n        orderByClause,\n        compoundQueryOrderByClause,\n        isDistinct,\n    });\n    return result;\n}\nexports.whereIsNotNull = whereIsNotNull;\n//# sourceMappingURL=where-is-not-null.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_clause_1 = require(\"../../../from-clause\");\nconst query_impl_1 = require(\"../../query-impl\");\nfunction whereIsNull(query, whereIsNullDelegate) {\n    const { fromClause, whereClause, } = from_clause_1.FromClauseUtil.whereIsNull(query.fromClause, query.whereClause, whereIsNullDelegate);\n    const { \n    //fromClause,\n    selectClause, limitClause, compoundQueryClause, compoundQueryLimitClause, mapDelegate, groupByClause, havingClause, orderByClause, compoundQueryOrderByClause, isDistinct, } = query;\n    const result = new query_impl_1.Query({\n        fromClause,\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate,\n        groupByClause,\n    }, {\n        whereClause,\n        havingClause,\n        orderByClause,\n        compoundQueryOrderByClause,\n        isDistinct,\n    });\n    return result;\n}\nexports.whereIsNull = whereIsNull;\n//# sourceMappingURL=where-is-null.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_clause_1 = require(\"../../../from-clause\");\nconst query_impl_1 = require(\"../../query-impl\");\nfunction whereNullSafeEq(query, \n/**\n * This construction effectively makes it impossible for `WhereNullSafeEqDelegate<>`\n * to return a union type.\n *\n * This is unfortunate but a necessary compromise for now.\n *\n * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520199818\n *\n * https://github.com/microsoft/TypeScript/issues/32804#issuecomment-520201877\n */\n...args) {\n    const { fromClause, whereClause, } = from_clause_1.FromClauseUtil.whereNullSafeEq(query.fromClause, query.whereClause, ...args);\n    const { \n    //fromClause,\n    selectClause, limitClause, compoundQueryClause, compoundQueryLimitClause, mapDelegate, groupByClause, havingClause, orderByClause, compoundQueryOrderByClause, isDistinct, } = query;\n    const result = new query_impl_1.Query({\n        fromClause,\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate,\n        groupByClause,\n    }, {\n        whereClause,\n        havingClause,\n        orderByClause,\n        compoundQueryOrderByClause,\n        isDistinct,\n    });\n    return result;\n}\nexports.whereNullSafeEq = whereNullSafeEq;\n//# sourceMappingURL=where-null-safe-eq.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst where_clause_1 = require(\"../../../where-clause\");\nconst query_impl_1 = require(\"../../query-impl\");\nfunction where(query, whereDelegate) {\n    const whereClause = where_clause_1.WhereClauseUtil.where(query.fromClause, query.whereClause, whereDelegate);\n    const { fromClause, selectClause, limitClause, compoundQueryClause, compoundQueryLimitClause, mapDelegate, groupByClause, havingClause, orderByClause, compoundQueryOrderByClause, isDistinct, } = query;\n    const result = new query_impl_1.Query({\n        fromClause,\n        selectClause,\n        limitClause,\n        compoundQueryClause,\n        compoundQueryLimitClause,\n        mapDelegate,\n        groupByClause,\n    }, {\n        whereClause,\n        havingClause,\n        orderByClause,\n        compoundQueryOrderByClause,\n        isDistinct,\n    });\n    return result;\n}\nexports.where = where;\n//# sourceMappingURL=where.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_clause_1 = require(\"../../../from-clause\");\nfunction assertValidJoinTarget(query, aliasedTable) {\n    from_clause_1.FromClauseUtil.assertValidCurrentJoinBase(query.fromClause, aliasedTable);\n    from_clause_1.FromClauseUtil.assertNoUsedRef(aliasedTable);\n    from_clause_1.FromClauseUtil.assertNotLateral(aliasedTable);\n}\nexports.assertValidJoinTarget = assertValidJoinTarget;\n//# sourceMappingURL=assert-valid-current-join.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./assert-valid-current-join\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst UpdateUtil = require(\"./util\");\nexports.UpdateUtil = UpdateUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./operation\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst used_ref_1 = require(\"../../../used-ref\");\nconst built_in_expr_1 = require(\"../../../built-in-expr\");\nfunction cleanAssignmentMap(table, raw) {\n    const result = {};\n    const allowed = used_ref_1.UsedRefUtil.fromColumnMap(table.columns);\n    for (const columnAlias of Object.keys(raw)) {\n        const customExpr = raw[columnAlias];\n        if (customExpr === undefined) {\n            continue;\n        }\n        if (table.mutableColumns.indexOf(columnAlias) < 0) {\n            //This columnAlias is not mutable...\n            if (Object.prototype.hasOwnProperty.call(table.columns, columnAlias) &&\n                Object.prototype.propertyIsEnumerable.call(table.columns, columnAlias)) {\n                throw new Error(`${table.alias}.${columnAlias} is not mutable`);\n            }\n            else {\n                //Just some random extra property that is not a `columnAlias` of `TableT`.\n                //This probably only got through because TS does not have exact types at the moment.\n                continue;\n            }\n        }\n        result[columnAlias] = built_in_expr_1.BuiltInExprUtil.fromCustomExpr_MapCorrelated(table.columns[columnAlias], allowed, customExpr);\n    }\n    /*\n    if (Object.keys(result).length == 0) {\n        //The user specified an empty assignment map?\n        //Very weird...\n        if (table.mutableColumns.length == 0) {\n            throw new Error(`${table.alias} has no mutable columns`);\n        }\n        const firstColumnAlias = table.mutableColumns[0];\n        const firstColumn = table.columns[firstColumnAlias];\n        //We specify a no-op assignment, to prevent the `UpdateConnection` from crashing\n        result[firstColumnAlias as keyof typeof result] = firstColumn as any;\n    }\n    */\n    return result;\n}\nexports.cleanAssignmentMap = cleanAssignmentMap;\n//# sourceMappingURL=clean-assignment-map.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./clean-assignment-map\"));\n__export(require(\"./set\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst clean_assignment_map_1 = require(\"./clean-assignment-map\");\nfunction set(table, assignmentMapDelegate) {\n    const raw = assignmentMapDelegate(table.columns);\n    return clean_assignment_map_1.cleanAssignmentMap(table, raw);\n}\nexports.set = set;\n//# sourceMappingURL=set.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst UsedRefUtil = require(\"./util\");\nexports.UsedRefUtil = UsedRefUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_identifier_ref_1 = require(\"../../../column-identifier-ref\");\nfunction fromColumnMap(map) {\n    const result = {\n        __contravarianceMarker: () => { },\n        columns: column_identifier_ref_1.ColumnIdentifierRefUtil.fromColumnMap(map),\n    };\n    return result;\n}\nexports.fromColumnMap = fromColumnMap;\n//# sourceMappingURL=from-column-map.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction fromColumnRef(ref) {\n    const result = {\n        __contravarianceMarker: () => { },\n        columns: ref,\n    };\n    return result;\n}\nexports.fromColumnRef = fromColumnRef;\n//# sourceMappingURL=from-column-ref.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction fromColumn(column) {\n    const result = {\n        __contravarianceMarker: () => { },\n        columns: {\n            [column.tableAlias]: {\n                [column.columnAlias]: column\n            }\n        },\n    };\n    return result;\n}\nexports.fromColumn = fromColumn;\n//# sourceMappingURL=from-column.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_join_array_1 = require(\"./from-join-array\");\nfunction fromFromClause(fromClause) {\n    return from_join_array_1.fromJoinArray(fromClause.outerQueryJoins == undefined ?\n        [] :\n        fromClause.outerQueryJoins);\n}\nexports.fromFromClause = fromFromClause;\n//# sourceMappingURL=from-from-clause.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_identifier_ref_1 = require(\"../../../column-identifier-ref\");\nfunction fromJoinArray(joins) {\n    const result = {\n        __contravarianceMarker: () => { },\n        columns: column_identifier_ref_1.ColumnIdentifierRefUtil.fromJoinArray(joins),\n    };\n    return result;\n}\nexports.fromJoinArray = fromJoinArray;\n//# sourceMappingURL=from-join-array.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./from-column-map\"));\n__export(require(\"./from-column-ref\"));\n__export(require(\"./from-column\"));\n__export(require(\"./from-from-clause\"));\n__export(require(\"./from-join-array\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./constructor\"));\n__export(require(\"./operation\"));\n__export(require(\"./predicate\"));\n__export(require(\"./query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./intersect\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_identifier_ref_1 = require(\"../../../column-identifier-ref\");\nfunction intersect(...arr) {\n    let columns = {};\n    for (const u of arr) {\n        columns = column_identifier_ref_1.ColumnIdentifierRefUtil.intersect(columns, u.columns);\n    }\n    const result = {\n        __contravarianceMarker: () => { },\n        columns,\n    };\n    return result;\n}\nexports.intersect = intersect;\n//# sourceMappingURL=intersect.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_identifier_ref_1 = require(\"../../../column-identifier-ref\");\nconst column_identifier_1 = require(\"../../../column-identifier\");\n/**\n * @todo Better naming\n *\n * @param allowed - Which references are allowed\n * @param used - Which references were actually used\n */\nfunction assertAllowed(allowed, used) {\n    column_identifier_ref_1.ColumnIdentifierRefUtil.assertHasColumnIdentifiers(allowed.columns, column_identifier_1.ColumnIdentifierArrayUtil.fromColumnRef(used.columns));\n}\nexports.assertAllowed = assertAllowed;\n//# sourceMappingURL=assert-allowed.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_identifier_ref_1 = require(\"../../../column-identifier-ref\");\nconst column_identifier_1 = require(\"../../../column-identifier\");\n/**\n * @todo Better naming\n *\n * @param used - Which references were actually used\n */\nfunction assertEmpty(used) {\n    column_identifier_ref_1.ColumnIdentifierRefUtil.assertHasColumnIdentifiers({}, column_identifier_1.ColumnIdentifierArrayUtil.fromColumnRef(used.columns));\n}\nexports.assertEmpty = assertEmpty;\n//# sourceMappingURL=assert-empty.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./assert-allowed\"));\n__export(require(\"./assert-empty\"));\n__export(require(\"./is-used-ref\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst type_util_1 = require(\"../../../type-util\");\n//import {ColumnIdentifierRefUtil} from \"../../../column-identifier-ref\";\n/**\n * Does not actually check that `x.columns` is a `ColumnIdentifierRef`.\n *\n * @todo Consider adding check for increased type safety.\n */\nfunction isUsedRef(x) {\n    if (!type_util_1.isObjectWithOwnEnumerableKeys()(x, [\n        \"__contravarianceMarker\",\n        \"columns\",\n    ])) {\n        return false;\n    }\n    return ((typeof x.__contravarianceMarker == \"function\") // &&\n    //(ColumnIdentifierRefUtil.isColumnIdentifierRef(x.usedRef))\n    );\n}\nexports.isUsedRef = isUsedRef;\n//# sourceMappingURL=is-used-ref.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_identifier_ref_1 = require(\"../../../column-identifier-ref\");\nfunction extractColumnIdentifiers(usedRef, columnIdentifiers) {\n    const result = {\n        __contravarianceMarker: () => { },\n        columns: column_identifier_ref_1.ColumnIdentifierRefUtil.extractColumnIdentifiers(usedRef.columns, columnIdentifiers),\n    };\n    return result;\n}\nexports.extractColumnIdentifiers = extractColumnIdentifiers;\n//# sourceMappingURL=extract-column-identifier.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./extract-column-identifier\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ValueExprUtil = require(\"./util\");\nexports.ValueExprUtil = ValueExprUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst WhereClauseUtil = require(\"./util\");\nexports.WhereClauseUtil = WhereClauseUtil;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./operation\"));\n__export(require(\"./query\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./where\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst column_ref_1 = require(\"../../../column-ref\");\nconst ExprLib = require(\"../../../expr-library\");\nconst query_1 = require(\"../query\");\nconst used_ref_1 = require(\"../../../used-ref\");\nconst built_in_expr_1 = require(\"../../../built-in-expr\");\nconst expr_1 = require(\"../../../expr\");\n/**\n * Returns the MySQL equivalent of `whereClause AND whereDelegate(columns)`\n *\n * @param fromClause\n * @param whereClause\n * @param whereDelegate\n */\nfunction where(fromClause, whereClause, whereDelegate) {\n    const columns = query_1.allowedColumnRef(fromClause);\n    /**\n     * Explicit type annotation required or `tsc` crashes\n     */\n    const operand = whereDelegate(column_ref_1.ColumnRefUtil.tryFlatten(columns));\n    used_ref_1.UsedRefUtil.assertAllowed({ columns }, built_in_expr_1.BuiltInExprUtil.usedRef(operand));\n    const result = (whereClause == undefined ?\n        expr_1.ExprUtil.fromBuiltInExpr(operand) :\n        ExprLib.and(whereClause, operand));\n    return result;\n}\nexports.where = where;\n//# sourceMappingURL=where.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst from_clause_1 = require(\"../../../from-clause\");\nfunction allowedColumnRef(fromClause) {\n    return from_clause_1.FromClauseUtil.allowedColumnRef(fromClause, { isLateral: true });\n}\nexports.allowedColumnRef = allowedColumnRef;\nfunction allowedUsedRef(fromClause) {\n    return from_clause_1.FromClauseUtil.allowedUsedRef(fromClause, { isLateral: true });\n}\nexports.allowedUsedRef = allowedUsedRef;\n//# sourceMappingURL=allowed-used-ref.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./allowed-used-ref\"));\n//# sourceMappingURL=index.js.map","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isAccessorDescriptor(descriptor) {\n    if (descriptor == null) {\n        return false;\n    }\n    return (descriptor.hasOwnProperty(\"get\") &&\n        descriptor.hasOwnProperty(\"set\") &&\n        descriptor.hasOwnProperty(\"configurable\") &&\n        descriptor.hasOwnProperty(\"enumerable\") &&\n        (typeof descriptor.get == \"function\" ||\n            typeof descriptor.get == \"undefined\") &&\n        (typeof descriptor.set == \"function\" ||\n            typeof descriptor.set == \"undefined\") &&\n        typeof descriptor.configurable == \"boolean\" &&\n        typeof descriptor.enumerable == \"boolean\");\n}\nexports.isAccessorDescriptor = isAccessorDescriptor;\nvar BUILT_IN_PROTOTYPES = [\n    Object.prototype,\n    Date.prototype,\n];\nfunction isBuiltInPrototype(obj) {\n    return BUILT_IN_PROTOTYPES.indexOf(obj) >= 0;\n}\nfunction getOwnAccessors(obj) {\n    var arr = Object.getOwnPropertyNames(obj);\n    var result = [];\n    for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n        var k = arr_1[_i];\n        var descriptor = Object.getOwnPropertyDescriptor(obj, k);\n        if (isAccessorDescriptor(descriptor)) {\n            result.push({\n                name: k,\n                descriptor: descriptor,\n            });\n        }\n    }\n    return result;\n}\nexports.getOwnAccessors = getOwnAccessors;\nfunction getAllAccessors(obj) {\n    var result = [];\n    while (!isBuiltInPrototype(obj)) {\n        result.push.apply(result, getOwnAccessors(obj));\n        obj = Object.getPrototypeOf(obj);\n    }\n    return result;\n}\nexports.getAllAccessors = getAllAccessors;\nfunction getAccessor(obj, name) {\n    if (isBuiltInPrototype(obj)) {\n        return undefined;\n    }\n    var potentialResult = Object.getOwnPropertyDescriptor(obj, name);\n    if (potentialResult == undefined || !isAccessorDescriptor(potentialResult)) {\n        return getAccessor(Object.getPrototypeOf(obj), name);\n    }\n    return potentialResult;\n}\nexports.getAccessor = getAccessor;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//https://stackoverflow.com/questions/21553528/how-to-test-for-equality-in-arraybuffer-dataview-and-typedarray\nfunction dataViewsAreEqual(a, b) {\n    if (a.byteLength !== b.byteLength) {\n        return false;\n    }\n    for (var i = 0; i < a.byteLength; ++i) {\n        if (a.getUint8(i) !== b.getUint8(i)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Allows you to compare,\n * + `Buffer` to `Buffer`\n * + `Uint8Array` to `Uint8Array`\n * + `Buffer` to `Uint8Array`\n * + `Uint8Array` to `Buffer`\n */\nfunction equals(a, b) {\n    return dataViewsAreEqual(new DataView(a.buffer, a.byteOffset, a.byteLength), new DataView(b.buffer, b.byteOffset, b.byteLength));\n}\nexports.equals = equals;\n//# sourceMappingURL=equals.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./equals\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n    Replaces all elements of `arr` with `value`\n*/\nfunction arrayFill(arr, value) {\n    for (var i = 0; i < arr.length; ++i) {\n        arr[i] = value;\n    }\n    return arr;\n}\nexports.arrayFill = arrayFill;\n//# sourceMappingURL=array-fill.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./array-fill\"));\n__export(require(\"./remove-duplicate-elements\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_util_1 = require(\"../type-util\");\n/**\n * Removes duplicates from `arr`.\n * Preserves the order of elements.\n *\n * A \"duplicate\" is an element that is `===` to another element\n * with a lower index in `arr`.\n *\n * Given the following,\n * ```ts\n * [1,2,1]\n * ```\n * The first `1` is **NOT** a duplicate.\n * The second `1` is a duplicate.\n *\n * @param arr\n */\nfunction removeDuplicateElements(arr) {\n    var result = [];\n    var _loop_1 = function (element) {\n        if (result.some(function (r) { return type_util_1.strictEqual(r, element); })) {\n            return \"continue\";\n        }\n        result.push(element);\n    };\n    for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n        var element = arr_1[_i];\n        _loop_1(element);\n    }\n    return result;\n}\nexports.removeDuplicateElements = removeDuplicateElements;\n//# sourceMappingURL=remove-duplicate-elements.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_util_1 = require(\"../type-util\");\nvar jsbi_1 = require(\"./jsbi\");\nfunction add(a, b) {\n    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();\n    if (type_util_1.isBigIntNativelySupported()) {\n        if (typeof a == \"number\") {\n            if (typeof b == \"number\") {\n                return BigInt(a) + BigInt(b);\n            }\n            else {\n                return BigInt(a) + b;\n            }\n        }\n        else {\n            if (typeof b == \"number\") {\n                return a + BigInt(b);\n            }\n            else {\n                return a + b;\n            }\n        }\n    }\n    var result = jsbi_1.JSBI.add(jsbi_1.JSBI.BigInt(a.toString()), jsbi_1.JSBI.BigInt(b.toString()));\n    return BigInt(result.toString());\n}\nexports.add = add;\nfunction addMany(a, b) {\n    var rest = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        rest[_i - 2] = arguments[_i];\n    }\n    var result = add(a, b);\n    for (var _a = 0, rest_1 = rest; _a < rest_1.length; _a++) {\n        var ele = rest_1[_a];\n        result = add(result, ele);\n    }\n    return result;\n}\nexports.addMany = addMany;\nfunction sub(a, b) {\n    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();\n    if (type_util_1.isBigIntNativelySupported()) {\n        if (typeof a == \"number\") {\n            if (typeof b == \"number\") {\n                return BigInt(a) - BigInt(b);\n            }\n            else {\n                return BigInt(a) - b;\n            }\n        }\n        else {\n            if (typeof b == \"number\") {\n                return a - BigInt(b);\n            }\n            else {\n                return a - b;\n            }\n        }\n    }\n    var result = jsbi_1.JSBI.subtract(jsbi_1.JSBI.BigInt(a.toString()), jsbi_1.JSBI.BigInt(b.toString()));\n    return BigInt(result.toString());\n}\nexports.sub = sub;\nfunction mul(a, b) {\n    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();\n    if (type_util_1.isBigIntNativelySupported()) {\n        if (typeof a == \"number\") {\n            if (typeof b == \"number\") {\n                return BigInt(a) * BigInt(b);\n            }\n            else {\n                return BigInt(a) * b;\n            }\n        }\n        else {\n            if (typeof b == \"number\") {\n                return a * BigInt(b);\n            }\n            else {\n                return a * b;\n            }\n        }\n    }\n    var result = jsbi_1.JSBI.multiply(jsbi_1.JSBI.BigInt(a.toString()), jsbi_1.JSBI.BigInt(b.toString()));\n    return BigInt(result.toString());\n}\nexports.mul = mul;\nfunction div(a, b) {\n    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();\n    if (type_util_1.isBigIntNativelySupported()) {\n        if (typeof a == \"number\") {\n            if (typeof b == \"number\") {\n                return BigInt(a) / BigInt(b);\n            }\n            else {\n                return BigInt(a) / b;\n            }\n        }\n        else {\n            if (typeof b == \"number\") {\n                return a / BigInt(b);\n            }\n            else {\n                return a / b;\n            }\n        }\n    }\n    var result = jsbi_1.JSBI.divide(jsbi_1.JSBI.BigInt(a.toString()), jsbi_1.JSBI.BigInt(b.toString()));\n    return BigInt(result.toString());\n}\nexports.div = div;\nfunction mod(a, b) {\n    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();\n    if (type_util_1.isBigIntNativelySupported()) {\n        if (typeof a == \"number\") {\n            if (typeof b == \"number\") {\n                return BigInt(a) % BigInt(b);\n            }\n            else {\n                return BigInt(a) % b;\n            }\n        }\n        else {\n            if (typeof b == \"number\") {\n                return a % BigInt(b);\n            }\n            else {\n                return a % b;\n            }\n        }\n    }\n    var result = jsbi_1.JSBI.remainder(jsbi_1.JSBI.BigInt(a.toString()), jsbi_1.JSBI.BigInt(b.toString()));\n    return BigInt(result.toString());\n}\nexports.mod = mod;\n//# sourceMappingURL=arithmetic.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_util_1 = require(\"../type-util\");\nvar jsbi_1 = require(\"./jsbi\");\nfunction asIntN(n, x) {\n    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();\n    return BigInt(jsbi_1.JSBI.asIntN(n, jsbi_1.JSBI.BigInt(x.toString())).toString());\n}\nexports.asIntN = asIntN;\n//# sourceMappingURL=as-int-n.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_util_1 = require(\"../type-util\");\nvar jsbi_1 = require(\"./jsbi\");\nfunction asUintN(n, x) {\n    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();\n    return BigInt(jsbi_1.JSBI.asUintN(n, jsbi_1.JSBI.BigInt(x.toString())).toString());\n}\nexports.asUintN = asUintN;\n//# sourceMappingURL=as-uint-n.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_util_1 = require(\"../type-util\");\nvar jsbi_1 = require(\"./jsbi\");\nfunction leftShift(a, b) {\n    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();\n    if (type_util_1.isBigIntNativelySupported()) {\n        if (typeof a == \"number\") {\n            if (typeof b == \"number\") {\n                return BigInt(a) << BigInt(b);\n            }\n            else {\n                return BigInt(a) << b;\n            }\n        }\n        else {\n            if (typeof b == \"number\") {\n                return a << BigInt(b);\n            }\n            else {\n                return a << b;\n            }\n        }\n    }\n    var result = jsbi_1.JSBI.leftShift(jsbi_1.JSBI.BigInt(a.toString()), jsbi_1.JSBI.BigInt(b.toString()));\n    return BigInt(result.toString());\n}\nexports.leftShift = leftShift;\nfunction signedRightShift(a, b) {\n    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();\n    if (type_util_1.isBigIntNativelySupported()) {\n        if (typeof a == \"number\") {\n            if (typeof b == \"number\") {\n                return BigInt(a) >> BigInt(b);\n            }\n            else {\n                return BigInt(a) >> b;\n            }\n        }\n        else {\n            if (typeof b == \"number\") {\n                return a >> BigInt(b);\n            }\n            else {\n                return a >> b;\n            }\n        }\n    }\n    var result = jsbi_1.JSBI.signedRightShift(jsbi_1.JSBI.BigInt(a.toString()), jsbi_1.JSBI.BigInt(b.toString()));\n    return BigInt(result.toString());\n}\nexports.signedRightShift = signedRightShift;\nfunction bitwiseAnd(a, b) {\n    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();\n    if (type_util_1.isBigIntNativelySupported()) {\n        if (typeof a == \"number\") {\n            if (typeof b == \"number\") {\n                return BigInt(a) & BigInt(b);\n            }\n            else {\n                return BigInt(a) & b;\n            }\n        }\n        else {\n            if (typeof b == \"number\") {\n                return a & BigInt(b);\n            }\n            else {\n                return a & b;\n            }\n        }\n    }\n    var result = jsbi_1.JSBI.bitwiseAnd(jsbi_1.JSBI.BigInt(a.toString()), jsbi_1.JSBI.BigInt(b.toString()));\n    return BigInt(result.toString());\n}\nexports.bitwiseAnd = bitwiseAnd;\nfunction bitwiseOr(a, b) {\n    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();\n    if (type_util_1.isBigIntNativelySupported()) {\n        if (typeof a == \"number\") {\n            if (typeof b == \"number\") {\n                return BigInt(a) | BigInt(b);\n            }\n            else {\n                return BigInt(a) | b;\n            }\n        }\n        else {\n            if (typeof b == \"number\") {\n                return a | BigInt(b);\n            }\n            else {\n                return a | b;\n            }\n        }\n    }\n    var result = jsbi_1.JSBI.bitwiseOr(jsbi_1.JSBI.BigInt(a.toString()), jsbi_1.JSBI.BigInt(b.toString()));\n    return BigInt(result.toString());\n}\nexports.bitwiseOr = bitwiseOr;\nfunction bitwiseXor(a, b) {\n    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();\n    if (type_util_1.isBigIntNativelySupported()) {\n        if (typeof a == \"number\") {\n            if (typeof b == \"number\") {\n                return BigInt(a) ^ BigInt(b);\n            }\n            else {\n                return BigInt(a) ^ b;\n            }\n        }\n        else {\n            if (typeof b == \"number\") {\n                return a ^ BigInt(b);\n            }\n            else {\n                return a ^ b;\n            }\n        }\n    }\n    var result = jsbi_1.JSBI.bitwiseXor(jsbi_1.JSBI.BigInt(a.toString()), jsbi_1.JSBI.BigInt(b.toString()));\n    return BigInt(result.toString());\n}\nexports.bitwiseXor = bitwiseXor;\nfunction bitwiseNot(a) {\n    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();\n    if (type_util_1.isBigIntNativelySupported()) {\n        if (typeof a == \"number\") {\n            return ~BigInt(a);\n        }\n        else {\n            return ~a;\n        }\n    }\n    var result = jsbi_1.JSBI.bitwiseNot(jsbi_1.JSBI.BigInt(a.toString()));\n    return BigInt(result.toString());\n}\nexports.bitwiseNot = bitwiseNot;\n//# sourceMappingURL=bitwise-operation.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_util_1 = require(\"../type-util\");\nvar jsbi_1 = require(\"./jsbi\");\n/**\n    Assumes BigInt.toString() is implemented correctly.\n\n    Assummes we won't get strings like,\n\n    + \"-0000\"\n    + \"-qwerty\"\n    + \"123.123\"\n*/\nfunction compare(a, b) {\n    if (type_util_1.isBigIntNativelySupported()) {\n        return ((typeof a == \"number\" && isNaN(a)) ?\n            NaN :\n            (typeof b == \"number\" && isNaN(b)) ?\n                NaN :\n                a < b ?\n                    -1 :\n                    a > b ?\n                        1 :\n                        0);\n    }\n    if (typeof a == \"number\") {\n        if (typeof b == \"number\") {\n            return a - b;\n        }\n        else {\n            var cmp = jsbi_1.JSBI.__compareToNumber(jsbi_1.JSBI.BigInt(b.toString()), a);\n            return -cmp;\n        }\n    }\n    else {\n        if (typeof b == \"number\") {\n            var cmp = jsbi_1.JSBI.__compareToNumber(jsbi_1.JSBI.BigInt(a.toString()), b);\n            return cmp;\n        }\n        else {\n            return jsbi_1.JSBI.__compareToBigInt(jsbi_1.JSBI.BigInt(a.toString()), jsbi_1.JSBI.BigInt(b.toString()));\n        }\n    }\n}\nexports.compare = compare;\nfunction lessThan(a, b) {\n    return compare(a, b) < 0;\n}\nexports.lessThan = lessThan;\nfunction greaterThan(a, b) {\n    return compare(a, b) > 0;\n}\nexports.greaterThan = greaterThan;\nfunction equal(a, b) {\n    return compare(a, b) == 0;\n}\nexports.equal = equal;\nfunction lessThanOrEqual(a, b) {\n    return compare(a, b) <= 0;\n}\nexports.lessThanOrEqual = lessThanOrEqual;\nfunction greaterThanOrEqual(a, b) {\n    return compare(a, b) >= 0;\n}\nexports.greaterThanOrEqual = greaterThanOrEqual;\nfunction subOneImpl(str) {\n    if (str[0] == \"-\") {\n        var result = addOneImpl(str.substr(1));\n        return \"-\" + result;\n    }\n    if (str == \"0\") {\n        return \"-1\";\n    }\n    var digits = str\n        .split(\"\")\n        .map(function (s) { return parseInt(s); });\n    for (var i = digits.length - 1; i >= 0; --i) {\n        var d = digits[i];\n        if (d == 0) {\n            digits[i] = 9;\n        }\n        else {\n            if (i == 0 && digits[i] == 1) {\n                digits.shift();\n            }\n            else {\n                digits[i] = d - 1;\n            }\n            break;\n        }\n    }\n    if (digits.length == 0) {\n        return \"0\";\n    }\n    else {\n        return digits.join(\"\");\n    }\n}\nexports.subOneImpl = subOneImpl;\nfunction addOneImpl(str) {\n    jsbi_1.JSBI.__absoluteAddOne;\n    if (str[0] == \"-\") {\n        var result = subOneImpl(str.substr(1));\n        if (result == \"0\") {\n            return result;\n        }\n        else {\n            return \"-\" + result;\n        }\n    }\n    var digits = str\n        .split(\"\")\n        .map(function (s) { return parseInt(s); });\n    var carry = true;\n    for (var i = digits.length - 1; i >= 0; --i) {\n        var d = digits[i];\n        if (d == 9) {\n            digits[i] = 0;\n        }\n        else {\n            digits[i] = d + 1;\n            carry = false;\n            break;\n        }\n    }\n    if (carry) {\n        digits.unshift(1);\n    }\n    return digits.join(\"\");\n}\nexports.addOneImpl = addOneImpl;\n//# sourceMappingURL=comparison.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./arithmetic\"));\n__export(require(\"./as-int-n\"));\n__export(require(\"./as-uint-n\"));\n__export(require(\"./bitwise-operation\"));\n__export(require(\"./comparison\"));\n__export(require(\"./to-number\"));\n__export(require(\"./to-string\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32#Polyfill\n */\nfunction clz32(x) {\n    // Let n be ToUint32(x).\n    // Let p be the number of leading zero bits in\n    // the 32-bit binary representation of n.\n    // Return p.\n    var asUint = x >>> 0;\n    if (asUint === 0) {\n        return 32;\n    }\n    return 31 - (Math.log(asUint) / Math.LN2 | 0) | 0; // the \"| 0\" acts like math.floor\n}\n/**\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul#Polyfill\n */\nfunction imul(a, b) {\n    var aHi = (a >>> 16) & 0xffff;\n    var aLo = a & 0xffff;\n    var bHi = (b >>> 16) & 0xffff;\n    var bLo = b & 0xffff;\n    // the shift by 0 fixes the sign on the high part\n    // the final |0 converts the unsigned value into a signed value\n    return ((aLo * bLo) + (((aHi * bLo + aLo * bHi) << 16) >>> 0) | 0);\n}\nif (Math.clz32 == undefined) {\n    Math.clz32 = clz32;\n}\nif (Math.imul == undefined) {\n    Math.imul = imul;\n}\nif (Symbol == undefined) {\n    Symbol = {};\n}\n/**\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\n */\n/**\n*** Object.appendChain(@object, @prototype)\n*\n* Appends the first non-native prototype of a chain to a new prototype.\n* Returns @object (if it was a primitive value it will transformed into an object).\n*\n*** Object.appendChain(@object [, \"@arg_name_1\", \"@arg_name_2\", \"@arg_name_3\", \"...\"], \"@function_body\")\n*** Object.appendChain(@object [, \"@arg_name_1, @arg_name_2, @arg_name_3, ...\"], \"@function_body\")\n*\n* Appends the first non-native prototype of a chain to the native Function.prototype object, then appends a\n* new Function([\"@arg\"(s)], \"@function_body\") to that chain.\n* Returns the function.\n*\n**/\nObject.appendChain = function (oChain, oProto) {\n    if (arguments.length < 2) {\n        throw new TypeError('Object.appendChain - Not enough arguments');\n    }\n    if (typeof oProto !== 'object' && typeof oProto !== 'string') {\n        throw new TypeError('second argument to Object.appendChain must be an object or a string');\n    }\n    var oNewProto = oProto;\n    var oReturn = oChain instanceof this ? oChain : new oChain.constructor(oChain);\n    var o2nd = oReturn;\n    var oLast = oReturn;\n    for (var o1st = this.getPrototypeOf(o2nd); o1st !== Object.prototype && o1st !== Function.prototype; o1st = this.getPrototypeOf(o2nd)) {\n        o2nd = o1st;\n    }\n    if (oProto.constructor === String) {\n        oNewProto = Function.prototype;\n        oReturn = Function.apply(null, Array.prototype.slice.call(arguments, 1));\n        this.setPrototypeOf(oReturn, oLast);\n    }\n    this.setPrototypeOf(o2nd, oNewProto);\n    return oReturn;\n};\n// Copyright 2018 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the “License”);\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// <https://apache.org/licenses/LICENSE-2.0>.\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an “AS IS” BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * https://github.com/GoogleChromeLabs/jsbi\n */\nvar JSBI = /** @class */ (function (_super) {\n    __extends(JSBI, _super);\n    function JSBI(length, sign) {\n        var _this = this;\n        if (length > JSBI.__kMaxLength) {\n            throw new RangeError('Maximum BigInt size exceeded');\n        }\n        _this = _super.call(this, length) || this;\n        _this.sign = sign;\n        Object.setPrototypeOf(_this, JSBI.prototype);\n        return _this;\n    }\n    JSBI.BigInt = function (arg) {\n        if (typeof arg === 'number') {\n            if (arg === 0)\n                return JSBI.__zero();\n            if ((arg | 0) === arg) {\n                if (arg < 0) {\n                    return JSBI.__oneDigit(-arg, true);\n                }\n                return JSBI.__oneDigit(arg, false);\n            }\n            if (!isFinite(arg) || Math.floor(arg) !== arg) {\n                throw new RangeError('The number ' + arg + ' cannot be converted to ' +\n                    'BigInt because it is not an integer');\n            }\n            return JSBI.__fromDouble(arg);\n        }\n        else if (typeof arg === 'string') {\n            var result = JSBI.__fromString(arg);\n            if (result === null) {\n                throw new SyntaxError('Cannot convert ' + arg + ' to a BigInt');\n            }\n            return result;\n        }\n        else if (typeof arg === 'boolean') {\n            if (arg === true) {\n                return JSBI.__oneDigit(1, false);\n            }\n            return JSBI.__zero();\n        }\n        else if (typeof arg === 'object') {\n            if (arg.constructor === JSBI)\n                return arg;\n            var primitive = JSBI.__toPrimitive(arg);\n            return JSBI.BigInt(primitive);\n        }\n        throw new TypeError('Cannot convert ' + arg + ' to a BigInt');\n    };\n    JSBI.prototype.toDebugString = function () {\n        var result = ['BigInt['];\n        for (var _i = 0, _a = this; _i < _a.length; _i++) {\n            var digit = _a[_i];\n            result.push((digit ? (digit >>> 0).toString(16) : digit) + ', ');\n        }\n        result.push(']');\n        return result.join('');\n    };\n    JSBI.prototype.toString = function (radix) {\n        if (radix === void 0) { radix = 10; }\n        if (radix < 2 || radix > 36) {\n            throw new RangeError('toString() radix argument must be between 2 and 36');\n        }\n        if (this.length === 0)\n            return '0';\n        if ((radix & (radix - 1)) === 0) {\n            return JSBI.__toStringBasePowerOfTwo(this, radix);\n        }\n        return JSBI.__toStringGeneric(this, radix, false);\n    };\n    // Equivalent of \"Number(my_bigint)\" in the native implementation.\n    JSBI.toNumber = function (x) {\n        var xLength = x.length;\n        if (xLength === 0)\n            return 0;\n        if (xLength === 1) {\n            var value = x.__unsignedDigit(0);\n            return x.sign ? -value : value;\n        }\n        var xMsd = x.__digit(xLength - 1);\n        var msdLeadingZeros = Math.clz32(xMsd);\n        var xBitLength = xLength * 32 - msdLeadingZeros;\n        if (xBitLength > 1024)\n            return x.sign ? -Infinity : Infinity;\n        var exponent = xBitLength - 1;\n        var currentDigit = xMsd;\n        var digitIndex = xLength - 1;\n        var shift = msdLeadingZeros + 1;\n        var mantissaHigh = (shift === 32) ? 0 : currentDigit << shift;\n        mantissaHigh >>>= 12;\n        var mantissaHighBitsUnset = shift - 12;\n        var mantissaLow = (shift >= 12) ? 0 : (currentDigit << (20 + shift));\n        var mantissaLowBitsUnset = 20 + shift;\n        if (mantissaHighBitsUnset > 0 && digitIndex > 0) {\n            digitIndex--;\n            currentDigit = x.__digit(digitIndex);\n            mantissaHigh |= (currentDigit >>> (32 - mantissaHighBitsUnset));\n            mantissaLow = currentDigit << mantissaHighBitsUnset;\n            mantissaLowBitsUnset = mantissaHighBitsUnset;\n        }\n        if (mantissaLowBitsUnset > 0 && digitIndex > 0) {\n            digitIndex--;\n            currentDigit = x.__digit(digitIndex);\n            mantissaLow |= (currentDigit >>> (32 - mantissaLowBitsUnset));\n            mantissaLowBitsUnset -= 32;\n        }\n        var rounding = JSBI.__decideRounding(x, mantissaLowBitsUnset, digitIndex, currentDigit);\n        if (rounding === 1 || (rounding === 0 && (mantissaLow & 1) === 1)) {\n            mantissaLow = (mantissaLow + 1) >>> 0;\n            if (mantissaLow === 0) {\n                // Incrementing mantissaLow overflowed.\n                mantissaHigh++;\n                if ((mantissaHigh >>> 20) !== 0) {\n                    // Incrementing mantissaHigh overflowed.\n                    mantissaHigh = 0;\n                    exponent++;\n                    if (exponent > 1023) {\n                        // Incrementing the exponent overflowed.\n                        return x.sign ? -Infinity : Infinity;\n                    }\n                }\n            }\n        }\n        var signBit = x.sign ? (1 << 31) : 0;\n        exponent = (exponent + 0x3FF) << 20;\n        JSBI.__kBitConversionInts[1] = signBit | exponent | mantissaHigh;\n        JSBI.__kBitConversionInts[0] = mantissaLow;\n        return JSBI.__kBitConversionDouble[0];\n    };\n    // Operations.\n    JSBI.unaryMinus = function (x) {\n        if (x.length === 0)\n            return x;\n        var result = x.__copy();\n        result.sign = !x.sign;\n        return result;\n    };\n    JSBI.bitwiseNot = function (x) {\n        if (x.sign) {\n            // ~(-x) == ~(~(x-1)) == x-1\n            return JSBI.__absoluteSubOne(x).__trim();\n        }\n        // ~x == -x-1 == -(x+1)\n        return JSBI.__absoluteAddOne(x, true);\n    };\n    JSBI.exponentiate = function (x, y) {\n        if (y.sign) {\n            throw new RangeError('Exponent must be positive');\n        }\n        if (y.length === 0) {\n            return JSBI.__oneDigit(1, false);\n        }\n        if (x.length === 0)\n            return x;\n        if (x.length === 1 && x.__digit(0) === 1) {\n            // (-1) ** even_number == 1.\n            if (x.sign && (y.__digit(0) & 1) === 0) {\n                return JSBI.unaryMinus(x);\n            }\n            // (-1) ** odd_number == -1, 1 ** anything == 1.\n            return x;\n        }\n        // For all bases >= 2, very large exponents would lead to unrepresentable\n        // results.\n        if (y.length > 1)\n            throw new RangeError('BigInt too big');\n        var expValue = y.__unsignedDigit(0);\n        if (expValue === 1)\n            return x;\n        if (expValue >= JSBI.__kMaxLengthBits) {\n            throw new RangeError('BigInt too big');\n        }\n        if (x.length === 1 && x.__digit(0) === 2) {\n            // Fast path for 2^n.\n            var neededDigits = 1 + (expValue >>> 5);\n            var sign = x.sign && ((expValue & 1) !== 0);\n            var result_1 = new JSBI(neededDigits, sign);\n            result_1.__initializeDigits();\n            // All bits are zero. Now set the n-th bit.\n            var msd = 1 << (expValue & 31);\n            result_1.__setDigit(neededDigits - 1, msd);\n            return result_1;\n        }\n        var result = null;\n        var runningSquare = x;\n        // This implicitly sets the result's sign correctly.\n        if ((expValue & 1) !== 0)\n            result = x;\n        expValue >>= 1;\n        for (; expValue !== 0; expValue >>= 1) {\n            runningSquare = JSBI.multiply(runningSquare, runningSquare);\n            if ((expValue & 1) !== 0) {\n                if (result === null) {\n                    result = runningSquare;\n                }\n                else {\n                    result = JSBI.multiply(result, runningSquare);\n                }\n            }\n        }\n        if (result == null) {\n            throw new Error(\"Could not exponentiate\");\n        }\n        return result;\n    };\n    JSBI.multiply = function (x, y) {\n        if (x.length === 0)\n            return x;\n        if (y.length === 0)\n            return y;\n        var resultLength = x.length + y.length;\n        if (x.__clzmsd() + y.__clzmsd() >= 32) {\n            resultLength--;\n        }\n        var result = new JSBI(resultLength, x.sign !== y.sign);\n        result.__initializeDigits();\n        for (var i = 0; i < x.length; i++) {\n            JSBI.__multiplyAccumulate(y, x.__digit(i), result, i);\n        }\n        return result.__trim();\n    };\n    JSBI.divide = function (x, y) {\n        if (y.length === 0)\n            throw new RangeError('Division by zero');\n        if (JSBI.__absoluteCompare(x, y) < 0)\n            return JSBI.__zero();\n        var resultSign = x.sign !== y.sign;\n        var divisor = y.__unsignedDigit(0);\n        var quotient;\n        if (y.length === 1 && divisor <= 0xFFFF) {\n            if (divisor === 1) {\n                return resultSign === x.sign ? x : JSBI.unaryMinus(x);\n            }\n            quotient = JSBI.__absoluteDivSmall(x, divisor, null);\n        }\n        else {\n            quotient = JSBI.__absoluteDivLarge(x, y, true, false);\n        }\n        quotient.sign = resultSign;\n        return quotient.__trim();\n    };\n    JSBI.remainder = function (x, y) {\n        if (y.length === 0)\n            throw new RangeError('Division by zero');\n        if (JSBI.__absoluteCompare(x, y) < 0)\n            return x;\n        var divisor = y.__unsignedDigit(0);\n        if (y.length === 1 && divisor <= 0xFFFF) {\n            if (divisor === 1)\n                return JSBI.__zero();\n            var remainderDigit = JSBI.__absoluteModSmall(x, divisor);\n            if (remainderDigit === 0)\n                return JSBI.__zero();\n            return JSBI.__oneDigit(remainderDigit, x.sign);\n        }\n        var remainder = JSBI.__absoluteDivLarge(x, y, false, true);\n        remainder.sign = x.sign;\n        return remainder.__trim();\n    };\n    JSBI.add = function (x, y) {\n        var sign = x.sign;\n        if (sign === y.sign) {\n            // x + y == x + y\n            // -x + -y == -(x + y)\n            return JSBI.__absoluteAdd(x, y, sign);\n        }\n        // x + -y == x - y == -(y - x)\n        // -x + y == y - x == -(x - y)\n        if (JSBI.__absoluteCompare(x, y) >= 0) {\n            return JSBI.__absoluteSub(x, y, sign);\n        }\n        return JSBI.__absoluteSub(y, x, !sign);\n    };\n    JSBI.subtract = function (x, y) {\n        var sign = x.sign;\n        if (sign !== y.sign) {\n            // x - (-y) == x + y\n            // (-x) - y == -(x + y)\n            return JSBI.__absoluteAdd(x, y, sign);\n        }\n        // x - y == -(y - x)\n        // (-x) - (-y) == y - x == -(x - y)\n        if (JSBI.__absoluteCompare(x, y) >= 0) {\n            return JSBI.__absoluteSub(x, y, sign);\n        }\n        return JSBI.__absoluteSub(y, x, !sign);\n    };\n    JSBI.leftShift = function (x, y) {\n        if (y.length === 0 || x.length === 0)\n            return x;\n        if (y.sign)\n            return JSBI.__rightShiftByAbsolute(x, y);\n        return JSBI.__leftShiftByAbsolute(x, y);\n    };\n    JSBI.signedRightShift = function (x, y) {\n        if (y.length === 0 || x.length === 0)\n            return x;\n        if (y.sign)\n            return JSBI.__leftShiftByAbsolute(x, y);\n        return JSBI.__rightShiftByAbsolute(x, y);\n    };\n    JSBI.unsignedRightShift = function () {\n        throw new TypeError('BigInts have no unsigned right shift; use >> instead');\n    };\n    JSBI.lessThan = function (x, y) {\n        return JSBI.__compareToBigInt(x, y) < 0;\n    };\n    JSBI.lessThanOrEqual = function (x, y) {\n        return JSBI.__compareToBigInt(x, y) <= 0;\n    };\n    JSBI.greaterThan = function (x, y) {\n        return JSBI.__compareToBigInt(x, y) > 0;\n    };\n    JSBI.greaterThanOrEqual = function (x, y) {\n        return JSBI.__compareToBigInt(x, y) >= 0;\n    };\n    JSBI.equal = function (x, y) {\n        if (x.sign !== y.sign)\n            return false;\n        if (x.length !== y.length)\n            return false;\n        for (var i = 0; i < x.length; i++) {\n            if (x.__digit(i) !== y.__digit(i))\n                return false;\n        }\n        return true;\n    };\n    JSBI.notEqual = function (x, y) {\n        return !JSBI.equal(x, y);\n    };\n    JSBI.bitwiseAnd = function (x, y) {\n        var _a;\n        if (!x.sign && !y.sign) {\n            return JSBI.__absoluteAnd(x, y).__trim();\n        }\n        else if (x.sign && y.sign) {\n            var resultLength = Math.max(x.length, y.length) + 1;\n            // (-x) & (-y) == ~(x-1) & ~(y-1) == ~((x-1) | (y-1))\n            // == -(((x-1) | (y-1)) + 1)\n            var result = JSBI.__absoluteSubOne(x, resultLength);\n            var y1 = JSBI.__absoluteSubOne(y);\n            result = JSBI.__absoluteOr(result, y1, result);\n            return JSBI.__absoluteAddOne(result, true, result).__trim();\n        }\n        // Assume that x is the positive BigInt.\n        if (x.sign) {\n            _a = [y, x], x = _a[0], y = _a[1];\n        }\n        // x & (-y) == x & ~(y-1) == x &~ (y-1)\n        return JSBI.__absoluteAndNot(x, JSBI.__absoluteSubOne(y)).__trim();\n    };\n    JSBI.bitwiseXor = function (x, y) {\n        var _a;\n        if (!x.sign && !y.sign) {\n            return JSBI.__absoluteXor(x, y).__trim();\n        }\n        else if (x.sign && y.sign) {\n            // (-x) ^ (-y) == ~(x-1) ^ ~(y-1) == (x-1) ^ (y-1)\n            var resultLength_1 = Math.max(x.length, y.length);\n            var result_2 = JSBI.__absoluteSubOne(x, resultLength_1);\n            var y1 = JSBI.__absoluteSubOne(y);\n            return JSBI.__absoluteXor(result_2, y1, result_2).__trim();\n        }\n        var resultLength = Math.max(x.length, y.length) + 1;\n        // Assume that x is the positive BigInt.\n        if (x.sign) {\n            _a = [y, x], x = _a[0], y = _a[1];\n        }\n        // x ^ (-y) == x ^ ~(y-1) == ~(x ^ (y-1)) == -((x ^ (y-1)) + 1)\n        var result = JSBI.__absoluteSubOne(y, resultLength);\n        result = JSBI.__absoluteXor(result, x, result);\n        return JSBI.__absoluteAddOne(result, true, result).__trim();\n    };\n    JSBI.bitwiseOr = function (x, y) {\n        var _a;\n        var resultLength = Math.max(x.length, y.length);\n        if (!x.sign && !y.sign) {\n            return JSBI.__absoluteOr(x, y).__trim();\n        }\n        else if (x.sign && y.sign) {\n            // (-x) | (-y) == ~(x-1) | ~(y-1) == ~((x-1) & (y-1))\n            // == -(((x-1) & (y-1)) + 1)\n            var result_3 = JSBI.__absoluteSubOne(x, resultLength);\n            var y1 = JSBI.__absoluteSubOne(y);\n            result_3 = JSBI.__absoluteAnd(result_3, y1, result_3);\n            return JSBI.__absoluteAddOne(result_3, true, result_3).__trim();\n        }\n        // Assume that x is the positive BigInt.\n        if (x.sign) {\n            _a = [y, x], x = _a[0], y = _a[1];\n        }\n        // x | (-y) == x | ~(y-1) == ~((y-1) &~ x) == -(((y-1) ~& x) + 1)\n        var result = JSBI.__absoluteSubOne(y, resultLength);\n        result = JSBI.__absoluteAndNot(result, x, result);\n        return JSBI.__absoluteAddOne(result, true, result).__trim();\n    };\n    JSBI.asIntN = function (n, x) {\n        if (x.length === 0)\n            return x;\n        if (n === 0)\n            return JSBI.__zero();\n        // If {x} has less than {n} bits, return it directly.\n        if (n >= JSBI.__kMaxLengthBits)\n            return x;\n        var neededLength = (n + 31) >>> 5;\n        if (x.length < neededLength)\n            return x;\n        var topDigit = x.__unsignedDigit(neededLength - 1);\n        var compareDigit = 1 << ((n - 1) & 31);\n        if (x.length === neededLength && topDigit < compareDigit)\n            return x;\n        // Otherwise truncate and simulate two's complement.\n        var hasBit = (topDigit & compareDigit) === compareDigit;\n        if (!hasBit)\n            return JSBI.__truncateToNBits(n, x);\n        if (!x.sign)\n            return JSBI.__truncateAndSubFromPowerOfTwo(n, x, true);\n        if ((topDigit & (compareDigit - 1)) === 0) {\n            for (var i = neededLength - 2; i >= 0; i--) {\n                if (x.__digit(i) !== 0) {\n                    return JSBI.__truncateAndSubFromPowerOfTwo(n, x, false);\n                }\n            }\n            if (x.length === neededLength && topDigit === compareDigit)\n                return x;\n            return JSBI.__truncateToNBits(n, x);\n        }\n        return JSBI.__truncateAndSubFromPowerOfTwo(n, x, false);\n    };\n    JSBI.asUintN = function (n, x) {\n        if (x.length === 0)\n            return x;\n        if (n === 0)\n            return JSBI.__zero();\n        // If {x} is negative, simulate two's complement representation.\n        if (x.sign) {\n            if (n > JSBI.__kMaxLengthBits) {\n                throw new RangeError('BigInt too big');\n            }\n            return JSBI.__truncateAndSubFromPowerOfTwo(n, x, false);\n        }\n        // If {x} is positive and has up to {n} bits, return it directly.\n        if (n >= JSBI.__kMaxLengthBits)\n            return x;\n        var neededLength = (n + 31) >>> 5;\n        if (x.length < neededLength)\n            return x;\n        var bitsInTopDigit = n & 31;\n        if (x.length == neededLength) {\n            if (bitsInTopDigit === 0)\n                return x;\n            var topDigit = x.__digit(neededLength - 1);\n            if ((topDigit >>> bitsInTopDigit) === 0)\n                return x;\n        }\n        // Otherwise, truncate.\n        return JSBI.__truncateToNBits(n, x);\n    };\n    // Operators.\n    JSBI.ADD = function (x, y) {\n        x = JSBI.__toPrimitive(x);\n        y = JSBI.__toPrimitive(y);\n        if (typeof x === 'string') {\n            if (typeof y !== 'string')\n                y = y.toString();\n            return x + y;\n        }\n        if (typeof y === 'string') {\n            return x.toString() + y;\n        }\n        x = JSBI.__toNumeric(x);\n        y = JSBI.__toNumeric(y);\n        if (JSBI.__isBigInt(x) && JSBI.__isBigInt(y)) {\n            return JSBI.add(x, y);\n        }\n        if (typeof x === 'number' && typeof y === 'number') {\n            return x + y;\n        }\n        throw new TypeError('Cannot mix BigInt and other types, use explicit conversions');\n    };\n    JSBI.LT = function (x, y) {\n        return JSBI.__compare(x, y, 0);\n    };\n    JSBI.LE = function (x, y) {\n        return JSBI.__compare(x, y, 1);\n    };\n    JSBI.GT = function (x, y) {\n        return JSBI.__compare(x, y, 2);\n    };\n    JSBI.GE = function (x, y) {\n        return JSBI.__compare(x, y, 3);\n    };\n    JSBI.EQ = function (x, y) {\n        while (true) {\n            if (JSBI.__isBigInt(x)) {\n                if (JSBI.__isBigInt(y))\n                    return JSBI.equal(x, y);\n                return JSBI.EQ(y, x);\n            }\n            else if (typeof x === 'number') {\n                if (JSBI.__isBigInt(y))\n                    return JSBI.__equalToNumber(y, x);\n                if (typeof y !== 'object')\n                    return x == y;\n                y = JSBI.__toPrimitive(y);\n            }\n            else if (typeof x === 'string') {\n                if (JSBI.__isBigInt(y)) {\n                    x = JSBI.__fromString(x);\n                    if (x === null)\n                        return false;\n                    return JSBI.equal(x, y);\n                }\n                if (typeof y !== 'object')\n                    return x == y;\n                y = JSBI.__toPrimitive(y);\n            }\n            else if (typeof x === 'boolean') {\n                if (JSBI.__isBigInt(y))\n                    return JSBI.__equalToNumber(y, +x);\n                if (typeof y !== 'object')\n                    return x == y;\n                y = JSBI.__toPrimitive(y);\n            }\n            else if (typeof x === 'symbol') {\n                if (JSBI.__isBigInt(y))\n                    return false;\n                if (typeof y !== 'object')\n                    return x == y;\n                y = JSBI.__toPrimitive(y);\n            }\n            else if (typeof x === 'object') {\n                if (typeof y === 'object' && y.constructor !== JSBI)\n                    return x == y;\n                x = JSBI.__toPrimitive(x);\n            }\n            else {\n                return x == y;\n            }\n        }\n    };\n    JSBI.NE = function (x, y) {\n        return !JSBI.EQ(x, y);\n    };\n    // Helpers.\n    JSBI.__zero = function () {\n        return new JSBI(0, false);\n    };\n    JSBI.__oneDigit = function (value, sign) {\n        var result = new JSBI(1, sign);\n        result.__setDigit(0, value);\n        return result;\n    };\n    JSBI.prototype.__copy = function () {\n        var result = new JSBI(this.length, this.sign);\n        for (var i = 0; i < this.length; i++) {\n            result[i] = this[i];\n        }\n        return result;\n    };\n    JSBI.prototype.__trim = function () {\n        var newLength = this.length;\n        var last = this[newLength - 1];\n        while (last === 0) {\n            newLength--;\n            last = this[newLength - 1];\n            this.pop();\n        }\n        if (newLength === 0)\n            this.sign = false;\n        return this;\n    };\n    JSBI.prototype.__initializeDigits = function () {\n        for (var i = 0; i < this.length; i++) {\n            this[i] = 0;\n        }\n    };\n    JSBI.__decideRounding = function (x, mantissaBitsUnset, digitIndex, currentDigit) {\n        if (mantissaBitsUnset > 0)\n            return -1;\n        var topUnconsumedBit;\n        if (mantissaBitsUnset < 0) {\n            topUnconsumedBit = -mantissaBitsUnset - 1;\n        }\n        else {\n            // {currentDigit} fit the mantissa exactly; look at the next digit.\n            if (digitIndex === 0)\n                return -1;\n            digitIndex--;\n            currentDigit = x.__digit(digitIndex);\n            topUnconsumedBit = 31;\n        }\n        // If the most significant remaining bit is 0, round down.\n        var mask = 1 << topUnconsumedBit;\n        if ((currentDigit & mask) === 0)\n            return -1;\n        // If any other remaining bit is set, round up.\n        mask -= 1;\n        if ((currentDigit & mask) !== 0)\n            return 1;\n        while (digitIndex > 0) {\n            digitIndex--;\n            if (x.__digit(digitIndex) !== 0)\n                return 1;\n        }\n        return 0;\n    };\n    JSBI.__fromDouble = function (value) {\n        var sign = value < 0;\n        JSBI.__kBitConversionDouble[0] = value;\n        var rawExponent = (JSBI.__kBitConversionInts[1] >>> 20) & 0x7FF;\n        var exponent = rawExponent - 0x3FF;\n        var digits = (exponent >>> 5) + 1;\n        var result = new JSBI(digits, sign);\n        var kHiddenBit = 0x00100000;\n        var mantissaHigh = (JSBI.__kBitConversionInts[1] & 0xFFFFF) | kHiddenBit;\n        var mantissaLow = JSBI.__kBitConversionInts[0];\n        var kMantissaHighTopBit = 20;\n        // 0-indexed position of most significant bit in most significant digit.\n        var msdTopBit = exponent & 31;\n        // Number of unused bits in the mantissa. We'll keep them shifted to the\n        // left (i.e. most significant part).\n        var remainingMantissaBits = 0;\n        // Next digit under construction.\n        var digit;\n        // First, build the MSD by shifting the mantissa appropriately.\n        if (msdTopBit < kMantissaHighTopBit) {\n            var shift = kMantissaHighTopBit - msdTopBit;\n            remainingMantissaBits = shift + 32;\n            digit = mantissaHigh >>> shift;\n            mantissaHigh = (mantissaHigh << (32 - shift)) |\n                (mantissaLow >>> shift);\n            mantissaLow = mantissaLow << (32 - shift);\n        }\n        else if (msdTopBit === kMantissaHighTopBit) {\n            remainingMantissaBits = 32;\n            digit = mantissaHigh;\n            mantissaHigh = mantissaLow;\n        }\n        else {\n            var shift = msdTopBit - kMantissaHighTopBit;\n            remainingMantissaBits = 32 - shift;\n            digit = (mantissaHigh << shift) | (mantissaLow >>> (32 - shift));\n            mantissaHigh = mantissaLow << shift;\n        }\n        result.__setDigit(digits - 1, digit);\n        // Then fill in the rest of the digits.\n        for (var digitIndex = digits - 2; digitIndex >= 0; digitIndex--) {\n            if (remainingMantissaBits > 0) {\n                remainingMantissaBits -= 32;\n                digit = mantissaHigh;\n                mantissaHigh = mantissaLow;\n            }\n            else {\n                digit = 0;\n            }\n            result.__setDigit(digitIndex, digit);\n        }\n        return result.__trim();\n    };\n    JSBI.__isWhitespace = function (c) {\n        if (c <= 0x0D && c >= 0x09)\n            return true;\n        if (c <= 0x9F)\n            return c === 0x20;\n        if (c <= 0x01FFFF) {\n            return c === 0xA0 || c === 0x1680;\n        }\n        if (c <= 0x02FFFF) {\n            c &= 0x01FFFF;\n            return c <= 0x0A || c === 0x28 || c === 0x29 || c === 0x2F ||\n                c === 0x5F || c === 0x1000;\n        }\n        return c === 0xFEFF;\n    };\n    JSBI.__fromString = function (string, radix) {\n        if (radix === void 0) { radix = 0; }\n        var sign = 0;\n        //This line was found in the source code but never used?\n        var leadingZero = false;\n        //This line makes the compiler think it was used.\n        leadingZero;\n        var length = string.length;\n        var cursor = 0;\n        if (cursor === length)\n            return JSBI.__zero();\n        var current = string.charCodeAt(cursor);\n        // Skip whitespace.\n        while (JSBI.__isWhitespace(current)) {\n            if (++cursor === length)\n                return JSBI.__zero();\n            current = string.charCodeAt(cursor);\n        }\n        // Detect radix.\n        if (current === 0x2B) { // '+'\n            if (++cursor === length)\n                return null;\n            current = string.charCodeAt(cursor);\n            sign = 1;\n        }\n        else if (current === 0x2D) { // '-'\n            if (++cursor === length)\n                return null;\n            current = string.charCodeAt(cursor);\n            sign = -1;\n        }\n        if (radix === 0) {\n            radix = 10;\n            if (current === 0x30) { // '0'\n                if (++cursor === length)\n                    return JSBI.__zero();\n                current = string.charCodeAt(cursor);\n                if (current === 0x58 || current === 0x78) { // 'X' or 'x'\n                    radix = 16;\n                    if (++cursor === length)\n                        return null;\n                    current = string.charCodeAt(cursor);\n                }\n                else if (current === 0x4F || current === 0x6F) { // 'O' or 'o'\n                    radix = 8;\n                    if (++cursor === length)\n                        return null;\n                    current = string.charCodeAt(cursor);\n                }\n                else if (current === 0x42 || current === 0x62) { // 'B' or 'b'\n                    radix = 2;\n                    if (++cursor === length)\n                        return null;\n                    current = string.charCodeAt(cursor);\n                }\n                else {\n                    leadingZero = true;\n                }\n            }\n        }\n        else if (radix === 16) {\n            if (current === 0x30) { // '0'\n                // Allow \"0x\" prefix.\n                if (++cursor === length)\n                    return JSBI.__zero();\n                current = string.charCodeAt(cursor);\n                if (current === 0x58 || current === 0x78) { // 'X' or 'x'\n                    if (++cursor === length)\n                        return null;\n                    current = string.charCodeAt(cursor);\n                }\n                else {\n                    leadingZero = true;\n                }\n            }\n        }\n        // Skip leading zeros.\n        while (current === 0x30) {\n            leadingZero = true;\n            if (++cursor === length)\n                return JSBI.__zero();\n            current = string.charCodeAt(cursor);\n        }\n        // Allocate result.\n        var chars = length - cursor;\n        var bitsPerChar = JSBI.__kMaxBitsPerChar[radix];\n        var roundup = JSBI.__kBitsPerCharTableMultiplier - 1;\n        if (chars > (1 << 30) / bitsPerChar)\n            return null;\n        var bitsMin = (bitsPerChar * chars + roundup) >>> JSBI.__kBitsPerCharTableShift;\n        var resultLength = (bitsMin + 31) >>> 5;\n        var result = new JSBI(resultLength, false);\n        // Parse.\n        var limDigit = radix < 10 ? radix : 10;\n        var limAlpha = radix > 10 ? radix - 10 : 0;\n        if ((radix & (radix - 1)) === 0) {\n            // Power-of-two radix.\n            bitsPerChar >>= JSBI.__kBitsPerCharTableShift;\n            var parts = [];\n            var partsBits = [];\n            var done = false;\n            do {\n                var part = 0;\n                var bits = 0;\n                while (true) {\n                    var d = void 0;\n                    if (((current - 48) >>> 0) < limDigit) {\n                        d = current - 48;\n                    }\n                    else if ((((current | 32) - 97) >>> 0) < limAlpha) {\n                        d = (current | 32) - 87;\n                    }\n                    else {\n                        done = true;\n                        break;\n                    }\n                    bits += bitsPerChar;\n                    part = (part << bitsPerChar) | d;\n                    if (++cursor === length) {\n                        done = true;\n                        break;\n                    }\n                    current = string.charCodeAt(cursor);\n                    if (bits + bitsPerChar > 32)\n                        break;\n                }\n                parts.push(part);\n                partsBits.push(bits);\n            } while (!done);\n            JSBI.__fillFromParts(result, parts, partsBits);\n        }\n        else {\n            result.__initializeDigits();\n            var done = false;\n            var charsSoFar = 0;\n            do {\n                var part = 0;\n                var multiplier = 1;\n                while (true) {\n                    var d = void 0;\n                    if (((current - 48) >>> 0) < limDigit) {\n                        d = current - 48;\n                    }\n                    else if ((((current | 32) - 97) >>> 0) < limAlpha) {\n                        d = (current | 32) - 87;\n                    }\n                    else {\n                        done = true;\n                        break;\n                    }\n                    var m = multiplier * radix;\n                    if (m > 0xFFFFFFFF)\n                        break;\n                    multiplier = m;\n                    part = part * radix + d;\n                    charsSoFar++;\n                    if (++cursor === length) {\n                        done = true;\n                        break;\n                    }\n                    current = string.charCodeAt(cursor);\n                }\n                roundup = JSBI.__kBitsPerCharTableMultiplier * 32 - 1;\n                var digitsSoFar = (bitsPerChar * charsSoFar + roundup) >>>\n                    (JSBI.__kBitsPerCharTableShift + 5);\n                result.__inplaceMultiplyAdd(multiplier, part, digitsSoFar);\n            } while (!done);\n        }\n        while (cursor !== length) {\n            if (!JSBI.__isWhitespace(current))\n                return null;\n            current = string.charCodeAt(cursor++);\n        }\n        // Get result.\n        if (sign !== 0 && radix !== 10)\n            return null;\n        result.sign = (sign === -1);\n        return result.__trim();\n    };\n    JSBI.__fillFromParts = function (result, parts, partsBits) {\n        var digitIndex = 0;\n        var digit = 0;\n        var bitsInDigit = 0;\n        for (var i = parts.length - 1; i >= 0; i--) {\n            var part = parts[i];\n            var partBits = partsBits[i];\n            digit |= (part << bitsInDigit);\n            bitsInDigit += partBits;\n            if (bitsInDigit === 32) {\n                result.__setDigit(digitIndex++, digit);\n                bitsInDigit = 0;\n                digit = 0;\n            }\n            else if (bitsInDigit > 32) {\n                result.__setDigit(digitIndex++, digit);\n                bitsInDigit -= 32;\n                digit = part >>> (partBits - bitsInDigit);\n            }\n        }\n        if (digit !== 0) {\n            if (digitIndex >= result.length)\n                throw new Error('implementation bug');\n            result.__setDigit(digitIndex++, digit);\n        }\n        for (; digitIndex < result.length; digitIndex++) {\n            result.__setDigit(digitIndex, 0);\n        }\n    };\n    JSBI.__toStringBasePowerOfTwo = function (x, radix) {\n        var length = x.length;\n        var bits = radix - 1;\n        bits = ((bits >>> 1) & 0x55) + (bits & 0x55);\n        bits = ((bits >>> 2) & 0x33) + (bits & 0x33);\n        bits = ((bits >>> 4) & 0x0F) + (bits & 0x0F);\n        var bitsPerChar = bits;\n        var charMask = radix - 1;\n        var msd = x.__digit(length - 1);\n        var msdLeadingZeros = Math.clz32(msd);\n        var bitLength = length * 32 - msdLeadingZeros;\n        var charsRequired = ((bitLength + bitsPerChar - 1) / bitsPerChar) | 0;\n        if (x.sign)\n            charsRequired++;\n        if (charsRequired > (1 << 28))\n            throw new Error('string too long');\n        var result = new Array(charsRequired);\n        var pos = charsRequired - 1;\n        var digit = 0;\n        var availableBits = 0;\n        for (var i = 0; i < length - 1; i++) {\n            var newDigit = x.__digit(i);\n            var current_1 = (digit | (newDigit << availableBits)) & charMask;\n            result[pos--] = JSBI.__kConversionChars[current_1];\n            var consumedBits = bitsPerChar - availableBits;\n            digit = newDigit >>> consumedBits;\n            availableBits = 32 - consumedBits;\n            while (availableBits >= bitsPerChar) {\n                result[pos--] = JSBI.__kConversionChars[digit & charMask];\n                digit >>>= bitsPerChar;\n                availableBits -= bitsPerChar;\n            }\n        }\n        var current = (digit | (msd << availableBits)) & charMask;\n        result[pos--] = JSBI.__kConversionChars[current];\n        digit = msd >>> (bitsPerChar - availableBits);\n        while (digit !== 0) {\n            result[pos--] = JSBI.__kConversionChars[digit & charMask];\n            digit >>>= bitsPerChar;\n        }\n        if (x.sign)\n            result[pos--] = '-';\n        if (pos !== -1)\n            throw new Error('implementation bug');\n        return result.join('');\n    };\n    JSBI.__toStringGeneric = function (x, radix, isRecursiveCall) {\n        var length = x.length;\n        if (length === 0)\n            return '';\n        if (length === 1) {\n            var result = x.__unsignedDigit(0).toString(radix);\n            if (isRecursiveCall === false && x.sign) {\n                result = '-' + result;\n            }\n            return result;\n        }\n        var bitLength = length * 32 - Math.clz32(x.__digit(length - 1));\n        var maxBitsPerChar = JSBI.__kMaxBitsPerChar[radix];\n        var minBitsPerChar = maxBitsPerChar - 1;\n        var charsRequired = bitLength * JSBI.__kBitsPerCharTableMultiplier;\n        charsRequired += minBitsPerChar - 1;\n        charsRequired = (charsRequired / minBitsPerChar) | 0;\n        var secondHalfChars = (charsRequired + 1) >> 1;\n        // Divide-and-conquer: split by a power of {radix} that's approximately\n        // the square root of {x}, then recurse.\n        var conqueror = JSBI.exponentiate(JSBI.__oneDigit(radix, false), JSBI.__oneDigit(secondHalfChars, false));\n        var quotient;\n        var secondHalf;\n        var divisor = conqueror.__unsignedDigit(0);\n        if (conqueror.length === 1 && divisor <= 0xFFFF) {\n            quotient = new JSBI(x.length, false);\n            quotient.__initializeDigits();\n            var remainder = 0;\n            for (var i = x.length * 2 - 1; i >= 0; i--) {\n                var input = (remainder << 16) | x.__halfDigit(i);\n                quotient.__setHalfDigit(i, (input / divisor) | 0);\n                remainder = (input % divisor) | 0;\n            }\n            secondHalf = remainder.toString(radix);\n        }\n        else {\n            var divisionResult = JSBI.__absoluteDivLarge(x, conqueror, true, true);\n            quotient = divisionResult.quotient;\n            var remainder = divisionResult.remainder.__trim();\n            secondHalf = JSBI.__toStringGeneric(remainder, radix, true);\n        }\n        quotient.__trim();\n        var firstHalf = JSBI.__toStringGeneric(quotient, radix, true);\n        while (secondHalf.length < secondHalfChars) {\n            secondHalf = '0' + secondHalf;\n        }\n        if (isRecursiveCall === false && x.sign) {\n            firstHalf = '-' + firstHalf;\n        }\n        return firstHalf + secondHalf;\n    };\n    JSBI.__unequalSign = function (leftNegative) {\n        return leftNegative ? -1 : 1;\n    };\n    JSBI.__absoluteGreater = function (bothNegative) {\n        return bothNegative ? -1 : 1;\n    };\n    JSBI.__absoluteLess = function (bothNegative) {\n        return bothNegative ? 1 : -1;\n    };\n    JSBI.__compareToBigInt = function (x, y) {\n        var xSign = x.sign;\n        if (xSign !== y.sign)\n            return JSBI.__unequalSign(xSign);\n        var result = JSBI.__absoluteCompare(x, y);\n        if (result > 0)\n            return JSBI.__absoluteGreater(xSign);\n        if (result < 0)\n            return JSBI.__absoluteLess(xSign);\n        return 0;\n    };\n    JSBI.__compareToNumber = function (x, y) {\n        /**\n         * @todo Investigate this weird `0 === 0` construct\n         */\n        if (y | (0 === 0)) {\n            var xSign = x.sign;\n            var ySign = (y < 0);\n            if (xSign !== ySign)\n                return JSBI.__unequalSign(xSign);\n            if (x.length === 0) {\n                if (ySign)\n                    throw new Error('implementation bug');\n                return y === 0 ? 0 : -1;\n            }\n            // Any multi-digit BigInt is bigger than an int32.\n            if (x.length > 1)\n                return JSBI.__absoluteGreater(xSign);\n            var yAbs = Math.abs(y);\n            var xDigit = x.__unsignedDigit(0);\n            if (xDigit > yAbs)\n                return JSBI.__absoluteGreater(xSign);\n            if (xDigit < yAbs)\n                return JSBI.__absoluteLess(xSign);\n            return 0;\n        }\n        return JSBI.__compareToDouble(x, y);\n    };\n    /**\n     * @returns NaN|-1|1|0\n     *\n     * + NaN    : `y` was `NaN`\n     * + -1     : `x < y`\n     * + +1     : `x > y`\n     * +  0     : `x == y`\n     */\n    JSBI.__compareToDouble = function (x, y) {\n        if (y !== y)\n            return y; // NaN.\n        if (y === Infinity)\n            return -1;\n        if (y === -Infinity)\n            return 1;\n        var xSign = x.sign;\n        var ySign = (y < 0);\n        if (xSign !== ySign)\n            return JSBI.__unequalSign(xSign);\n        if (y === 0) {\n            throw new Error('implementation bug: should be handled elsewhere');\n        }\n        if (x.length === 0)\n            return -1;\n        JSBI.__kBitConversionDouble[0] = y;\n        var rawExponent = (JSBI.__kBitConversionInts[1] >>> 20) & 0x7FF;\n        if (rawExponent === 0x7FF) {\n            throw new Error('implementation bug: handled elsewhere');\n        }\n        var exponent = rawExponent - 0x3FF;\n        if (exponent < 0) {\n            // The absolute value of y is less than 1. Only 0n has an absolute\n            // value smaller than that, but we've already covered that case.\n            return JSBI.__absoluteGreater(xSign);\n        }\n        var xLength = x.length;\n        var xMsd = x.__digit(xLength - 1);\n        var msdLeadingZeros = Math.clz32(xMsd);\n        var xBitLength = xLength * 32 - msdLeadingZeros;\n        var yBitLength = exponent + 1;\n        if (xBitLength < yBitLength)\n            return JSBI.__absoluteLess(xSign);\n        if (xBitLength > yBitLength)\n            return JSBI.__absoluteGreater(xSign);\n        // Same sign, same bit length. Shift mantissa to align with x and compare\n        // bit for bit.\n        var kHiddenBit = 0x00100000;\n        var mantissaHigh = (JSBI.__kBitConversionInts[1] & 0xFFFFF) | kHiddenBit;\n        var mantissaLow = JSBI.__kBitConversionInts[0];\n        var kMantissaHighTopBit = 20;\n        var msdTopBit = 31 - msdLeadingZeros;\n        if (msdTopBit !== ((xBitLength - 1) % 31)) {\n            throw new Error('implementation bug');\n        }\n        var compareMantissa; // Shifted chunk of mantissa.\n        var remainingMantissaBits = 0;\n        // First, compare most significant digit against beginning of mantissa.\n        if (msdTopBit < kMantissaHighTopBit) {\n            var shift = kMantissaHighTopBit - msdTopBit;\n            remainingMantissaBits = shift + 32;\n            compareMantissa = mantissaHigh >>> shift;\n            mantissaHigh = (mantissaHigh << (32 - shift)) | (mantissaLow >>> shift);\n            mantissaLow = mantissaLow << (32 - shift);\n        }\n        else if (msdTopBit === kMantissaHighTopBit) {\n            remainingMantissaBits = 32;\n            compareMantissa = mantissaHigh;\n            mantissaHigh = mantissaLow;\n        }\n        else {\n            var shift = msdTopBit - kMantissaHighTopBit;\n            remainingMantissaBits = 32 - shift;\n            compareMantissa =\n                (mantissaHigh << shift) | (mantissaLow >>> (32 - shift));\n            mantissaHigh = mantissaLow << shift;\n        }\n        xMsd = xMsd >>> 0;\n        compareMantissa = compareMantissa >>> 0;\n        if (xMsd > compareMantissa)\n            return JSBI.__absoluteGreater(xSign);\n        if (xMsd < compareMantissa)\n            return JSBI.__absoluteLess(xSign);\n        // Then, compare additional digits against remaining mantissa bits.\n        for (var digitIndex = xLength - 2; digitIndex >= 0; digitIndex--) {\n            if (remainingMantissaBits > 0) {\n                remainingMantissaBits -= 32;\n                compareMantissa = mantissaHigh >>> 0;\n                mantissaHigh = mantissaLow;\n                mantissaLow = 0;\n            }\n            else {\n                compareMantissa = 0;\n            }\n            var digit = x.__unsignedDigit(digitIndex);\n            if (digit > compareMantissa)\n                return JSBI.__absoluteGreater(xSign);\n            if (digit < compareMantissa)\n                return JSBI.__absoluteLess(xSign);\n        }\n        // Integer parts are equal; check whether {y} has a fractional part.\n        if (mantissaHigh !== 0 || mantissaLow !== 0) {\n            if (remainingMantissaBits === 0)\n                throw new Error('implementation bug');\n            return JSBI.__absoluteLess(xSign);\n        }\n        return 0;\n    };\n    JSBI.__equalToNumber = function (x, y) {\n        if (y | (0 === y)) {\n            if (y === 0)\n                return x.length === 0;\n            // Any multi-digit BigInt is bigger than an int32.\n            return (x.length === 1) && (x.sign === (y < 0)) &&\n                (x.__unsignedDigit(0) === Math.abs(y));\n        }\n        return JSBI.__compareToDouble(x, y) === 0;\n    };\n    // Comparison operations, chosen such that \"op ^ 2\" reverses direction:\n    // 0 - lessThan\n    // 1 - lessThanOrEqual\n    // 2 - greaterThan\n    // 3 - greaterThanOrEqual\n    JSBI.__comparisonResultToBool = function (result, op) {\n        switch (op) {\n            case 0: return result < 0;\n            case 1: return result <= 0;\n            case 2: return result > 0;\n            case 3: return result >= 0;\n        }\n        throw new Error('unreachable');\n    };\n    JSBI.__compare = function (x, y, op) {\n        x = JSBI.__toPrimitive(x);\n        y = JSBI.__toPrimitive(y);\n        if (typeof x === 'string' && typeof y === 'string') {\n            switch (op) {\n                case 0: return x < y;\n                case 1: return x <= y;\n                case 2: return x > y;\n                case 3: return x >= y;\n            }\n        }\n        if (JSBI.__isBigInt(x) && typeof y === 'string') {\n            y = JSBI.__fromString(y);\n            if (y === null)\n                return false;\n            return JSBI.__comparisonResultToBool(JSBI.__compareToBigInt(x, y), op);\n        }\n        if (typeof x === 'string' && JSBI.__isBigInt(y)) {\n            x = JSBI.__fromString(x);\n            if (x === null)\n                return false;\n            return JSBI.__comparisonResultToBool(JSBI.__compareToBigInt(x, y), op);\n        }\n        if (x == null || y == null) {\n            throw new Error(\"x and y should not be null\");\n        }\n        x = JSBI.__toNumeric(x);\n        y = JSBI.__toNumeric(y);\n        if (JSBI.__isBigInt(x)) {\n            if (JSBI.__isBigInt(y)) {\n                return JSBI.__comparisonResultToBool(JSBI.__compareToBigInt(x, y), op);\n            }\n            if (typeof y !== 'number')\n                throw new Error('implementation bug');\n            return JSBI.__comparisonResultToBool(JSBI.__compareToNumber(x, y), op);\n        }\n        if (typeof x !== 'number')\n            throw new Error('implementation bug');\n        if (JSBI.__isBigInt(y)) {\n            // Note that \"op ^ 2\" reverses the op's direction.\n            return JSBI.__comparisonResultToBool(JSBI.__compareToNumber(y, x), (op ^ 2));\n        }\n        if (typeof y !== 'number')\n            throw new Error('implementation bug');\n        switch (op) {\n            case 0: return x < y;\n            case 1: return x <= y;\n            case 2: return x > y;\n            case 3: return x >= y;\n        }\n    };\n    JSBI.prototype.__clzmsd = function () {\n        return Math.clz32(this[this.length - 1]);\n    };\n    JSBI.__absoluteAdd = function (x, y, resultSign) {\n        if (x.length < y.length)\n            return JSBI.__absoluteAdd(y, x, resultSign);\n        if (x.length === 0)\n            return x;\n        if (y.length === 0)\n            return x.sign === resultSign ? x : JSBI.unaryMinus(x);\n        var resultLength = x.length;\n        if (x.__clzmsd() === 0 || (y.length === x.length && y.__clzmsd() === 0)) {\n            resultLength++;\n        }\n        var result = new JSBI(resultLength, resultSign);\n        var carry = 0;\n        var i = 0;\n        for (; i < y.length; i++) {\n            var yDigit = y.__digit(i);\n            var xDigit = x.__digit(i);\n            var rLow = (xDigit & 0xFFFF) + (yDigit & 0xFFFF) + carry;\n            var rHigh = (xDigit >>> 16) + (yDigit >>> 16) + (rLow >>> 16);\n            carry = rHigh >>> 16;\n            result.__setDigit(i, (rLow & 0xFFFF) | (rHigh << 16));\n        }\n        for (; i < x.length; i++) {\n            var xDigit = x.__digit(i);\n            var rLow = (xDigit & 0xFFFF) + carry;\n            var rHigh = (xDigit >>> 16) + (rLow >>> 16);\n            carry = rHigh >>> 16;\n            result.__setDigit(i, (rLow & 0xFFFF) | (rHigh << 16));\n        }\n        if (i < result.length) {\n            result.__setDigit(i, carry);\n        }\n        return result.__trim();\n    };\n    JSBI.__absoluteSub = function (x, y, resultSign) {\n        if (x.length === 0)\n            return x;\n        if (y.length === 0)\n            return x.sign === resultSign ? x : JSBI.unaryMinus(x);\n        var result = new JSBI(x.length, resultSign);\n        var borrow = 0;\n        var i = 0;\n        for (; i < y.length; i++) {\n            var xDigit = x.__digit(i);\n            var yDigit = y.__digit(i);\n            var rLow = (xDigit & 0xFFFF) - (yDigit & 0xFFFF) - borrow;\n            borrow = (rLow >>> 16) & 1;\n            var rHigh = (xDigit >>> 16) - (yDigit >>> 16) - borrow;\n            borrow = (rHigh >>> 16) & 1;\n            result.__setDigit(i, (rLow & 0xFFFF) | (rHigh << 16));\n        }\n        for (; i < x.length; i++) {\n            var xDigit = x.__digit(i);\n            var rLow = (xDigit & 0xFFFF) - borrow;\n            borrow = (rLow >>> 16) & 1;\n            var rHigh = (xDigit >>> 16) - borrow;\n            borrow = (rHigh >>> 16) & 1;\n            result.__setDigit(i, (rLow & 0xFFFF) | (rHigh << 16));\n        }\n        return result.__trim();\n    };\n    JSBI.__absoluteAddOne = function (x, sign, result) {\n        if (result === void 0) { result = null; }\n        var inputLength = x.length;\n        if (result === null) {\n            result = new JSBI(inputLength, sign);\n        }\n        else {\n            result.sign = sign;\n        }\n        var carry = true;\n        for (var i = 0; i < inputLength; i++) {\n            var digit = x.__digit(i);\n            var newCarry = digit === (0xFFFFFFFF | 0);\n            if (carry)\n                digit = (digit + 1) | 0;\n            carry = newCarry;\n            result.__setDigit(i, digit);\n        }\n        if (carry) {\n            result.__setDigitGrow(inputLength, 1);\n        }\n        return result;\n    };\n    JSBI.__absoluteSubOne = function (x, resultLength) {\n        var length = x.length;\n        resultLength = resultLength || length;\n        var result = new JSBI(resultLength, false);\n        var borrow = true;\n        for (var i = 0; i < length; i++) {\n            var digit = x.__digit(i);\n            var newBorrow = digit === 0;\n            if (borrow)\n                digit = (digit - 1) | 0;\n            borrow = newBorrow;\n            result.__setDigit(i, digit);\n        }\n        for (var i = length; i < resultLength; i++) {\n            result.__setDigit(i, 0);\n        }\n        return result;\n    };\n    JSBI.__absoluteAnd = function (x, y, result) {\n        if (result === void 0) { result = null; }\n        var xLength = x.length;\n        var yLength = y.length;\n        var numPairs = yLength;\n        if (xLength < yLength) {\n            numPairs = xLength;\n            var tmp = x;\n            var tmpLength = xLength;\n            x = y;\n            xLength = yLength;\n            y = tmp;\n            yLength = tmpLength;\n        }\n        var resultLength = numPairs;\n        if (result === null) {\n            result = new JSBI(resultLength, false);\n        }\n        else {\n            resultLength = result.length;\n        }\n        var i = 0;\n        for (; i < numPairs; i++) {\n            result.__setDigit(i, x.__digit(i) & y.__digit(i));\n        }\n        for (; i < resultLength; i++) {\n            result.__setDigit(i, 0);\n        }\n        return result;\n    };\n    JSBI.__absoluteAndNot = function (x, y, result) {\n        if (result === void 0) { result = null; }\n        var xLength = x.length;\n        var yLength = y.length;\n        var numPairs = yLength;\n        if (xLength < yLength) {\n            numPairs = xLength;\n        }\n        var resultLength = xLength;\n        if (result === null) {\n            result = new JSBI(resultLength, false);\n        }\n        else {\n            resultLength = result.length;\n        }\n        var i = 0;\n        for (; i < numPairs; i++) {\n            result.__setDigit(i, x.__digit(i) & ~y.__digit(i));\n        }\n        for (; i < xLength; i++) {\n            result.__setDigit(i, x.__digit(i));\n        }\n        for (; i < resultLength; i++) {\n            result.__setDigit(i, 0);\n        }\n        return result;\n    };\n    JSBI.__absoluteOr = function (x, y, result) {\n        if (result === void 0) { result = null; }\n        var xLength = x.length;\n        var yLength = y.length;\n        var numPairs = yLength;\n        if (xLength < yLength) {\n            numPairs = xLength;\n            var tmp = x;\n            var tmpLength = xLength;\n            x = y;\n            xLength = yLength;\n            y = tmp;\n            yLength = tmpLength;\n        }\n        var resultLength = xLength;\n        if (result === null) {\n            result = new JSBI(resultLength, false);\n        }\n        else {\n            resultLength = result.length;\n        }\n        var i = 0;\n        for (; i < numPairs; i++) {\n            result.__setDigit(i, x.__digit(i) | y.__digit(i));\n        }\n        for (; i < xLength; i++) {\n            result.__setDigit(i, x.__digit(i));\n        }\n        for (; i < resultLength; i++) {\n            result.__setDigit(i, 0);\n        }\n        return result;\n    };\n    JSBI.__absoluteXor = function (x, y, result) {\n        if (result === void 0) { result = null; }\n        var xLength = x.length;\n        var yLength = y.length;\n        var numPairs = yLength;\n        if (xLength < yLength) {\n            numPairs = xLength;\n            var tmp = x;\n            var tmpLength = xLength;\n            x = y;\n            xLength = yLength;\n            y = tmp;\n            yLength = tmpLength;\n        }\n        var resultLength = xLength;\n        if (result === null) {\n            result = new JSBI(resultLength, false);\n        }\n        else {\n            resultLength = result.length;\n        }\n        var i = 0;\n        for (; i < numPairs; i++) {\n            result.__setDigit(i, x.__digit(i) ^ y.__digit(i));\n        }\n        for (; i < xLength; i++) {\n            result.__setDigit(i, x.__digit(i));\n        }\n        for (; i < resultLength; i++) {\n            result.__setDigit(i, 0);\n        }\n        return result;\n    };\n    JSBI.__absoluteCompare = function (x, y) {\n        var diff = x.length - y.length;\n        if (diff !== 0)\n            return diff;\n        var i = x.length - 1;\n        while (i >= 0 && x.__digit(i) === y.__digit(i))\n            i--;\n        if (i < 0)\n            return 0;\n        return x.__unsignedDigit(i) > y.__unsignedDigit(i) ? 1 : -1;\n    };\n    JSBI.__multiplyAccumulate = function (multiplicand, multiplier, accumulator, accumulatorIndex) {\n        if (multiplier === 0)\n            return;\n        var m2Low = multiplier & 0xFFFF;\n        var m2High = multiplier >>> 16;\n        var carry = 0;\n        var highLower = 0;\n        var highHigher = 0;\n        for (var i = 0; i < multiplicand.length; i++, accumulatorIndex++) {\n            var acc = accumulator.__digit(accumulatorIndex);\n            var accLow = acc & 0xFFFF;\n            var accHigh = acc >>> 16;\n            var m1 = multiplicand.__digit(i);\n            var m1Low = m1 & 0xFFFF;\n            var m1High = m1 >>> 16;\n            var rLow = Math.imul(m1Low, m2Low);\n            var rMid1 = Math.imul(m1Low, m2High);\n            var rMid2 = Math.imul(m1High, m2Low);\n            var rHigh = Math.imul(m1High, m2High);\n            accLow += highLower + (rLow & 0xFFFF);\n            accHigh += highHigher + carry + (accLow >>> 16) + (rLow >>> 16) +\n                (rMid1 & 0xFFFF) + (rMid2 & 0xFFFF);\n            carry = accHigh >>> 16;\n            highLower = (rMid1 >>> 16) + (rMid2 >>> 16) + (rHigh & 0xFFFF) + carry;\n            carry = highLower >>> 16;\n            highLower &= 0xFFFF;\n            highHigher = rHigh >>> 16;\n            acc = (accLow & 0xFFFF) | (accHigh << 16);\n            accumulator.__setDigit(accumulatorIndex, acc);\n        }\n        for (; carry !== 0 || highLower !== 0 || highHigher !== 0; accumulatorIndex++) {\n            var acc = accumulator.__digit(accumulatorIndex);\n            var accLow = (acc & 0xFFFF) + highLower;\n            var accHigh = (acc >>> 16) + (accLow >>> 16) + highHigher + carry;\n            highLower = 0;\n            highHigher = 0;\n            carry = accHigh >>> 16;\n            acc = (accLow & 0xFFFF) | (accHigh << 16);\n            accumulator.__setDigit(accumulatorIndex, acc);\n        }\n    };\n    JSBI.__internalMultiplyAdd = function (source, factor, summand, n, result) {\n        var carry = summand;\n        var high = 0;\n        for (var i = 0; i < n; i++) {\n            var digit = source.__digit(i);\n            var rx = Math.imul(digit & 0xFFFF, factor);\n            var r0 = (rx & 0xFFFF) + high + carry;\n            carry = r0 >>> 16;\n            var ry = Math.imul(digit >>> 16, factor);\n            var r16 = (ry & 0xFFFF) + (rx >>> 16) + carry;\n            carry = r16 >>> 16;\n            high = ry >>> 16;\n            result.__setDigit(i, (r16 << 16) | (r0 & 0xFFFF));\n        }\n        if (result.length > n) {\n            result.__setDigit(n++, carry + high);\n            while (n < result.length) {\n                result.__setDigit(n++, 0);\n            }\n        }\n        else {\n            if (carry + high !== 0)\n                throw new Error('implementation bug');\n        }\n    };\n    JSBI.prototype.__inplaceMultiplyAdd = function (multiplier, summand, length) {\n        if (length > this.length)\n            length = this.length;\n        var mLow = multiplier & 0xFFFF;\n        var mHigh = multiplier >>> 16;\n        var carry = 0;\n        var highLower = summand & 0xFFFF;\n        var highHigher = summand >>> 16;\n        for (var i = 0; i < length; i++) {\n            var d = this.__digit(i);\n            var dLow = d & 0xFFFF;\n            var dHigh = d >>> 16;\n            var pLow = Math.imul(dLow, mLow);\n            var pMid1 = Math.imul(dLow, mHigh);\n            var pMid2 = Math.imul(dHigh, mLow);\n            var pHigh = Math.imul(dHigh, mHigh);\n            var rLow = highLower + (pLow & 0xFFFF);\n            var rHigh = highHigher + carry + (rLow >>> 16) + (pLow >>> 16) +\n                (pMid1 & 0xFFFF) + (pMid2 & 0xFFFF);\n            highLower = (pMid1 >>> 16) + (pMid2 >>> 16) + (pHigh & 0xFFFF) +\n                (rHigh >>> 16);\n            carry = highLower >>> 16;\n            highLower &= 0xFFFF;\n            highHigher = pHigh >>> 16;\n            var result = (rLow & 0xFFFF) | (rHigh << 16);\n            this.__setDigit(i, result);\n        }\n        if (carry !== 0 || highLower !== 0 || highHigher !== 0) {\n            throw new Error('implementation bug');\n        }\n    };\n    JSBI.__absoluteDivSmall = function (x, divisor, quotient) {\n        if (quotient === null)\n            quotient = new JSBI(x.length, false);\n        var remainder = 0;\n        for (var i = x.length * 2 - 1; i >= 0; i -= 2) {\n            var input = ((remainder << 16) | x.__halfDigit(i)) >>> 0;\n            var upperHalf = (input / divisor) | 0;\n            remainder = (input % divisor) | 0;\n            input = ((remainder << 16) | x.__halfDigit(i - 1)) >>> 0;\n            var lowerHalf = (input / divisor) | 0;\n            remainder = (input % divisor) | 0;\n            quotient.__setDigit(i >>> 1, (upperHalf << 16) | lowerHalf);\n        }\n        return quotient;\n    };\n    JSBI.__absoluteModSmall = function (x, divisor) {\n        var remainder = 0;\n        for (var i = x.length * 2 - 1; i >= 0; i--) {\n            var input = ((remainder << 16) | x.__halfDigit(i)) >>> 0;\n            remainder = (input % divisor) | 0;\n        }\n        return remainder;\n    };\n    JSBI.__absoluteDivLarge = function (dividend, divisor, wantQuotient, wantRemainder) {\n        var n = divisor.__halfDigitLength();\n        var n2 = divisor.length;\n        var m = dividend.__halfDigitLength() - n;\n        var q = null;\n        if (wantQuotient) {\n            q = new JSBI((m + 2) >>> 1, false);\n            q.__initializeDigits();\n        }\n        var qhatv = new JSBI((n + 2) >>> 1, false);\n        qhatv.__initializeDigits();\n        // D1.\n        var shift = JSBI.__clz16(divisor.__halfDigit(n - 1));\n        if (shift > 0) {\n            divisor = JSBI.__specialLeftShift(divisor, shift, 0 /* add no digits*/);\n        }\n        var u = JSBI.__specialLeftShift(dividend, shift, 1 /* add one digit */);\n        // D2.\n        var vn1 = divisor.__halfDigit(n - 1);\n        var halfDigitBuffer = 0;\n        for (var j = m; j >= 0; j--) {\n            // D3.\n            var qhat = 0xFFFF;\n            var ujn = u.__halfDigit(j + n);\n            if (ujn !== vn1) {\n                var input = ((ujn << 16) | u.__halfDigit(j + n - 1)) >>> 0;\n                qhat = (input / vn1) | 0;\n                var rhat = (input % vn1) | 0;\n                var vn2 = divisor.__halfDigit(n - 2);\n                var ujn2 = u.__halfDigit(j + n - 2);\n                while ((Math.imul(qhat, vn2) >>> 0) > (((rhat << 16) | ujn2) >>> 0)) {\n                    qhat--;\n                    rhat += vn1;\n                    if (rhat > 0xFFFF)\n                        break;\n                }\n            }\n            // D4.\n            JSBI.__internalMultiplyAdd(divisor, qhat, 0, n2, qhatv);\n            var c = u.__inplaceSub(qhatv, j, n + 1);\n            if (c !== 0) {\n                c = u.__inplaceAdd(divisor, j, n);\n                u.__setHalfDigit(j + n, u.__halfDigit(j + n) + c);\n                qhat--;\n            }\n            if (wantQuotient && q != null) {\n                if (j & 1) {\n                    halfDigitBuffer = qhat << 16;\n                }\n                else {\n                    q.__setDigit(j >>> 1, halfDigitBuffer | qhat);\n                }\n            }\n        }\n        if (wantRemainder) {\n            u.__inplaceRightShift(shift);\n            if (wantQuotient && q != null) {\n                return { quotient: q, remainder: u };\n            }\n            return u;\n        }\n        if (wantQuotient && q != null)\n            return q;\n        throw new Error(\"Either wantQuotient or wantRemainder must be set\");\n    };\n    JSBI.__clz16 = function (value) {\n        return Math.clz32(value) - 16;\n    };\n    // TODO: work on full digits, like __inplaceSub?\n    JSBI.prototype.__inplaceAdd = function (summand, startIndex, halfDigits) {\n        var carry = 0;\n        for (var i = 0; i < halfDigits; i++) {\n            var sum = this.__halfDigit(startIndex + i) +\n                summand.__halfDigit(i) +\n                carry;\n            carry = sum >>> 16;\n            this.__setHalfDigit(startIndex + i, sum);\n        }\n        return carry;\n    };\n    JSBI.prototype.__inplaceSub = function (subtrahend, startIndex, halfDigits) {\n        var fullSteps = (halfDigits - 1) >>> 1;\n        var borrow = 0;\n        if (startIndex & 1) {\n            // this:   [..][..][..]\n            // subtr.:   [..][..]\n            startIndex >>= 1;\n            var current = this.__digit(startIndex);\n            var r0 = current & 0xFFFF;\n            var i = 0;\n            for (; i < fullSteps; i++) {\n                var sub_1 = subtrahend.__digit(i);\n                var r16_1 = (current >>> 16) - (sub_1 & 0xFFFF) - borrow;\n                borrow = (r16_1 >>> 16) & 1;\n                this.__setDigit(startIndex + i, (r16_1 << 16) | (r0 & 0xFFFF));\n                current = this.__digit(startIndex + i + 1);\n                r0 = (current & 0xFFFF) - (sub_1 >>> 16) - borrow;\n                borrow = (r0 >>> 16) & 1;\n            }\n            // Unrolling the last iteration gives a 5% performance benefit!\n            var sub = subtrahend.__digit(i);\n            var r16 = (current >>> 16) - (sub & 0xFFFF) - borrow;\n            borrow = (r16 >>> 16) & 1;\n            this.__setDigit(startIndex + i, (r16 << 16) | (r0 & 0xFFFF));\n            var subTop = sub >>> 16;\n            if (startIndex + i + 1 >= this.length) {\n                throw new RangeError('out of bounds');\n            }\n            if ((halfDigits & 1) === 0) {\n                current = this.__digit(startIndex + i + 1);\n                r0 = (current & 0xFFFF) - subTop - borrow;\n                borrow = (r0 >>> 16) & 1;\n                this.__setDigit(startIndex + subtrahend.length, (current & 0xFFFF0000) | (r0 & 0xFFFF));\n            }\n        }\n        else {\n            startIndex >>= 1;\n            var i = 0;\n            for (; i < subtrahend.length - 1; i++) {\n                var current_2 = this.__digit(startIndex + i);\n                var sub_2 = subtrahend.__digit(i);\n                var r0_1 = (current_2 & 0xFFFF) - (sub_2 & 0xFFFF) - borrow;\n                borrow = (r0_1 >>> 16) & 1;\n                var r16_2 = (current_2 >>> 16) - (sub_2 >>> 16) - borrow;\n                borrow = (r16_2 >>> 16) & 1;\n                this.__setDigit(startIndex + i, (r16_2 << 16) | (r0_1 & 0xFFFF));\n            }\n            var current = this.__digit(startIndex + i);\n            var sub = subtrahend.__digit(i);\n            var r0 = (current & 0xFFFF) - (sub & 0xFFFF) - borrow;\n            borrow = (r0 >>> 16) & 1;\n            var r16 = 0;\n            if ((halfDigits & 1) === 0) {\n                r16 = (current >>> 16) - (sub >>> 16) - borrow;\n                borrow = (r16 >>> 16) & 1;\n            }\n            this.__setDigit(startIndex + i, (r16 << 16) | (r0 & 0xFFFF));\n        }\n        return borrow;\n    };\n    JSBI.prototype.__inplaceRightShift = function (shift) {\n        if (shift === 0)\n            return;\n        var carry = this.__digit(0) >>> shift;\n        var last = this.length - 1;\n        for (var i = 0; i < last; i++) {\n            var d = this.__digit(i + 1);\n            this.__setDigit(i, (d << (32 - shift)) | carry);\n            carry = d >>> shift;\n        }\n        this.__setDigit(last, carry);\n    };\n    JSBI.__specialLeftShift = function (x, shift, addDigit) {\n        var n = x.length;\n        var resultLength = n + addDigit;\n        var result = new JSBI(resultLength, false);\n        if (shift === 0) {\n            for (var i = 0; i < n; i++)\n                result.__setDigit(i, x.__digit(i));\n            if (addDigit > 0)\n                result.__setDigit(n, 0);\n            return result;\n        }\n        var carry = 0;\n        for (var i = 0; i < n; i++) {\n            var d = x.__digit(i);\n            result.__setDigit(i, (d << shift) | carry);\n            carry = d >>> (32 - shift);\n        }\n        if (addDigit > 0) {\n            result.__setDigit(n, carry);\n        }\n        return result;\n    };\n    JSBI.__leftShiftByAbsolute = function (x, y) {\n        var shift = JSBI.__toShiftAmount(y);\n        if (shift < 0)\n            throw new RangeError('BigInt too big');\n        var digitShift = shift >>> 5;\n        var bitsShift = shift & 31;\n        var length = x.length;\n        var grow = bitsShift !== 0 &&\n            (x.__digit(length - 1) >>> (32 - bitsShift)) !== 0;\n        var resultLength = length + digitShift + (grow ? 1 : 0);\n        var result = new JSBI(resultLength, x.sign);\n        if (bitsShift === 0) {\n            var i = 0;\n            for (; i < digitShift; i++)\n                result.__setDigit(i, 0);\n            for (; i < resultLength; i++) {\n                result.__setDigit(i, x.__digit(i - digitShift));\n            }\n        }\n        else {\n            var carry = 0;\n            for (var i = 0; i < digitShift; i++)\n                result.__setDigit(i, 0);\n            for (var i = 0; i < length; i++) {\n                var d = x.__digit(i);\n                result.__setDigit(i + digitShift, (d << bitsShift) | carry);\n                carry = d >>> (32 - bitsShift);\n            }\n            if (grow) {\n                result.__setDigit(length + digitShift, carry);\n            }\n            else {\n                if (carry !== 0)\n                    throw new Error('implementation bug');\n            }\n        }\n        return result.__trim();\n    };\n    JSBI.__rightShiftByAbsolute = function (x, y) {\n        var length = x.length;\n        var sign = x.sign;\n        var shift = JSBI.__toShiftAmount(y);\n        if (shift < 0)\n            return JSBI.__rightShiftByMaximum(sign);\n        var digitShift = shift >>> 5;\n        var bitsShift = shift & 31;\n        var resultLength = length - digitShift;\n        if (resultLength <= 0)\n            return JSBI.__rightShiftByMaximum(sign);\n        // For negative numbers, round down if any bit was shifted out (so that\n        // e.g. -5n >> 1n == -3n and not -2n). Check now whether this will happen\n        // and whether itc an cause overflow into a new digit. If we allocate the\n        // result large enough up front, it avoids having to do grow it later.\n        var mustRoundDown = false;\n        if (sign) {\n            var mask = (1 << bitsShift) - 1;\n            if ((x.__digit(digitShift) & mask) !== 0) {\n                mustRoundDown = true;\n            }\n            else {\n                for (var i = 0; i < digitShift; i++) {\n                    if (x.__digit(i) !== 0) {\n                        mustRoundDown = true;\n                        break;\n                    }\n                }\n            }\n        }\n        // If bitsShift is non-zero, it frees up bits, preventing overflow.\n        if (mustRoundDown && bitsShift === 0) {\n            // Overflow cannot happen if the most significant digit has unset bits.\n            var msd = x.__digit(length - 1);\n            var roundingCanOverflow = ~msd === 0;\n            if (roundingCanOverflow)\n                resultLength++;\n        }\n        var result = new JSBI(resultLength, sign);\n        if (bitsShift === 0) {\n            for (var i = digitShift; i < length; i++) {\n                result.__setDigit(i - digitShift, x.__digit(i));\n            }\n        }\n        else {\n            var carry = x.__digit(digitShift) >>> bitsShift;\n            var last = length - digitShift - 1;\n            for (var i = 0; i < last; i++) {\n                var d = x.__digit(i + digitShift + 1);\n                result.__setDigit(i, (d << (32 - bitsShift)) | carry);\n                carry = d >>> bitsShift;\n            }\n            result.__setDigit(last, carry);\n        }\n        if (mustRoundDown) {\n            // Since the result is negative, rounding down means adding one to its\n            // absolute value. This cannot overflow.\n            result = JSBI.__absoluteAddOne(result, true, result);\n        }\n        return result.__trim();\n    };\n    JSBI.__rightShiftByMaximum = function (sign) {\n        if (sign) {\n            return JSBI.__oneDigit(1, true);\n        }\n        return JSBI.__zero();\n    };\n    JSBI.__toShiftAmount = function (x) {\n        if (x.length > 1)\n            return -1;\n        var value = x.__unsignedDigit(0);\n        if (value > JSBI.__kMaxLengthBits)\n            return -1;\n        return value;\n    };\n    JSBI.__toPrimitive = function (obj, hint) {\n        if (hint === void 0) { hint = 'default'; }\n        if (typeof obj !== 'object')\n            return obj;\n        if (obj.constructor === JSBI)\n            return obj;\n        var exoticToPrim = Symbol.toPrimitive == undefined ? undefined : obj[Symbol.toPrimitive];\n        if (exoticToPrim) {\n            var primitive = exoticToPrim(hint);\n            if (typeof primitive !== 'object')\n                return primitive;\n            throw new TypeError('Cannot convert object to primitive value');\n        }\n        var valueOf = obj.valueOf;\n        if (valueOf) {\n            var primitive = valueOf.call(obj);\n            if (typeof primitive !== 'object')\n                return primitive;\n        }\n        var toString = obj.toString;\n        if (toString) {\n            var primitive = toString.call(obj);\n            if (typeof primitive !== 'object')\n                return primitive;\n        }\n        throw new TypeError('Cannot convert object to primitive value');\n    };\n    JSBI.__toNumeric = function (value) {\n        if (JSBI.__isBigInt(value))\n            return value;\n        return +value;\n    };\n    JSBI.__isBigInt = function (value) {\n        return typeof value === 'object' && value.constructor === JSBI;\n    };\n    JSBI.__truncateToNBits = function (n, x) {\n        var neededDigits = (n + 31) >>> 5;\n        var result = new JSBI(neededDigits, x.sign);\n        var last = neededDigits - 1;\n        for (var i = 0; i < last; i++) {\n            result.__setDigit(i, x.__digit(i));\n        }\n        var msd = x.__digit(last);\n        if ((n & 31) !== 0) {\n            var drop = 32 - (n & 31);\n            msd = (msd << drop) >>> drop;\n        }\n        result.__setDigit(last, msd);\n        return result.__trim();\n    };\n    JSBI.__truncateAndSubFromPowerOfTwo = function (n, x, resultSign) {\n        var neededDigits = (n + 31) >>> 5;\n        var result = new JSBI(neededDigits, resultSign);\n        var i = 0;\n        var last = neededDigits - 1;\n        var borrow = 0;\n        var limit = Math.min(last, x.length);\n        for (; i < limit; i++) {\n            var xDigit = x.__digit(i);\n            var rLow = 0 - (xDigit & 0xFFFF) - borrow;\n            borrow = (rLow >>> 16) & 1;\n            var rHigh = 0 - (xDigit >>> 16) - borrow;\n            borrow = (rHigh >>> 16) & 1;\n            result.__setDigit(i, (rLow & 0xFFFF) | (rHigh << 16));\n        }\n        for (; i < last; i++) {\n            result.__setDigit(i, (-borrow) | 0);\n        }\n        var msd = last < x.length ? x.__digit(last) : 0;\n        var msdBitsConsumed = n & 31;\n        var resultMsd;\n        if (msdBitsConsumed === 0) {\n            var rLow = 0 - (msd & 0xFFFF) - borrow;\n            borrow = (rLow >>> 16) & 1;\n            var rHigh = 0 - (msd >>> 16) - borrow;\n            resultMsd = (rLow & 0xFFFF) | (rHigh << 16);\n        }\n        else {\n            var drop = 32 - msdBitsConsumed;\n            msd = (msd << drop) >>> drop;\n            var minuendMsd = 1 << (32 - drop);\n            var rLow = (minuendMsd & 0xFFFF) - (msd & 0xFFFF) - borrow;\n            borrow = (rLow >>> 16) & 1;\n            var rHigh = (minuendMsd >>> 16) - (msd >>> 16) - borrow;\n            resultMsd = (rLow & 0xFFFF) | (rHigh << 16);\n            resultMsd &= (minuendMsd - 1);\n        }\n        result.__setDigit(last, resultMsd);\n        return result.__trim();\n    };\n    // Digit helpers.\n    JSBI.prototype.__digit = function (i) {\n        return this[i];\n    };\n    JSBI.prototype.__unsignedDigit = function (i) {\n        return this[i] >>> 0;\n    };\n    JSBI.prototype.__setDigit = function (i, digit) {\n        this[i] = digit | 0;\n    };\n    JSBI.prototype.__setDigitGrow = function (i, digit) {\n        this[i] = digit | 0;\n    };\n    JSBI.prototype.__halfDigitLength = function () {\n        var len = this.length;\n        if (this.__unsignedDigit(len - 1) <= 0xFFFF)\n            return len * 2 - 1;\n        return len * 2;\n    };\n    JSBI.prototype.__halfDigit = function (i) {\n        return (this[i >>> 1] >>> ((i & 1) << 4)) & 0xFFFF;\n    };\n    JSBI.prototype.__setHalfDigit = function (i, value) {\n        var digitIndex = i >>> 1;\n        var previous = this.__digit(digitIndex);\n        var updated = (i & 1) ? (previous & 0xFFFF) | (value << 16)\n            : (previous & 0xFFFF0000) | (value & 0xFFFF);\n        this.__setDigit(digitIndex, updated);\n    };\n    JSBI.__digitPow = function (base, exponent) {\n        var result = 1;\n        while (exponent > 0) {\n            if (exponent & 1)\n                result *= base;\n            exponent >>>= 1;\n            base *= base;\n        }\n        return result;\n    };\n    JSBI.__kMaxLength = 1 << 25;\n    JSBI.__kMaxLengthBits = JSBI.__kMaxLength << 5;\n    // Lookup table for the maximum number of bits required per character of a\n    // base-N string representation of a number. To increase accuracy, the array\n    // value is the actual value multiplied by 32. To generate this table:\n    //\n    // for (let i = 0; i <= 36; i++) {\n    //   console.log(Math.ceil(Math.log2(i) * 32) + ',');\n    // }\n    JSBI.__kMaxBitsPerChar = [\n        0, 0, 32, 51, 64, 75, 83, 90, 96,\n        102, 107, 111, 115, 119, 122, 126, 128,\n        131, 134, 136, 139, 141, 143, 145, 147,\n        149, 151, 153, 154, 156, 158, 159, 160,\n        162, 163, 165, 166,\n    ];\n    JSBI.__kBitsPerCharTableShift = 5;\n    JSBI.__kBitsPerCharTableMultiplier = 1 << JSBI.__kBitsPerCharTableShift;\n    JSBI.__kConversionChars = '0123456789abcdefghijklmnopqrstuvwxyz'.split('');\n    JSBI.__kBitConversionBuffer = new ArrayBuffer(8);\n    JSBI.__kBitConversionDouble = new Float64Array(JSBI.__kBitConversionBuffer);\n    JSBI.__kBitConversionInts = new Int32Array(JSBI.__kBitConversionBuffer);\n    return JSBI;\n}(Array));\nexports.JSBI = JSBI;\n//# sourceMappingURL=jsbi.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Attempts to convert `x` into a `number`\n * without any loss in precision.\n *\n * If it is not possible, an error is thrown.\n *\n * -----\n *\n * In general, this should not happen if our `bigint` is\n * in the range,\n *\n * `[Number.MIN_SAFE_INTEGER, Number.MAX_SAFE_INTEGER]`\n *\n * Which is,\n *\n * `[-9007199254740991, 9007199254740991]`\n *\n * @param x - The `bigint` to convert to a `number`\n */\nfunction toNumber(x) {\n    var result = Number(x);\n    if (x.toString() === result.toString()) {\n        return result;\n    }\n    else {\n        throw new Error(\"Cannot convert bigint to number without loss in precision\");\n    }\n}\nexports.toNumber = toNumber;\n//# sourceMappingURL=to-number.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar jsbi_1 = require(\"./jsbi\");\nfunction toString(x, radix) {\n    return jsbi_1.JSBI.BigInt(x.toString()).toString(radix);\n}\nexports.toString = toString;\n//# sourceMappingURL=to-string.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction func() {\n    var mappers = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        mappers[_i] = arguments[_i];\n    }\n    var factory = function (target) {\n        if (mappers.length == 0) {\n            //Nothing to validate.\n            return target;\n        }\n        var name = (typeof target.name == \"string\") ?\n            typeof target.name :\n            \"[Anonymous function]\";\n        var result = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var max = Math.max(args.length, target.length);\n            for (var i = 0; i < max; ++i) {\n                var mapper = (i < mappers.length) ?\n                    mappers[i] :\n                    //Probably a rest parameter\n                    mappers[mappers.length - 1];\n                if (i < args.length) {\n                    args[i] = mapper(name + \"(#\" + i + \")\", args[i]);\n                }\n                else {\n                    args.push(mapper(name + \"(#\" + i + \")\", undefined));\n                }\n            }\n            return target.apply(this, args);\n        };\n        return result;\n    };\n    return factory;\n}\nexports.func = func;\n//# sourceMappingURL=func.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./func\"));\n__export(require(\"./method\"));\n__export(require(\"./prop\"));\n__export(require(\"./setter\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_util_1 = require(\"../type-util\");\nfunction method() {\n    var mappers = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        mappers[_i] = arguments[_i];\n    }\n    var result = function (target, propertyKey, descriptor) {\n        if (mappers.length == 0) {\n            //Nothing to validate.\n            return;\n        }\n        var propertyName = (typeof propertyKey == \"string\") ?\n            propertyKey :\n            \"Symbol(\" + propertyKey.toString() + \")\";\n        var ctorName = type_util_1.getCtorName(target.constructor);\n        var fullName = ctorName + \".\" + propertyName;\n        var originalMethod = descriptor.value;\n        if (!(originalMethod instanceof Function)) {\n            throw new Error(\"Method \" + fullName + \" not found\");\n        }\n        descriptor.value = (function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var max = Math.max(args.length, originalMethod.length);\n            for (var i = 0; i < max; ++i) {\n                var mapper = (i < mappers.length) ?\n                    mappers[i] :\n                    //Probably a rest parameter\n                    mappers[mappers.length - 1];\n                if (i < args.length) {\n                    args[i] = mapper(fullName + \"(#\" + i + \")\", args[i]);\n                }\n                else {\n                    args.push(mapper(fullName + \"(#\" + i + \")\", undefined));\n                }\n            }\n            if (originalMethod != undefined) {\n                return originalMethod.apply(this, args);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    return result;\n}\nexports.method = method;\n/*\nclass Clazz {\n    @method(() => 1, () => \"\")\n    foo (arg0 : number, arg1 : string) {\n    }\n    //Rest params are a bit iffy\n    @method(() => 1, ...[() => \"\"])\n    foo2 (arg0 : number, ...arg1 : string[]) {\n    }\n\n    @setter()\n    get x () {\n        return 5;\n    }\n\n    @setter(() => 1, () => \"\")\n    set name (v : string) {\n        console.log(v);\n    }\n}\ntype wtf = ExtractKeyWithParams<Clazz, [() => 1]>\ntype c_name = Clazz[\"name\"]\nconst c = new Clazz();\ntype p = Parameters<(arg0 : number, ...args : string[]) => void>\ntype p0 = p[0];\ntype p1 = p[1];\ntype p2 = p[2];\ntype l = p[\"length\"];\n//*/ \n//# sourceMappingURL=method.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar accessor_util_1 = require(\"../accessor-util\");\nvar type_util_1 = require(\"../type-util\");\nfunction prop(f) {\n    var result = function (target, propertyKey) {\n        /*\n            Implementation copied over from schema-decorator.\n            The code isn't too well-written and kind of confusing.\n        */\n        var propertyName = (typeof propertyKey == \"string\") ?\n            propertyKey :\n            \"Symbol(\" + propertyKey.toString() + \")\";\n        var privateName = \"____hijacked-by-type-mapping-\" + propertyName;\n        var ctorName = type_util_1.getCtorName(target.constructor);\n        var fullName = ctorName + \".\" + propertyName;\n        /*\n            We call this `superAccessorGenerator` because\n            calling `.set()` on this may trigger the base class'\n            decorator that may create another accessor on the base class.\n\n            `superSetter` below is the `.set()` of the base class,\n            if it exists.\n\n            We need to also call the base class' `.set()`\n            because there may be other mappers running in the\n            base class.\n        */\n        var superAccessorGenerator = accessor_util_1.getAccessor(target, propertyKey);\n        Object.defineProperty(target, propertyKey, {\n            get: function () {\n                return this[privateName];\n            },\n            set: function (mixed) {\n                //If we are here, we have the accessor defined on the class prototype,\n                //but not on the instance itself.\n                //We want to preserve the behaviour of Object.keys(),\n                //So, we need to define the accessor on the instance.\n                var superSetter = undefined;\n                if (superAccessorGenerator != undefined && superAccessorGenerator.set != undefined) {\n                    superAccessorGenerator.set.bind(this)(mixed);\n                    var accessor = Object.getOwnPropertyDescriptor(this, propertyKey);\n                    if (!accessor_util_1.isAccessorDescriptor(accessor) || accessor.set == undefined) {\n                        throw new Error(\"Expected \" + fullName + \" to be an accessor and have a \\\"set()\\\" method\");\n                    }\n                    superSetter = accessor.set.bind(this);\n                }\n                //Set the value on the instance first,\n                //We define a property that is not enumerable,\n                //So it does not show up in Object.keys().\n                //We don't want this property to show up because\n                //its name is `privateName`, not the \"original\" name.\n                if (superSetter == undefined) {\n                    Object.defineProperty(this, privateName, {\n                        value: f(fullName, mixed),\n                        writable: true,\n                        enumerable: false,\n                    });\n                }\n                else {\n                    superSetter(f(fullName, mixed));\n                }\n                //We define the accessor that should be used from now on\n                //And will be enumerable with Object.keys(instance)\n                Object.defineProperty(this, propertyName, {\n                    get: function () {\n                        return this[privateName];\n                    },\n                    set: function (mixed) {\n                        if (superSetter == undefined) {\n                            this[privateName] = f(fullName, mixed);\n                        }\n                        else {\n                            superSetter(f(fullName, mixed));\n                        }\n                    },\n                    enumerable: true,\n                    configurable: true,\n                });\n            },\n            enumerable: true,\n        });\n    };\n    return result;\n}\nexports.prop = prop;\n/*\nclass Clazz {\n    @prop(() => \"1\")\n    prop0 : number = 3;\n}\nconst c = new Clazz();\n//*/ \n//# sourceMappingURL=prop.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_util_1 = require(\"../type-util\");\nfunction setter(f) {\n    var result = function (target, propertyKey, descriptor) {\n        var propertyName = (typeof propertyKey == \"string\") ?\n            propertyKey :\n            \"Symbol(\" + propertyKey.toString() + \")\";\n        var ctorName = type_util_1.getCtorName(target.constructor);\n        var fullName = ctorName + \".\" + propertyName;\n        var originalMethod = descriptor.set;\n        descriptor.set = (function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (args.length == 0) {\n                throw new Error(\"Cannot call \" + fullName + \".set() with zero arguments\");\n            }\n            for (var i = 0; i < args.length; ++i) {\n                args[i] = f(fullName, args[i]);\n            }\n            if (originalMethod != undefined) {\n                return originalMethod.apply(this, args);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    return result;\n}\nexports.setter = setter;\n/*\nclass Clazz {\n    @setter(() => \"1\")\n    set name (v : string) {\n        console.log(v);\n    }\n}\n//*/ \n//# sourceMappingURL=setter.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//Please only pass enums here\nvar Enum;\n(function (Enum) {\n})(Enum = exports.Enum || (exports.Enum = {}));\nfunction getKeys(e) {\n    return (Object.keys(e)\n        .filter(function (k) {\n        if (/^\\d/.test(k)) {\n            return false;\n        }\n        var v = e[k];\n        return (typeof v == \"string\" ||\n            typeof v == \"number\");\n    }));\n}\nexports.getKeys = getKeys;\nfunction getValues(e) {\n    return getKeys(e).map(function (k) { return e[k]; });\n}\nexports.getValues = getValues;\nfunction getEntries(e) {\n    return getKeys(e).map(function (k) {\n        return {\n            key: k,\n            value: e[k],\n        };\n    });\n}\nexports.getEntries = getEntries;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction toKeyEnum() {\n    var arr = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arr[_i] = arguments[_i];\n    }\n    return arr.reduce(function (memo, k) {\n        memo[k] = k;\n        return memo;\n    }, {});\n}\n/**\n * @todo More error codes\n */\nexports.ErrorCode = toKeyEnum(\n/**\n * + `expectedMeta.gt`\n */\n\"EXPECTED_GREATER_THAN\", \n/**\n * + `expectedMeta.lt`\n */\n\"EXPECTED_LESS_THAN\", \n/**\n * + `expectedMeta.gtEq`\n */\n\"EXPECTED_GREATER_THAN_OR_EQUAL_TO\", \n/**\n * + `expectedMeta.ltEq`\n */\n\"EXPECTED_LESS_THAN_OR_EQUAL_TO\", \n/**\n * + `expected`\n */\n\"EXPECTED_TYPE\", \n/**\n * + `expectedMeta.min`\n * + `expectedMeta.max`\n */\n\"EXPECTED_LENGTH\", \n/**\n * + `expectedMeta.min`\n * + `expectedMeta.max`\n */\n\"EXPECTED_BYTE_LENGTH\", \n/**\n * + `expectedMeta.mappableValue`\n * + `expectedMeta.outputValue`\n * + `expectedMeta.entries`\n */\n\"EXPECTED_ENUM_KEY\", \n/**\n * + `expectedMeta.mappableValue`\n * + `expectedMeta.outputValue`\n * + `expectedMeta.entries`\n */\n\"EXPECTED_ENUM_VALUE\", \n/**\n * + `expectedMeta.mappableValue`\n * + `expectedMeta.outputValue`\n * + `expectedMeta.desiredValue`\n * + `expectedMeta.validKeys`\n */\n\"EXPECTED_ONE_ENUM_VALUE_OR_VALID_ENUM_KEY\", \n/**\n * + `expectedMeta.maxPrecision`\n * + `expectedMeta.maxScale`\n * + `expectedMeta.curPrecision`\n * + `expectedMeta.curScale`\n */\n\"EXPECTED_DECIMAL_PRECISION_LESS_THAN_OR_EQUAL_TO\", \n/**\n * + `expectedMeta.maxPrecision`\n * + `expectedMeta.maxScale`\n * + `expectedMeta.curPrecision`\n * + `expectedMeta.curScale`\n */\n\"EXPECTED_DECIMAL_SCALE_LESS_THAN_OR_EQUAL_TO\");\n//# sourceMappingURL=error-code.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction flattenUnionErrors(arr) {\n    var result = [];\n    for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n        var err = arr_1[_i];\n        if (err.unionErrors == undefined || err.unionErrors.length == 0) {\n            result.push(err);\n        }\n        else {\n            result.push.apply(result, flattenUnionErrors(err.unionErrors));\n        }\n    }\n    return result;\n}\nexports.flattenUnionErrors = flattenUnionErrors;\n//# sourceMappingURL=flatten-union-errors.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction indentErrorMessage(str) {\n    str = str\n        .split(\"\\n\")\n        .map(function (str) { return \"\\t\" + str; })\n        .join(\"\\n\");\n    return \"(\\n\" + str + \"\\n)\";\n}\nexports.indentErrorMessage = indentErrorMessage;\n//# sourceMappingURL=indent-error-message.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./flatten-union-errors\"));\n__export(require(\"./indent-error-message\"));\n__export(require(\"./is-mapping-error\"));\n__export(require(\"./make-mapping-error\"));\n__export(require(\"./make-normalized-union-error\"));\n__export(require(\"./try-get-property-error\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isMappingErrorArray(x) {\n    if (!(x instanceof Array)) {\n        return false;\n    }\n    for (var _i = 0, x_1 = x; _i < x_1.length; _i++) {\n        var i = x_1[_i];\n        if (!isMappingError(i)) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.isMappingErrorArray = isMappingErrorArray;\nfunction isMappingError(x) {\n    if (!(x instanceof Error)) {\n        return false;\n    }\n    var mixed = x;\n    if (typeof mixed.inputName != \"string\") {\n        return false;\n    }\n    if (mixed.expected != undefined && typeof mixed.expected != \"string\") {\n        return false;\n    }\n    if (mixed.expectedMeta != undefined && !(mixed.expectedMeta instanceof Object)) {\n        return false;\n    }\n    if (mixed.propertyErrors != undefined &&\n        !isMappingErrorArray(mixed.propertyErrors)) {\n        return false;\n    }\n    if (mixed.unionErrors != undefined &&\n        !isMappingErrorArray(mixed.unionErrors)) {\n        return false;\n    }\n    if (mixed.intersectionErrors != undefined &&\n        !isMappingErrorArray(mixed.intersectionErrors)) {\n        return false;\n    }\n    return true;\n}\nexports.isMappingError = isMappingError;\n//# sourceMappingURL=is-mapping-error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction makeMappingError(args) {\n    var err = new Error(args.message);\n    Object.defineProperty(err, \"inputName\", {\n        value: args.inputName,\n        enumerable: false,\n    });\n    Object.defineProperty(err, \"actualValue\", {\n        value: args.actualValue,\n        enumerable: false,\n    });\n    Object.defineProperty(err, \"expected\", {\n        value: args.expected,\n        enumerable: false,\n    });\n    Object.defineProperty(err, \"expectedMeta\", {\n        value: args.expectedMeta,\n        enumerable: false,\n    });\n    if (\"propertyErrors\" in args) {\n        Object.defineProperty(err, \"propertyErrors\", {\n            value: args.propertyErrors,\n            enumerable: false,\n        });\n    }\n    if (\"unionErrors\" in args) {\n        Object.defineProperty(err, \"unionErrors\", {\n            value: args.unionErrors,\n            enumerable: false,\n        });\n    }\n    if (\"intersectionErrors\" in args) {\n        Object.defineProperty(err, \"intersectionErrors\", {\n            value: args.intersectionErrors,\n            enumerable: false,\n        });\n    }\n    if (typeof args.stack == \"string\") {\n        Object.defineProperty(err, \"stack\", {\n            value: args.stack,\n            enumerable: false,\n        });\n    }\n    return err;\n}\nexports.makeMappingError = makeMappingError;\n//# sourceMappingURL=make-mapping-error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flatten_union_errors_1 = require(\"./flatten-union-errors\");\nvar array_util_1 = require(\"../array-util\");\nvar make_mapping_error_1 = require(\"./make-mapping-error\");\nvar type_util_1 = require(\"../type-util\");\nvar indent_error_message_1 = require(\"./indent-error-message\");\nfunction everyElementHasMappableValues(arr) {\n    return arr.every(function (err) { return err.expectedMeta != undefined && err.expectedMeta.mappableValues != undefined; });\n}\nfunction everyElementHasOutputValues(arr) {\n    return arr.every(function (err) { return err.expectedMeta != undefined && err.expectedMeta.outputValues != undefined; });\n}\nfunction makeNormalizedUnionError(name, mixed, unionErrors) {\n    unionErrors = flatten_union_errors_1.flattenUnionErrors(unionErrors);\n    var rawExpectedArr = unionErrors\n        .map(function (e) { return e.expected; })\n        .filter(function (i) { return typeof i == \"string\"; });\n    if (rawExpectedArr.length == unionErrors.length) {\n        var expected = array_util_1.removeDuplicateElements(rawExpectedArr)\n            .map(function (str) { return \"(\" + str + \")\"; })\n            .join(\" or \");\n        return make_mapping_error_1.makeMappingError({\n            message: name + \" must be \" + expected + \"; received \" + type_util_1.toTypeStr(mixed),\n            inputName: name,\n            actualValue: mixed,\n            expected: expected,\n            expectedMeta: {\n                mappableValues: (everyElementHasMappableValues(unionErrors) ?\n                    unionErrors.reduce(function (memo, err) {\n                        memo.push.apply(memo, err.expectedMeta.mappableValues);\n                        return memo;\n                    }, []) :\n                    undefined),\n                outputValues: (everyElementHasOutputValues(unionErrors) ?\n                    unionErrors.reduce(function (memo, err) {\n                        memo.push.apply(memo, err.expectedMeta.outputValues);\n                        return memo;\n                    }, []) :\n                    undefined),\n            },\n            unionErrors: unionErrors,\n        });\n    }\n    else {\n        /**\n         * At least one of our mappers did not throw\n         * a `MappingError`\n         */\n        var errorMessages = array_util_1.removeDuplicateElements(unionErrors\n            .map(function (e) { return indent_error_message_1.indentErrorMessage(e.message); })).map(function (str) { return \"(\" + str + \")\"; });\n        var expected = array_util_1.removeDuplicateElements(rawExpectedArr.concat([\"valid value\"]))\n            .map(function (str) { return \"(\" + str + \")\"; })\n            .join(\" or \");\n        return make_mapping_error_1.makeMappingError({\n            message: name + \" is invalid.\\n\" + errorMessages.join(\" or\\n\"),\n            inputName: name,\n            actualValue: mixed,\n            expected: expected,\n            unionErrors: unionErrors,\n        });\n    }\n}\nexports.makeNormalizedUnionError = makeNormalizedUnionError;\n//# sourceMappingURL=make-normalized-union-error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction tryGetPropertyError(mappingError, inputName) {\n    if (mappingError.propertyErrors == undefined) {\n        return undefined;\n    }\n    for (var _i = 0, _a = mappingError.propertyErrors; _i < _a.length; _i++) {\n        var propertyError = _a[_i];\n        if (propertyError.inputName == inputName) {\n            return propertyError;\n        }\n    }\n    return undefined;\n}\nexports.tryGetPropertyError = tryGetPropertyError;\n//# sourceMappingURL=try-get-property-error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mapper_1 = require(\"../mapper\");\n/**\n    Constructs multiple `Field<>` instances at once.\n*/\nfunction fields(map) {\n    var result = {};\n    for (var name in map) {\n        if (!map.hasOwnProperty(name)) {\n            continue;\n        }\n        result[name] = mapper_1.withName(map[name], name);\n    }\n    return result;\n}\nexports.fields = fields;\n//# sourceMappingURL=ctor.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./ctor\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./is-equal\"));\n__export(require(\"./try-parse\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BigIntUtil = require(\"../bigint-util\");\nvar ZeroEqualityAlgorithm;\n(function (ZeroEqualityAlgorithm) {\n    ZeroEqualityAlgorithm[\"NEGATIVE_AND_POSITIVE_ZERO_ARE_EQUAL\"] = \"NEGATIVE_AND_POSITIVE_ZERO_ARE_EQUAL\";\n    ZeroEqualityAlgorithm[\"NEGATIVE_AND_POSITIVE_ZERO_NOT_EQUAL\"] = \"NEGATIVE_AND_POSITIVE_ZERO_NOT_EQUAL\";\n})(ZeroEqualityAlgorithm = exports.ZeroEqualityAlgorithm || (exports.ZeroEqualityAlgorithm = {}));\nfunction isEqual(a, b, zeroEqualityAlgorithm) {\n    if (zeroEqualityAlgorithm == ZeroEqualityAlgorithm.NEGATIVE_AND_POSITIVE_ZERO_ARE_EQUAL &&\n        a.isZero &&\n        b.isZero) {\n        return true;\n    }\n    if (a.isInteger != b.isInteger) {\n        return false;\n    }\n    if (a.isNegative != b.isNegative) {\n        return false;\n    }\n    if (a.isZero != b.isZero) {\n        return false;\n    }\n    if (!BigIntUtil.equal(a.fixedPointIntegerPartLength, b.fixedPointIntegerPartLength)) {\n        return false;\n    }\n    if (!BigIntUtil.equal(a.fixedPointFractionalPartLength, b.fixedPointFractionalPartLength)) {\n        return false;\n    }\n    if (!BigIntUtil.equal(a.fixedPointLength, b.fixedPointLength)) {\n        return false;\n    }\n    return (a.getFixedPointString() ==\n        b.getFixedPointString());\n}\nexports.isEqual = isEqual;\n//# sourceMappingURL=is-equal.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FloatingPointUtil = require(\"../floating-point-util\");\nvar type_util_1 = require(\"../type-util\");\nvar BigIntUtil = require(\"../bigint-util\");\nvar string_util_1 = require(\"../string-util\");\nfunction lazyInit(initDelegate) {\n    var initialized = false;\n    var value = undefined;\n    return function () {\n        if (!initialized) {\n            value = initDelegate();\n            initialized = true;\n        }\n        return value;\n    };\n}\n/**\n * @todo Make `getXxx()` functions cache results\n */\nfunction tryParse(str) {\n    var parsed = FloatingPointUtil.tryParse(str);\n    if (parsed == undefined) {\n        return undefined;\n    }\n    var _a = FloatingPointUtil.toIntegerAndExponent(parsed), isNegative = _a.isNegative, integerPart = _a.integerPart, isZero = _a.isZero, exponentValue = _a.exponentValue;\n    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();\n    if (isZero) {\n        var fixedPointIntegerPartLength = BigInt(1);\n        var fixedPointFractionalPartLength = BigInt(1);\n        var fixedPointLength = BigIntUtil.addMany((isNegative ? BigInt(1) : BigInt(0)), fixedPointIntegerPartLength, BigInt(1), fixedPointFractionalPartLength);\n        var getFixedPointIntegerPartString_1 = function () { return \"0\"; };\n        var getFixedPointFractionalPartString_1 = function () { return \"0\"; };\n        var getFixedPointString = lazyInit(function () {\n            var sign = isNegative ? \"-\" : \"\";\n            return (sign +\n                getFixedPointIntegerPartString_1() +\n                \".\" +\n                getFixedPointFractionalPartString_1());\n        });\n        return {\n            isInteger: true,\n            isNegative: isNegative,\n            isZero: isZero,\n            fixedPointIntegerPartLength: fixedPointIntegerPartLength,\n            fixedPointFractionalPartLength: fixedPointFractionalPartLength,\n            fixedPointLength: fixedPointLength,\n            getFixedPointIntegerPartString: getFixedPointIntegerPartString_1,\n            getFixedPointFractionalPartString: getFixedPointFractionalPartString_1,\n            getFixedPointString: getFixedPointString,\n        };\n    }\n    if (BigIntUtil.greaterThanOrEqual(exponentValue, 0)) {\n        var fixedPointIntegerPartLength = BigIntUtil.add(BigInt(integerPart.length), exponentValue);\n        var fixedPointFractionalPartLength = BigInt(1);\n        var fixedPointLength = BigIntUtil.addMany((isNegative ? BigInt(1) : BigInt(0)), fixedPointIntegerPartLength, BigInt(1), fixedPointFractionalPartLength);\n        var getFixedPointIntegerPartString_2 = lazyInit(function () { return (integerPart + string_util_1.stringRepeat(\"0\", BigIntUtil.toNumber(exponentValue))); });\n        var getFixedPointFractionalPartString_2 = function () { return \"0\"; };\n        var getFixedPointString = lazyInit(function () {\n            var sign = isNegative ? \"-\" : \"\";\n            return (sign +\n                getFixedPointIntegerPartString_2() +\n                \".\" +\n                getFixedPointFractionalPartString_2());\n        });\n        return {\n            isInteger: true,\n            isNegative: isNegative,\n            isZero: isZero,\n            fixedPointIntegerPartLength: fixedPointIntegerPartLength,\n            fixedPointFractionalPartLength: fixedPointFractionalPartLength,\n            fixedPointLength: fixedPointLength,\n            getFixedPointIntegerPartString: getFixedPointIntegerPartString_2,\n            getFixedPointFractionalPartString: getFixedPointFractionalPartString_2,\n            getFixedPointString: getFixedPointString,\n        };\n    }\n    else {\n        var fractionalOffset = BigIntUtil.mul(exponentValue, -1);\n        if (BigIntUtil.lessThan(fractionalOffset, integerPart.length)) {\n            var newIntegerPart_1 = integerPart.substring(0, integerPart.length - BigIntUtil.toNumber(fractionalOffset));\n            var newFractionalPart_1 = integerPart.substring(integerPart.length - BigIntUtil.toNumber(fractionalOffset), integerPart.length).replace(/(0+)$/, \"\");\n            if (newFractionalPart_1 == \"\") {\n                newFractionalPart_1 = \"0\";\n            }\n            var fixedPointIntegerPartLength = BigInt(newIntegerPart_1.length);\n            var fixedPointFractionalPartLength = BigInt(newFractionalPart_1.length);\n            var fixedPointLength = BigIntUtil.addMany((isNegative ? BigInt(1) : BigInt(0)), fixedPointIntegerPartLength, BigInt(1), fixedPointFractionalPartLength);\n            var getFixedPointIntegerPartString_3 = function () { return newIntegerPart_1; };\n            var getFixedPointFractionalPartString_3 = function () { return newFractionalPart_1; };\n            var getFixedPointString = lazyInit(function () {\n                var sign = isNegative ? \"-\" : \"\";\n                return (sign +\n                    getFixedPointIntegerPartString_3() +\n                    \".\" +\n                    getFixedPointFractionalPartString_3());\n            });\n            return {\n                isInteger: (newFractionalPart_1 == \"0\"),\n                isNegative: isNegative,\n                isZero: isZero,\n                fixedPointIntegerPartLength: fixedPointIntegerPartLength,\n                fixedPointFractionalPartLength: fixedPointFractionalPartLength,\n                fixedPointLength: fixedPointLength,\n                getFixedPointIntegerPartString: getFixedPointIntegerPartString_3,\n                getFixedPointFractionalPartString: getFixedPointFractionalPartString_3,\n                getFixedPointString: getFixedPointString,\n            };\n        }\n        else if (BigIntUtil.equal(fractionalOffset, BigInt(integerPart.length))) {\n            var newFractionalPart_2 = integerPart.replace(/(0+)$/, \"\");\n            if (newFractionalPart_2 == \"\") {\n                newFractionalPart_2 = \"0\";\n            }\n            var fixedPointIntegerPartLength = BigInt(1);\n            var fixedPointFractionalPartLength = BigInt(newFractionalPart_2.length);\n            var fixedPointLength = BigIntUtil.addMany((isNegative ? BigInt(1) : BigInt(0)), fixedPointIntegerPartLength, BigInt(1), fixedPointFractionalPartLength);\n            var getFixedPointIntegerPartString_4 = function () { return (\"0\"); };\n            var getFixedPointFractionalPartString_4 = function () { return newFractionalPart_2; };\n            var getFixedPointString = lazyInit(function () {\n                var sign = isNegative ? \"-\" : \"\";\n                return (sign +\n                    getFixedPointIntegerPartString_4() +\n                    \".\" +\n                    getFixedPointFractionalPartString_4());\n            });\n            return {\n                isInteger: (newFractionalPart_2 == \"0\"),\n                isNegative: isNegative,\n                isZero: isZero,\n                fixedPointIntegerPartLength: fixedPointIntegerPartLength,\n                fixedPointFractionalPartLength: fixedPointFractionalPartLength,\n                fixedPointLength: fixedPointLength,\n                getFixedPointIntegerPartString: getFixedPointIntegerPartString_4,\n                getFixedPointFractionalPartString: getFixedPointFractionalPartString_4,\n                getFixedPointString: getFixedPointString,\n            };\n        }\n        else {\n            var leadingZeroCount_1 = BigIntUtil.sub(fractionalOffset, BigInt(integerPart.length));\n            var newFractionalPart_3 = integerPart.replace(/(0+)$/, \"\");\n            if (newFractionalPart_3 == \"\") {\n                leadingZeroCount_1 = BigInt(0);\n                newFractionalPart_3 = \"0\";\n            }\n            var fixedPointIntegerPartLength = BigInt(1);\n            var fixedPointFractionalPartLength = BigIntUtil.add(leadingZeroCount_1, BigInt(newFractionalPart_3.length));\n            var fixedPointLength = BigIntUtil.addMany((isNegative ? BigInt(1) : BigInt(0)), fixedPointIntegerPartLength, BigInt(1), fixedPointFractionalPartLength);\n            var getFixedPointIntegerPartString_5 = function () { return (\"0\"); };\n            var getFixedPointFractionalPartString_5 = lazyInit(function () { return (string_util_1.stringRepeat(\"0\", BigIntUtil.toNumber(leadingZeroCount_1)) +\n                newFractionalPart_3); });\n            var getFixedPointString = lazyInit(function () {\n                var sign = isNegative ? \"-\" : \"\";\n                return (sign +\n                    getFixedPointIntegerPartString_5() +\n                    \".\" +\n                    getFixedPointFractionalPartString_5());\n            });\n            return {\n                isInteger: (newFractionalPart_3 == \"0\"),\n                isNegative: isNegative,\n                isZero: isZero,\n                fixedPointIntegerPartLength: fixedPointIntegerPartLength,\n                fixedPointFractionalPartLength: fixedPointFractionalPartLength,\n                fixedPointLength: fixedPointLength,\n                getFixedPointIntegerPartString: getFixedPointIntegerPartString_5,\n                getFixedPointFractionalPartString: getFixedPointFractionalPartString_5,\n                getFixedPointString: getFixedPointString,\n            };\n        }\n    }\n}\nexports.tryParse = tryParse;\n//# sourceMappingURL=try-parse.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./to-integer-and-exponent\"));\n__export(require(\"./try-parse\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_util_1 = require(\"../type-util\");\nvar BigIntUtil = require(\"../bigint-util\");\n/**\n * Converts the fractional part to an integer part,\n * by lowering the exponent\n */\nfunction toIntegerAndExponent(arg) {\n    if (arg.fractionalPart == \"0\") {\n        return arg;\n    }\n    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();\n    var exponentValue = BigIntUtil.sub(arg.exponentValue, BigInt(arg.fractionalPart.length));\n    var integerPart = (arg.integerPart == \"0\" ?\n        arg.fractionalPart.replace(/^(0+)/, \"\") :\n        arg.integerPart + arg.fractionalPart);\n    return {\n        isNegative: arg.isNegative,\n        integerPart: integerPart,\n        fractionalPart: \"0\",\n        isZero: arg.isZero,\n        exponentValue: exponentValue,\n    };\n}\nexports.toIntegerAndExponent = toIntegerAndExponent;\n//# sourceMappingURL=to-integer-and-exponent.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_util_1 = require(\"../type-util\");\nvar BigIntUtil = require(\"../bigint-util\");\nexports.floatingPointRegex = /^([-+])?([0-9]+\\.?[0-9]*|[0-9]*\\.?[0-9]+)([eE]([-+])?([0-9]+))?$/;\nfunction tryParse(str) {\n    var m = exports.floatingPointRegex.exec(str);\n    if (m == undefined) {\n        return undefined;\n    }\n    //-123.456e+789\n    //~\n    var rawCoefficientSign = m[1];\n    //-123.456e+789\n    // ~~~~~~~\n    var rawCoefficientValue = m[2];\n    //-123.456e+789\n    //         ~\n    var rawExponentSign = m[4];\n    //-123.456e+789\n    //          ~~~\n    var rawExponentValue = m[5];\n    var rawDecimalPlaceIndex = rawCoefficientValue.indexOf(\".\");\n    var rawIntegerPart = (rawDecimalPlaceIndex < 0 ?\n        rawCoefficientValue :\n        rawCoefficientValue.substring(0, rawDecimalPlaceIndex));\n    var rawFractionalPart = (rawDecimalPlaceIndex < 0 ?\n        \"\" :\n        rawCoefficientValue.substring(rawDecimalPlaceIndex + 1, rawCoefficientValue.length));\n    var trimmedIntegerPart = rawIntegerPart.replace(/^(0+)/, \"\");\n    var integerPart = (trimmedIntegerPart == \"\" ?\n        \"0\" :\n        trimmedIntegerPart);\n    var trimmedFractionalPart = rawFractionalPart.replace(/(0+)$/, \"\");\n    var fractionalPart = (trimmedFractionalPart == \"\" ?\n        \"0\" :\n        trimmedFractionalPart);\n    var isZero = (integerPart == \"0\" && fractionalPart == \"0\");\n    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();\n    var exponentValue = (isZero ?\n        BigInt(0) :\n        rawExponentValue == undefined ?\n            BigInt(0) :\n            BigIntUtil.mul(BigInt(rawExponentValue), BigInt((rawExponentSign === \"-\") ?\n                -1 :\n                1)));\n    return {\n        isNegative: (rawCoefficientSign === \"-\"),\n        integerPart: integerPart,\n        fractionalPart: fractionalPart,\n        isZero: isZero,\n        exponentValue: exponentValue,\n    };\n}\nexports.tryParse = tryParse;\n//# sourceMappingURL=try-parse.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fluent_mapper_1 = require(\"../fluent-mapper\");\n/**\n    Constructs multiple `Field<>` instances at once,\n    that are also `FluentMapper<>` instances\n*/\nfunction fields(map) {\n    var result = {};\n    for (var name in map) {\n        if (!map.hasOwnProperty(name)) {\n            continue;\n        }\n        result[name] = fluent_mapper_1.fluentMapper(map[name]).withName(name);\n    }\n    return result;\n}\nexports.fields = fields;\n//# sourceMappingURL=field-map-ctor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar m = require(\"../functional-lib\");\nvar fluent_mapper_1 = require(\"../fluent-mapper\");\nfunction arrayLike(f) {\n    return fluent_mapper_1.fluentMapper(m.arrayLike(f));\n}\nexports.arrayLike = arrayLike;\nfunction arrayLikeToArray(f) {\n    return fluent_mapper_1.fluentMapper(m.arrayLikeToArray(f));\n}\nexports.arrayLikeToArray = arrayLikeToArray;\nfunction arrayLikeToReadOnlyArray(f) {\n    return fluent_mapper_1.fluentMapper(m.arrayLikeToReadOnlyArray(f));\n}\nexports.arrayLikeToReadOnlyArray = arrayLikeToReadOnlyArray;\nfunction array(f) {\n    return fluent_mapper_1.fluentMapper(m.array(f));\n}\nexports.array = array;\nfunction readOnlyArray(f) {\n    return fluent_mapper_1.fluentMapper(m.readOnlyArray(f));\n}\nexports.readOnlyArray = readOnlyArray;\nfunction castEnumFlyweight(e) {\n    var src = m.castEnumFlyweight(e);\n    var result = {\n        toValue: {},\n        toKey: {},\n    };\n    for (var k in src.toValue) {\n        if (!src.toValue.hasOwnProperty(k)) {\n            continue;\n        }\n        result.toValue[k] = fluent_mapper_1.fluentMapper(src.toValue[k]);\n    }\n    for (var k in src.toKey) {\n        if (!src.toKey.hasOwnProperty(k)) {\n            continue;\n        }\n        result.toKey[k] = fluent_mapper_1.fluentMapper(src.toKey[k]);\n    }\n    return result;\n}\nexports.castEnumFlyweight = castEnumFlyweight;\nfunction toEnumValue(e) {\n    return fluent_mapper_1.fluentMapper(m.toEnumValue(e));\n}\nexports.toEnumValue = toEnumValue;\nfunction toEnumKey(e) {\n    return fluent_mapper_1.fluentMapper(m.toEnumKey(e));\n}\nexports.toEnumKey = toEnumKey;\nfunction toOneEnumValue(e, k) {\n    return fluent_mapper_1.fluentMapper(m.toOneEnumValue(e, k));\n}\nexports.toOneEnumValue = toOneEnumValue;\nfunction toOneEnumKey(e, k) {\n    return fluent_mapper_1.fluentMapper(m.toOneEnumKey(e, k));\n}\nexports.toOneEnumKey = toOneEnumKey;\nfunction enumKey(e) {\n    return fluent_mapper_1.fluentMapper(m.enumKey(e));\n}\nexports.enumKey = enumKey;\nfunction enumValue(e) {\n    return fluent_mapper_1.fluentMapper(m.enumValue(e));\n}\nexports.enumValue = enumValue;\nfunction unsafeLiteral() {\n    var arr = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arr[_i] = arguments[_i];\n    }\n    return fluent_mapper_1.fluentMapper(m.unsafeLiteral.apply(m, arr));\n}\nexports.unsafeLiteral = unsafeLiteral;\nfunction literal(arg0) {\n    var arr = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        arr[_i - 1] = arguments[_i];\n    }\n    return fluent_mapper_1.fluentMapper(m.literal.apply(m, [arg0].concat(arr)));\n}\nexports.literal = literal;\nfunction tupleLiteral() {\n    var tuple = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        tuple[_i] = arguments[_i];\n    }\n    return fluent_mapper_1.fluentMapper(m.tupleLiteral.apply(m, tuple));\n}\nexports.tupleLiteral = tupleLiteral;\nfunction deriveMap(map) {\n    return fluent_mapper_1.fluentMapper(m.deriveMap(map));\n}\nexports.deriveMap = deriveMap;\nfunction derive(srcKey, dstKey, f) {\n    return fluent_mapper_1.fluentMapper(m.derive(srcKey, dstKey, f));\n}\nexports.derive = derive;\nfunction instanceOf(ctor) {\n    return fluent_mapper_1.fluentMapper(m.instanceOf(ctor));\n}\nexports.instanceOf = instanceOf;\nfunction objectFromArray() {\n    var arr = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arr[_i] = arguments[_i];\n    }\n    return fluent_mapper_1.fluentMapper(m.objectFromArray.apply(m, arr));\n}\nexports.objectFromArray = objectFromArray;\nfunction objectFromMap(map) {\n    return fluent_mapper_1.fluentMapper(m.objectFromMap(map));\n}\nexports.objectFromMap = objectFromMap;\nexports.object = function () {\n    var arr = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arr[_i] = arguments[_i];\n    }\n    return fluent_mapper_1.fluentMapper(m.object.apply(m, arr));\n};\nfunction partialDeriveMap(map) {\n    return fluent_mapper_1.fluentMapper(m.partialDeriveMap(map));\n}\nexports.partialDeriveMap = partialDeriveMap;\nfunction partialObjectFromArray() {\n    var arr = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arr[_i] = arguments[_i];\n    }\n    return fluent_mapper_1.fluentMapper(m.partialObjectFromArray.apply(m, arr));\n}\nexports.partialObjectFromArray = partialObjectFromArray;\nfunction partialObjectFromMap(map) {\n    return fluent_mapper_1.fluentMapper(m.partialObjectFromMap(map));\n}\nexports.partialObjectFromMap = partialObjectFromMap;\nexports.partialObject = function () {\n    var arr = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arr[_i] = arguments[_i];\n    }\n    return fluent_mapper_1.fluentMapper(m.partialObject.apply(m, arr));\n};\nfunction partialRenameMap(map) {\n    return fluent_mapper_1.fluentMapper(m.partialRenameMap(map));\n}\nexports.partialRenameMap = partialRenameMap;\nfunction renameMap(map) {\n    return fluent_mapper_1.fluentMapper(m.renameMap(map));\n}\nexports.renameMap = renameMap;\nfunction rename(srcKey, dstKey, f) {\n    return fluent_mapper_1.fluentMapper(m.rename(srcKey, dstKey, f));\n}\nexports.rename = rename;\nfunction unsafeStringIndexer(f) {\n    return fluent_mapper_1.fluentMapper(m.unsafeStringIndexer(f));\n}\nexports.unsafeStringIndexer = unsafeStringIndexer;\nfunction stringIndexer(f) {\n    return fluent_mapper_1.fluentMapper(m.stringIndexer(f));\n}\nexports.stringIndexer = stringIndexer;\nfunction cache(cached, f) {\n    return fluent_mapper_1.fluentMapper(m.cache(cached, f));\n}\nexports.cache = cache;\nfunction cast(srcDelegate, castDelegate, dstDelegate) {\n    return fluent_mapper_1.fluentMapper(m.cast(srcDelegate, castDelegate, dstDelegate));\n}\nexports.cast = cast;\nfunction unsafeDeepMerge() {\n    var arr = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arr[_i] = arguments[_i];\n    }\n    return fluent_mapper_1.fluentMapper(m.unsafeDeepMerge.apply(m, arr));\n}\nexports.unsafeDeepMerge = unsafeDeepMerge;\nfunction deepMerge(f) {\n    var arr = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        arr[_i - 1] = arguments[_i];\n    }\n    return fluent_mapper_1.fluentMapper(m.deepMerge.apply(m, [f].concat(arr)));\n}\nexports.deepMerge = deepMerge;\nfunction unsafeDiscriminatedUnion(discriminantK) {\n    var arr = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        arr[_i - 1] = arguments[_i];\n    }\n    return fluent_mapper_1.fluentMapper(m.unsafeDiscriminatedUnion.apply(m, [discriminantK].concat(arr)));\n}\nexports.unsafeDiscriminatedUnion = unsafeDiscriminatedUnion;\nfunction discriminatedUnion(discriminantK, f) {\n    var arr = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        arr[_i - 2] = arguments[_i];\n    }\n    return fluent_mapper_1.fluentMapper(m.discriminatedUnion.apply(m, [discriminantK, f].concat(arr)));\n}\nexports.discriminatedUnion = discriminatedUnion;\nfunction excludeLiteral(f) {\n    var arr = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        arr[_i - 1] = arguments[_i];\n    }\n    return fluent_mapper_1.fluentMapper(m.excludeLiteral.apply(m, [f].concat(arr)));\n}\nexports.excludeLiteral = excludeLiteral;\nfunction orUndefined(f) {\n    return fluent_mapper_1.fluentMapper(m.orUndefined(f));\n}\nexports.orUndefined = orUndefined;\nfunction orNull(f) {\n    return fluent_mapper_1.fluentMapper(m.orNull(f));\n}\nexports.orNull = orNull;\nfunction orMaybe(f) {\n    return fluent_mapper_1.fluentMapper(m.orMaybe(f));\n}\nexports.orMaybe = orMaybe;\nfunction notUndefined(f) {\n    return fluent_mapper_1.fluentMapper(m.notUndefined(f));\n}\nexports.notUndefined = notUndefined;\nfunction notNull(f) {\n    return fluent_mapper_1.fluentMapper(m.notNull(f));\n}\nexports.notNull = notNull;\nfunction notMaybe(f) {\n    return fluent_mapper_1.fluentMapper(m.notMaybe(f));\n}\nexports.notMaybe = notMaybe;\nfunction optional(f) {\n    return fluent_mapper_1.fluentMapper(m.optional(f));\n}\nexports.optional = optional;\nfunction notOptional(f) {\n    return fluent_mapper_1.fluentMapper(m.notOptional(f));\n}\nexports.notOptional = notOptional;\nfunction unsafeOr() {\n    var arr = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arr[_i] = arguments[_i];\n    }\n    return fluent_mapper_1.fluentMapper(m.unsafeOr.apply(m, arr));\n}\nexports.unsafeOr = unsafeOr;\nfunction or(f) {\n    var arr = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        arr[_i - 1] = arguments[_i];\n    }\n    return fluent_mapper_1.fluentMapper(m.or.apply(m, [f].concat(arr)));\n}\nexports.or = or;\nexports.pipe = function () {\n    var arr = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arr[_i] = arguments[_i];\n    }\n    return fluent_mapper_1.fluentMapper(m.reallyUnsafePipe.apply(m, arr));\n};\nfunction unsafePipe(f) {\n    var arr = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        arr[_i - 1] = arguments[_i];\n    }\n    return fluent_mapper_1.fluentMapper(m.unsafePipe.apply(m, [f].concat(arr)));\n}\nexports.unsafePipe = unsafePipe;\nfunction reallyUnsafePipe() {\n    var arr = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arr[_i] = arguments[_i];\n    }\n    return fluent_mapper_1.fluentMapper(m.reallyUnsafePipe.apply(m, arr));\n}\nexports.reallyUnsafePipe = reallyUnsafePipe;\nfunction deferred() {\n    return fluent_mapper_1.fluentMapper(m.deferred());\n}\nexports.deferred = deferred;\n//# sourceMappingURL=generic.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/// <reference path=\"../buffer.d.ts\" />\nvar non_generic_1 = require(\"./non-generic\");\nexports.null = non_generic_1.null;\n/**\n    Export generated with `npm run generate-fluent-lib-export`\n\n    The export generation script is needed because of this,\n    https://github.com/microsoft/TypeScript/issues/31824\n*/\nvar non_generic_2 = require(\"./non-generic\");\nexports.unsafeAny = non_generic_2.unsafeAny;\nexports.instanceOfArray = non_generic_2.instanceOfArray;\nexports.instanceOfReadOnlyArray = non_generic_2.instanceOfReadOnlyArray;\nexports.implementsArrayLike = non_generic_2.implementsArrayLike;\nexports.length = non_generic_2.length;\nexports.bigInt = non_generic_2.bigInt;\nexports.unsignedBigInt = non_generic_2.unsignedBigInt;\nexports.stringToBigInt = non_generic_2.stringToBigInt;\nexports.stringToUnsignedBigInt = non_generic_2.stringToUnsignedBigInt;\nexports.integerToBigInt = non_generic_2.integerToBigInt;\nexports.unsignedIntegerToUnsignedBigInt = non_generic_2.unsignedIntegerToUnsignedBigInt;\nexports.toBigInt = non_generic_2.toBigInt;\nexports.toUnsignedBigInt = non_generic_2.toUnsignedBigInt;\nexports.bigIntGt = non_generic_2.bigIntGt;\nexports.bigIntLt = non_generic_2.bigIntLt;\nexports.bigIntGtEq = non_generic_2.bigIntGtEq;\nexports.bigIntLtEq = non_generic_2.bigIntLtEq;\nexports.bigIntRange = non_generic_2.bigIntRange;\nexports.boolean = non_generic_2.boolean;\nexports.finiteNumberToBoolean = non_generic_2.finiteNumberToBoolean;\nexports.stringToBoolean = non_generic_2.stringToBoolean;\nexports.finiteNumberToTrue = non_generic_2.finiteNumberToTrue;\nexports.finiteNumberToFalse = non_generic_2.finiteNumberToFalse;\nexports.stringToTrue = non_generic_2.stringToTrue;\nexports.stringToFalse = non_generic_2.stringToFalse;\nexports.toBoolean = non_generic_2.toBoolean;\nexports.toTrue = non_generic_2.toTrue;\nexports.toFalse = non_generic_2.toFalse;\nexports.instanceOfBuffer = non_generic_2.instanceOfBuffer;\nexports.bufferLength = non_generic_2.bufferLength;\nexports.bufferExactLength = non_generic_2.bufferExactLength;\nexports.unsafeStringToDate = non_generic_2.unsafeStringToDate;\nexports.dateToString = non_generic_2.dateToString;\nexports.unixTimestampSecondsToDate = non_generic_2.unixTimestampSecondsToDate;\nexports.unixTimestampMillisecondsToDate = non_generic_2.unixTimestampMillisecondsToDate;\nexports.dateToUnixTimestampSeconds = non_generic_2.dateToUnixTimestampSeconds;\nexports.dateToUnixTimestampMilliseconds = non_generic_2.dateToUnixTimestampMilliseconds;\nexports.instanceOfDate = non_generic_2.instanceOfDate;\nexports.stringToJsonObject = non_generic_2.stringToJsonObject;\nexports.jsonObject = non_generic_2.jsonObject;\nexports.never = non_generic_2.never;\nexports.nonMaybe = non_generic_2.nonMaybe;\nexports.undefinedToNull = non_generic_2.undefinedToNull;\nexports.emptyStringToNull = non_generic_2.emptyStringToNull;\nexports.whitespaceStringToNull = non_generic_2.whitespaceStringToNull;\nexports.stringToFiniteNumber = non_generic_2.stringToFiniteNumber;\nexports.stringToInteger = non_generic_2.stringToInteger;\nexports.stringToUnsignedInteger = non_generic_2.stringToUnsignedInteger;\nexports.toFiniteNumber = non_generic_2.toFiniteNumber;\nexports.toInteger = non_generic_2.toInteger;\nexports.toUnsignedInteger = non_generic_2.toUnsignedInteger;\nexports.gt = non_generic_2.gt;\nexports.lt = non_generic_2.lt;\nexports.gtEq = non_generic_2.gtEq;\nexports.ltEq = non_generic_2.ltEq;\nexports.range = non_generic_2.range;\nexports.unsafeNumber = non_generic_2.unsafeNumber;\nexports.finiteNumber = non_generic_2.finiteNumber;\nexports.integer = non_generic_2.integer;\nexports.unsignedInteger = non_generic_2.unsignedInteger;\nexports.toEmptyObject = non_generic_2.toEmptyObject;\nexports.instanceOfObject = non_generic_2.instanceOfObject;\nexports.pojo = non_generic_2.pojo;\nexports.runTimeRequired = non_generic_2.runTimeRequired;\nexports.notRunTimeRequired = non_generic_2.notRunTimeRequired;\nexports.finiteNumberToFiniteNumberString = non_generic_2.finiteNumberToFiniteNumberString;\nexports.integerToIntegerString = non_generic_2.integerToIntegerString;\nexports.unsignedIntegerToUnsignedIntegerString = non_generic_2.unsignedIntegerToUnsignedIntegerString;\nexports.jsonObjectToJsonObjectString = non_generic_2.jsonObjectToJsonObjectString;\nexports.ipAddressString = non_generic_2.ipAddressString;\nexports.ipV4MappedIpV6String = non_generic_2.ipV4MappedIpV6String;\nexports.ipV4OctetString = non_generic_2.ipV4OctetString;\nexports.ipV4String = non_generic_2.ipV4String;\nexports.ipV6SegmentString = non_generic_2.ipV6SegmentString;\nexports.ipV6StringWithMaxSegmentCount = non_generic_2.ipV6StringWithMaxSegmentCount;\nexports.ipV6String = non_generic_2.ipV6String;\nexports.floatingPointFormatString = non_generic_2.floatingPointFormatString;\nexports.integerFormatString = non_generic_2.integerFormatString;\nexports.unsignedIntegerFormatString = non_generic_2.unsignedIntegerFormatString;\nexports.finiteNumberString = non_generic_2.finiteNumberString;\nexports.integerString = non_generic_2.integerString;\nexports.unsignedIntegerString = non_generic_2.unsignedIntegerString;\nexports.string = non_generic_2.string;\nexports.jsonObjectString = non_generic_2.jsonObjectString;\nexports.stringLength = non_generic_2.stringLength;\nexports.stringExactLength = non_generic_2.stringExactLength;\nexports.match = non_generic_2.match;\nexports.notMatch = non_generic_2.notMatch;\nexports.email = non_generic_2.email;\nexports.emailAddress = non_generic_2.emailAddress;\nexports.hexadecimalString = non_generic_2.hexadecimalString;\nexports.toUpperCase = non_generic_2.toUpperCase;\nexports.toLowerCase = non_generic_2.toLowerCase;\nexports.padLeft = non_generic_2.padLeft;\nexports.padRight = non_generic_2.padRight;\nexports.subStringBlacklist = non_generic_2.subStringBlacklist;\nexports.toTrimmed = non_generic_2.toTrimmed;\nexports.byteLength = non_generic_2.byteLength;\nexports.instanceOfUint8Array = non_generic_2.instanceOfUint8Array;\nexports.uint8ArrayLength = non_generic_2.uint8ArrayLength;\nexports.uint8ArrayExactLength = non_generic_2.uint8ArrayExactLength;\nexports.nullToUndefined = non_generic_2.nullToUndefined;\nexports.emptyStringToUndefined = non_generic_2.emptyStringToUndefined;\nexports.whitespaceStringToUndefined = non_generic_2.whitespaceStringToUndefined;\nexports.undefined = non_generic_2.undefined;\nexports.unknown = non_generic_2.unknown;\n__export(require(\"./generic\"));\n__export(require(\"./field-map-ctor\"));\nvar ArrayBufferUtil = require(\"../array-buffer-util\");\nexports.ArrayBufferUtil = ArrayBufferUtil;\nvar EnumUtil = require(\"../enum-util\");\nexports.EnumUtil = EnumUtil;\nvar BigIntUtil = require(\"../bigint-util\");\nexports.BigIntUtil = BigIntUtil;\nvar FixedPointUtil = require(\"../fixed-point-util\");\nexports.FixedPointUtil = FixedPointUtil;\nvar FloatingPointUtil = require(\"../floating-point-util\");\nexports.FloatingPointUtil = FloatingPointUtil;\n__export(require(\"../decorator\"));\nvar ErrorUtil = require(\"../error-util\");\nexports.ErrorUtil = ErrorUtil;\nvar jsonApi = require(\"../json-api-lib\");\nexports.jsonApi = jsonApi;\n__export(require(\"../mapper\"));\nvar mysql = require(\"../mysql-lib\");\nexports.mysql = mysql;\nvar TypeUtil = require(\"../type-util\");\nexports.TypeUtil = TypeUtil;\n__export(require(\"../error-code\"));\n__export(require(\"../fluent-mapper\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar m = require(\"../functional-lib\");\nvar fluent_mapper_1 = require(\"../fluent-mapper\");\nfunction omit(obj) {\n    var keys = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        keys[_i - 1] = arguments[_i];\n    }\n    var result = __assign({}, obj);\n    for (var _a = 0, keys_1 = keys; _a < keys_1.length; _a++) {\n        var k = keys_1[_a];\n        delete result[k];\n    }\n    return result;\n}\nfunction toFluentExport(obj) {\n    var result = {};\n    var _loop_1 = function (k) {\n        if (!obj.hasOwnProperty(k)) {\n            return \"continue\";\n        }\n        result[k] = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return fluent_mapper_1.fluentMapper(obj[k].apply(obj, args));\n        };\n    };\n    for (var k in obj) {\n        _loop_1(k);\n    }\n    return result;\n}\n//No need for omit<>() because `fluent-lib/index.ts`\n//overwrites the generic functions with the ones\n//in `fluent-lib/generic.ts`\nvar fluentExport = toFluentExport(omit(m, \n//Well, we need to omit this one because\n//it doesn't return a SafeMapper<>\n\"castEnumFlyweight\"));\nmodule.exports = fluentExport;\n//# sourceMappingURL=non-generic.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mapper_1 = require(\"./mapper\");\nvar functional_lib_1 = require(\"./functional-lib\");\nvar type_util_1 = require(\"./type-util\");\nfunction fluentMapper(f) {\n    var result = function (name, mixed) {\n        return f(name, mixed);\n    };\n    result.__optional = mapper_1.getOptionalFlagOrFalse(f);\n    //== mapper/debug ==\n    result._debugIsExpectedInput = function (_x) {\n    };\n    result._debugIsHandledInput = function (_x) {\n    };\n    result._debugIsMappableInput = function (_x) {\n    };\n    result._debugIsOutput = function (_x) {\n    };\n    //== mapper/operation ==\n    result.map = function (name, mixed) {\n        return mapper_1.map(f, name, mixed);\n    };\n    result.mapExpected = function (name, mixed) {\n        return mapper_1.mapExpected(f, name, mixed);\n    };\n    result.mapMappable = function (name, mixed) {\n        return mapper_1.mapMappable(f, name, mixed);\n    };\n    result.mapHandled = function (name, mixed) {\n        return mapper_1.mapHandled(f, name, mixed);\n    };\n    result.tryMap = function (name, mixed) {\n        return mapper_1.tryMap(f, name, mixed);\n    };\n    result.tryMapExpected = function (name, mixed) {\n        return mapper_1.tryMapExpected(f, name, mixed);\n    };\n    result.tryMapMappable = function (name, mixed) {\n        return mapper_1.tryMapMappable(f, name, mixed);\n    };\n    result.tryMapHandled = function (name, mixed) {\n        return mapper_1.tryMapHandled(f, name, mixed);\n    };\n    result.expectMappableInput = function () {\n        return fluentMapper(mapper_1.expectMappableInput(f));\n    };\n    result.withExpectedInput = function () {\n        return fluentMapper(mapper_1.withExpectedInput(f)());\n    };\n    result.withMapper = function (newMapper) {\n        return fluentMapper(mapper_1.withMapper(f, newMapper));\n    };\n    result.withName = function (name) {\n        return fluentMapper(mapper_1.withName(f, name));\n    };\n    //== array ==\n    result.array = function () {\n        return fluentMapper(functional_lib_1.array(f));\n    };\n    result.readOnlyArray = function () {\n        return fluentMapper(functional_lib_1.readOnlyArray(f));\n    };\n    result.arrayLikeToArray = function () {\n        return fluentMapper(functional_lib_1.arrayLikeToArray(f));\n    };\n    result.arrayLikeToReadOnlyArray = function () {\n        return fluentMapper(functional_lib_1.arrayLikeToReadOnlyArray(f));\n    };\n    //== array-like ==\n    result.arrayLike = function () {\n        return fluentMapper(functional_lib_1.arrayLike(f));\n    };\n    // == object\n    result.derive = function (srcKey, dstKey) {\n        return fluentMapper(functional_lib_1.derive(srcKey, dstKey, f));\n    };\n    result.rename = function (srcKey, dstKey) {\n        return fluentMapper(functional_lib_1.rename(srcKey, dstKey, f));\n    };\n    result.unsafeStringIndexer = function () {\n        return fluentMapper(functional_lib_1.unsafeStringIndexer(f));\n    };\n    result.stringIndexer = function () {\n        return fluentMapper(functional_lib_1.stringIndexer(f));\n    };\n    //== operator ==\n    result.cast = function (castDelegate, dstDelegate) {\n        return fluentMapper(functional_lib_1.cast(f, castDelegate, dstDelegate));\n    };\n    result.deepMerge = function () {\n        var arr = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            arr[_i] = arguments[_i];\n        }\n        var result = functional_lib_1.deepMerge.apply(void 0, [f].concat(arr));\n        return fluentMapper(result);\n    };\n    result.excludeLiteral = function () {\n        var arr = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            arr[_i] = arguments[_i];\n        }\n        return fluentMapper(functional_lib_1.excludeLiteral.apply(void 0, [f].concat(arr)));\n    };\n    result.orUndefined = function () {\n        return fluentMapper(functional_lib_1.orUndefined(f));\n    };\n    result.orNull = function () {\n        return fluentMapper(functional_lib_1.orNull(f));\n    };\n    result.orMaybe = function () {\n        return fluentMapper(functional_lib_1.orMaybe(f));\n    };\n    result.notUndefined = function () {\n        return fluentMapper(functional_lib_1.notUndefined(f));\n    };\n    result.notNull = function () {\n        return fluentMapper(functional_lib_1.notNull(f));\n    };\n    result.notMaybe = function () {\n        return fluentMapper(functional_lib_1.notMaybe(f));\n    };\n    result.optional = function () {\n        return fluentMapper(functional_lib_1.optional(f));\n    };\n    result.notOptional = function () {\n        return fluentMapper(functional_lib_1.notOptional(f));\n    };\n    result.or = function () {\n        var arr = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            arr[_i] = arguments[_i];\n        }\n        return fluentMapper(functional_lib_1.or.apply(void 0, [f].concat(arr)));\n    };\n    result.pipe = (function () {\n        var arr = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            arr[_i] = arguments[_i];\n        }\n        return fluentMapper(functional_lib_1.unsafePipe.apply(void 0, [f].concat(arr)));\n    });\n    result.unsafePipe = function () {\n        var arr = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            arr[_i] = arguments[_i];\n        }\n        return fluentMapper(functional_lib_1.unsafePipe.apply(void 0, [f].concat(arr)));\n    };\n    //== type ==\n    result.setImplementation = function (impl) {\n        f.setImplementation(impl);\n    };\n    //const rt : FluentMapper<AnySafeMapper> = result;\n    return type_util_1.setFunctionName(result, mapper_1.getNameOrEmptyString(f));\n}\nexports.fluentMapper = fluentMapper;\n/*\nimport {stringToUnsignedInteger, inclusiveRange} from \"./functional-lib\";\nconst n = stringToUnsignedInteger();\nconst x = fluentMapper(n);\nx.__optional\nx.__expectedInput\nx.__mappableInput\nconst y = x\n    .pipe(\n        inclusiveRange({\n            min : 3.141,\n            max : 6.282,\n        })\n    )\n    .derive(\"x\", \"y\");\nconst opt = x.optional()\n    .withName(\"qwerty\");\n//const x2 = x.withExpectedInput<any>();\n//*/ \n//# sourceMappingURL=fluent-mapper.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./unsafe-any\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Prefer to use `unknown()` instead.\n */\nfunction unsafeAny() {\n    return function (_name, mixed) {\n        return mixed;\n    };\n}\nexports.unsafeAny = unsafeAny;\n//# sourceMappingURL=unsafe-any.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mapper_1 = require(\"../../mapper\");\nvar operator_1 = require(\"../operator\");\nvar implements_array_like_1 = require(\"./implements-array-like\");\nvar string_util_1 = require(\"../../string-util\");\nfunction copyArrayLike(arr) {\n    var result = [];\n    for (var i = 0; i < arr.length; ++i) {\n        result.push(arr[i]);\n    }\n    return result;\n}\nfunction arrayLike(f) {\n    return mapper_1.copyRunTimeModifier(f, operator_1.pipe(implements_array_like_1.implementsArrayLike(), function (name, mixed) {\n        var result = mixed;\n        var isCopy = false;\n        for (var i = 0; i < mixed.length; ++i) {\n            /**\n             * For now, fail quick for array-likes.\n             *\n             * @todo Should we accumulate errors like in `objectFromMap()`?\n             * The array-like might be too large. How large is too large?\n             * Should we accumulate the first `n` errors before throwing?\n             */\n            var cur = f(\"\" + name + string_util_1.toPropertyAccess(i), mixed[i]);\n            //We do not mind === here.\n            //If either is a BigInt polyfill, we are okay with the copy.\n            if (cur === mixed[i]) {\n                continue;\n            }\n            if (!isCopy) {\n                result = copyArrayLike(result);\n                isCopy = true;\n            }\n            result[i] = cur;\n        }\n        return result;\n    }));\n}\nexports.arrayLike = arrayLike;\n//# sourceMappingURL=array-like.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar length_1 = require(\"./length\");\n/**\n    With this, a `string` will pass the check.\n\n    ```ts\n    const x : ArrayLike<string> = \"test\";\n    console.log(x[0]);\n    ```\n*/\nfunction implementsArrayLike() {\n    return length_1.length({});\n}\nexports.implementsArrayLike = implementsArrayLike;\n//# sourceMappingURL=implements-array-like.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./array-like\"));\n__export(require(\"./implements-array-like\"));\n__export(require(\"./length\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operator_1 = require(\"../operator\");\nvar object_1 = require(\"../object\");\nvar number_1 = require(\"../number\");\nvar mapper_1 = require(\"../../mapper\");\nvar string_1 = require(\"../string\");\nvar operator_2 = require(\"../operator\");\nvar string_util_1 = require(\"../../string-util\");\nvar error_util_1 = require(\"../../error-util\");\nvar error_code_1 = require(\"../../error-code\");\nfunction length(args) {\n    var lengthDelegate = operator_1.pipe(number_1.unsignedInteger(), number_1.range({\n        gtEq: args.min,\n        ltEq: args.max,\n    }));\n    var expected = ((args.min == undefined) ?\n        ((args.max == undefined) ?\n            \"value with \\\"length\\\" property\" :\n            \"value of length less than, or equal to \" + args.max.toString()) :\n        ((args.max == undefined) ?\n            \"value of length greater than, or equal to \" + args.min.toString() :\n            (args.min == args.max) ?\n                \"value of length \" + args.min.toString() :\n                \"value of length between \" + args.min.toString() + \" and \" + args.max.toString()));\n    return operator_1.pipe(operator_2.or(object_1.instanceOfObject(), string_1.string()), function (name, mixed) {\n        var lengthResult = mapper_1.tryMapHandled(lengthDelegate, \"\" + name + string_util_1.toPropertyAccess(\"length\"), mixed.length);\n        if (lengthResult.success) {\n            return mixed;\n        }\n        else {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be \" + expected,\n                inputName: name,\n                actualValue: mixed,\n                expected: expected,\n                expectedMeta: {\n                    errorCode: error_code_1.ErrorCode.EXPECTED_LENGTH,\n                    min: args.min,\n                    max: args.max,\n                },\n                propertyErrors: [\n                    lengthResult.mappingError,\n                ],\n            });\n        }\n    });\n}\nexports.length = length;\n//# sourceMappingURL=length.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mapper_1 = require(\"../../mapper\");\nvar operator_1 = require(\"../operator\");\nvar instance_of_array_1 = require(\"./instance-of-array\");\nvar string_util_1 = require(\"../../string-util\");\nfunction array(f) {\n    return mapper_1.copyRunTimeModifier(f, operator_1.pipe(instance_of_array_1.instanceOfArray(), function (name, mixed) {\n        var result = mixed;\n        var isCopy = false;\n        for (var i = 0; i < mixed.length; ++i) {\n            /**\n             * For now, fail quick for arrays.\n             *\n             * @todo Should we accumulate errors like in `objectFromMap()`?\n             * The array might be too large. How large is too large?\n             * Should we accumulate the first `n` errors before throwing?\n             */\n            var cur = f(\"\" + name + string_util_1.toPropertyAccess(i), mixed[i]);\n            //We do not mind === here.\n            //If either is a BigInt polyfill, we are okay with the copy.\n            if (cur === mixed[i]) {\n                continue;\n            }\n            if (!isCopy) {\n                result = result.slice();\n                isCopy = true;\n            }\n            result[i] = cur;\n        }\n        return result;\n    }));\n}\nexports.array = array;\nfunction readOnlyArray(f) {\n    return array(f);\n}\nexports.readOnlyArray = readOnlyArray;\n//# sourceMappingURL=array.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operator_1 = require(\"../../operator\");\nvar array_like_1 = require(\"../../array-like\");\nfunction arrayLikeToArray(f) {\n    return operator_1.pipe(array_like_1.arrayLike(f), (function (_name, arrayLike) {\n        if (arrayLike instanceof Array) {\n            return arrayLike;\n        }\n        var result = [];\n        for (var i = 0; i < arrayLike.length; ++i) {\n            result.push(arrayLike[i]);\n        }\n        return result;\n    }));\n}\nexports.arrayLikeToArray = arrayLikeToArray;\nfunction arrayLikeToReadOnlyArray(f) {\n    return arrayLikeToArray(f);\n}\nexports.arrayLikeToReadOnlyArray = arrayLikeToReadOnlyArray;\n//# sourceMappingURL=array-like-to-array.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./array-like-to-array\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./cast\"));\n__export(require(\"./array\"));\n__export(require(\"./instance-of-array\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_util_1 = require(\"../../type-util\");\nvar error_util_1 = require(\"../../error-util\");\nvar error_code_1 = require(\"../../error-code\");\nfunction instanceOfArray() {\n    return function (name, mixed) {\n        if (!(mixed instanceof Array)) {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be instance of Array; received \" + type_util_1.toTypeStr(mixed),\n                inputName: name,\n                actualValue: mixed,\n                expected: \"array\",\n                expectedMeta: {\n                    errorCode: error_code_1.ErrorCode.EXPECTED_TYPE,\n                },\n            });\n        }\n        return mixed;\n    };\n}\nexports.instanceOfArray = instanceOfArray;\nfunction instanceOfReadOnlyArray() {\n    return instanceOfArray();\n}\nexports.instanceOfReadOnlyArray = instanceOfReadOnlyArray;\n//# sourceMappingURL=instance-of-array.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_util_1 = require(\"../../type-util\");\nvar operator_1 = require(\"../operator\");\nvar comparison_1 = require(\"./comparison\");\nvar error_util_1 = require(\"../../error-util\");\nvar error_code_1 = require(\"../../error-code\");\nfunction bigInt() {\n    return function (name, mixed) {\n        if (type_util_1.isBigInt(mixed)) {\n            return mixed;\n        }\n        throw error_util_1.makeMappingError({\n            message: name + \" must be bigint; received \" + type_util_1.toTypeStr(mixed),\n            inputName: name,\n            actualValue: mixed,\n            expected: \"bigint\",\n            expectedMeta: {\n                errorCode: error_code_1.ErrorCode.EXPECTED_TYPE,\n            },\n        });\n    };\n}\nexports.bigInt = bigInt;\n/**\n    bigint >= 0\n*/\nfunction unsignedBigInt() {\n    var bigIntFactory = type_util_1.getBigIntFactoryFunctionOrError();\n    return operator_1.pipe(bigInt(), comparison_1.bigIntGtEq(bigIntFactory(0)));\n}\nexports.unsignedBigInt = unsignedBigInt;\n//# sourceMappingURL=bigint.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar string_1 = require(\"../string\");\nvar operator_1 = require(\"../operator\");\nvar bigint_1 = require(\"./bigint\");\nvar type_util_1 = require(\"../../type-util\");\nvar number_1 = require(\"../number\");\n/**\n    Uses `integerFormatString()` and `BigInt()` internally.\n*/\nfunction stringToBigInt() {\n    var bigIntFactory = type_util_1.getBigIntFactoryFunctionOrError();\n    return operator_1.cast(string_1.integerFormatString(), bigIntFactory, bigint_1.bigInt());\n}\nexports.stringToBigInt = stringToBigInt;\n/**\n    Uses `unsignedIntegerFormatString()` and `BigInt()` internally.\n*/\nfunction stringToUnsignedBigInt() {\n    var bigIntFactory = type_util_1.getBigIntFactoryFunctionOrError();\n    return operator_1.cast(string_1.unsignedIntegerFormatString(), bigIntFactory, bigint_1.unsignedBigInt());\n}\nexports.stringToUnsignedBigInt = stringToUnsignedBigInt;\nfunction integerToBigInt() {\n    var bigIntFactory = type_util_1.getBigIntFactoryFunctionOrError();\n    return operator_1.cast(number_1.integer(), bigIntFactory, bigint_1.bigInt());\n}\nexports.integerToBigInt = integerToBigInt;\nfunction unsignedIntegerToUnsignedBigInt() {\n    var bigIntFactory = type_util_1.getBigIntFactoryFunctionOrError();\n    return operator_1.cast(number_1.unsignedInteger(), bigIntFactory, bigint_1.unsignedBigInt());\n}\nexports.unsignedIntegerToUnsignedBigInt = unsignedIntegerToUnsignedBigInt;\n/**\n    Uses `integerFormatString()` and `BigInt()` internally.\n*/\nfunction toBigInt() {\n    var bigIntFactory = type_util_1.getBigIntFactoryFunctionOrError();\n    return operator_1.cast(operator_1.or(string_1.integerFormatString(), number_1.integer()), bigIntFactory, bigint_1.bigInt());\n}\nexports.toBigInt = toBigInt;\n/**\n    Uses `unsignedIntegerFormatString()` and `BigInt()` internally.\n*/\nfunction toUnsignedBigInt() {\n    var bigIntFactory = type_util_1.getBigIntFactoryFunctionOrError();\n    return operator_1.cast(operator_1.or(string_1.unsignedIntegerFormatString(), number_1.unsignedInteger()), bigIntFactory, bigint_1.unsignedBigInt());\n}\nexports.toUnsignedBigInt = toUnsignedBigInt;\n//# sourceMappingURL=cast.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operator_1 = require(\"../operator\");\nvar bigint_1 = require(\"./bigint\");\nvar literal_1 = require(\"../literal\");\nvar type_util_1 = require(\"../../type-util\");\nvar bigint_util_1 = require(\"../../bigint-util\");\nvar error_util_1 = require(\"../../error-util\");\nvar error_code_1 = require(\"../../error-code\");\nfunction bigIntGt(x) {\n    return operator_1.pipe(bigint_1.bigInt(), function (name, num) {\n        if (bigint_util_1.greaterThan(num, x)) {\n            return num;\n        }\n        else {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be greater than \" + type_util_1.toLiteralStr(x),\n                inputName: name,\n                actualValue: num,\n                expected: \"greater than \" + type_util_1.toLiteralStr(x),\n                expectedMeta: {\n                    errorCode: error_code_1.ErrorCode.EXPECTED_GREATER_THAN,\n                    gt: x,\n                },\n            });\n        }\n    });\n}\nexports.bigIntGt = bigIntGt;\nfunction bigIntLt(x) {\n    return operator_1.pipe(bigint_1.bigInt(), function (name, num) {\n        if (bigint_util_1.lessThan(num, x)) {\n            return num;\n        }\n        else {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be less than \" + type_util_1.toLiteralStr(x),\n                inputName: name,\n                actualValue: num,\n                expected: \"less than \" + type_util_1.toLiteralStr(x),\n                expectedMeta: {\n                    errorCode: error_code_1.ErrorCode.EXPECTED_LESS_THAN,\n                    lt: x,\n                },\n            });\n        }\n    });\n}\nexports.bigIntLt = bigIntLt;\nfunction bigIntGtEq(x) {\n    return operator_1.pipe(bigint_1.bigInt(), function (name, num) {\n        if (bigint_util_1.greaterThanOrEqual(num, x)) {\n            return num;\n        }\n        else {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be greater than, or equal to \" + type_util_1.toLiteralStr(x),\n                inputName: name,\n                actualValue: num,\n                expected: \"greater than, or equal to \" + type_util_1.toLiteralStr(x),\n                expectedMeta: {\n                    errorCode: error_code_1.ErrorCode.EXPECTED_GREATER_THAN_OR_EQUAL_TO,\n                    gtEq: x,\n                },\n            });\n        }\n    });\n}\nexports.bigIntGtEq = bigIntGtEq;\nfunction bigIntLtEq(x) {\n    return operator_1.pipe(bigint_1.bigInt(), function (name, num) {\n        if (bigint_util_1.lessThanOrEqual(num, x)) {\n            return num;\n        }\n        else {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be less than, or equal to \" + type_util_1.toLiteralStr(x),\n                inputName: name,\n                actualValue: num,\n                expected: \"less than, or equal to \" + type_util_1.toLiteralStr(x),\n                expectedMeta: {\n                    errorCode: error_code_1.ErrorCode.EXPECTED_LESS_THAN_OR_EQUAL_TO,\n                    ltEq: x,\n                },\n            });\n        }\n    });\n}\nexports.bigIntLtEq = bigIntLtEq;\nfunction bigIntRange(args) {\n    var min = ((type_util_1.isBigInt(args.gt)) ?\n        ((type_util_1.isBigInt(args.gtEq)) ?\n            ((bigint_util_1.greaterThanOrEqual(args.gt, args.gtEq)) ?\n                {\n                    f: bigIntGt(args.gt),\n                    inclusive: false,\n                    value: args.gt,\n                } :\n                {\n                    f: bigIntGtEq(args.gtEq),\n                    inclusive: true,\n                    value: args.gtEq,\n                }) :\n            {\n                f: bigIntGt(args.gt),\n                inclusive: false,\n                value: args.gt,\n            }) :\n        ((type_util_1.isBigInt(args.gtEq)) ?\n            {\n                f: bigIntGtEq(args.gtEq),\n                inclusive: true,\n                value: args.gtEq,\n            } :\n            undefined));\n    var max = ((type_util_1.isBigInt(args.lt)) ?\n        ((type_util_1.isBigInt(args.ltEq)) ?\n            ((bigint_util_1.lessThanOrEqual(args.lt, args.ltEq)) ?\n                {\n                    f: bigIntLt(args.lt),\n                    inclusive: false,\n                    value: args.lt,\n                } :\n                {\n                    f: bigIntLtEq(args.ltEq),\n                    inclusive: true,\n                    value: args.ltEq,\n                }) :\n            {\n                f: bigIntLt(args.lt),\n                inclusive: false,\n                value: args.lt,\n            }) :\n        ((type_util_1.isBigInt(args.ltEq)) ?\n            {\n                f: bigIntLtEq(args.ltEq),\n                inclusive: true,\n                value: args.ltEq,\n            } :\n            undefined));\n    if (min == undefined) {\n        if (max == undefined) {\n            return bigint_1.bigInt();\n        }\n        else {\n            return max.f;\n        }\n    }\n    else {\n        if (max == undefined) {\n            return min.f;\n        }\n        else {\n            if (bigint_util_1.greaterThan(min.value, max.value)) {\n                throw new Error(\"Min value cannot be greater than max value\");\n            }\n            else if (bigint_util_1.equal(min.value, max.value)) {\n                if (min.inclusive && max.inclusive) {\n                    return literal_1.literal(min.value);\n                }\n                else {\n                    throw new Error(\"Min value cannot be equal to max value unless using gtEq and ltEq\");\n                }\n            }\n            else {\n                if (bigint_util_1.addOneImpl(min.value.toString()) == max.value.toString() &&\n                    !min.inclusive &&\n                    !max.inclusive) {\n                    throw new Error(\"There is no bigint 'x' where: \" + min.value.toString() + \" < x < \" + max.value.toString());\n                }\n                return operator_1.pipe(min.f, max.f);\n            }\n        }\n    }\n}\nexports.bigIntRange = bigIntRange;\n//# sourceMappingURL=comparison.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./bigint\"));\n__export(require(\"./cast\"));\n__export(require(\"./comparison\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_util_1 = require(\"../../type-util\");\nvar error_util_1 = require(\"../../error-util\");\nvar error_code_1 = require(\"../../error-code\");\nfunction boolean() {\n    return function (name, mixed) {\n        if (typeof mixed != \"boolean\") {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be boolean; received \" + type_util_1.toTypeStr(mixed),\n                inputName: name,\n                actualValue: mixed,\n                expected: \"boolean\",\n                expectedMeta: {\n                    errorCode: error_code_1.ErrorCode.EXPECTED_TYPE,\n                },\n            });\n        }\n        return mixed;\n    };\n}\nexports.boolean = boolean;\n//# sourceMappingURL=boolean.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operator_1 = require(\"../operator\");\nvar number_1 = require(\"../number\");\nvar boolean_1 = require(\"./boolean\");\nvar string_1 = require(\"../string\");\nvar operator_2 = require(\"../operator\");\nvar literal_1 = require(\"../literal\");\n/**\n    + Zero is false\n    + All other finite number values are true\n*/\nfunction finiteNumberToBoolean() {\n    return operator_1.cast(number_1.finiteNumber(), function (num) { return (num != 0); }, boolean_1.boolean());\n}\nexports.finiteNumberToBoolean = finiteNumberToBoolean;\n/**\n    + `\"1\"` is true\n    + `/^true$/i` is true\n    + All other string values are false\n\n    TODO Is this a good convention?\n*/\nfunction stringToBoolean() {\n    return operator_1.cast(string_1.string(), function (str) { return (str == \"1\" || str.toLowerCase() == \"true\"); }, boolean_1.boolean());\n}\nexports.stringToBoolean = stringToBoolean;\n/**\n    + Zero is false\n    + All other finite number values are true\n*/\nfunction finiteNumberToTrue() {\n    return operator_2.pipe(finiteNumberToBoolean(), literal_1.literal(true));\n}\nexports.finiteNumberToTrue = finiteNumberToTrue;\n/**\n    + Zero is false\n    + All other finite number values are true\n*/\nfunction finiteNumberToFalse() {\n    return operator_2.pipe(finiteNumberToBoolean(), literal_1.literal(false));\n}\nexports.finiteNumberToFalse = finiteNumberToFalse;\n/**\n    + `\"1\"` is true\n    + `/^true$/i` is true\n    + All other string values are false\n\n    TODO Is this a good convention?\n*/\nfunction stringToTrue() {\n    return operator_2.pipe(stringToBoolean(), literal_1.literal(true));\n}\nexports.stringToTrue = stringToTrue;\n/**\n    + `\"1\"` is true\n    + `/^true$/i` is true\n    + All other string values are false\n\n    TODO Is this a good convention?\n*/\nfunction stringToFalse() {\n    return operator_2.pipe(stringToBoolean(), literal_1.literal(false));\n}\nexports.stringToFalse = stringToFalse;\n/**\n    Uses `stringToBoolean()` and `finiteNumberToBoolean()` internally\n*/\nfunction toBoolean() {\n    return operator_1.or(stringToBoolean(), finiteNumberToBoolean());\n}\nexports.toBoolean = toBoolean;\n/**\n    Uses `stringToTrue()` and `finiteNumberToTrue()` internally\n*/\nfunction toTrue() {\n    return operator_1.or(stringToTrue(), finiteNumberToTrue());\n}\nexports.toTrue = toTrue;\n/**\n    Uses `stringToFalse()` and `finiteNumberToFalse()` internally\n*/\nfunction toFalse() {\n    return operator_1.or(stringToFalse(), finiteNumberToFalse());\n}\nexports.toFalse = toFalse;\n//# sourceMappingURL=cast.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./boolean\"));\n__export(require(\"./cast\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_util_1 = require(\"../../type-util\");\nvar operator_1 = require(\"../operator\");\nvar uint_8_array_1 = require(\"../uint-8-array\");\nvar buffer_ctor_1 = require(\"../../type-util/buffer-ctor\");\nvar error_util_1 = require(\"../../error-util\");\nvar error_code_1 = require(\"../../error-code\");\nfunction instanceOfBuffer() {\n    return function (name, mixed) {\n        if (!buffer_ctor_1.isInstanceOfBuffer(mixed)) {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be instance of Buffer; received \" + type_util_1.toTypeStr(mixed),\n                inputName: name,\n                actualValue: mixed,\n                expected: \"Buffer\",\n                expectedMeta: {\n                    errorCode: error_code_1.ErrorCode.EXPECTED_TYPE,\n                },\n            });\n        }\n        return mixed;\n    };\n}\nexports.instanceOfBuffer = instanceOfBuffer;\nfunction bufferLength(args) {\n    return operator_1.pipe(uint_8_array_1.byteLength(args), instanceOfBuffer());\n}\nexports.bufferLength = bufferLength;\nfunction bufferExactLength(length) {\n    return bufferLength({\n        min: length,\n        max: length,\n    });\n}\nexports.bufferExactLength = bufferExactLength;\n//# sourceMappingURL=buffer.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./buffer\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operator_1 = require(\"../operator\");\nvar string_1 = require(\"../string\");\nvar instance_of_date_1 = require(\"./instance-of-date\");\nvar number_1 = require(\"../number\");\n/**\n    Unsafe because it just uses `new Date(str)`\n    to convert to a `Date`.\n\n    This may have surprising results.\n    ```ts\n    new Date(\"1\").getTime() === 978325200000\n    ```\n*/\nfunction unsafeStringToDate() {\n    return operator_1.cast(string_1.string(), function (str) { return new Date(str); }, instance_of_date_1.instanceOfDate());\n}\nexports.unsafeStringToDate = unsafeStringToDate;\n/**\n    Feel free to specify your own `Date` parsing function,\n    using any JS Date library you want.\n\n    It is safe for `dateParser` to throw `Error`s.\n\n    Do not use `Date.parse(str)` or `new Date(str)`\n    as implementations vary wildly.\n\n    If you wish to use either of those,\n    use `unsafeStringToDate()` instead.\n*/\nfunction dateToString(dateParser) {\n    return operator_1.cast(string_1.string(), function (str) { return dateParser(str); }, instance_of_date_1.instanceOfDate());\n}\nexports.dateToString = dateToString;\n/**\n * Convert the number of seconds since the Unix Epoch to a `Date`.\n *\n * The Unix Epoch is January 1st, 1970 at UTC.\n */\nfunction unixTimestampSecondsToDate() {\n    return operator_1.cast(number_1.integer(), \n    //Multiply by 1000 because `Date` ctor expects\n    //milliseconds since Unix Epoch\n    function (num) { return new Date(num * 1000); }, instance_of_date_1.instanceOfDate());\n}\nexports.unixTimestampSecondsToDate = unixTimestampSecondsToDate;\n/**\n * Convert the number of milliseconds since the Unix Epoch to a `Date`.\n *\n * The Unix Epoch is January 1st, 1970 at UTC.\n */\nfunction unixTimestampMillisecondsToDate() {\n    return operator_1.cast(number_1.integer(), function (num) { return new Date(num); }, instance_of_date_1.instanceOfDate());\n}\nexports.unixTimestampMillisecondsToDate = unixTimestampMillisecondsToDate;\n/**\n * Convert a `Date` to the number of seconds since the Unix Epoch.\n *\n * The Unix Epoch is January 1st, 1970 at UTC.\n */\nfunction dateToUnixTimestampSeconds() {\n    return operator_1.cast(instance_of_date_1.instanceOfDate(), function (d) { return Math.floor(d.getTime() / 1000); }, number_1.integer());\n}\nexports.dateToUnixTimestampSeconds = dateToUnixTimestampSeconds;\n/**\n * Convert a `Date` to the number of milliseconds since the Unix Epoch.\n *\n * The Unix Epoch is January 1st, 1970 at UTC.\n */\nfunction dateToUnixTimestampMilliseconds() {\n    return operator_1.cast(instance_of_date_1.instanceOfDate(), function (d) { return d.getTime(); }, number_1.integer());\n}\nexports.dateToUnixTimestampMilliseconds = dateToUnixTimestampMilliseconds;\n//# sourceMappingURL=cast.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./cast\"));\n__export(require(\"./instance-of-date\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_util_1 = require(\"../../type-util\");\nvar number_1 = require(\"../number\");\nvar error_util_1 = require(\"../../error-util\");\nvar error_code_1 = require(\"../../error-code\");\n/**\n * Must be a valid date.\n *\n * `mixed.getTime()` must be a finite number.\n */\nfunction instanceOfDate() {\n    var unixTimestampMsDelegate = number_1.finiteNumber();\n    return function (name, mixed) {\n        if (!(mixed instanceof Date)) {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be instance of Date; received \" + type_util_1.toTypeStr(mixed),\n                inputName: name,\n                actualValue: mixed,\n                expected: \"Date\",\n                expectedMeta: {\n                    errorCode: error_code_1.ErrorCode.EXPECTED_TYPE,\n                },\n            });\n        }\n        var unixTimestampMs = mixed.getTime();\n        unixTimestampMsDelegate(name + \".getTime()\", unixTimestampMs);\n        return mixed;\n    };\n}\nexports.instanceOfDate = instanceOfDate;\n//# sourceMappingURL=instance-of-date.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar enum_util_1 = require(\"../../enum-util\");\nvar cast_1 = require(\"./cast\");\nfunction castEnumFlyweight(e) {\n    var keys = enum_util_1.getKeys(e);\n    var result = {\n        toValue: keys.reduce(function (memo, k) {\n            memo[k] = cast_1.toOneEnumValue(e, k);\n            return memo;\n        }, cast_1.toEnumValue(e)),\n        toKey: keys.reduce(function (memo, k) {\n            memo[k] = cast_1.toOneEnumKey(e, k);\n            return memo;\n        }, cast_1.toEnumKey(e)),\n    };\n    return result;\n}\nexports.castEnumFlyweight = castEnumFlyweight;\n//# sourceMappingURL=cast-enum-flyweight.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar enum_util_1 = require(\"../../enum-util\");\nvar operator_1 = require(\"../operator\");\nvar mapper_1 = require(\"../../mapper\");\nvar literal_1 = require(\"../literal\");\nvar type_util_1 = require(\"../../type-util\");\nvar error_util_1 = require(\"../../error-util\");\nvar error_code_1 = require(\"../../error-code\");\nfunction toEnumValue(e) {\n    var entries = enum_util_1.getEntries(e);\n    var expected = entries.map(function (e) { return type_util_1.toLiteralStr(e.key); }).join(\"|\");\n    //https://github.com/microsoft/TypeScript/issues/31602\n    //Discovered string and conditional types also give problems\n    return mapper_1.mapper(operator_1.or(literal_1.unsafeLiteral.apply(void 0, entries.map(function (e) { return e.value; })), \n    //Not a value, so maybe a key?\n    function (name, mixed) {\n        for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\n            var entry = entries_1[_i];\n            if (mixed === entry.key) {\n                return entry.value;\n            }\n        }\n        throw error_util_1.makeMappingError({\n            message: name + \" must be \" + expected + \"; received \" + type_util_1.toTypeStr(mixed),\n            inputName: name,\n            actualValue: mixed,\n            expected: expected,\n            expectedMeta: {\n                errorCode: error_code_1.ErrorCode.EXPECTED_ENUM_KEY,\n                mappableValues: entries.map(function (entry) { return entry.key; }),\n                outputValues: entries.map(function (entry) { return entry.value; }),\n                entries: entries.slice(),\n            },\n        });\n    }));\n}\nexports.toEnumValue = toEnumValue;\nfunction toEnumKey(e) {\n    var entries = enum_util_1.getEntries(e);\n    var expected = entries.map(function (e) { return type_util_1.toLiteralStr(e.value); }).join(\"|\");\n    //https://github.com/microsoft/TypeScript/issues/31602\n    //Discovered string and conditional types also give problems\n    return mapper_1.mapper(operator_1.or(literal_1.unsafeLiteral.apply(void 0, entries.map(function (e) { return e.key; })), \n    //Not a key, so maybe a value?\n    function (name, mixed) {\n        for (var _i = 0, entries_2 = entries; _i < entries_2.length; _i++) {\n            var entry = entries_2[_i];\n            if (mixed === entry.value) {\n                return entry.key;\n            }\n        }\n        throw error_util_1.makeMappingError({\n            message: name + \" must be \" + expected + \"; received \" + type_util_1.toTypeStr(mixed),\n            inputName: name,\n            actualValue: mixed,\n            expected: expected,\n            expectedMeta: {\n                errorCode: error_code_1.ErrorCode.EXPECTED_ENUM_VALUE,\n                mappableValues: entries.map(function (entry) { return entry.value; }),\n                outputValues: entries.map(function (entry) { return entry.key; }),\n                entries: entries.slice(),\n            },\n        });\n    }));\n}\nexports.toEnumKey = toEnumKey;\nfunction toOneEnumValue(e, k) {\n    var desiredValue = e[k];\n    var entries = enum_util_1.getEntries(e);\n    var validKeys = entries\n        .filter(function (entry) { return (entry.value === desiredValue &&\n        entry.key !== desiredValue); })\n        .map(function (entry) { return entry.key; });\n    var expected = (type_util_1.toLiteralOrTypeUnionStr([\n        desiredValue\n    ].concat(validKeys)));\n    return mapper_1.mapper(function (name, mixed) {\n        if (mixed === desiredValue) {\n            return desiredValue;\n        }\n        for (var _i = 0, validKeys_1 = validKeys; _i < validKeys_1.length; _i++) {\n            var validKey = validKeys_1[_i];\n            if (mixed === validKey) {\n                return desiredValue;\n            }\n        }\n        throw error_util_1.makeMappingError({\n            message: name + \" must be \" + expected + \"; received \" + type_util_1.toTypeStr(mixed),\n            inputName: name,\n            actualValue: mixed,\n            expected: expected,\n            expectedMeta: {\n                errorCode: error_code_1.ErrorCode.EXPECTED_ONE_ENUM_VALUE_OR_VALID_ENUM_KEY,\n                mappableValues: [desiredValue].concat(validKeys),\n                outputValues: [desiredValue],\n                desiredValue: desiredValue,\n                validKeys: validKeys.slice(),\n            },\n        });\n    });\n}\nexports.toOneEnumValue = toOneEnumValue;\nfunction toOneEnumKey(e, k) {\n    var validValue = e[k];\n    var entries = enum_util_1.getEntries(e);\n    var validKeys = entries\n        .filter(function (e) { return (e.value === validValue &&\n        e.key !== validValue &&\n        e.key !== k); })\n        .map(function (e) { return e.key; });\n    var expected = (type_util_1.toLiteralOrTypeUnionStr([\n        k\n    ].concat(validKeys, [\n        validValue,\n    ])));\n    return mapper_1.mapper(function (name, mixed) {\n        if (mixed === k) {\n            return k;\n        }\n        for (var _i = 0, validKeys_2 = validKeys; _i < validKeys_2.length; _i++) {\n            var validKey = validKeys_2[_i];\n            if (mixed === validKey) {\n                return k;\n            }\n        }\n        if (mixed === validValue) {\n            return k;\n        }\n        throw error_util_1.makeMappingError({\n            message: name + \" must be \" + expected + \"; received \" + type_util_1.toTypeStr(mixed),\n            inputName: name,\n            actualValue: mixed,\n            expected: expected,\n            expectedMeta: {\n                mappableValues: [k].concat(validKeys, [validValue]),\n                outputValues: [k],\n                desiredKey: k,\n                validKeys: validKeys.slice(),\n                validValue: validValue,\n            },\n        });\n    });\n}\nexports.toOneEnumKey = toOneEnumKey;\n//# sourceMappingURL=cast.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar enum_util_1 = require(\"../../enum-util\");\nvar literal_1 = require(\"../literal\");\nfunction enumKey(e) {\n    return literal_1.unsafeLiteral.apply(void 0, enum_util_1.getKeys(e));\n}\nexports.enumKey = enumKey;\nfunction enumValue(e) {\n    return literal_1.unsafeLiteral.apply(void 0, enum_util_1.getValues(e));\n}\nexports.enumValue = enumValue;\n//# sourceMappingURL=enum.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./cast-enum-flyweight\"));\n__export(require(\"./cast\"));\n__export(require(\"./enum\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./any\"));\n__export(require(\"./array\"));\n__export(require(\"./array-like\"));\n__export(require(\"./bigint\"));\n__export(require(\"./boolean\"));\n__export(require(\"./buffer\"));\n__export(require(\"./date\"));\n__export(require(\"./enum\"));\n__export(require(\"./json-object\"));\n__export(require(\"./literal\"));\n__export(require(\"./never\"));\n__export(require(\"./non-maybe\"));\n__export(require(\"./null\"));\n__export(require(\"./number\"));\n__export(require(\"./object\"));\n__export(require(\"./operator\"));\n__export(require(\"./string\"));\n__export(require(\"./type\"));\n__export(require(\"./uint-8-array\"));\n__export(require(\"./undefined\"));\n__export(require(\"./unknown\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_util_1 = require(\"../../type-util\");\nvar error_util_1 = require(\"../../error-util\");\n/**\n    Calls `JSON.parse()` once, may call `JSON.stringify()` zero or one times.\n*/\nfunction stringToJsonObject() {\n    return function (name, mixed) {\n        if (typeof mixed != \"string\") {\n            try {\n                var str = JSON.stringify(mixed);\n                if (typeof str == \"string\" && str[0] == \"{\") {\n                    if (type_util_1.isBigIntNativelySupported() || !type_util_1.isBigInt(mixed)) {\n                        return JSON.parse(str);\n                    }\n                }\n                throw error_util_1.makeMappingError({\n                    message: name + \" must be JSON Object; received \" + type_util_1.toTypeStr(mixed),\n                    inputName: name,\n                    actualValue: mixed,\n                    expected: \"JSON Object\",\n                });\n            }\n            catch (err) {\n                throw error_util_1.makeMappingError({\n                    message: name + \" must be JSON Object; \" + err.message,\n                    inputName: name,\n                    actualValue: mixed,\n                    expected: \"JSON Object\",\n                });\n            }\n        }\n        if (!/^\\s*\\{/.test(mixed)) {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be JSON Object string\",\n                inputName: name,\n                actualValue: mixed,\n                expected: \"JSON Object string\",\n            });\n        }\n        try {\n            return JSON.parse(mixed);\n        }\n        catch (err) {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be valid JSON Object string; \" + err.message,\n                inputName: name,\n                actualValue: mixed,\n                expected: \"valid JSON Object string\",\n            });\n        }\n    };\n}\nexports.stringToJsonObject = stringToJsonObject;\n//# sourceMappingURL=cast.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./cast\"));\n__export(require(\"./json-object\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_util_1 = require(\"../../type-util\");\nvar error_util_1 = require(\"../../error-util\");\n/**\n    Calls `JSON.stringify()` and `JSON.parse()` once.\n\n    Always returns a new object.\n*/\nfunction jsonObject() {\n    return function (name, mixed) {\n        try {\n            var str = JSON.stringify(mixed);\n            if (typeof str == \"string\" && str[0] == \"{\") {\n                if (type_util_1.isBigIntNativelySupported() || !type_util_1.isBigInt(mixed)) {\n                    return JSON.parse(str);\n                }\n            }\n            throw error_util_1.makeMappingError({\n                message: name + \" must be JSON Object; received \" + type_util_1.toTypeStr(mixed),\n                inputName: name,\n                actualValue: mixed,\n                expected: \"JSON Object\",\n            });\n        }\n        catch (err) {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be JSON Object; \" + err.message,\n                inputName: name,\n                actualValue: mixed,\n                expected: \"JSON Object\",\n            });\n        }\n    };\n}\nexports.jsonObject = jsonObject;\n//# sourceMappingURL=json-object.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./literal\"));\n__export(require(\"./tuple-literal\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_util_1 = require(\"../../type-util\");\nvar error_util_1 = require(\"../../error-util\");\n/**\n * Returns a mapper that validates if the input is an element of `arr`\n *\n * This function throws an error if `arr.length == 0`\n *\n * @param arr\n *  @see {@link LiteralType}\n */\nfunction unsafeLiteral() {\n    var arr = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arr[_i] = arguments[_i];\n    }\n    if (arr.length == 0) {\n        throw new Error(\"Cannot map zero literals\");\n    }\n    var expected = type_util_1.toLiteralUnionStr(arr);\n    return function (name, mixed) {\n        for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n            var item = arr_1[_i];\n            if (type_util_1.strictEqual(mixed, item)) {\n                return mixed;\n            }\n        }\n        throw error_util_1.makeMappingError({\n            message: name + \" must be \" + expected + \"; received \" + type_util_1.toTypeStr(mixed),\n            inputName: name,\n            actualValue: mixed,\n            expected: expected,\n            expectedMeta: {\n                mappableValues: arr.slice(),\n                outputValues: arr.slice(),\n            },\n        });\n    };\n}\nexports.unsafeLiteral = unsafeLiteral;\n/**\n * Returns a mapper that validates if the input is one of the arguments\n *\n * @param arg0\n * @param arr\n *  @see {@link LiteralType}\n */\nfunction literal(arg0) {\n    var arr = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        arr[_i - 1] = arguments[_i];\n    }\n    return unsafeLiteral.apply(void 0, [arg0].concat(arr));\n}\nexports.literal = literal;\n//# sourceMappingURL=literal.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_util_1 = require(\"../../type-util\");\nvar array_1 = require(\"../array\");\nvar operator_1 = require(\"../operator\");\nvar error_util_1 = require(\"../../error-util\");\nvar array_like_1 = require(\"../array-like\");\nvar string_util_1 = require(\"../../string-util\");\n/**\n * Returns a mapper that checks if incoming data matches the tuple `TupleT`.\n *\n * ```ts\n * tupleLiteral(\"a\", \"b\")(\"x\", [\"a\", \"b\"]);       //OK!\n * tupleLiteral(\"a\", \"b\")(\"x\", [\"a\", \"b\", \"c\"]);  //Error\n * tupleLiteral(\"a\", \"b\")(\"x\", [\"a\"]);            //Error\n * tupleLiteral(\"a\", \"b\")(\"x\", [\"b\", \"a\"]);       //Error\n * ```\n *\n * @param tuple The tuple incoming data must equal to\n */\nfunction tupleLiteral() {\n    var tuple = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        tuple[_i] = arguments[_i];\n    }\n    var lengthDelegate = array_like_1.length({\n        min: tuple.length,\n        max: tuple.length,\n    });\n    return operator_1.pipe(array_1.instanceOfArray(), function (name, mixed) {\n        lengthDelegate(name, mixed);\n        for (var i = 0; i < tuple.length; ++i) {\n            if (!type_util_1.strictEqual(mixed[i], tuple[i])) {\n                throw error_util_1.makeMappingError({\n                    message: \"\" + name + string_util_1.toPropertyAccess(i) + \" must be \" + type_util_1.toLiteralStr(tuple[i]) + \"; received \" + type_util_1.toTypeStr(mixed[i]),\n                    inputName: \"\" + name + string_util_1.toPropertyAccess(i),\n                    actualValue: mixed[i],\n                    expected: type_util_1.toLiteralStr(tuple[i]),\n                    expectedMeta: {\n                        mappableValues: [\n                            tuple.slice()\n                        ],\n                        outputValues: [\n                            tuple.slice()\n                        ],\n                    },\n                });\n            }\n        }\n        return mixed;\n    });\n}\nexports.tupleLiteral = tupleLiteral;\n//# sourceMappingURL=tuple-literal.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./never\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar error_util_1 = require(\"../../error-util\");\n/**\n * Use this if something is never supposed to have a value.\n * Not even `undefined`.\n *\n * For example, `never[]` can be,\n * ```ts\n * const arrayOfNever = array(never());\n * ```\n *\n * The only value that will satisfy this mapper is the empty array.\n */\nfunction never() {\n    return function (name, mixed) {\n        throw error_util_1.makeMappingError({\n            message: name + \" must be never\",\n            inputName: name,\n            actualValue: mixed,\n            expected: \"never\",\n        });\n    };\n}\nexports.never = never;\n//# sourceMappingURL=never.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./non-maybe\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar any_1 = require(\"../any\");\nvar operator_1 = require(\"../operator\");\nfunction nonMaybe() {\n    return operator_1.notMaybe(any_1.unsafeAny());\n}\nexports.nonMaybe = nonMaybe;\n//# sourceMappingURL=non-maybe.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_util_1 = require(\"../../type-util\");\nvar operator_1 = require(\"../operator\");\nvar literal_1 = require(\"../literal\");\nvar null_1 = require(\"./null\");\nvar string_1 = require(\"../string\");\nvar error_util_1 = require(\"../../error-util\");\nfunction undefinedToNull() {\n    return function (name, mixed) {\n        //We do not mind === here.\n        if (mixed === undefined || mixed === null) {\n            return null;\n        }\n        throw error_util_1.makeMappingError({\n            message: name + \" must be null|undefined; received \" + type_util_1.toTypeStr(mixed),\n            inputName: name,\n            actualValue: mixed,\n            expected: \"null|undefined\",\n            expectedMeta: {\n                mappableValues: [null, undefined],\n                outputValues: [null],\n            },\n        });\n    };\n}\nexports.undefinedToNull = undefinedToNull;\nfunction emptyStringToNull() {\n    return operator_1.cast(literal_1.literal(\"\"), function () { return null; }, null_1.null());\n}\nexports.emptyStringToNull = emptyStringToNull;\n/**\n    An empty string, or a string of only whitespace\n*/\nfunction whitespaceStringToNull() {\n    return operator_1.cast(string_1.match(/^\\s*$/, function (name) {\n        return {\n            message: name + \" must be a whitespace string\",\n            expected: \"whitespace string\",\n        };\n    }), function () { return null; }, null_1.null());\n}\nexports.whitespaceStringToNull = whitespaceStringToNull;\n//# sourceMappingURL=cast.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./cast\"));\n__export(require(\"./null\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_util_1 = require(\"../../type-util\");\nvar error_util_1 = require(\"../../error-util\");\nfunction nil() {\n    return function (name, mixed) {\n        //We do not mind === here.\n        if (mixed === null) {\n            return mixed;\n        }\n        throw error_util_1.makeMappingError({\n            message: name + \" must be null; received \" + type_util_1.toTypeStr(mixed),\n            inputName: name,\n            actualValue: mixed,\n            expected: \"null\",\n            expectedMeta: {\n                mappableValues: [null],\n                outputValues: [null],\n            }\n        });\n    };\n}\nexports.null = nil;\n//# sourceMappingURL=null.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar string_1 = require(\"../string\");\nvar operator_1 = require(\"../operator\");\nvar number_1 = require(\"./number\");\nvar bigint_1 = require(\"../bigint/bigint\");\n/**\n    Uses `floatingPointFormatString()` and `parseFloat()` internally.\n\n    ```ts\n    const s = \"999999999999999999999999999\"\n    //Output is \"1e+27\" due to loss in precision\n    stringToFiniteNumber(\"\", s).toString()\n    ```\n*/\nfunction stringToFiniteNumber() {\n    return operator_1.cast(string_1.floatingPointFormatString(), parseFloat, number_1.finiteNumber());\n}\nexports.stringToFiniteNumber = stringToFiniteNumber;\n/**\n    Uses `integerFormatString()` and `parseFloat()` internally.\n\n    ```ts\n    const s = \"999999999999999999999999999\"\n    //Output is \"1e+27\" due to loss in precision\n    stringToInteger(\"\", s).toString()\n    ```\n*/\nfunction stringToInteger() {\n    return operator_1.cast(string_1.integerFormatString(), parseFloat, number_1.integer());\n}\nexports.stringToInteger = stringToInteger;\n/**\n    Uses `unsignedIntegerFormatString()` and `parseFloat()` internally.\n\n    ```ts\n    const s = \"999999999999999999999999999\"\n    //Output is \"1e+27\" due to loss in precision\n    stringToUnsignedInteger(\"\", s).toString()\n    ```\n*/\nfunction stringToUnsignedInteger() {\n    return operator_1.cast(string_1.unsignedIntegerFormatString(), parseFloat, number_1.unsignedInteger());\n}\nexports.stringToUnsignedInteger = stringToUnsignedInteger;\n/**\n    Uses `floatingPointFormatString()` and `parseFloat()` internally.\n\n    ```ts\n    const s = \"999999999999999999999999999\"\n    //Output is \"1e+27\" due to loss in precision\n    toFiniteNumber(\"\", s).toString()\n    ```\n\n    -----\n\n    ```ts\n    const b = BigInt(\"999999999999999999999999999\")\n    //Output is \"1e+27\" due to loss in precision\n    toFiniteNumber(\"\", b).toString()\n    ```\n*/\nfunction toFiniteNumber() {\n    return operator_1.cast(operator_1.or(string_1.floatingPointFormatString(), operator_1.pipe(bigint_1.bigInt(), function (_name, b) {\n        return b.toString();\n    })), parseFloat, number_1.finiteNumber());\n}\nexports.toFiniteNumber = toFiniteNumber;\n/**\n    Uses `floatingPointFormatString()` and `parseFloat()` internally.\n\n    ```ts\n    const s = \"999999999999999999999999999\"\n    //Output is \"1e+27\" due to loss in precision\n    toUnsafeNumber(\"\", s).toString()\n    ```\n\n    -----\n\n    ```ts\n    const b = BigInt(\"999999999999999999999999999\")\n    //Output is \"1e+27\" due to loss in precision\n    toUnsafeNumber(\"\", b).toString()\n    ```\n*/\nfunction toUnsafeNumber() {\n    return operator_1.cast(operator_1.or(string_1.floatingPointFormatString(), operator_1.pipe(bigint_1.bigInt(), function (_name, b) {\n        return b.toString();\n    })), parseFloat, number_1.unsafeNumber());\n}\nexports.toUnsafeNumber = toUnsafeNumber;\n/**\n    Uses `integerFormatString()` and `parseFloat()` internally.\n\n    ```ts\n    const s = \"999999999999999999999999999\"\n    //Output is \"1e+27\" due to loss in precision\n    toInteger(\"\", s).toString()\n    ```\n\n    -----\n\n    ```ts\n    const b = BigInt(\"999999999999999999999999999\")\n    //Output is \"1e+27\" due to loss in precision\n    toInteger(\"\", b).toString()\n    ```\n*/\nfunction toInteger() {\n    return operator_1.cast(operator_1.or(string_1.integerFormatString(), operator_1.pipe(bigint_1.bigInt(), function (_name, b) {\n        return b.toString();\n    })), parseFloat, number_1.integer());\n}\nexports.toInteger = toInteger;\n/**\n    Uses `unsignedIntegerFormatString()` and `parseFloat()` internally.\n\n    ```ts\n    const s = \"999999999999999999999999999\"\n    //Output is \"1e+27\" due to loss in precision\n    toUnsignedInteger(\"\", s).toString()\n    ```\n\n    -----\n\n    ```ts\n    const b = BigInt(\"999999999999999999999999999\")\n    //Output is \"1e+27\" due to loss in precision\n    toUnsignedInteger(\"\", b).toString()\n    ```\n*/\nfunction toUnsignedInteger() {\n    return operator_1.cast(operator_1.or(string_1.unsignedIntegerFormatString(), operator_1.pipe(bigint_1.bigInt(), function (_name, b) {\n        return b.toString();\n    })), parseFloat, number_1.unsignedInteger());\n}\nexports.toUnsignedInteger = toUnsignedInteger;\n//# sourceMappingURL=cast.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operator_1 = require(\"../operator\");\nvar number_1 = require(\"./number\");\nvar literal_1 = require(\"../literal\");\nvar error_util_1 = require(\"../../error-util\");\nvar error_code_1 = require(\"../../error-code\");\nfunction gt(x) {\n    return operator_1.pipe(number_1.finiteNumber(), function (name, num) {\n        if (num > x) {\n            return num;\n        }\n        else {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be greater than \" + x,\n                inputName: name,\n                actualValue: num,\n                expected: \"greater than \" + x,\n                expectedMeta: {\n                    errorCode: error_code_1.ErrorCode.EXPECTED_GREATER_THAN,\n                    gt: x,\n                },\n            });\n        }\n    });\n}\nexports.gt = gt;\nfunction lt(x) {\n    return operator_1.pipe(number_1.finiteNumber(), function (name, num) {\n        if (num < x) {\n            return num;\n        }\n        else {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be less than \" + x,\n                inputName: name,\n                actualValue: num,\n                expected: \"less than \" + x,\n                expectedMeta: {\n                    errorCode: error_code_1.ErrorCode.EXPECTED_LESS_THAN,\n                    lt: x,\n                },\n            });\n        }\n    });\n}\nexports.lt = lt;\nfunction gtEq(x) {\n    return operator_1.pipe(number_1.finiteNumber(), function (name, num) {\n        if (num >= x) {\n            return num;\n        }\n        else {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be greater than, or equal to \" + x,\n                inputName: name,\n                actualValue: num,\n                expected: \"greater than, or equal to \" + x,\n                expectedMeta: {\n                    errorCode: error_code_1.ErrorCode.EXPECTED_GREATER_THAN_OR_EQUAL_TO,\n                    gtEq: x,\n                },\n            });\n        }\n    });\n}\nexports.gtEq = gtEq;\nfunction ltEq(x) {\n    return operator_1.pipe(number_1.finiteNumber(), function (name, num) {\n        if (num <= x) {\n            return num;\n        }\n        else {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be less than, or equal to \" + x,\n                inputName: name,\n                actualValue: num,\n                expected: \"less than, or equal to \" + x,\n                expectedMeta: {\n                    errorCode: error_code_1.ErrorCode.EXPECTED_LESS_THAN_OR_EQUAL_TO,\n                    ltEq: x,\n                },\n            });\n        }\n    });\n}\nexports.ltEq = ltEq;\nfunction range(args) {\n    var min = ((typeof args.gt == \"number\") ?\n        ((typeof args.gtEq == \"number\") ?\n            ((args.gt >= args.gtEq) ?\n                {\n                    f: gt(args.gt),\n                    inclusive: false,\n                    value: args.gt,\n                } :\n                {\n                    f: gtEq(args.gtEq),\n                    inclusive: true,\n                    value: args.gtEq,\n                }) :\n            {\n                f: gt(args.gt),\n                inclusive: false,\n                value: args.gt,\n            }) :\n        ((typeof args.gtEq == \"number\") ?\n            {\n                f: gtEq(args.gtEq),\n                inclusive: true,\n                value: args.gtEq,\n            } :\n            undefined));\n    var max = ((typeof args.lt == \"number\") ?\n        ((typeof args.ltEq == \"number\") ?\n            ((args.lt <= args.ltEq) ?\n                {\n                    f: lt(args.lt),\n                    inclusive: false,\n                    value: args.lt,\n                } :\n                {\n                    f: ltEq(args.ltEq),\n                    inclusive: true,\n                    value: args.ltEq,\n                }) :\n            {\n                f: lt(args.lt),\n                inclusive: false,\n                value: args.lt,\n            }) :\n        ((typeof args.ltEq == \"number\") ?\n            {\n                f: ltEq(args.ltEq),\n                inclusive: true,\n                value: args.ltEq,\n            } :\n            undefined));\n    if (min == undefined) {\n        if (max == undefined) {\n            return number_1.finiteNumber();\n        }\n        else {\n            return max.f;\n        }\n    }\n    else {\n        if (max == undefined) {\n            return min.f;\n        }\n        else {\n            if (min.value > max.value) {\n                throw new Error(\"Min value cannot be greater than max value\");\n            }\n            else if (min.value == max.value) {\n                if (min.inclusive && max.inclusive) {\n                    return literal_1.literal(min.value);\n                }\n                else {\n                    throw new Error(\"Min value cannot be equal to max value unless using gtEq and ltEq\");\n                }\n            }\n            else {\n                return operator_1.pipe(min.f, max.f);\n            }\n        }\n    }\n}\nexports.range = range;\n//# sourceMappingURL=comparison.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./cast\"));\n__export(require(\"./comparison\"));\n__export(require(\"./number\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_util_1 = require(\"../../type-util\");\nvar operator_1 = require(\"../operator\");\nvar comparison_1 = require(\"./comparison\");\nvar error_util_1 = require(\"../../error-util\");\nvar error_code_1 = require(\"../../error-code\");\n//Unsafe because it allows NaN and +/-Infinity\nfunction unsafeNumber() {\n    return function (name, mixed) {\n        if (typeof mixed != \"number\") {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be number; received \" + type_util_1.toTypeStr(mixed),\n                inputName: name,\n                actualValue: mixed,\n                expected: \"number\",\n                expectedMeta: {\n                    errorCode: error_code_1.ErrorCode.EXPECTED_TYPE,\n                },\n            });\n        }\n        return mixed;\n    };\n}\nexports.unsafeNumber = unsafeNumber;\nfunction finiteNumber() {\n    return operator_1.pipe(unsafeNumber(), function (name, num) {\n        if (isNaN(num)) {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be finite number; received NaN\",\n                inputName: name,\n                actualValue: num,\n                expected: \"finite number\",\n                expectedMeta: {\n                    errorCode: error_code_1.ErrorCode.EXPECTED_TYPE,\n                },\n            });\n        }\n        if (!isFinite(num)) {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be finite number; received \" + num,\n                inputName: name,\n                actualValue: num,\n                expected: \"finite number\",\n                expectedMeta: {\n                    errorCode: error_code_1.ErrorCode.EXPECTED_TYPE,\n                },\n            });\n        }\n        return num;\n    });\n}\nexports.finiteNumber = finiteNumber;\nfunction integer() {\n    return operator_1.pipe(finiteNumber(), function (name, num) {\n        if (Math.floor(num) !== num) {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be integer; received double\",\n                inputName: name,\n                actualValue: num,\n                expected: \"integer\",\n                expectedMeta: {\n                    errorCode: error_code_1.ErrorCode.EXPECTED_TYPE,\n                },\n            });\n        }\n        return num;\n    });\n}\nexports.integer = integer;\n/**\n    An unsigned integer is an integer >= 0\n*/\nfunction unsignedInteger() {\n    return operator_1.pipe(integer(), comparison_1.gtEq(0));\n}\nexports.unsignedInteger = unsignedInteger;\n//# sourceMappingURL=number.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mapper_1 = require(\"../../mapper\");\nvar operator_1 = require(\"../operator\");\nvar derive_1 = require(\"./derive\");\nvar to_empty_object_1 = require(\"./to-empty-object\");\nfunction deriveMap(map) {\n    var arr = [];\n    for (var k in map) {\n        if (!map.hasOwnProperty(k)) {\n            continue;\n        }\n        var f = map[k];\n        arr.push(derive_1.derive(k, mapper_1.getNameOrEmptyString(f), f));\n    }\n    if (arr.length == 0) {\n        return to_empty_object_1.toEmptyObject();\n    }\n    return operator_1.unsafeDeepMerge.apply(void 0, arr);\n}\nexports.deriveMap = deriveMap;\n/*\nimport {string} from \"../string\";\nimport {withName, withExpectedInput} from \"../../mapper\";\nimport {unsignedInteger, stringToFiniteNumber} from \"../number\";\nimport {optional} from \"../operator\";\n\nconst m = renameMap({\n    x : withName(string(), \"y\"),\n    x2 : withName(unsignedInteger(), \"y\"),\n    a : withExpectedInput(withName(stringToFiniteNumber(), \"b\"))<string>(),\n    a2 : withExpectedInput(withName(stringToFiniteNumber(), \"b2\"))<string|number>(),\n    a3 : withExpectedInput(withName(stringToFiniteNumber(), \"b2\"))<number>(),\n    o : withExpectedInput(withName(optional(stringToFiniteNumber()), \"_o\"))<number>(),\n});\nm.__expectedInput\nm.__mappableInput\n\nconst x = optional(withExpectedInput(withName(stringToFiniteNumber(), \"_o\"))<number>());\n\nconst m2 = renameMap({\n    x : withName(string(), \"y\" as string),\n    x2 : withName(unsignedInteger(), \"y\" as string),\n    a : withExpectedInput(withName(stringToFiniteNumber(), \"b\"))<string>(),\n    a2 : withExpectedInput(withName(stringToFiniteNumber(), \"b2\"))<string|number>(),\n    a3 : withExpectedInput(withName(stringToFiniteNumber(), \"b2\"))<number>(),\n    o : withExpectedInput(withName(optional(stringToFiniteNumber()), \"_o\"))<number>(),\n    c2 : withExpectedInput(withName(stringToFiniteNumber(), \"c2\"))<string|number>(),\n    c3 : withExpectedInput(withName(string(), \"c2\"))<string>(),\n});\n//*/ \n//# sourceMappingURL=derive-map.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mapper_1 = require(\"../../mapper\");\nvar operator_1 = require(\"../operator\");\nvar instance_of_object_1 = require(\"./instance-of-object\");\nvar string_util_1 = require(\"../../string-util\");\nvar error_util_1 = require(\"../../error-util\");\nfunction derive(srcKey, dstKey, f) {\n    /**\n        Must property be explicitly set?\n\n                        | `orUndefined` | `optional` | `runTimeRequired()`\n        compile-time    | -no-effect-   | optional   | required\n        run-time        | optional      | optional   | required\n    */\n    var runTimeRequired = mapper_1.getRunTimeRequiredFlagOrFalse(f);\n    var result = operator_1.pipe(instance_of_object_1.instanceOfObject(), function (name, mixed) {\n        var _a;\n        if (!Object.prototype.hasOwnProperty.call(mixed, srcKey)) {\n            if (runTimeRequired) {\n                var expected = \"object with explicitly set property \" + JSON.stringify(srcKey);\n                throw error_util_1.makeMappingError({\n                    message: name + \" must be \" + expected,\n                    inputName: name,\n                    actualValue: mixed,\n                    expected: expected,\n                    expectedMeta: {\n                        srcKey: srcKey,\n                        dstKey: dstKey,\n                    },\n                    propertyErrors: [\n                        error_util_1.makeMappingError({\n                            message: \"\" + name + string_util_1.toPropertyAccess(srcKey) + \" must be explicitly set\",\n                            inputName: \"\" + name + string_util_1.toPropertyAccess(srcKey),\n                            actualValue: undefined,\n                            expected: \"explicitly set\",\n                        }),\n                    ],\n                });\n            }\n        }\n        var dstResult = mapper_1.tryMapHandled(f, \"\" + name + string_util_1.toPropertyAccess(srcKey), mixed[srcKey]);\n        if (dstResult.success) {\n            var obj = (_a = {},\n                _a[dstKey] = dstResult.value,\n                _a);\n            return obj;\n        }\n        if (dstResult.mappingError.expected == undefined) {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be valid object. \" + dstResult.mappingError.message,\n                inputName: name,\n                actualValue: mixed,\n                expected: \"valid object\",\n                expectedMeta: {\n                    srcKey: srcKey,\n                    dstKey: dstKey,\n                },\n                propertyErrors: [\n                    dstResult.mappingError,\n                ],\n            });\n        }\n        else {\n            var expected = \"object with \" + dstResult.mappingError.expected + \" property \" + JSON.stringify(srcKey);\n            throw error_util_1.makeMappingError({\n                message: name + \" must be \" + expected,\n                inputName: name,\n                actualValue: mixed,\n                expected: expected,\n                expectedMeta: {\n                    srcKey: srcKey,\n                    dstKey: dstKey,\n                },\n                propertyErrors: [\n                    dstResult.mappingError,\n                ],\n            });\n        }\n    });\n    return mapper_1.copyRunTimeModifier(f, result);\n}\nexports.derive = derive;\n/*\nconst a = unsignedInteger();\nconst b = optional(unsignedInteger());\nconst c = string();\nconst d = optional(string());\n\ndeclare const _0 : typeof a;\ndeclare const _1 : typeof b;\ndeclare const _2 : typeof c;\ndeclare const _3 : typeof d;\n\ndeclare const _01 : (typeof a) | (typeof b);\ndeclare const _02 : (typeof a) | (typeof c);\ndeclare const _03 : (typeof a) | (typeof d);\n\ndeclare const _12 : (typeof b) | (typeof c);\ndeclare const _13 : (typeof b) | (typeof d);\n\ndeclare const _23 : (typeof c) | (typeof d);\n\nconst __0 = derive(\"x\", \"y\", _0);\nconst __1 = derive(\"x\", \"y\", _1);\nconst __2 = derive(\"x\", \"y\", _2);\nconst __3 = derive(\"x\", \"y\", _3);\n\nconst __01 = derive(\"x\", \"y\", _01);\nconst __02 = derive(\"x\", \"y\", _02);\nconst __03 = derive(\"x\", \"y\", _03);\n\nconst __12 = derive(\"x\", \"y\", _12);\nconst __13 = derive(\"x\", \"y\", _13);\n\nconst __23 = derive(\"x\", \"y\", _23);\n*/ \n//# sourceMappingURL=derive.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./derive-map\"));\n__export(require(\"./derive\"));\n__export(require(\"./to-empty-object\"));\n__export(require(\"./instance-of-object\"));\n__export(require(\"./instance-of\"));\n__export(require(\"./object-from-array\"));\n__export(require(\"./object-from-map\"));\n__export(require(\"./object\"));\n__export(require(\"./partial-derive-map\"));\n__export(require(\"./partial-object-from-array\"));\n__export(require(\"./partial-object-from-map\"));\n__export(require(\"./partial-object\"));\n__export(require(\"./partial-rename-map\"));\n__export(require(\"./pojo\"));\n__export(require(\"./rename-map\"));\n__export(require(\"./rename\"));\n__export(require(\"./string-indexer\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_util_1 = require(\"../../type-util\");\nvar error_util_1 = require(\"../../error-util\");\n/**\n    If you pass in a bigint object created by\n    a polyfill, it will be rejected,\n    even though it is technically an instance of `Object`.\n*/\nfunction instanceOfObject() {\n    return function (name, mixed) {\n        if (type_util_1.isInstanceOf(mixed, Object)) {\n            return mixed;\n        }\n        else {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be instance of Object; received \" + type_util_1.toTypeStr(mixed),\n                inputName: name,\n                actualValue: mixed,\n                expected: \"Object\",\n            });\n        }\n    };\n}\nexports.instanceOfObject = instanceOfObject;\n//# sourceMappingURL=instance-of-object.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_util_1 = require(\"../../type-util\");\nvar error_util_1 = require(\"../../error-util\");\n/**\n    If you pass in a bigint object created by\n    a polyfill, it will never pass any `instanceof` checks,\n    even though the polyfill could be done with an object.\n*/\nfunction instanceOf(ctor) {\n    if (!type_util_1.allowsInstanceOf(ctor)) {\n        throw new Error(\"instanceof check not allowed on \" + type_util_1.getCtorName(ctor));\n    }\n    var ctorName = type_util_1.getCtorName(ctor);\n    return function (name, mixed) {\n        if (type_util_1.isInstanceOf(mixed, ctor)) {\n            return mixed;\n        }\n        else {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be instance of \" + ctorName + \"; received \" + type_util_1.toTypeStr(mixed),\n                inputName: name,\n                actualValue: mixed,\n                expected: ctorName,\n                expectedMeta: {\n                    ctor: ctor,\n                },\n            });\n        }\n    };\n}\nexports.instanceOf = instanceOf;\n//# sourceMappingURL=instance-of.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mapper_1 = require(\"../../mapper\");\nvar operator_1 = require(\"../operator\");\nvar object_from_map_1 = require(\"./object-from-map\");\nvar to_empty_object_1 = require(\"./to-empty-object\");\n/**\n    This,\n    ```ts\n    objectFromArray(\n        withName(unsignedInteger(), \"foo\"),\n        withName(string(), \"foo\")\n    );\n    ```\n\n    Is the same as,\n    ```ts\n    objectFromArray(\n        withName(or(\n            unsignedInteger(),\n            string()\n        ), \"foo\")\n    );\n    ```\n*/\nfunction objectFromArray() {\n    var arr = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arr[_i] = arguments[_i];\n    }\n    if (arr.length == 0) {\n        return to_empty_object_1.toEmptyObject();\n    }\n    var groupedByName = {};\n    for (var _a = 0, arr_1 = arr; _a < arr_1.length; _a++) {\n        var f = arr_1[_a];\n        var name = mapper_1.getNameOrEmptyString(f);\n        var mappers = groupedByName[name];\n        if (mappers == undefined) {\n            mappers = [];\n            groupedByName[name] = mappers;\n        }\n        mappers.push(f);\n    }\n    var map = {};\n    for (var k in groupedByName) {\n        var mappers = groupedByName[k];\n        if (mappers == undefined) {\n            continue;\n        }\n        map[k] = (mappers.length == 1) ?\n            mappers[0] : operator_1.unsafeOr.apply(void 0, mappers);\n    }\n    return object_from_map_1.objectFromMap(map);\n}\nexports.objectFromArray = objectFromArray;\n//# sourceMappingURL=object-from-array.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mapper_1 = require(\"../../mapper\");\nvar instance_of_object_1 = require(\"./instance-of-object\");\nvar operator_1 = require(\"../operator\");\nvar to_empty_object_1 = require(\"./to-empty-object\");\nvar string_util_1 = require(\"../../string-util\");\nvar error_util_1 = require(\"../../error-util\");\n/**\n    Always returns a new object.\n\n    If the input contains additional fields not part\n    of the map, they will not be in the new object.\n*/\nfunction objectFromMap(map) {\n    var keys = Object.keys(map);\n    if (keys.length == 0) {\n        return to_empty_object_1.toEmptyObject();\n    }\n    var runTimeRequiredDict = {};\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var k = keys_1[_i];\n        runTimeRequiredDict[k] = mapper_1.getRunTimeRequiredFlagOrFalse(map[k]);\n    }\n    return mapper_1.mapper(operator_1.pipe(instance_of_object_1.instanceOfObject(), function (name, mixed) {\n        var propertyErrors = [];\n        var result = {};\n        for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n            var k = keys_2[_i];\n            if (Object.prototype.hasOwnProperty.call(mixed, k) || runTimeRequiredDict[k] === false) {\n                var propertyResult = mapper_1.tryMapHandled(map[k], \"\" + name + string_util_1.toPropertyAccess(k), mixed[k]);\n                if (propertyResult.success) {\n                    result[k] = propertyResult.value;\n                }\n                else {\n                    propertyErrors.push(propertyResult.mappingError);\n                }\n            }\n            else {\n                propertyErrors.push(error_util_1.makeMappingError({\n                    message: \"\" + name + string_util_1.toPropertyAccess(k) + \" must be explicitly set\",\n                    inputName: \"\" + name + string_util_1.toPropertyAccess(k),\n                    actualValue: undefined,\n                    expected: \"explicitly set\",\n                }));\n            }\n        }\n        if (propertyErrors.length == 0) {\n            return result;\n        }\n        else {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be valid object\",\n                inputName: name,\n                actualValue: mixed,\n                expected: \"valid object\",\n                propertyErrors: propertyErrors,\n            });\n        }\n    }));\n}\nexports.objectFromMap = objectFromMap;\n/*\nimport {optional, orUndefined} from \"../operator\";\nimport {unsignedInteger} from \"../number\";\n\nconst m = objectFromMap({\n    shouldBeOptional : optional(unsignedInteger()),\n    shouldNotBeOptional : orUndefined(unsignedInteger())\n});\nm.__expectedInput\nm.__mappableInput\n\n\ndeclare const map2 : {\n\n    [name : string] : SafeMapper<number>|SafeMapper<boolean>\n};\nconst m2 = objectFromMap(map2);\nm2.__expectedInput\nm2.__mappableInput\n\n\ndeclare const map3 : {\n    k : SafeMapper<number>|SafeMapper<boolean>,\n    l : SafeMapper<number>,\n};\nconst m3 = objectFromMap(map3);\nm3.__expectedInput\nm3.__mappableInput\n//*/ \n//# sourceMappingURL=object-from-map.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar object_from_map_1 = require(\"./object-from-map\");\nvar object_from_array_1 = require(\"./object-from-array\");\nfunction object() {\n    var arr = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arr[_i] = arguments[_i];\n    }\n    if (arr.length == 1 && !(arr[0] instanceof Function)) {\n        return object_from_map_1.objectFromMap(arr[0]);\n    }\n    else {\n        return object_from_array_1.objectFromArray.apply(void 0, arr);\n    }\n}\nexports.object = object;\n//# sourceMappingURL=object.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mapper_1 = require(\"../../mapper\");\nvar operator_1 = require(\"../operator\");\nvar derive_1 = require(\"./derive\");\nvar to_empty_object_1 = require(\"./to-empty-object\");\nfunction partialDeriveMap(map) {\n    var arr = [];\n    for (var k in map) {\n        if (!map.hasOwnProperty(k)) {\n            continue;\n        }\n        var f = map[k];\n        arr.push(derive_1.derive(k, mapper_1.getNameOrEmptyString(f), operator_1.optional(f)));\n    }\n    if (arr.length == 0) {\n        return to_empty_object_1.toEmptyObject();\n    }\n    return operator_1.unsafeDeepMerge.apply(void 0, arr);\n}\nexports.partialDeriveMap = partialDeriveMap;\n//# sourceMappingURL=partial-derive-map.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mapper_1 = require(\"../../mapper\");\nvar operator_1 = require(\"../operator\");\nvar to_empty_object_1 = require(\"./to-empty-object\");\nvar partial_object_from_map_1 = require(\"./partial-object-from-map\");\n/**\n    This,\n    ```ts\n    objectFromArray(\n        withName(unsignedInteger(), \"foo\"),\n        withName(string(), \"foo\")\n    );\n    ```\n\n    Is the same as,\n    ```ts\n    objectFromArray(\n        withName(or(\n            unsignedInteger(),\n            string()\n        ), \"foo\")\n    );\n    ```\n*/\nfunction partialObjectFromArray() {\n    var arr = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arr[_i] = arguments[_i];\n    }\n    if (arr.length == 0) {\n        return to_empty_object_1.toEmptyObject();\n    }\n    var groupedByName = {};\n    for (var _a = 0, arr_1 = arr; _a < arr_1.length; _a++) {\n        var f = arr_1[_a];\n        var name = mapper_1.getNameOrEmptyString(f);\n        var mappers = groupedByName[name];\n        if (mappers == undefined) {\n            mappers = [];\n            groupedByName[name] = mappers;\n        }\n        mappers.push(f);\n    }\n    var map = {};\n    for (var k in groupedByName) {\n        var mappers = groupedByName[k];\n        if (mappers == undefined) {\n            continue;\n        }\n        map[k] = (mappers.length == 1) ?\n            mappers[0] : operator_1.unsafeOr.apply(void 0, mappers);\n    }\n    return partial_object_from_map_1.partialObjectFromMap(map);\n}\nexports.partialObjectFromArray = partialObjectFromArray;\n//# sourceMappingURL=partial-object-from-array.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mapper_1 = require(\"../../mapper\");\nvar instance_of_object_1 = require(\"./instance-of-object\");\nvar operator_1 = require(\"../operator\");\nvar to_empty_object_1 = require(\"./to-empty-object\");\n/**\n    Always returns a new object.\n\n    If the input contains additional fields not part\n    of the map, they will not be in the new object.\n\n    -----\n\n    All input fields are optional.\n    All output fields may be undefined.\n*/\nfunction partialObjectFromMap(map) {\n    var keys = Object.keys(map);\n    if (keys.length == 0) {\n        return to_empty_object_1.toEmptyObject();\n    }\n    var partialMap = {};\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var k = keys_1[_i];\n        partialMap[k] = operator_1.optional(map[k]);\n    }\n    return mapper_1.mapper(operator_1.pipe(instance_of_object_1.instanceOfObject(), function (name, mixed) {\n        var result = {};\n        for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n            var k = keys_2[_i];\n            result[k] = partialMap[k](name + \".\" + k, mixed[k]);\n        }\n        return result;\n    }));\n}\nexports.partialObjectFromMap = partialObjectFromMap;\n//# sourceMappingURL=partial-object-from-map.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar partial_object_from_map_1 = require(\"./partial-object-from-map\");\nvar partial_object_from_array_1 = require(\"./partial-object-from-array\");\nfunction partialObject() {\n    var arr = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arr[_i] = arguments[_i];\n    }\n    if (arr.length == 1 && !(arr[0] instanceof Function)) {\n        return partial_object_from_map_1.partialObjectFromMap(arr[0]);\n    }\n    else {\n        return partial_object_from_array_1.partialObjectFromArray.apply(void 0, arr);\n    }\n}\nexports.partialObject = partialObject;\n//# sourceMappingURL=partial-object.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mapper_1 = require(\"../../mapper\");\nvar operator_1 = require(\"../operator\");\nvar rename_1 = require(\"./rename\");\nvar to_empty_object_1 = require(\"./to-empty-object\");\nfunction partialRenameMap(map) {\n    var arr = [];\n    for (var k in map) {\n        if (!map.hasOwnProperty(k)) {\n            continue;\n        }\n        var f = map[k];\n        arr.push(rename_1.rename(k, mapper_1.getNameOrEmptyString(f), operator_1.optional(f)));\n    }\n    if (arr.length == 0) {\n        return to_empty_object_1.toEmptyObject();\n    }\n    return operator_1.unsafeDeepMerge.apply(void 0, arr);\n}\nexports.partialRenameMap = partialRenameMap;\n//# sourceMappingURL=partial-rename-map.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_util_1 = require(\"../../type-util\");\nvar error_util_1 = require(\"../../error-util\");\n/**\n * Abbreviation for \"Plain old JavasScript object\".\n *\n * Meaning, an Object that isn't,\n *\n * + Date\n * + Array\n * + Function\n * + An instance of some other class\n */\nfunction pojo() {\n    return function (name, mixed) {\n        if (!type_util_1.isPojo(mixed)) {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be plain old JavaScript object; received \" + type_util_1.toTypeStr(mixed),\n                inputName: name,\n                actualValue: mixed,\n                expected: \"plain old JavaScript object\",\n            });\n        }\n        return mixed;\n    };\n}\nexports.pojo = pojo;\n//# sourceMappingURL=pojo.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mapper_1 = require(\"../../mapper\");\nvar operator_1 = require(\"../operator\");\nvar rename_1 = require(\"./rename\");\nvar to_empty_object_1 = require(\"./to-empty-object\");\nfunction renameMap(map) {\n    var arr = [];\n    for (var k in map) {\n        if (!map.hasOwnProperty(k)) {\n            continue;\n        }\n        var f = map[k];\n        arr.push(rename_1.rename(k, mapper_1.getNameOrEmptyString(f), f));\n    }\n    if (arr.length == 0) {\n        return to_empty_object_1.toEmptyObject();\n    }\n    return operator_1.unsafeDeepMerge.apply(void 0, arr);\n}\nexports.renameMap = renameMap;\n//# sourceMappingURL=rename-map.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mapper_1 = require(\"../../mapper\");\nvar operator_1 = require(\"../operator\");\nvar instance_of_object_1 = require(\"./instance-of-object\");\nvar string_util_1 = require(\"../../string-util\");\nvar error_util_1 = require(\"../../error-util\");\nfunction rename(srcKey, dstKey, f) {\n    var runTimeRequired = mapper_1.getRunTimeRequiredFlagOrFalse(f);\n    var result = operator_1.pipe(instance_of_object_1.instanceOfObject(), function (name, mixed) {\n        var _a;\n        var unsafeKey = \"\";\n        var unsafeName = \"\";\n        var unsafeValue = undefined;\n        if (Object.prototype.hasOwnProperty.call(mixed, dstKey)) {\n            unsafeKey = dstKey;\n            unsafeName = \"\" + name + string_util_1.toPropertyAccess(dstKey);\n            unsafeValue = mixed[dstKey];\n        }\n        else if (Object.prototype.hasOwnProperty.call(mixed, srcKey)) {\n            unsafeKey = srcKey;\n            unsafeName = \"\" + name + string_util_1.toPropertyAccess(srcKey);\n            unsafeValue = mixed[srcKey];\n        }\n        else if (runTimeRequired) {\n            var expected = \"object with explicitly set property \" + JSON.stringify(dstKey);\n            throw error_util_1.makeMappingError({\n                message: name + \" must be \" + expected,\n                inputName: name,\n                actualValue: mixed,\n                expected: expected,\n                expectedMeta: {\n                    srcKey: srcKey,\n                    dstKey: dstKey,\n                },\n                propertyErrors: [\n                    error_util_1.makeMappingError({\n                        message: \"\" + name + string_util_1.toPropertyAccess(dstKey) + \" must be explicitly set\",\n                        inputName: \"\" + name + string_util_1.toPropertyAccess(dstKey),\n                        actualValue: undefined,\n                        expected: \"explicitly set\",\n                    }),\n                ],\n            });\n        }\n        else {\n            unsafeKey = dstKey;\n            unsafeName = \"\" + name + string_util_1.toPropertyAccess(dstKey);\n            unsafeValue = undefined;\n        }\n        var dstResult = mapper_1.tryMapHandled(f, unsafeName, unsafeValue);\n        if (dstResult.success) {\n            var obj = (_a = {},\n                _a[dstKey] = dstResult.value,\n                _a);\n            return obj;\n        }\n        if (dstResult.mappingError.expected == undefined) {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be valid object. \" + dstResult.mappingError.message,\n                inputName: name,\n                actualValue: mixed,\n                expected: \"valid object\",\n                expectedMeta: {\n                    srcKey: srcKey,\n                    dstKey: dstKey,\n                },\n                propertyErrors: [\n                    dstResult.mappingError,\n                ],\n            });\n        }\n        else {\n            var expected = \"object with \" + dstResult.mappingError.expected + \" property \" + JSON.stringify(unsafeKey);\n            throw error_util_1.makeMappingError({\n                message: name + \" must be \" + expected,\n                inputName: name,\n                actualValue: mixed,\n                expected: expected,\n                expectedMeta: {\n                    srcKey: srcKey,\n                    dstKey: dstKey,\n                },\n                propertyErrors: [\n                    dstResult.mappingError,\n                ],\n            });\n        }\n    });\n    return mapper_1.copyRunTimeModifier(f, result);\n}\nexports.rename = rename;\n/*\nconst a = unsignedInteger();\nconst b = optional(unsignedInteger());\nconst c = string();\nconst d = optional(string());\n\ndeclare const _0 : typeof a;\ndeclare const _1 : typeof b;\ndeclare const _2 : typeof c;\ndeclare const _3 : typeof d;\n\ndeclare const _01 : (typeof a) | (typeof b);\ndeclare const _02 : (typeof a) | (typeof c);\ndeclare const _03 : (typeof a) | (typeof d);\n\ndeclare const _12 : (typeof b) | (typeof c);\ndeclare const _13 : (typeof b) | (typeof d);\n\ndeclare const _23 : (typeof c) | (typeof d);\n\nconst __0 = rename(\"x\", \"y\", _0);\nconst __1 = rename(\"x\", \"y\", _1);\nconst __2 = rename(\"x\", \"y\", _2);\nconst __3 = rename(\"x\", \"y\", _3);\n\nconst __01 = rename(\"x\", \"y\", _01);\nconst __02 = rename(\"x\", \"y\", _02);\nconst __03 = rename(\"x\", \"y\", _03);\n\nconst __12 = rename(\"x\", \"y\", _12);\nconst __13 = rename(\"x\", \"y\", _13);\n\nconst __23 = rename(\"x\", \"y\", _23);\n*/ \n//# sourceMappingURL=rename.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mapper_1 = require(\"../../mapper\");\nvar operator_1 = require(\"../operator\");\nvar instance_of_object_1 = require(\"./instance-of-object\");\nvar string_util_1 = require(\"../../string-util\");\nvar error_util_1 = require(\"../../error-util\");\nfunction unsafeStringIndexer(f) {\n    var result = operator_1.pipe(instance_of_object_1.instanceOfObject(), function (name, obj) {\n        var propertyErrors = [];\n        var result = {};\n        for (var k in obj) {\n            if (!Object.prototype.hasOwnProperty.call(obj, k)) {\n                continue;\n            }\n            var propertyResult = mapper_1.tryMapHandled(f, \"\" + name + string_util_1.toPropertyAccess(k), obj[k]);\n            if (propertyResult.success) {\n                result[k] = propertyResult.value;\n            }\n            else {\n                propertyErrors.push(propertyResult.mappingError);\n            }\n        }\n        if (propertyErrors.length == 0) {\n            return result;\n        }\n        else {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be valid object\",\n                inputName: name,\n                actualValue: obj,\n                expected: \"valid object\",\n                propertyErrors: propertyErrors,\n            });\n        }\n    });\n    return mapper_1.copyRunTimeModifier(f, result);\n}\nexports.unsafeStringIndexer = unsafeStringIndexer;\nfunction stringIndexer(f) {\n    var fOrUndefined = operator_1.orUndefined(f);\n    var result = operator_1.pipe(instance_of_object_1.instanceOfObject(), function (name, obj) {\n        var propertyErrors = [];\n        var result = {};\n        for (var k in obj) {\n            if (!Object.prototype.hasOwnProperty.call(obj, k)) {\n                continue;\n            }\n            var propertyResult = mapper_1.tryMapHandled(fOrUndefined, \"\" + name + string_util_1.toPropertyAccess(k), obj[k]);\n            if (propertyResult.success) {\n                result[k] = propertyResult.value;\n            }\n            else {\n                propertyErrors.push(propertyResult.mappingError);\n            }\n        }\n        if (propertyErrors.length == 0) {\n            return result;\n        }\n        else {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be valid object\",\n                inputName: name,\n                actualValue: obj,\n                expected: \"valid object\",\n                propertyErrors: propertyErrors,\n            });\n        }\n    });\n    return mapper_1.copyRunTimeModifier(f, result);\n}\nexports.stringIndexer = stringIndexer;\n//# sourceMappingURL=string-indexer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n    Always returns a new empty object.\n    Basically, converts *everything* into an empty object.\n*/\nfunction toEmptyObject() {\n    return function () {\n        return {};\n    };\n}\nexports.toEmptyObject = toEmptyObject;\n//# sourceMappingURL=to-empty-object.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operation_1 = require(\"../../mapper/operation\");\nfunction cache(cached, f) {\n    var result = operation_1.copyRunTimeModifier(f, function (name, mixed) {\n        return f(name, mixed, cached);\n    });\n    //https://github.com/microsoft/TypeScript/issues/31602\n    return result;\n}\nexports.cache = cache;\n//# sourceMappingURL=cache.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mapper_1 = require(\"../../mapper\");\nvar error_util_1 = require(\"../../error-util\");\nfunction cast(srcMapper, castDelegate, dstMapper) {\n    var result = mapper_1.copyRunTimeModifier(srcMapper, function (name, mixed) {\n        var alreadyDstResult = mapper_1.tryMapHandled(dstMapper, name, mixed);\n        if (alreadyDstResult.success) {\n            //If this works, we are already the desired data type\n            return alreadyDstResult.value;\n        }\n        var cannotCastPrefix = (alreadyDstResult.mappingError.expected == undefined) ?\n            \"Cannot cast \" + name + \";\" :\n            \"Cannot cast \" + name + \" to \" + alreadyDstResult.mappingError.expected + \";\";\n        //Failed. We need to cast.\n        var mapSrcResult = mapper_1.tryMapHandled(srcMapper, name, mixed);\n        if (!mapSrcResult.success) {\n            throw error_util_1.makeMappingError({\n                message: cannotCastPrefix + \" \" + mapSrcResult.mappingError.message,\n                inputName: name,\n                actualValue: mixed,\n                expected: (mapSrcResult.mappingError.expected == alreadyDstResult.mappingError.expected ?\n                    mapSrcResult.mappingError.expected :\n                    \"(\" + alreadyDstResult.mappingError.expected + \") or (\" + mapSrcResult.mappingError.expected + \")\"),\n                expectedMeta: {\n                    mappableValues: ((alreadyDstResult.mappingError.expectedMeta == undefined ||\n                        alreadyDstResult.mappingError.expectedMeta.mappableValues == undefined ||\n                        mapSrcResult.mappingError.expectedMeta == undefined ||\n                        mapSrcResult.mappingError.expectedMeta.mappableValues == undefined) ?\n                        undefined : alreadyDstResult.mappingError.expectedMeta.mappableValues.concat(mapSrcResult.mappingError.expectedMeta.mappableValues)),\n                    outputValues: ((alreadyDstResult.mappingError.expectedMeta == undefined ||\n                        alreadyDstResult.mappingError.expectedMeta.outputValues == undefined) ?\n                        undefined : alreadyDstResult.mappingError.expectedMeta.outputValues.slice()),\n                },\n                unionErrors: [\n                    alreadyDstResult.mappingError,\n                    mapSrcResult.mappingError,\n                ],\n            });\n        }\n        var dst = undefined;\n        try {\n            dst = castDelegate(mapSrcResult.value);\n        }\n        catch (castErr) {\n            /**\n             * In general, this should never happen.\n             * If we're here, that means the `castDelegate` or `srcMapper` isn't working right.\n             */\n            throw error_util_1.makeMappingError({\n                message: cannotCastPrefix + \" \" + castErr.message,\n                inputName: name,\n                actualValue: mapSrcResult.value,\n                /**\n                 * Since it seems like the `castDelegate` or `srcMapper` isn't working right,\n                 * we should only expect whatever the `dstMapper` expects.\n                 */\n                expected: alreadyDstResult.mappingError.expected,\n                stack: castErr.stack,\n            });\n        }\n        var mapDstResult = mapper_1.tryMapHandled(dstMapper, name, dst);\n        if (mapDstResult.success) {\n            return mapDstResult.value;\n        }\n        else {\n            /**\n             * In general, this should never happen.\n             * If we're here, that means the `castDelegate` or `srcMapper` isn't working right.\n             */\n            throw error_util_1.makeMappingError({\n                message: cannotCastPrefix + \" \" + mapDstResult.mappingError.message,\n                inputName: name,\n                actualValue: dst,\n                /**\n                 * Since it seems like the `castDelegate` or `srcMapper` isn't working right,\n                 * we should only expect whatever the `dstMapper` expects.\n                 */\n                expected: mapDstResult.mappingError.expected,\n                unionErrors: [\n                    alreadyDstResult.mappingError,\n                    mapDstResult.mappingError,\n                ],\n            });\n        }\n    });\n    return result;\n}\nexports.cast = cast;\n//# sourceMappingURL=cast.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mapper_1 = require(\"../../mapper\");\nvar TypeUtil = require(\"../../type-util\");\nvar error_util_1 = require(\"../../error-util\");\nvar array_util_1 = require(\"../../array-util\");\nvar string_util_1 = require(\"../../string-util\");\nfunction unsafeDeepMerge() {\n    var arr = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arr[_i] = arguments[_i];\n    }\n    if (arr.length == 0) {\n        throw new Error(\"Cannot deep merge zero mappers\");\n    }\n    if (arr.length == 1) {\n        return arr[0];\n    }\n    var mapper = function (name, mixed) {\n        var intersectionErrors = [];\n        var values = [];\n        for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n            var f = arr_1[_i];\n            var elementResult = mapper_1.tryMapHandled(f, name, mixed);\n            if (elementResult.success) {\n                values.push(elementResult.value);\n            }\n            else {\n                intersectionErrors.push(elementResult.mappingError);\n            }\n        }\n        if (intersectionErrors.length == 1) {\n            throw intersectionErrors[0];\n        }\n        if (intersectionErrors.length > 1) {\n            var errorMessages = array_util_1.removeDuplicateElements(intersectionErrors\n                .map(function (e) { return error_util_1.indentErrorMessage(e.message); }));\n            var expectedElements = array_util_1.removeDuplicateElements(intersectionErrors\n                .map(function (e) { return e.expected; })\n                .filter(function (i) { return typeof i == \"string\"; }));\n            throw error_util_1.makeMappingError({\n                message: name + \" is invalid.\\n+ \" + errorMessages.join(\"\\n+ \"),\n                inputName: name,\n                actualValue: mixed,\n                expected: ((expectedElements.length == 0) ?\n                    undefined :\n                    (expectedElements.length == 1) ?\n                        expectedElements[0] :\n                        expectedElements\n                            .map(function (str) { return \"(\" + str + \")\"; })\n                            .join(\" and \")),\n                intersectionErrors: intersectionErrors,\n            });\n        }\n        var deepMergeResult = TypeUtil.tryDeepMerge.apply(TypeUtil, values);\n        if (deepMergeResult.success) {\n            return deepMergeResult.value;\n        }\n        else {\n            /**\n             * In general, this should not happen.\n             * If we are here, our mappers may be doing something suspicious.\n             */\n            /**\n             * If `path.length == 0`,\n             * then it's a top-level value that failed to merge\n             */\n            if (deepMergeResult.path == undefined) {\n                console.log(deepMergeResult);\n            }\n            if (deepMergeResult.path.length == 0) {\n                throw error_util_1.makeMappingError({\n                    message: name + \" is invalid; \" + deepMergeResult.message,\n                    inputName: name,\n                    actualValue: deepMergeResult.actualValue,\n                    expected: deepMergeResult.expected,\n                });\n            }\n            else {\n                throw error_util_1.makeMappingError({\n                    message: name + \" is invalid; \" + deepMergeResult.message,\n                    inputName: name,\n                    actualValue: deepMergeResult.bRoot,\n                    expected: deepMergeResult.path.reduceRight(function (memo, part) {\n                        return \"{ \" + JSON.stringify(part) + \" : \" + memo + \" }\";\n                    }, deepMergeResult.expected),\n                    propertyErrors: [\n                        error_util_1.makeMappingError({\n                            message: deepMergeResult.message,\n                            inputName: deepMergeResult.path.reduce(function (memo, part) {\n                                return memo + string_util_1.toPropertyAccess(part);\n                            }, name),\n                            actualValue: deepMergeResult.actualValue,\n                            expected: deepMergeResult.expected,\n                        }),\n                    ],\n                });\n            }\n        }\n    };\n    return mapper_1.copyRunTimeModifier(arr[0], mapper);\n}\nexports.unsafeDeepMerge = unsafeDeepMerge;\nfunction deepMerge(f) {\n    var arr = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        arr[_i - 1] = arguments[_i];\n    }\n    return unsafeDeepMerge.apply(void 0, [f].concat(arr));\n}\nexports.deepMerge = deepMerge;\n/*\nimport {length} from \"../array-like\";\nimport {string} from \"../string\";\nconst dm = deepMerge(\n    (null as unknown as (() => { x : \"test\" }) & ExpectedInput<{ foo : string }> & MappableInput<{ foo? : string|Buffer }>),\n    () : { x : 1 } => (null as any),\n    () : { y : true } => (null as any),\n    () : { y? : true } => (null as any),\n    (null as unknown as (() => { z : Date }) & MappableInput<{ foo? : Buffer }>),\n);\ndm(\"\", \"\").y\n\n//*\nconst dm2 = deepMerge(\n    (null as unknown as (() => number) & ExpectedInput<{ foo : string }> & MappableInput<string>),\n    (null as unknown as (() => string) & MappableInput<number>),\n);\nconst dm3 = deepMerge(\n    (null as unknown as (() => number) & ExpectedInput<{ foo : string }> & MappableInput<{ foo? : string|Buffer }>),\n    (null as unknown as (() => string)),\n    (null as unknown as (() => { x : \"test\" }) & ExpectedInput<{ foo : string }> & MappableInput<{ foo? : string|Buffer }>),\n);\n\nconst dm4 = deepMerge(\n    length({\n        min : 1\n    }),\n    string()\n)\n//*/ \n//# sourceMappingURL=deep-merge.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mapper_1 = require(\"../../mapper\");\nvar error_util_1 = require(\"../../error-util\");\nvar operator_1 = require(\"../operator\");\nvar string_util_1 = require(\"../../string-util\");\nfunction unsafeDiscriminatedUnion(discriminantK) {\n    var arr = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        arr[_i - 1] = arguments[_i];\n    }\n    if (arr.length == 0) {\n        throw new Error(\"Cannot call unsafeDiscriminatedUnion() on zero mappers\");\n    }\n    var orDelegate = operator_1.unsafeOr.apply(void 0, arr);\n    var result = function (name, mixed) {\n        var mapResult = mapper_1.tryMapHandled(orDelegate, name, mixed);\n        if (mapResult.success) {\n            return mapResult.value;\n        }\n        else {\n            var unionErrors = mapResult.mappingError.unionErrors;\n            if (unionErrors == undefined) {\n                throw mapResult.mappingError;\n            }\n            var discriminantInputName_1 = \"\" + name + string_util_1.toPropertyAccess(discriminantK);\n            var discriminantErrors = unionErrors\n                .map(function (unionError) {\n                return error_util_1.tryGetPropertyError(unionError, discriminantInputName_1);\n            })\n                .filter(function (propertyError) {\n                return propertyError != undefined;\n            });\n            if (discriminantErrors.length != unionErrors.length) {\n                var nonDiscriminantErrors = unionErrors\n                    .map(function (unionError) {\n                    return (error_util_1.tryGetPropertyError(unionError, discriminantInputName_1) == undefined) ?\n                        //This error is not because of the discriminant\n                        unionError :\n                        undefined;\n                })\n                    .filter(function (unionError) {\n                    return unionError != undefined;\n                });\n                throw error_util_1.makeNormalizedUnionError(name, mixed, nonDiscriminantErrors);\n            }\n            var expectedDiscriminators = discriminantErrors.map(function (err) { return err.expected; }).join(\"|\");\n            throw error_util_1.makeMappingError({\n                message: name + \" must be object with \" + expectedDiscriminators + \" property \" + JSON.stringify(discriminantK),\n                inputName: name,\n                actualValue: mixed,\n                expected: \"object with \" + expectedDiscriminators + \" property \" + JSON.stringify(discriminantK),\n                expectedMeta: undefined,\n                propertyErrors: [\n                    error_util_1.makeNormalizedUnionError(discriminantInputName_1, (mixed == undefined ?\n                        undefined :\n                        mixed[discriminantK]), discriminantErrors),\n                ],\n            });\n        }\n    };\n    return result;\n}\nexports.unsafeDiscriminatedUnion = unsafeDiscriminatedUnion;\nfunction discriminatedUnion(discriminantK, f) {\n    var arr = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        arr[_i - 2] = arguments[_i];\n    }\n    return unsafeDiscriminatedUnion.apply(void 0, [discriminantK,\n        f].concat(arr));\n}\nexports.discriminatedUnion = discriminatedUnion;\n//# sourceMappingURL=discriminated-union.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mapper_1 = require(\"../../mapper\");\nvar type_util_1 = require(\"../../type-util\");\nvar error_util_1 = require(\"../../error-util\");\nvar array_util_1 = require(\"../../array-util\");\nfunction excludeLiteral(f) {\n    var arr = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        arr[_i - 1] = arguments[_i];\n    }\n    var literalStrArr = arr.map(function (value) { return type_util_1.toLiteralStr(value); });\n    return mapper_1.copyRunTimeModifier(f, function (name, mixed) {\n        var mapResult = mapper_1.tryMapHandled(f, name, mixed);\n        if (mapResult.success) {\n            var value = mapResult.value;\n            for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n                var item = arr_1[_i];\n                if (type_util_1.strictEqual(value, item)) {\n                    throw error_util_1.makeMappingError({\n                        message: name + \" must not be \" + type_util_1.toLiteralUnionStr(arr) + \"; received \" + type_util_1.toLiteralStr(item),\n                        inputName: name,\n                        actualValue: value,\n                        expected: \"not \" + type_util_1.toLiteralUnionStr(arr),\n                    });\n                }\n            }\n            return value;\n        }\n        var rawUnionErrors = mapResult.mappingError.unionErrors;\n        if (rawUnionErrors == undefined) {\n            throw mapResult.mappingError;\n        }\n        var unionErrors = rawUnionErrors.filter(function (err) { return (err.expected != undefined &&\n            literalStrArr.indexOf(err.expected) < 0); });\n        var rawExpectedArr = unionErrors\n            .map(function (e) { return e.expected; })\n            .filter(function (s) { return s != undefined; });\n        if (rawExpectedArr.length != unionErrors.length) {\n            throw mapResult.mappingError;\n        }\n        /**\n         * @todo Add checks for zero-length errors elsewhere in the code base, too\n         */\n        if (rawExpectedArr.length == 0) {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be never; received \" + type_util_1.toTypeStr(mixed),\n                inputName: name,\n                actualValue: mixed,\n                expected: \"never\",\n                unionErrors: unionErrors,\n            });\n        }\n        else if (rawExpectedArr.length == 1) {\n            var expected = rawExpectedArr[0];\n            throw error_util_1.makeMappingError({\n                message: name + \" must be \" + expected + \"; received \" + type_util_1.toTypeStr(mixed),\n                inputName: name,\n                actualValue: mixed,\n                expected: expected,\n                expectedMeta: {\n                    mappableValues: ((mapResult.mappingError.expectedMeta == undefined ||\n                        mapResult.mappingError.expectedMeta.mappableValues == undefined) ?\n                        undefined :\n                        mapResult.mappingError.expectedMeta.mappableValues.filter(function (mappableValue) { return !arr.some(function (i) { return type_util_1.strictEqual(i, mappableValue); }); })),\n                    outputValues: ((mapResult.mappingError.expectedMeta == undefined ||\n                        mapResult.mappingError.expectedMeta.outputValues == undefined) ?\n                        undefined :\n                        mapResult.mappingError.expectedMeta.outputValues.filter(function (outputValue) { return !arr.some(function (i) { return type_util_1.strictEqual(i, outputValue); }); })),\n                },\n            });\n        }\n        else {\n            var expected = array_util_1.removeDuplicateElements(rawExpectedArr)\n                .map(function (str) { return \"(\" + str + \")\"; })\n                .join(\" or \");\n            throw error_util_1.makeMappingError({\n                message: name + \" must be \" + expected + \"; received \" + type_util_1.toTypeStr(mixed),\n                inputName: name,\n                actualValue: mixed,\n                expected: expected,\n                expectedMeta: {\n                    mappableValues: ((mapResult.mappingError.expectedMeta == undefined ||\n                        mapResult.mappingError.expectedMeta.mappableValues == undefined) ?\n                        undefined :\n                        mapResult.mappingError.expectedMeta.mappableValues.filter(function (mappableValue) { return !arr.some(function (i) { return type_util_1.strictEqual(i, mappableValue); }); })),\n                    outputValues: ((mapResult.mappingError.expectedMeta == undefined ||\n                        mapResult.mappingError.expectedMeta.outputValues == undefined) ?\n                        undefined :\n                        mapResult.mappingError.expectedMeta.outputValues.filter(function (outputValue) { return !arr.some(function (i) { return type_util_1.strictEqual(i, outputValue); }); })),\n                },\n                unionErrors: unionErrors,\n            });\n        }\n    });\n}\nexports.excludeLiteral = excludeLiteral;\n//# sourceMappingURL=exclude-literal.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./cache\"));\n__export(require(\"./cast\"));\n__export(require(\"./deep-merge\"));\n__export(require(\"./discriminated-union\"));\n__export(require(\"./exclude-literal\"));\n__export(require(\"./missing-value\"));\n__export(require(\"./or\"));\n__export(require(\"./pipe\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mapper_1 = require(\"../../mapper\");\nvar or_1 = require(\"./or\");\nvar literal_1 = require(\"../literal\");\nvar exclude_literal_1 = require(\"./exclude-literal\");\nfunction orUndefined(f) {\n    return or_1.or(f, literal_1.literal(undefined));\n}\nexports.orUndefined = orUndefined;\nfunction orNull(f) {\n    return or_1.or(f, literal_1.literal(null));\n}\nexports.orNull = orNull;\nfunction orMaybe(f) {\n    return or_1.or(f, literal_1.literal(undefined), literal_1.literal(null));\n}\nexports.orMaybe = orMaybe;\nfunction notUndefined(f) {\n    return exclude_literal_1.excludeLiteral(f, undefined);\n}\nexports.notUndefined = notUndefined;\nfunction notNull(f) {\n    return exclude_literal_1.excludeLiteral(f, null);\n}\nexports.notNull = notNull;\nfunction notMaybe(assert) {\n    return exclude_literal_1.excludeLiteral(assert, undefined, null);\n}\nexports.notMaybe = notMaybe;\nfunction optional(f) {\n    var g = orUndefined(f);\n    g.__optional = true;\n    g.__runTimeRequired = false;\n    return g;\n}\nexports.optional = optional;\n;\nfunction notOptional(f) {\n    var g = notUndefined(f);\n    g.__optional = false;\n    return g;\n}\nexports.notOptional = notOptional;\n;\nfunction runTimeRequired(f) {\n    var g = function (name, mixed) {\n        return f(name, mixed);\n    };\n    g.__runTimeRequired = true;\n    g.__optional = false;\n    return mapper_1.copyName(f, g);\n}\nexports.runTimeRequired = runTimeRequired;\n;\nfunction notRunTimeRequired(f) {\n    var g = function (name, mixed) {\n        return f(name, mixed);\n    };\n    g.__runTimeRequired = false;\n    return mapper_1.copyName(f, mapper_1.copyOptional(f, g));\n}\nexports.notRunTimeRequired = notRunTimeRequired;\n;\n//# sourceMappingURL=missing-value.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mapper_1 = require(\"../../mapper\");\nvar error_util_1 = require(\"../../error-util\");\nfunction unsafeOr() {\n    var arr = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arr[_i] = arguments[_i];\n    }\n    if (arr.length == 0) {\n        throw new Error(\"Cannot call unsafeOr() on zero mappers\");\n    }\n    return mapper_1.copyRunTimeModifier(arr[0], function (name, mixed) {\n        var unionErrors = [];\n        for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n            var d = arr_1[_i];\n            var elementResult = mapper_1.tryMapHandled(d, name, mixed);\n            if (elementResult.success) {\n                return elementResult.value;\n            }\n            else {\n                unionErrors.push(elementResult.mappingError);\n            }\n        }\n        throw error_util_1.makeNormalizedUnionError(name, mixed, unionErrors);\n    });\n}\nexports.unsafeOr = unsafeOr;\nfunction or(f) {\n    var arr = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        arr[_i - 1] = arguments[_i];\n    }\n    return unsafeOr.apply(void 0, [f].concat(arr));\n}\nexports.or = or;\n/*\nor(\n    (null as unknown as ((() => 1) & ExpectedInput<number>)),\n    (null as unknown as ((() => 2) & ExpectedInput<string>)),\n    (null as unknown as ((() => 3) & ExpectedInput<boolean>))\n).__accepts\n*/ \n//# sourceMappingURL=or.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mapper_1 = require(\"../../mapper\");\nfunction pipeImpl() {\n    var arr = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arr[_i] = arguments[_i];\n    }\n    if (arr.length == 0) {\n        throw new Error(\"Cannot pipe zero mappers\");\n    }\n    return mapper_1.copyRunTimeModifier(arr[0], function (name, mixed) {\n        for (var i = 0; i < arr.length; ++i) {\n            var d = arr[i];\n            var elementResult = mapper_1.tryMapHandled(d, name, mixed);\n            if (elementResult.success) {\n                mixed = elementResult.value;\n            }\n            else {\n                throw elementResult.mappingError;\n            }\n        }\n        return mixed;\n    });\n}\n//Not the best...\n//export function pipe<ArrT extends AnyMapper[]> (...arr : ArrT) : SafeMapper<unknown>;\nfunction pipe() {\n    var arr = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arr[_i] = arguments[_i];\n    }\n    return pipeImpl.apply(void 0, arr);\n}\nexports.pipe = pipe;\nfunction unsafePipe(f) {\n    var arr = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        arr[_i - 1] = arguments[_i];\n    }\n    return pipeImpl.apply(void 0, [f].concat(arr));\n}\nexports.unsafePipe = unsafePipe;\nfunction reallyUnsafePipe() {\n    var arr = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arr[_i] = arguments[_i];\n    }\n    return pipeImpl.apply(void 0, arr);\n}\nexports.reallyUnsafePipe = reallyUnsafePipe;\n//# sourceMappingURL=pipe.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operator_1 = require(\"../operator\");\nvar number_1 = require(\"../number\");\nvar number_string_1 = require(\"./number-string\");\nvar type_util_1 = require(\"../../type-util\");\nvar error_util_1 = require(\"../../error-util\");\nfunction finiteNumberToFiniteNumberString() {\n    return operator_1.cast(number_1.finiteNumber(), function (num) { return num.toString(); }, number_string_1.finiteNumberString());\n}\nexports.finiteNumberToFiniteNumberString = finiteNumberToFiniteNumberString;\nfunction integerToIntegerString() {\n    return operator_1.cast(number_1.integer(), function (num) { return num.toString(); }, number_string_1.integerString());\n}\nexports.integerToIntegerString = integerToIntegerString;\nfunction unsignedIntegerToUnsignedIntegerString() {\n    return operator_1.cast(number_1.unsignedInteger(), function (num) { return num.toString(); }, number_string_1.unsignedIntegerString());\n}\nexports.unsignedIntegerToUnsignedIntegerString = unsignedIntegerToUnsignedIntegerString;\n/**\n    Calls either `JSON.stringify()` or `JSON.parse()` once.\n*/\nfunction jsonObjectToJsonObjectString() {\n    return function (name, mixed) {\n        if (typeof mixed == \"string\") {\n            if (!/^\\s*\\{/.test(mixed)) {\n                throw error_util_1.makeMappingError({\n                    message: name + \" must be JSON Object string\",\n                    inputName: name,\n                    actualValue: mixed,\n                    expected: \"JSON Object string\",\n                });\n            }\n            try {\n                JSON.parse(mixed);\n            }\n            catch (err) {\n                throw error_util_1.makeMappingError({\n                    message: name + \" must be valid JSON Object string; \" + err.message,\n                    inputName: name,\n                    actualValue: mixed,\n                    expected: \"valid JSON Object string\",\n                });\n            }\n            return mixed;\n        }\n        try {\n            var str = JSON.stringify(mixed);\n            if (typeof str == \"string\" && str[0] == \"{\") {\n                if (type_util_1.isBigIntNativelySupported() || !type_util_1.isBigInt(mixed)) {\n                    return str;\n                }\n            }\n            throw error_util_1.makeMappingError({\n                message: name + \" must be JSON Object; received \" + type_util_1.toTypeStr(mixed),\n                inputName: name,\n                actualValue: mixed,\n                expected: \"JSON Object\",\n            });\n        }\n        catch (err) {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be JSON Object; \" + err.message,\n                inputName: name,\n                actualValue: mixed,\n                expected: \"JSON Object\",\n            });\n        }\n    };\n}\nexports.jsonObjectToJsonObjectString = jsonObjectToJsonObjectString;\n//# sourceMappingURL=cast.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./cast\"));\n__export(require(\"./ip-address\"));\n__export(require(\"./ip-v4-mapped-ip-v6\"));\n__export(require(\"./ip-v4\"));\n__export(require(\"./ip-v6\"));\n__export(require(\"./number-string\"));\n__export(require(\"./string\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operator_1 = require(\"../operator\");\nvar ip_v4_1 = require(\"./ip-v4\");\nvar ip_v6_1 = require(\"./ip-v6\");\nvar ip_v4_mapped_ip_v6_1 = require(\"./ip-v4-mapped-ip-v6\");\nfunction ipAddressString() {\n    return operator_1.or(ip_v4_1.ipV4String(), ip_v6_1.ipV6String(), ip_v4_mapped_ip_v6_1.ipV4MappedIpV6String());\n}\nexports.ipAddressString = ipAddressString;\n//# sourceMappingURL=ip-address.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operator_1 = require(\"../operator\");\nvar string_1 = require(\"./string\");\nvar ip_v4_1 = require(\"./ip-v4\");\nvar ip_v6_1 = require(\"./ip-v6\");\nvar string_util_1 = require(\"../../string-util\");\nvar error_util_1 = require(\"../../error-util\");\nfunction ipV4MappedIpV6String() {\n    var ipV4StringDelegate = ip_v4_1.ipV4String();\n    var ipV6PartDelegate = ip_v6_1.ipV6StringWithMaxSegmentCount(6);\n    return operator_1.pipe(string_1.string(), function (name, str) {\n        var ipV4Start = str.lastIndexOf(\":\");\n        if (ipV4Start < 0) {\n            throw error_util_1.makeMappingError({\n                message: \"Expected \" + name + \" to have ':' symbol\",\n                inputName: name,\n                actualValue: str,\n                expected: \"IPv4-mapped IPv6 string with ':' symbol\",\n            });\n        }\n        var rawIpV4 = str.substr(ipV4Start + 1);\n        //Must have [1, 6] segments\n        //Note : If input ends with \"::\", rawIpV6 becomes \":\"\n        var rawIpV6 = str.substr(0, ipV4Start);\n        if (rawIpV6.length == 0) {\n            throw error_util_1.makeMappingError({\n                message: \"Expected \" + name + \" to have one to six IPv6 segments; found zero\",\n                inputName: name,\n                actualValue: str,\n                expected: \"IPv4-mapped IPv6 string with one to six IPv6 segments\",\n            });\n        }\n        var rawIpV6EndsWithDoubleColon = string_util_1.stringEndsWith(rawIpV6, \":\");\n        var ipV4 = ipV4StringDelegate(name + \".IPv4Part\", rawIpV4);\n        var ipV6 = ipV6PartDelegate(name + \".IPv6Part\", rawIpV6EndsWithDoubleColon ?\n            rawIpV6 + \":\" :\n            rawIpV6);\n        if (string_util_1.stringEndsWith(ipV6, \"::\")) {\n            return ipV6 + ipV4;\n        }\n        else if (string_util_1.stringEndsWith(ipV6, \":\")) {\n            return ipV6 + ipV4;\n        }\n        else {\n            return ipV6 + \":\" + ipV4;\n        }\n    });\n}\nexports.ipV4MappedIpV6String = ipV4MappedIpV6String;\n//# sourceMappingURL=ip-v4-mapped-ip-v6.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operator_1 = require(\"../operator\");\nvar number_1 = require(\"../number\");\nvar string_1 = require(\"./string\");\nvar error_util_1 = require(\"../../error-util\");\n/**\n    https://en.wikipedia.org/wiki/Dot-decimal_notation\n\n    An octet is 8-bits.\n    In decimal, an octet can represent [0, 255].\n\n    IPv4 strings are made of four octets (written in decimal),\n    each separated by a period.\n\n    Examples:\n\n    127.0.0.1\n    255.255.255.0\n    255.255.255.255\n*/\nfunction ipV4OctetString() {\n    return operator_1.pipe(number_1.stringToUnsignedInteger(), number_1.ltEq(255), function (_name, octet) {\n        return octet.toString();\n    });\n}\nexports.ipV4OctetString = ipV4OctetString;\nfunction ipV4String() {\n    var octetDelegate = ipV4OctetString();\n    return operator_1.pipe(string_1.string(), function (name, str) {\n        var rawOctets = str\n            .replace(/\\s+/g, \"\")\n            .split(\".\");\n        if (rawOctets.length != 4) {\n            throw error_util_1.makeMappingError({\n                message: name + \" must have four octets; found \" + rawOctets.length,\n                inputName: name,\n                actualValue: str,\n                expected: \"four IPv4 octets\",\n            });\n        }\n        return rawOctets\n            .map(function (rawOctet, i) { return octetDelegate(name + \".octet\" + i, rawOctet); })\n            .join(\".\");\n    });\n}\nexports.ipV4String = ipV4String;\n//# sourceMappingURL=ip-v4.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operator_1 = require(\"../operator\");\nvar string_1 = require(\"./string\");\nvar array_util_1 = require(\"../../array-util\");\nvar error_util_1 = require(\"../../error-util\");\n/**\n    == INPUT ==\n    https://tools.ietf.org/html/rfc4291#section-2.2\n\n    Each IPv6 segment is any hexadecimal value between\n    0 and ffff.\n\n    Each segment is one to four hexadecimal digits.\n\n    == OUTPUT ==\n    https://tools.ietf.org/html/rfc5952#section-4.1\n    Leading zeros MUST be suppressed.  For example, 2001:0db8::0001 is\n    not acceptable and must be represented as 2001:db8::1.  A single 16-\n    bit 0000 field MUST be represented as 0.\n\n    https://tools.ietf.org/html/rfc5952#section-4.3\n\n    The characters \"a\", \"b\", \"c\", \"d\", \"e\", and \"f\" in an IPv6 address\n    MUST be represented in lowercase.\n*/\nfunction ipV6SegmentString() {\n    return operator_1.pipe(string_1.stringLength({\n        min: 1,\n        max: 4,\n    }), string_1.hexadecimalString(), function (_name, str) {\n        if (/^0+$/.test(str)) {\n            return \"0\";\n        }\n        return str.toLowerCase()\n            .replace(/^0+/, \"\");\n    });\n}\nexports.ipV6SegmentString = ipV6SegmentString;\nfunction consecutiveZeroCount(segments, start) {\n    var count = 0;\n    while (segments[start] == \"0\") {\n        ++count;\n        ++start;\n    }\n    return count;\n}\nfunction largestConsecutiveZeroCount(segments) {\n    var largestStart = 0;\n    var largestCount = 0;\n    var curStart = 0;\n    while (curStart < segments.length) {\n        var curCount = consecutiveZeroCount(segments, curStart);\n        if (curCount > largestCount) {\n            largestStart = curStart;\n            largestCount = curCount;\n        }\n        ++curStart;\n    }\n    return {\n        start: largestStart,\n        count: largestCount,\n        before: segments.slice(0, largestStart),\n        after: segments.slice(largestStart + largestCount),\n    };\n}\n/**\n    https://tools.ietf.org/html/rfc5952#section-4.2.1\n\n    The use of the symbol \"::\" MUST be used to its maximum capability.\n    For example, 2001:db8:0:0:0:0:2:1 must be shortened to 2001:db8::2:1.\n    Likewise, 2001:db8::0:1 is not acceptable, because the symbol \"::\"\n    could have been used to produce a shorter representation 2001:db8::1.\n\n    https://tools.ietf.org/html/rfc5952#section-4.2.2\n\n    The symbol \"::\" MUST NOT be used to shorten just one 16-bit 0 field.\n    For example, the representation 2001:db8:0:1:1:1:1:1 is correct, but\n    2001:db8::1:1:1:1:1 is not correct.\n\n    https://tools.ietf.org/html/rfc5952#section-4.2.3\n\n    When there is an alternative choice in the placement of a \"::\", the\n    longest run of consecutive 16-bit 0 fields MUST be shortened (i.e.,\n    the sequence with three consecutive zero fields is shortened in 2001:\n    0:0:1:0:0:0:1).  When the length of the consecutive 16-bit 0 fields\n    are equal (i.e., 2001:db8:0:0:1:0:0:1), the first sequence of zero\n    bits MUST be shortened.  For example, 2001:db8::1:0:0:1 is correct\n    representation.\n*/\nfunction toIpV6CanonicalString(segments) {\n    var result = largestConsecutiveZeroCount(segments);\n    if (result.count <= 1) {\n        return segments.join(\":\");\n    }\n    else {\n        return (result.before.join(\":\") +\n            \"::\" +\n            result.after.join(\":\"));\n    }\n}\nfunction ipV6StringWithMaxSegmentCount(maxSegmentCount) {\n    var ipV6SegmentStringDelegate = ipV6SegmentString();\n    return operator_1.pipe(string_1.string(), function (name, str) {\n        var consecutiveNonZero = str\n            .replace(/\\s+/g, \"\")\n            .split(\"::\");\n        if (consecutiveNonZero.length == 1) {\n            //All non-zeroes\n            var rawSegments = consecutiveNonZero[0].split(\":\");\n            if (rawSegments.length != maxSegmentCount) {\n                throw error_util_1.makeMappingError({\n                    message: name + \" must have \" + maxSegmentCount + \" segments; found \" + rawSegments.length,\n                    inputName: name,\n                    actualValue: str,\n                    expected: maxSegmentCount + \" IPv6 segments\",\n                });\n            }\n            var segments = rawSegments\n                .map(function (rawSegment, i) { return ipV6SegmentStringDelegate(name + \" segment\" + i, rawSegment); });\n            return toIpV6CanonicalString(segments);\n        }\n        else if (consecutiveNonZero.length == 2) {\n            //E.g. ffff:ffff::ffff:ffff:ffff\n            var rawSegmentsA = consecutiveNonZero[0].split(\":\").filter(function (s) { return s != \"\"; });\n            var rawSegmentsB = consecutiveNonZero[1].split(\":\").filter(function (s) { return s != \"\"; });\n            var rawSegmentCount = rawSegmentsA.length + rawSegmentsB.length;\n            if (rawSegmentCount >= maxSegmentCount) {\n                throw error_util_1.makeMappingError({\n                    message: name + \" must have up to \" + (maxSegmentCount - 1) + \" segments when '::' symbol is used; found \" + rawSegmentCount,\n                    inputName: name,\n                    actualValue: str,\n                    expected: \"up to \" + (maxSegmentCount - 1) + \" IPv6 segments\",\n                });\n            }\n            var segmentsA = rawSegmentsA\n                .map(function (rawSegment, i) { return ipV6SegmentStringDelegate(name + \" segment\" + i, rawSegment); });\n            var segmentBStart_1 = maxSegmentCount - rawSegmentsB.length;\n            var segmentsB = rawSegmentsB\n                .map(function (rawSegment, i) { return ipV6SegmentStringDelegate(name + \" segment\" + (segmentBStart_1 + i), rawSegment); });\n            var zeroes = array_util_1.arrayFill(Array(maxSegmentCount - rawSegmentCount), \"0\");\n            return toIpV6CanonicalString(segmentsA\n                .concat(zeroes)\n                .concat(segmentsB));\n        }\n        else {\n            throw error_util_1.makeMappingError({\n                message: name + \" must have zero or one '::' symbol; found \" + (consecutiveNonZero.length - 1) + \" uses\",\n                inputName: name,\n                actualValue: str,\n                expected: \"IPv6 string with zero or one '::' symbol\",\n            });\n        }\n    });\n}\nexports.ipV6StringWithMaxSegmentCount = ipV6StringWithMaxSegmentCount;\nfunction ipV6String() {\n    return ipV6StringWithMaxSegmentCount(8);\n}\nexports.ipV6String = ipV6String;\n//# sourceMappingURL=ip-v6.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operator_1 = require(\"../operator\");\nvar number_1 = require(\"../number\");\nvar string_1 = require(\"./string\");\nvar error_util_1 = require(\"../../error-util\");\nvar FixedPointUtil = require(\"../../fixed-point-util\");\nvar FloatingPointUtil = require(\"../../floating-point-util\");\n/**\n    Just because a string is in floating point format does not mean\n    it is a finite number.\n\n    ```ts\n    const nines_80 = \"99999999999999999999999999999999999999999999999999999999999999999999999999999999\";\n    const nines_320 = nines_80.repeat(4);\n    //This will pass, 320 nines in a row is a valid floating point format\n    floatingPointFormatString()(\"\", nines_320);\n    //Infinity\n    parseFloat(nines_320);\n    ```\n\n    + This mapper will trim strings before checking.\n*/\nfunction floatingPointFormatString() {\n    return operator_1.pipe(string_1.toTrimmed(), string_1.match(FloatingPointUtil.floatingPointRegex, function (name) {\n        return {\n            message: name + \" must be valid floating point format string\",\n            expected: \"valid floating point format string\",\n        };\n    }));\n}\nexports.floatingPointFormatString = floatingPointFormatString;\n/**\n    Just because a string is in integer format does not mean\n    it is a finite number.\n\n    ```ts\n    const nines_80 = \"99999999999999999999999999999999999999999999999999999999999999999999999999999999\";\n    const nines_320 = nines_80.repeat(4);\n    //This will pass, 320 nines in a row is a valid integer format\n    integerFormatString()(\"\", nines_320);\n    //Infinity\n    parseFloat(nines_320);\n    ```\n\n    + This mapper will trim strings before checking.\n    + This mapper allows scientific notation.\n*/\nfunction integerFormatString() {\n    return operator_1.pipe(string_1.toTrimmed(), function (name, str) {\n        var parsed = FixedPointUtil.tryParse(str);\n        if (parsed == undefined || !parsed.isInteger) {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be a valid integer format string\",\n                inputName: name,\n                actualValue: str,\n                expected: \"valid integer format string\",\n            });\n        }\n        return str;\n    });\n}\nexports.integerFormatString = integerFormatString;\n/**\n    Just because a string is in unsigned number format does not mean\n    it is a finite number.\n\n    ```ts\n    const nines_80 = \"99999999999999999999999999999999999999999999999999999999999999999999999999999999\";\n    const nines_320 = nines_80.repeat(4);\n    //This will pass, 320 nines in a row is a valid unsigned number format\n    unsignedIntegerFormatString()(\"\", nines_320);\n    //Infinity\n    parseFloat(nines_320);\n    ```\n\n    + This mapper will trim strings before checking.\n    + This mapper allows scientific notation.\n*/\nfunction unsignedIntegerFormatString() {\n    return operator_1.pipe(string_1.toTrimmed(), function (name, str) {\n        var parsed = FixedPointUtil.tryParse(str);\n        if (parsed == undefined || !parsed.isInteger || parsed.isNegative) {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be a valid unsigned integer format string\",\n                inputName: name,\n                actualValue: str,\n                expected: \"valid unsigned integer format string\",\n            });\n        }\n        return str;\n    });\n}\nexports.unsignedIntegerFormatString = unsignedIntegerFormatString;\n/**\n    Uses `floatingPointFormatString()` and `parseFloat()` internally.\n\n    ```ts\n    //Output is 10000000000000000 due to loss in precision\n    finiteNumberString()(\"\", \"9999999999999999\");\n    ```\n*/\nfunction finiteNumberString() {\n    var finiteNumberDelegate = number_1.finiteNumber();\n    return operator_1.pipe(floatingPointFormatString(), function (name, str) {\n        return finiteNumberDelegate(\"parseFloat(\" + name + \")\", parseFloat(str)).toString();\n    });\n}\nexports.finiteNumberString = finiteNumberString;\n/**\n    Uses `integerFormatString()` and `parseFloat()` internally.\n\n    ```ts\n    //Output is 10000000000000000 due to loss in precision\n    integerString()(\"\", \"9999999999999999\");\n    ```\n*/\nfunction integerString() {\n    var integerDelegate = number_1.integer();\n    return operator_1.pipe(integerFormatString(), function (name, str) {\n        return integerDelegate(\"parseFloat(\" + name + \")\", parseFloat(str)).toString();\n    });\n}\nexports.integerString = integerString;\n/**\n    Uses `unsignedIntegerString()` and `parseFloat()` internally.\n\n    ```ts\n    //Output is 10000000000000000 due to loss in precision\n    integerString()(\"\", \"9999999999999999\");\n    ```\n*/\nfunction unsignedIntegerString() {\n    var unsignedIntegerDelegate = number_1.unsignedInteger();\n    return operator_1.pipe(unsignedIntegerFormatString(), function (name, str) {\n        return unsignedIntegerDelegate(\"parseFloat(\" + name + \")\", parseFloat(str)).toString();\n    });\n}\nexports.unsignedIntegerString = unsignedIntegerString;\n//# sourceMappingURL=number-string.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_util_1 = require(\"../../type-util\");\nvar operator_1 = require(\"../operator\");\nvar array_like_1 = require(\"../array-like\");\nvar string_util_1 = require(\"../../string-util\");\nvar error_util_1 = require(\"../../error-util\");\nfunction string() {\n    return function (name, mixed) {\n        if (typeof mixed != \"string\") {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be string; received \" + type_util_1.toTypeStr(mixed),\n                inputName: name,\n                actualValue: mixed,\n                expected: \"string\",\n            });\n        }\n        return mixed;\n    };\n}\nexports.string = string;\n/**\n    Calls `JSON.parse()` once.\n*/\nfunction jsonObjectString() {\n    return operator_1.pipe(string(), function (name, str) {\n        if (!/^\\s*\\{/.test(str)) {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be JSON Object string\",\n                inputName: name,\n                actualValue: str,\n                expected: \"JSON Object string\",\n            });\n        }\n        try {\n            JSON.parse(str);\n        }\n        catch (err) {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be valid JSON Object string; \" + err.message,\n                inputName: name,\n                actualValue: str,\n                expected: \"valid JSON Object string\",\n            });\n        }\n        return str;\n    });\n}\nexports.jsonObjectString = jsonObjectString;\nfunction stringLength(args) {\n    return operator_1.pipe(string(), array_like_1.length(args));\n}\nexports.stringLength = stringLength;\nfunction stringExactLength(length) {\n    return stringLength({\n        min: length,\n        max: length,\n    });\n}\nexports.stringExactLength = stringExactLength;\nfunction match(regex, errorDelegate) {\n    return operator_1.pipe(string(), function (name, mixed) {\n        if (regex.test(mixed)) {\n            return mixed;\n        }\n        else {\n            if (errorDelegate == undefined) {\n                throw error_util_1.makeMappingError({\n                    message: name + \" must match \" + regex.toString(),\n                    inputName: name,\n                    actualValue: mixed,\n                    expected: regex.toString(),\n                });\n            }\n            else {\n                var errResult = errorDelegate(name);\n                if (typeof errResult == \"string\") {\n                    throw error_util_1.makeMappingError({\n                        message: errResult,\n                        inputName: name,\n                        actualValue: mixed,\n                        expected: regex.toString(),\n                    });\n                }\n                else {\n                    throw error_util_1.makeMappingError({\n                        message: errResult.message,\n                        inputName: name,\n                        actualValue: mixed,\n                        expected: errResult.expected,\n                    });\n                }\n            }\n        }\n    });\n}\nexports.match = match;\nfunction notMatch(regex, errorDelegate) {\n    return operator_1.pipe(string(), function (name, mixed) {\n        if (regex.test(mixed)) {\n            if (errorDelegate == undefined) {\n                throw error_util_1.makeMappingError({\n                    message: name + \" must not match \" + regex.toString(),\n                    inputName: name,\n                    actualValue: mixed,\n                    expected: \"not \" + regex.toString(),\n                });\n            }\n            else {\n                var errResult = errorDelegate(name);\n                if (typeof errResult == \"string\") {\n                    throw error_util_1.makeMappingError({\n                        message: errResult,\n                        inputName: name,\n                        actualValue: mixed,\n                        expected: \"not \" + regex.toString(),\n                    });\n                }\n                else {\n                    throw error_util_1.makeMappingError({\n                        message: errResult.message,\n                        inputName: name,\n                        actualValue: mixed,\n                        expected: errResult.expected,\n                    });\n                }\n            }\n        }\n        else {\n            return mixed;\n        }\n    });\n}\nexports.notMatch = notMatch;\n/**\n *\n * Alias for `emailAddress()`\n *  @see {@link emailAddress}\n *\n * @deprecated\n */\nfunction email() {\n    return emailAddress();\n}\nexports.email = email;\n/**\n * Runs the regex `/^.+@.+$/` on the string.\n * Doesn't exactly follow a standard.\n *\n * You may roll your own email address validator,\n * but it's better to just send a confirmation\n * email to check the email address is valid.\n */\nfunction emailAddress() {\n    return match(/^.+@.+$/, function (name) {\n        return {\n            message: name + \" must be an email address\",\n            expected: \"email address\",\n        };\n    });\n}\nexports.emailAddress = emailAddress;\n/**\n * + Allows empty string.\n * + Allows digits 0-9.\n * + Allows uppercase A-F.\n * + Allows lowercase a-f.\n */\nfunction hexadecimalString() {\n    return match(/^[a-fA-F0-9]*$/, function (name) {\n        return {\n            message: name + \" must be a hexadecimal string\",\n            expected: \"hexadecimal string\",\n        };\n    });\n}\nexports.hexadecimalString = hexadecimalString;\nfunction toUpperCase() {\n    return operator_1.pipe(string(), function (_name, str) {\n        return str.toUpperCase();\n    });\n}\nexports.toUpperCase = toUpperCase;\nfunction toLowerCase() {\n    return operator_1.pipe(string(), function (_name, str) {\n        return str.toLowerCase();\n    });\n}\nexports.toLowerCase = toLowerCase;\n//The `char` must be a single character or an error is thrown\nfunction padLeft(minLength, char) {\n    if (char.length != 1) {\n        throw new Error(\"\\\"char\\\" must be one character; received \" + char);\n    }\n    return operator_1.pipe(string(), function (_name, str) {\n        if (str.length >= minLength) {\n            return str;\n        }\n        return string_util_1.stringRepeat(char, minLength - str.length) + str;\n    });\n}\nexports.padLeft = padLeft;\n//The `char` must be a single character or an error is thrown\nfunction padRight(minLength, char) {\n    if (char.length != 1) {\n        throw new Error(\"\\\"char\\\" must be one character; received \" + char);\n    }\n    return operator_1.pipe(string(), function (_name, str) {\n        if (str.length >= minLength) {\n            return str;\n        }\n        return str + string_util_1.stringRepeat(char, minLength - str.length);\n    });\n}\nexports.padRight = padRight;\nfunction subStringBlacklist(blacklist, configuration) {\n    if (configuration === void 0) { configuration = {}; }\n    //We do not mind === here.\n    var caseInsensitive = (configuration.caseInsensitive === true);\n    if (caseInsensitive) {\n        blacklist = blacklist.map(function (subString) { return subString.toLowerCase(); });\n    }\n    var blacklistStr = blacklist.map(function (s) { return type_util_1.toLiteralStr(s); }).join(\", \");\n    var expected = \"not \" + blacklistStr;\n    return operator_1.pipe(string(), function (name, original) {\n        var str = caseInsensitive ?\n            original.toLowerCase() :\n            original;\n        var found = [];\n        for (var _i = 0, blacklist_1 = blacklist; _i < blacklist_1.length; _i++) {\n            var subString = blacklist_1[_i];\n            if (str.indexOf(subString) >= 0) {\n                found.push(subString);\n            }\n        }\n        if (found.length == 0) {\n            return original;\n        }\n        else {\n            throw error_util_1.makeMappingError({\n                message: name + \" must not contain the following: \" + blacklistStr + \"; found \" + found.map(function (s) { return type_util_1.toLiteralStr(s); }).join(\", \"),\n                inputName: name,\n                actualValue: original,\n                expected: expected,\n            });\n        }\n    });\n}\nexports.subStringBlacklist = subStringBlacklist;\nfunction toTrimmed() {\n    return operator_1.pipe(string(), function (_name, str) {\n        return str.trim();\n    });\n}\nexports.toTrimmed = toTrimmed;\n//# sourceMappingURL=string.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar error_util_1 = require(\"../../error-util\");\n;\nfunction deferred() {\n    var implementation = undefined;\n    var result = function (name, mixed) {\n        if (implementation == undefined) {\n            throw error_util_1.makeMappingError({\n                message: \"Cannot check \" + name + \"; no implementation given for deferred mapper\",\n                inputName: name,\n                actualValue: mixed,\n                expected: \"implementation for deferred mapper\",\n            });\n        }\n        else {\n            return implementation(name, mixed);\n        }\n    };\n    result.setImplementation = function (impl) {\n        implementation = impl;\n    };\n    return result;\n}\nexports.deferred = deferred;\n//# sourceMappingURL=deferred.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./deferred\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operator_1 = require(\"../operator\");\nvar object_1 = require(\"../object\");\nvar number_1 = require(\"../number\");\nvar mapper_1 = require(\"../../mapper\");\nvar error_util_1 = require(\"../../error-util\");\nvar error_code_1 = require(\"../../error-code\");\nfunction byteLength(args) {\n    var byteLengthDelegate = operator_1.pipe(number_1.unsignedInteger(), number_1.range({\n        gtEq: args.min,\n        ltEq: args.max,\n    }));\n    var expected = ((args.min == undefined) ?\n        ((args.max == undefined) ?\n            \"value with \\\"byteLength\\\" property\" :\n            \"value of byteLength less than, or equal to \" + args.max.toString()) :\n        ((args.max == undefined) ?\n            \"value of byteLength greater than, or equal to \" + args.min.toString() :\n            (args.min == args.max) ?\n                \"value of byteLength \" + args.min.toString() :\n                \"value of byteLength between \" + args.min.toString() + \" and \" + args.max.toString()));\n    return operator_1.pipe(object_1.instanceOfObject(), function (name, mixed) {\n        var byteLengthResult = mapper_1.tryMapHandled(byteLengthDelegate, name + \".byteLength\", mixed.byteLength);\n        if (byteLengthResult.success) {\n            return mixed;\n        }\n        else {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be \" + expected,\n                inputName: name,\n                actualValue: mixed,\n                expected: expected,\n                expectedMeta: {\n                    errorCode: error_code_1.ErrorCode.EXPECTED_BYTE_LENGTH,\n                    min: args.min,\n                    max: args.max,\n                },\n                propertyErrors: [\n                    byteLengthResult.mappingError,\n                ],\n            });\n        }\n    });\n}\nexports.byteLength = byteLength;\n//# sourceMappingURL=byte-length.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./byte-length\"));\n__export(require(\"./uint-8-array\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_util_1 = require(\"../../type-util\");\nvar operator_1 = require(\"../operator\");\nvar byte_length_1 = require(\"./byte-length\");\nvar error_util_1 = require(\"../../error-util\");\nvar error_code_1 = require(\"../../error-code\");\nfunction instanceOfUint8Array() {\n    return function (name, mixed) {\n        if (!(mixed instanceof Uint8Array)) {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be instance of Uint8Array; received \" + type_util_1.toTypeStr(mixed),\n                inputName: name,\n                actualValue: mixed,\n                expected: \"Uint8Array\",\n                expectedMeta: {\n                    errorCode: error_code_1.ErrorCode.EXPECTED_TYPE,\n                },\n            });\n        }\n        return mixed;\n    };\n}\nexports.instanceOfUint8Array = instanceOfUint8Array;\nfunction uint8ArrayLength(args) {\n    return operator_1.pipe(byte_length_1.byteLength(args), instanceOfUint8Array());\n}\nexports.uint8ArrayLength = uint8ArrayLength;\nfunction uint8ArrayExactLength(length) {\n    return uint8ArrayLength({\n        min: length,\n        max: length,\n    });\n}\nexports.uint8ArrayExactLength = uint8ArrayExactLength;\n//# sourceMappingURL=uint-8-array.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_util_1 = require(\"../../type-util\");\nvar operator_1 = require(\"../operator\");\nvar literal_1 = require(\"../literal\");\nvar undefined_1 = require(\"./undefined\");\nvar string_1 = require(\"../string\");\nvar error_util_1 = require(\"../../error-util\");\nfunction nullToUndefined() {\n    return function (name, mixed) {\n        //We do not mind === here.\n        if (mixed === undefined || mixed === null) {\n            return undefined;\n        }\n        throw error_util_1.makeMappingError({\n            message: name + \" must be null|undefined; received \" + type_util_1.toTypeStr(mixed),\n            inputName: name,\n            actualValue: mixed,\n            expected: \"null|undefined\",\n            expectedMeta: {\n                mappableValues: [null, undefined],\n                outputValues: [undefined],\n            },\n        });\n    };\n}\nexports.nullToUndefined = nullToUndefined;\nfunction emptyStringToUndefined() {\n    return operator_1.cast(literal_1.literal(\"\"), function () { return undefined; }, undefined_1.undefined());\n}\nexports.emptyStringToUndefined = emptyStringToUndefined;\n/**\n    An empty string, or a string of only whitespace\n*/\nfunction whitespaceStringToUndefined() {\n    return operator_1.cast(string_1.match(/^\\s*$/, function (name) {\n        return {\n            message: name + \" must be a whitespace string\",\n            expected: \"whitespace string\",\n        };\n    }), function () { return undefined; }, undefined_1.undefined());\n}\nexports.whitespaceStringToUndefined = whitespaceStringToUndefined;\n//# sourceMappingURL=cast.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./cast\"));\n__export(require(\"./undefined\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_util_1 = require(\"../../type-util\");\nvar error_util_1 = require(\"../../error-util\");\nfunction undef() {\n    return function (name, mixed) {\n        //We do not mind === here.\n        if (mixed === undefined) {\n            return mixed;\n        }\n        throw error_util_1.makeMappingError({\n            message: name + \" must be undefined; received \" + type_util_1.toTypeStr(mixed),\n            inputName: name,\n            actualValue: mixed,\n            expected: \"undefined\",\n            expectedMeta: {\n                mappableValues: [undefined],\n                outputValues: [undefined],\n            },\n        });\n    };\n}\nexports.undefined = undef;\n//# sourceMappingURL=undefined.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./unknown\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction unknown() {\n    return function (_name, mixed) {\n        return mixed;\n    };\n}\nexports.unknown = unknown;\n//# sourceMappingURL=unknown.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/// <reference path=\"buffer.d.ts\" />\nvar ArrayBufferUtil = require(\"./array-buffer-util\");\nexports.ArrayBufferUtil = ArrayBufferUtil;\nvar EnumUtil = require(\"./enum-util\");\nexports.EnumUtil = EnumUtil;\nvar BigIntUtil = require(\"./bigint-util\");\nexports.BigIntUtil = BigIntUtil;\nvar FixedPointUtil = require(\"./fixed-point-util\");\nexports.FixedPointUtil = FixedPointUtil;\nvar FloatingPointUtil = require(\"./floating-point-util\");\nexports.FloatingPointUtil = FloatingPointUtil;\n__export(require(\"./decorator\"));\nvar ErrorUtil = require(\"./error-util\");\nexports.ErrorUtil = ErrorUtil;\n__export(require(\"./field-map\"));\n__export(require(\"./functional-lib\"));\nvar jsonApi = require(\"./json-api-lib\");\nexports.jsonApi = jsonApi;\n__export(require(\"./mapper\"));\nvar mysql = require(\"./mysql-lib\");\nexports.mysql = mysql;\nvar TypeUtil = require(\"./type-util\");\nexports.TypeUtil = TypeUtil;\n__export(require(\"./error-code\"));\n__export(require(\"./fluent-mapper\"));\n/**\n * Convenience function.\n * Will create a native `bigint` (if natively supported),\n * or create a polyfilled `bigint` (if polyfilled).\n */\nfunction BigInt(x) {\n    return TypeUtil.getBigIntFactoryFunctionOrError()(x);\n}\nexports.BigInt = BigInt;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fLib = require(\"../fluent-lib\");\n/**\n * Must be a plain-old-JavaScript-object in this implementation\n *\n * -----\n *\n * https://jsonapi.org/format/1.0/#document-resource-object-attributes\n *\n * The value of the `attributes` key **MUST** be an object (an “attributes object”).\n * Members of the attributes object (“attributes”) represent information about the resource object in which it’s defined.\n *\n * Attributes may contain any valid JSON value.\n *\n * Complex data structures involving JSON objects and arrays are allowed as attribute values.\n * However, any object that constitutes or is contained in an attribute **MUST NOT**\n * contain a `relationships` or `links` member, as those members are reserved by this specification for future use.\n *\n * Although has-one foreign keys (e.g. `author_id`) are often stored internally alongside other\n * information to be represented in a resource object, these keys **SHOULD NOT** appear as attributes.\n *\n * -----\n *\n * https://jsonapi.org/format/1.0/#document-resource-object-fields\n *\n * A resource object’s attributes and its relationships are collectively called its “fields”.\n *\n * Fields for a resource object **MUST** share a common namespace with each other and with `type` and `id`.\n * In other words, a resource can not have an attribute and relationship with the same name,\n * nor can it have an attribute or relationship named `type` or `id`.\n *\n * -----\n *\n * https://jsonapi.org/format/1.0/#document-member-names\n *\n * All member names used in a JSON:API document **MUST** be treated as\n * case sensitive by clients and servers, and they **MUST** meet all of the following conditions:\n *\n * + Member names **MUST** contain at least one character.\n * + Member names **MUST** contain only the allowed characters listed below.\n * + Member names **MUST** start and end with a “globally allowed character”, as defined below.\n *\n * To enable an easy mapping of member names to URLs,\n * it is **RECOMMENDED** that member names use only non-reserved,\n * URL safe characters specified in [RFC 3986](http://tools.ietf.org/html/rfc3986#page-13).\n *\n * ### Allowed Characters\n *\n * The following “globally allowed characters” **MAY** be used anywhere in a member name:\n *\n * + U+0061 to U+007A, “a-z”\n * + U+0041 to U+005A, “A-Z”\n * + U+0030 to U+0039, “0-9”\n * + U+0080 and above (non-ASCII Unicode characters; not recommended, not URL safe)\n *\n * Additionally, the following characters are allowed in member names, except as the first or last character:\n *\n * + U+002D HYPHEN-MINUS, “-“\n * + U+005F LOW LINE, “_”\n * + U+0020 SPACE, “ “ (not recommended, not URL safe)\n *\n *\n * ### Reserved Characters\n *\n * The following characters **MUST NOT** be used in member names:\n *\n * + U+002B PLUS SIGN, “+” (used for ordering)\n * + U+002C COMMA, “,” (used as a separator between relationship paths)\n * + U+002E PERIOD, “.” (used as a separator within relationship paths)\n * + U+005B LEFT SQUARE BRACKET, “[” (used in sparse fieldsets)\n * + U+005D RIGHT SQUARE BRACKET, “]” (used in sparse fieldsets)\n * + U+0021 EXCLAMATION MARK, “!”\n * + U+0022 QUOTATION MARK, ‘”’\n * + U+0023 NUMBER SIGN, “#”\n * + U+0024 DOLLAR SIGN, “$”\n * + U+0025 PERCENT SIGN, “%”\n * + U+0026 AMPERSAND, “&”\n * + U+0027 APOSTROPHE, “’”\n * + U+0028 LEFT PARENTHESIS, “(“\n * + U+0029 RIGHT PARENTHESIS, “)”\n * + U+002A ASTERISK, “*”\n * + U+002F SOLIDUS, “/”\n * + U+003A COLON, “:”\n * + U+003B SEMICOLON, “;”\n * + U+003C LESS-THAN SIGN, “<”\n * + U+003D EQUALS SIGN, “=”\n * + U+003E GREATER-THAN SIGN, “>”\n * + U+003F QUESTION MARK, “?”\n * + U+0040 COMMERCIAL AT, “@”\n * + U+005C REVERSE SOLIDUS, “\\”\n * + U+005E CIRCUMFLEX ACCENT, “^”\n * + U+0060 GRAVE ACCENT, “`”\n * + U+007B LEFT CURLY BRACKET, “{“\n * + U+007C VERTICAL LINE, “|”\n * + U+007D RIGHT CURLY BRACKET, “}”\n * + U+007E TILDE, “~”\n * + U+007F DELETE\n * + U+0000 to U+001F (C0 Controls)\n *\n *  @see {@link pojo}\n *  @see {@link AttributeCollection}\n *\n * -----\n *\n * The JSON:API spec outlines many restrictions on field names of an `AttributeCollection`.\n *\n * However, we do not implement any of them at the moment.\n *\n * @todo Implement restrictions on field names?\n *\n */\nexports.attributeCollection = fLib.pojo;\n//# sourceMappingURL=attribute-collection.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fLib = require(\"../fluent-lib\");\nvar attribute_collection_1 = require(\"./attribute-collection\");\nvar relationship_1 = require(\"./relationship\");\nvar link_collection_1 = require(\"./link-collection\");\nvar meta_1 = require(\"./meta\");\n/**\n * https://jsonapi.org/format/1.0/#document-resource-objects\n *\n * “Resource objects” appear in a JSON:API document to represent resources.\n *\n * A resource object **MUST** contain at least the following top-level members:\n *\n * + `id`\n * + `type`\n *\n * Exception: The `id` member is not required when the resource object originates\n * at the client and represents a new resource to be created on the server.\n *\n * In addition, a resource object **MAY** contain any of these top-level members:\n *\n * + `attributes`: an attributes object representing some of the resource’s data.\n * + `relationships`: a relationships object describing relationships between the resource and other JSON:API resources.\n * + `links`: a links object containing links related to the resource.\n * + `meta`: a meta object containing non-standard meta-information about a resource that can not be\n *   represented as an attribute or relationship.\n *\n *  @see {@link attributeCollection}\n *  @see {@link relationship}\n *  @see {@link linkCollection}\n *  @see {@link meta}\n *  @see {@link ClientResource}\n *  @see {@link ExpectedInputClientResource}\n */\nexports.clientResource = function () { return fLib.object({\n    id: fLib.string().orNull().optional(),\n    type: fLib.string(),\n    attributes: attribute_collection_1.attributeCollection().orNull().optional(),\n    relationships: relationship_1.relationship().orNull().optional(),\n    links: link_collection_1.linkCollection().orNull().optional(),\n    meta: meta_1.meta().orNull().optional(),\n}); };\n//# sourceMappingURL=client-resource.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fLib = require(\"../../fluent-lib\");\n/**\n * Implements the constraints outlined in https://jsonapi.org/format/1.0/#document-top-level\n *\n *  @see {@link serverDocument}\n *  @see {@link clientDocument}\n *  @see {@link __DocumentConstraintImplMapper}\n *  @see {@link __DocumentConstraintImpl}\n */\nfunction __documentConstraintImpl(args) {\n    if (args.data == undefined) {\n        if (args.meta == undefined) {\n            return fLib.object({\n                data: fLib.null().optional(),\n                included: fLib.null().optional(),\n                errors: fLib.array(args.errorObject),\n                meta: fLib.null().optional(),\n            });\n        }\n        else {\n            return fLib.or(fLib.object({\n                data: fLib.null().optional(),\n                included: fLib.null().optional(),\n                errors: fLib.array(args.errorObject),\n                meta: fLib.null().optional(),\n            }), fLib.object({\n                data: fLib.null().optional(),\n                included: fLib.null().optional(),\n                errors: fLib.null().optional(),\n                meta: args.meta,\n            }));\n        }\n    }\n    else if (args.meta == undefined) {\n        return fLib.or(fLib.object({\n            data: fLib.null().optional(),\n            included: fLib.null().optional(),\n            errors: fLib.array(args.errorObject),\n            meta: fLib.null().optional(),\n        }), fLib.object({\n            data: args.data,\n            included: fLib.array(args.resource).orNull().optional(),\n            errors: fLib.null().optional(),\n            meta: fLib.null().optional(),\n        }));\n    }\n    else {\n        return fLib.or(fLib.object({\n            data: fLib.null().optional(),\n            included: fLib.null().optional(),\n            errors: fLib.array(args.errorObject),\n            meta: fLib.null().optional(),\n        }), fLib.object({\n            data: args.data,\n            included: fLib.array(args.resource).orNull().optional(),\n            errors: fLib.null().optional(),\n            meta: args.meta,\n        }));\n    }\n}\nexports.__documentConstraintImpl = __documentConstraintImpl;\n//# sourceMappingURL=__document-constraint-impl.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar __document_constraint_impl_1 = require(\"./__document-constraint-impl\");\nvar json_api_1 = require(\"../json-api\");\nvar link_collection_1 = require(\"../link-collection\");\nvar error_object_1 = require(\"../error-object\");\nvar client_resource_1 = require(\"../client-resource\");\nvar fLib = require(\"../../fluent-lib\");\n/**\n * In this implementation, you have to specify one of the following,\n *\n * + `data`\n * + `meta`\n * + both `data` and `meta`\n *\n * If both `data` and `meta` are specified, all documents without `errors` must also contain both.\n *\n * -----\n *\n * https://jsonapi.org/format/1.0/#document-top-level\n *\n * JSON object **MUST** be at the root of every JSON:API request and response containing data.\n * This object defines a document’s “top level”.\n *\n * A document **MUST** contain at least one of the following top-level members:\n *\n * + `data`: the document’s “primary data”\n * + `errors`: an array of error objects\n * + `meta`: a meta object that contains non-standard meta-information.\n *\n * The members `data` and `errors` **MUST NOT** coexist in the same document.\n *\n * A document **MAY** contain any of these top-level members:\n *\n * + `jsonapi`: an object describing the client’s implementation\n * + `links`: a links object related to the primary data.\n * + `included`: an array of resource objects that are related to the primary data and/or each other (“included resources”).\n *\n * If a document does not contain a top-level `data` key, the `included` member **MUST NOT** be present either.\n *\n * The top-level links object **MAY** contain the following members:\n *\n * + `self`: the link that generated the current response document.\n * + `related`: a related resource link when the primary data represents a resource relationship.\n * + pagination links for the primary data.\n *\n * The document’s “primary data” is a representation of the resource or collection of resources targeted by a request.\n *\n * Primary data **MUST** be either:\n *\n * + a single resource object, a single resource identifier object,\n *   or `null`, for requests that target single resources\n * + an array of resource objects, an array of resource identifier objects,\n *   or an empty array (`[]`), for requests that target resource collections\n *\n * A logical collection of resources **MUST** be represented as an array, even if it only contains one item or is empty.\n *\n * @param args - The data, or meta mappers (or both)\n *\n *  @see {@link ClientDocumentMapper}\n *  @see {@link ClientDocument}\n *  @see {@link ExpectedInputClientDocument}\n *  @see {@link MappableInputClientDocument}\n */\nfunction clientDocument(args) {\n    var clientDocumentBase = {\n        errorObject: error_object_1.errorObject(),\n        resource: client_resource_1.clientResource(),\n    };\n    var impl = __document_constraint_impl_1.__documentConstraintImpl(__assign({}, args, clientDocumentBase));\n    var base = fLib.object({\n        jsonapi: json_api_1.jsonApi().orNull().optional(),\n        links: link_collection_1.linkCollection().orNull().optional(),\n    });\n    return fLib.deepMerge(impl, base);\n}\nexports.clientDocument = clientDocument;\n//# sourceMappingURL=client-document.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./__document-constraint-impl\"));\n__export(require(\"./client-document\"));\n__export(require(\"./server-document\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar __document_constraint_impl_1 = require(\"./__document-constraint-impl\");\nvar json_api_1 = require(\"../json-api\");\nvar link_collection_1 = require(\"../link-collection\");\nvar error_object_1 = require(\"../error-object\");\nvar server_resource_1 = require(\"../server-resource\");\nvar fLib = require(\"../../fluent-lib\");\n/**\n * In this implementation, you have to specify one of the following,\n *\n * + `data`\n * + `meta`\n * + both `data` and `meta`\n *\n * If both `data` and `meta` are specified, all documents without `errors` must also contain both.\n *\n * -----\n *\n * https://jsonapi.org/format/1.0/#document-top-level\n *\n * JSON object **MUST** be at the root of every JSON:API request and response containing data.\n * This object defines a document’s “top level”.\n *\n * A document **MUST** contain at least one of the following top-level members:\n *\n * + `data`: the document’s “primary data”\n * + `errors`: an array of error objects\n * + `meta`: a meta object that contains non-standard meta-information.\n *\n * The members `data` and `errors` **MUST NOT** coexist in the same document.\n *\n * A document **MAY** contain any of these top-level members:\n *\n * + `jsonapi`: an object describing the server’s implementation\n * + `links`: a links object related to the primary data.\n * + `included`: an array of resource objects that are related to the primary data and/or each other (“included resources”).\n *\n * If a document does not contain a top-level `data` key, the `included` member **MUST NOT** be present either.\n *\n * The top-level links object **MAY** contain the following members:\n *\n * + `self`: the link that generated the current response document.\n * + `related`: a related resource link when the primary data represents a resource relationship.\n * + pagination links for the primary data.\n *\n * The document’s “primary data” is a representation of the resource or collection of resources targeted by a request.\n *\n * Primary data **MUST** be either:\n *\n * + a single resource object, a single resource identifier object,\n *   or `null`, for requests that target single resources\n * + an array of resource objects, an array of resource identifier objects,\n *   or an empty array (`[]`), for requests that target resource collections\n *\n * A logical collection of resources **MUST** be represented as an array, even if it only contains one item or is empty.\n *\n * @param args - The data, or meta mappers (or both)\n *\n *  @see {@link ServerDocumentMapper}\n *  @see {@link ServerDocument}\n *  @see {@link ExpectedInputServerDocument}\n *  @see {@link MappableInputServerDocument}\n */\nfunction serverDocument(args) {\n    var serverDocumentBase = {\n        errorObject: error_object_1.errorObject(),\n        resource: server_resource_1.serverResource(),\n    };\n    var impl = __document_constraint_impl_1.__documentConstraintImpl(__assign({}, args, serverDocumentBase));\n    var base = fLib.object({\n        jsonapi: json_api_1.jsonApi().orNull().optional(),\n        links: link_collection_1.linkCollection().orNull().optional(),\n    });\n    return fLib.deepMerge(impl, base);\n}\nexports.serverDocument = serverDocument;\n//# sourceMappingURL=server-document.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fLib = require(\"../fluent-lib\");\nvar link_collection_1 = require(\"./link-collection\");\nvar link_1 = require(\"./link\");\n/**\n * https://jsonapi.org/format/1.0/#error-objects\n *\n * Error objects provide additional information about problems encountered while performing an operation.\n * Error objects **MUST** be returned as an array keyed by `errors` in the top level of a JSON:API document.\n *\n * An error object **MAY** have the following members:\n *\n * + `links`: a links object containing the following members:\n *   + `about`: a link that leads to further details about this particular occurrence of the problem.\n *\n *  @see {@link errorObject}\n *  @see {@link link}\n *  @see {@link ErrorLinkCollection}\n *  @see {@link ExpectedInputErrorLinkCollection}\n */\nexports.errorLinkCollection = function () { return fLib.deepMerge(link_collection_1.linkCollection(), fLib.object({\n    about: link_1.link()\n})); };\n//# sourceMappingURL=error-link-collection.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fLib = require(\"../fluent-lib\");\nvar error_link_collection_1 = require(\"./error-link-collection\");\nvar error_source_1 = require(\"./error-source\");\nvar meta_1 = require(\"./meta\");\n/**\n * https://jsonapi.org/format/1.0/#error-objects\n *\n * Error objects provide additional information about problems encountered while performing an operation.\n * Error objects **MUST** be returned as an array keyed by `errors` in the top level of a JSON:API document.\n *\n * An error object **MAY** have the following members:\n *\n * + `id`: a unique identifier for this particular occurrence of the problem.\n * + `links`: a links object containing the following members:\n *   + `about`: a link that leads to further details about this particular occurrence of the problem.\n * + `status`: the HTTP status code applicable to this problem, expressed as a string value.\n * + `code`: an application-specific error code, expressed as a string value.\n * + `title`: a short, human-readable summary of the problem that **SHOULD NOT**\n *   change from occurrence to occurrence of the problem, except for purposes of localization.\n * + `detail`: a human-readable explanation specific to this occurrence of the problem.\n *   Like `title`, this field’s value can be localized.\n * + `source`: an object containing references to the source of the error,\n *   optionally including any of the following members:\n *   + `pointer`: a JSON Pointer [RFC6901](https://tools.ietf.org/html/rfc6901) to the associated entity in the request document\n *     [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].\n *   + `parameter`: a string indicating which URI query parameter caused the error.\n * + `meta`: a meta object containing non-standard meta-information about the error.\n *\n *  @see {@link errorLinkCollection}\n *  @see {@link errorSource}\n *  @see {@link meta}\n *  @see {@link ErrorObject}\n *  @see {@link ExpectedInputErrorObject}\n */\nexports.errorObject = function () { return fLib.object({\n    id: fLib.string().orNull().optional(),\n    links: error_link_collection_1.errorLinkCollection().orNull().optional(),\n    status: fLib.string().orNull().optional(),\n    code: fLib.string().orNull().optional(),\n    title: fLib.string().orNull().optional(),\n    detail: fLib.string().orNull().optional(),\n    source: error_source_1.errorSource().orNull().optional(),\n    meta: meta_1.meta().orNull().optional(),\n}); };\n//# sourceMappingURL=error-object.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fLib = require(\"../fluent-lib\");\n/**\n * https://jsonapi.org/format/1.0/#error-objects\n *\n * Error objects provide additional information about problems encountered while performing an operation.\n * Error objects **MUST** be returned as an array keyed by `errors` in the top level of a JSON:API document.\n *\n * An error object **MAY** have the following members:\n *\n * + `source`: an object containing references to the source of the error,\n *   optionally including any of the following members:\n *   + `pointer`: a JSON Pointer [RFC6901](https://tools.ietf.org/html/rfc6901) to the associated entity in the request document\n *     [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].\n *   + `parameter`: a string indicating which URI query parameter caused the error.\n *\n *  @see {@link errorObject}\n *  @see {@link ErrorSource}\n *  @see {@link ExpectedInputErrorSource}\n */\nexports.errorSource = function () { return fLib.object({\n    pointer: fLib.string().orNull().optional(),\n    parameter: fLib.string().orNull().optional(),\n}); };\n//# sourceMappingURL=error-source.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./document\"));\n__export(require(\"./non-error-document\"));\n__export(require(\"./attribute-collection\"));\n__export(require(\"./client-resource\"));\n__export(require(\"./error-link-collection\"));\n__export(require(\"./error-object\"));\n__export(require(\"./error-source\"));\n__export(require(\"./json-api\"));\n__export(require(\"./link-collection\"));\n__export(require(\"./link\"));\n__export(require(\"./meta\"));\n__export(require(\"./partial-relationship\"));\n__export(require(\"./relationship\"));\n__export(require(\"./resource-identifier\"));\n__export(require(\"./resource-linkage\"));\n__export(require(\"./server-resource\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fLib = require(\"../fluent-lib\");\nvar meta_1 = require(\"./meta\");\n/**\n * https://jsonapi.org/format/1.0/#document-jsonapi-object\n *\n * A JSON:API document **MAY** include information about its implementation\n * under a top level `jsonapi` member. If present, the value of the `jsonapi`\n * member **MUST** be an object (a “jsonapi object”).\n *\n * The jsonapi object **MAY** contain a `version` member whose value\n * is a string indicating the highest JSON API version supported.\n * This object **MAY** also contain a `meta` member,\n * whose value is a meta object that contains non-standard meta-information.\n *\n * ```ts\n * {\n *   \"jsonapi\": {\n *     \"version\": \"1.0\"\n *   }\n * }\n * ```\n *\n * If the `version` member is not present,\n * clients should assume the server implements at least version 1.0 of the specification.\n *\n * > Note: Because JSON:API is committed to making additive changes only,\n * > the version string primarily indicates which new features a server may support.\n *\n *  @see {@link meta}\n *  @see {@link JsonApi}\n *  @see {@link ExpectedInputJsonApi}\n */\nexports.jsonApi = function () { return fLib.object({\n    version: fLib.literal(\"1.0\").orNull().optional(),\n    meta: meta_1.meta().orNull().optional(),\n}); };\n//# sourceMappingURL=json-api.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fLib = require(\"../fluent-lib\");\nvar link_1 = require(\"./link\");\n/**\n * https://jsonapi.org/format/1.0/#document-links\n *\n * Where specified, a `links` member can be used to represent links.\n * The value of each `links` member **MUST** be an object (a “links object”).\n *\n * Each member of a links object is a “link”.\n *\n * -----\n *\n * https://jsonapi.org/format/1.0/#document-top-level\n *\n * The top-level links object **MAY** contain the following members:\n *\n * + `self`: the link that generated the current response document.\n * + `related`: a related resource link when the primary data represents a resource relationship.\n * + pagination links for the primary data.\n *\n * -----\n *\n * https://jsonapi.org/format/1.0/#fetching-pagination\n *\n * A server **MAY** choose to limit the number of resources returned in a\n * response to a subset (“page”) of the whole set available.\n *\n * A server **MAY** provide links to traverse a paginated data set (“pagination links”).\n *\n * Pagination links **MUST** appear in the links object that corresponds to a collection.\n * To paginate the primary data, supply pagination links in the top-level `links` object.\n * To paginate an included collection returned in a compound document,\n * supply pagination links in the corresponding links object.\n *\n * The following keys **MUST** be used for pagination links:\n *\n * + `first`: the first page of data\n * + `last`: the last page of data\n * + `prev`: the previous page of data\n * + `next`: the next page of data\n *\n * Keys **MUST** either be omitted or have a `null` value to indicate that a particular link is unavailable.\n *\n * Concepts of order, as expressed in the naming of pagination links,\n * **MUST** remain consistent with JSON:API’s sorting rules.\n *\n * The `page` query parameter is reserved for pagination.\n * Servers and clients **SHOULD** use this key for pagination operations.\n *\n * -----\n *\n *  @see {@link link}\n *  @see {@link LinkCollection}\n *  @see {@link ExpectedInputLinkCollection}\n */\nexports.linkCollection = function () { return fLib.stringIndexer(link_1.link().orNull()); };\n//# sourceMappingURL=link-collection.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fLib = require(\"../fluent-lib\");\nvar metaLib = require(\"./meta\");\n/**\n * http://jsonapi.org/format/1.0/#document-links\n *\n * A link MUST be represented as either:\n *\n * + a string containing the link’s URL.\n * + an object (“link object”) which can contain the following members:\n *     + `href`: a string containing the link’s URL.\n *     + `meta`: a meta object containing non-standard meta-information about the link.\n *\n * The following self link is simply a URL:\n *\n * ```ts\n * \"links\": {\n *     \"self\": \"http://example.com/posts\"\n * }\n * ```\n *\n * The following related link includes a URL as well as meta-information about a related resource collection:\n *\n * ```ts\n * \"links\": {\n *     \"related\": {\n *         \"href\": \"http://example.com/articles/1/comments\",\n *         \"meta\": {\n *             \"count\": 10\n *         }\n *     }\n * }\n * ```\n *\n *  @see {@link meta}\n *  @see {@link LinkObject}\n *  @see {@link ExpectedInputLinkObject}\n */\nexports.linkObject = function () { return fLib.object({\n    /** a string containing the link’s URL. */\n    href: fLib.string(),\n    /** a meta object containing non-standard meta-information about the link. */\n    meta: metaLib.meta().orNull().optional(),\n}); };\n/**\n * Some description\n *\n * http://jsonapi.org/format/1.0/#document-links\n *\n * A link MUST be represented as either:\n *\n * + a string containing the link’s URL.\n * + an object (“link object”) which can contain the following members:\n *   + `href`: a string containing the link’s URL.\n *   + `meta`: a meta object containing non-standard meta-information about the link.\n *\n * The following self link is simply a URL:\n *\n * ```ts\n * \"links\": {\n *     \"self\": \"http://example.com/posts\"\n * }\n * ```\n *\n * The following related link includes a URL as well as meta-information about a related resource collection:\n *\n * ```ts\n * \"links\": {\n *     \"related\": {\n *         \"href\": \"http://example.com/articles/1/comments\",\n *         \"meta\": {\n *             \"count\": 10\n *         }\n *     }\n * }\n * ```\n *\n *  @see {@link meta}\n *  @see {@link linkObject}\n *  @see {@link Link}\n *  @see {@link ExpectedInputLink}\n */\nexports.link = function () { return fLib.or(fLib.string(), exports.linkObject()); };\n//# sourceMappingURL=link.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fLib = require(\"../fluent-lib\");\n;\n/**\n * Must be a plain-old-JavaScript-object in this implementation\n *\n * https://jsonapi.org/format/1.0/#document-meta\n *\n * Where specified, a `meta` member can be used to include non-standard meta-information.\n * The value of each `meta` member **MUST** be an object (a “meta object”).\n *\n * Any members **MAY** be specified within `meta` objects.\n *\n * For example:\n *\n * ```ts\n * {\n *     \"meta\": {\n *         \"copyright\": \"Copyright 2015 Example Corp.\",\n *         \"authors\": [\n *             \"Yehuda Katz\",\n *             \"Steve Klabnik\",\n *             \"Dan Gebhardt\",\n *             \"Tyler Kellen\"\n *         ]\n *     },\n *     \"data\": {\n *         // ...\n *     }\n * }\n * ```\n *\n *  @see {@link pojo}\n *\n */\nexports.meta = fLib.pojo;\n//# sourceMappingURL=meta.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fLib = require(\"../../fluent-lib\");\n/**\n * Implements the constraints outlined in https://jsonapi.org/format/1.0/#document-top-level\n *\n *  @see {@link serverDocument}\n *  @see {@link clientDocument}\n *  @see {@link __DocumentConstraintImplMapper}\n *  @see {@link __DocumentConstraintImpl}\n */\nfunction __nonErrorDocumentConstraintImpl(args) {\n    if (args.data == undefined) {\n        if (args.meta == undefined) {\n            throw new Error(\"No data and meta mapper specified\");\n        }\n        else {\n            return fLib.object({\n                data: fLib.null().optional(),\n                included: fLib.null().optional(),\n                errors: fLib.null().optional(),\n                meta: args.meta,\n            });\n        }\n    }\n    else if (args.meta == undefined) {\n        return fLib.object({\n            data: args.data,\n            included: fLib.array(args.resource).orNull().optional(),\n            errors: fLib.null().optional(),\n            meta: fLib.null().optional(),\n        });\n    }\n    else {\n        return fLib.object({\n            data: args.data,\n            included: fLib.array(args.resource).orNull().optional(),\n            errors: fLib.null().optional(),\n            meta: args.meta,\n        });\n    }\n}\nexports.__nonErrorDocumentConstraintImpl = __nonErrorDocumentConstraintImpl;\n//# sourceMappingURL=__non-error-document-constraint-impl.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./__non-error-document-constraint-impl\"));\n__export(require(\"./non-error-client-document\"));\n__export(require(\"./non-error-server-document\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar __non_error_document_constraint_impl_1 = require(\"./__non-error-document-constraint-impl\");\nvar json_api_1 = require(\"../json-api\");\nvar link_collection_1 = require(\"../link-collection\");\nvar client_resource_1 = require(\"../client-resource\");\nvar fLib = require(\"../../fluent-lib\");\n/**\n * In this implementation, you have to specify one of the following,\n *\n * + `data`\n * + `meta`\n * + both `data` and `meta`\n *\n * If both `data` and `meta` are specified, all documents without `errors` must also contain both.\n *\n * -----\n *\n * https://jsonapi.org/format/1.0/#document-top-level\n *\n * JSON object **MUST** be at the root of every JSON:API request and response containing data.\n * This object defines a document’s “top level”.\n *\n * A document **MUST** contain at least one of the following top-level members:\n *\n * + `data`: the document’s “primary data”\n * + `errors`: an array of error objects\n * + `meta`: a meta object that contains non-standard meta-information.\n *\n * The members `data` and `errors` **MUST NOT** coexist in the same document.\n *\n * A document **MAY** contain any of these top-level members:\n *\n * + `jsonapi`: an object describing the client’s implementation\n * + `links`: a links object related to the primary data.\n * + `included`: an array of resource objects that are related to the primary data and/or each other (“included resources”).\n *\n * If a document does not contain a top-level `data` key, the `included` member **MUST NOT** be present either.\n *\n * The top-level links object **MAY** contain the following members:\n *\n * + `self`: the link that generated the current response document.\n * + `related`: a related resource link when the primary data represents a resource relationship.\n * + pagination links for the primary data.\n *\n * The document’s “primary data” is a representation of the resource or collection of resources targeted by a request.\n *\n * Primary data **MUST** be either:\n *\n * + a single resource object, a single resource identifier object,\n *   or `null`, for requests that target single resources\n * + an array of resource objects, an array of resource identifier objects,\n *   or an empty array (`[]`), for requests that target resource collections\n *\n * A logical collection of resources **MUST** be represented as an array, even if it only contains one item or is empty.\n *\n * @param args - The data, or meta mappers (or both)\n *\n *  @see {@link ClientDocumentMapper}\n *  @see {@link ClientDocument}\n *  @see {@link ExpectedInputClientDocument}\n *  @see {@link MappableInputClientDocument}\n */\nfunction nonErrorClientDocument(args) {\n    var clientDocumentBase = {\n        resource: client_resource_1.clientResource(),\n    };\n    var impl = __non_error_document_constraint_impl_1.__nonErrorDocumentConstraintImpl(__assign({}, args, clientDocumentBase));\n    var base = fLib.object({\n        jsonapi: json_api_1.jsonApi().orNull().optional(),\n        links: link_collection_1.linkCollection().orNull().optional(),\n    });\n    return fLib.deepMerge(impl, base);\n}\nexports.nonErrorClientDocument = nonErrorClientDocument;\n//# sourceMappingURL=non-error-client-document.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar __non_error_document_constraint_impl_1 = require(\"./__non-error-document-constraint-impl\");\nvar json_api_1 = require(\"../json-api\");\nvar link_collection_1 = require(\"../link-collection\");\nvar server_resource_1 = require(\"../server-resource\");\nvar fLib = require(\"../../fluent-lib\");\n/**\n * In this implementation, you have to specify one of the following,\n *\n * + `data`\n * + `meta`\n * + both `data` and `meta`\n *\n * If both `data` and `meta` are specified, all documents without `errors` must also contain both.\n *\n * -----\n *\n * https://jsonapi.org/format/1.0/#document-top-level\n *\n * JSON object **MUST** be at the root of every JSON:API request and response containing data.\n * This object defines a document’s “top level”.\n *\n * A document **MUST** contain at least one of the following top-level members:\n *\n * + `data`: the document’s “primary data”\n * + `errors`: an array of error objects\n * + `meta`: a meta object that contains non-standard meta-information.\n *\n * The members `data` and `errors` **MUST NOT** coexist in the same document.\n *\n * A document **MAY** contain any of these top-level members:\n *\n * + `jsonapi`: an object describing the server’s implementation\n * + `links`: a links object related to the primary data.\n * + `included`: an array of resource objects that are related to the primary data and/or each other (“included resources”).\n *\n * If a document does not contain a top-level `data` key, the `included` member **MUST NOT** be present either.\n *\n * The top-level links object **MAY** contain the following members:\n *\n * + `self`: the link that generated the current response document.\n * + `related`: a related resource link when the primary data represents a resource relationship.\n * + pagination links for the primary data.\n *\n * The document’s “primary data” is a representation of the resource or collection of resources targeted by a request.\n *\n * Primary data **MUST** be either:\n *\n * + a single resource object, a single resource identifier object,\n *   or `null`, for requests that target single resources\n * + an array of resource objects, an array of resource identifier objects,\n *   or an empty array (`[]`), for requests that target resource collections\n *\n * A logical collection of resources **MUST** be represented as an array, even if it only contains one item or is empty.\n *\n * @param args - The data, or meta mappers (or both)\n *\n *  @see {@link ServerDocumentMapper}\n *  @see {@link ServerDocument}\n *  @see {@link ExpectedInputServerDocument}\n *  @see {@link MappableInputServerDocument}\n */\nfunction nonErrorServerDocument(args) {\n    var serverDocumentBase = {\n        resource: server_resource_1.serverResource(),\n    };\n    var impl = __non_error_document_constraint_impl_1.__nonErrorDocumentConstraintImpl(__assign({}, args, serverDocumentBase));\n    var base = fLib.object({\n        jsonapi: json_api_1.jsonApi().orNull().optional(),\n        links: link_collection_1.linkCollection().orNull().optional(),\n    });\n    return fLib.deepMerge(impl, base);\n}\nexports.nonErrorServerDocument = nonErrorServerDocument;\n//# sourceMappingURL=non-error-server-document.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fLib = require(\"../fluent-lib\");\nvar link_collection_1 = require(\"./link-collection\");\nvar resource_linkage_1 = require(\"./resource-linkage\");\nvar meta_1 = require(\"./meta\");\n/**\n * This is just a \"partial\" relationship because it does not\n * enforce the \"at-least-one constraint\"\n *\n * -----\n *\n *  @see {@link relationship}\n *  @see {@link linkCollection}\n *  @see {@link resourceLinkage}\n *  @see {@link meta}\n *  @see {@link PartialRelationship}\n *  @see {@link ExpectedInputPartialRelationship}\n */\nexports.partialRelationship = function () { return fLib.object({\n    links: link_collection_1.linkCollection().orNull().optional(),\n    data: resource_linkage_1.resourceLinkage().orNull().optional(),\n    meta: meta_1.meta().orNull().optional(),\n}); };\n//# sourceMappingURL=partial-relationship.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fLib = require(\"../fluent-lib\");\nvar partial_relationship_1 = require(\"./partial-relationship\");\nvar link_collection_1 = require(\"./link-collection\");\nvar resource_linkage_1 = require(\"./resource-linkage\");\nvar meta_1 = require(\"./meta\");\n/**\n * https://jsonapi.org/format/1.0/#document-resource-object-relationships\n *\n * The value of the `relationships` key **MUST** be an object (a “relationships object”).\n * Members of the relationships object (“relationships”) represent references from the resource object\n * in which it’s defined to other resource objects.\n *\n * Relationships may be to-one or to-many.\n *\n * A “relationship object” **MUST** contain at least one of the following:\n *\n * + `links`: a links object containing at least one of the following:\n *   + `self`: a link for the relationship itself (a “relationship link”).\n *     This link allows the client to directly manipulate the relationship.\n *     For example, removing an `author` through an `article`’s relationship URL would disconnect\n *     the person from the `article` without deleting the `people` resource itself.\n *     When fetched successfully, this link returns the linkage for the related resources as its primary data.\n *     (See Fetching Relationships.)\n *   + `related`: a related resource link\n * + `data`: resource linkage\n * + `meta`: a meta object that contains non-standard meta-information about the relationship.\n *\n * A relationship object that represents a to-many relationship **MAY** also contain pagination links\n * under the `links` member, as described below.\n * Any pagination links in a relationship object **MUST** paginate the relationship data, not the related resources.\n *\n *  @see {@link partialRelationship}\n *  @see {@link Relationship}\n *  @see {@link ExpectedInputRelationship}\n */\nexports.relationship = function () { return fLib.deepMerge(partial_relationship_1.partialRelationship(), fLib.or(fLib.object({ links: link_collection_1.linkCollection() }), fLib.object({ data: resource_linkage_1.resourceLinkage() }), fLib.object({ meta: meta_1.meta() }))); };\n//# sourceMappingURL=relationship.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fLib = require(\"../fluent-lib\");\nvar meta_1 = require(\"./meta\");\n/**\n * https://jsonapi.org/format/1.0/#document-resource-identifier-objects\n *\n * A “resource identifier object” is an object that identifies an individual resource.\n *\n * A “resource identifier object” **MUST** contain `type` and `id` members.\n *\n * A “resource identifier object” **MAY** also include a `meta` member,\n * whose value is a meta object that contains non-standard meta-information.\n *\n *  @see {@link meta}\n *  @see {@link ResourceIdentifier}\n *  @see {@link ExpectedInputResourceIdentifier}\n */\nexports.resourceIdentifier = function () { return fLib.object({\n    type: fLib.string(),\n    id: fLib.string(),\n    meta: meta_1.meta().orNull().optional(),\n}); };\n//# sourceMappingURL=resource-identifier.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fLib = require(\"../fluent-lib\");\nvar resource_identifier_1 = require(\"./resource-identifier\");\n/**\n * https://jsonapi.org/format/1.0/#document-resource-object-linkage\n *\n * Resource linkage in a compound document allows a client to link together\n * all of the included resource objects without having to `GET` any URLs via links.\n *\n * Resource linkage **MUST** be represented as one of the following:\n *\n * + `null` for empty to-one relationships.\n * + an empty array (`[]`) for empty to-many relationships.\n * + a single resource identifier object for non-empty to-one relationships.\n * + an array of resource identifier objects for non-empty to-many relationships.\n *\n * > Note: The spec does not impart meaning to order of resource identifier objects in linkage arrays of\n * > to-many relationships, although implementations may do that.\n * > Arrays of resource identifier objects may represent ordered or unordered relationships,\n * > and both types can be mixed in one response object.\n *\n *  @see {@link resourceIdentifier}\n */\nexports.resourceLinkage = function () { return fLib.or(resource_identifier_1.resourceIdentifier(), fLib.array(resource_identifier_1.resourceIdentifier())); };\n//# sourceMappingURL=resource-linkage.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fLib = require(\"../fluent-lib\");\nvar client_resource_1 = require(\"./client-resource\");\n/**\n *  @see {@link clientResource}\n *  @see {@link ServerResource}\n *  @see {@link ExpectedInputServerResource}\n */\nexports.serverResource = function () { return fLib.deepMerge(client_resource_1.clientResource(), fLib.object({\n    id: fLib.string(),\n})); };\n//# sourceMappingURL=server-resource.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n    The `ExpectedInput<>` and `MappableInput<>` parts\n    of a `Mapper<>` are arbitrary metadata.\n\n    However, they make returning `Mapper<>` functions\n    with those parts difficult.\n\n    This helper function makes it easier.\n\n    Does not return a wrapper.\n\n    -----\n\n    TODO Handle `name`?\n*/\nfunction mapper(f) {\n    return f;\n}\nexports.mapper = mapper;\n//# sourceMappingURL=ctor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction _debugIsExpectedInput(_f, _x) {\n}\nexports._debugIsExpectedInput = _debugIsExpectedInput;\n/*\nimport {unknown, optional} from \"../../functional-lib\";\nimport {withExpectedInput} from \"../operation\";\n_debugIsExpectedInput(\n    withExpectedInput(optional(unknown()))<number>(),\n    {x : 2} as unknown\n);\n//*/ \n//# sourceMappingURL=_debug-is-expected-input.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction _debugIsHandledInput(_f, _x) {\n}\nexports._debugIsHandledInput = _debugIsHandledInput;\n//# sourceMappingURL=_debug-is-handled-input.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction _debugIsMappableInput(_f, _x) {\n}\nexports._debugIsMappableInput = _debugIsMappableInput;\n//# sourceMappingURL=_debug-is-mappable-input.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction _debugIsOutput(_f, _x) {\n}\nexports._debugIsOutput = _debugIsOutput;\n//# sourceMappingURL=_debug-is-output.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./_debug-is-expected-input\"));\n__export(require(\"./_debug-is-handled-input\"));\n__export(require(\"./_debug-is-mappable-input\"));\n__export(require(\"./_debug-is-output\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./debug\"));\n__export(require(\"./operation\"));\n__export(require(\"./predicate\"));\n__export(require(\"./query\"));\n__export(require(\"./ctor\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_util_1 = require(\"../../type-util\");\nvar query_1 = require(\"../query\");\n/**\n    Modifies `dst` by setting `name`, `__optional`, `__runTimeRequired`.\n    You should not need to call this, in general.\n*/\nfunction copyRunTimeModifier(src, dst) {\n    type_util_1.setFunctionName(dst, query_1.getNameOrEmptyString(src));\n    dst.__optional = query_1.getOptionalFlagOrFalse(src);\n    dst.__runTimeRequired = query_1.getRunTimeRequiredFlagOrFalse(src);\n    return dst;\n}\nexports.copyRunTimeModifier = copyRunTimeModifier;\n/**\n    Modifies `dst` by setting `name`.\n    You should not need to call this, in general.\n*/\nfunction copyName(src, dst) {\n    type_util_1.setFunctionName(dst, query_1.getNameOrEmptyString(src));\n    return dst;\n}\nexports.copyName = copyName;\n/**\n    Modifies `dst` by setting `__optional`.\n    You should not need to call this, in general.\n*/\nfunction copyOptional(src, dst) {\n    dst.__optional = query_1.getOptionalFlagOrFalse(src);\n    return dst;\n}\nexports.copyOptional = copyOptional;\n/**\n    Modifies `dst` by setting `__runTimeRequired`.\n    You should not need to call this, in general.\n*/\nfunction copyRunTimeRequired(src, dst) {\n    dst.__runTimeRequired = query_1.getRunTimeRequiredFlagOrFalse(src);\n    return dst;\n}\nexports.copyRunTimeRequired = copyRunTimeRequired;\n//# sourceMappingURL=copy-run-time-modifier.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n    Makes the `ExpectedInput<>` of a `Mapper<>` the same as its\n    `MappableInput<>`.\n\n    Returns the same `Mapper<>`, DOES NOT create a new function.\n\n    TODO Decide if it should return a wrapper.\n*/\nfunction expectMappableInput(f) {\n    return f;\n}\nexports.expectMappableInput = expectMappableInput;\n;\n//# sourceMappingURL=expect-mappable-input.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./copy-run-time-modifier\"));\n__export(require(\"./expect-mappable-input\"));\n__export(require(\"./map\"));\n__export(require(\"./try-map\"));\n__export(require(\"./with-expected-input\"));\n__export(require(\"./with-mapper\"));\n__export(require(\"./with-name\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n    Alias of `mapExpected<>()`\n*/\nfunction map(f, name, mixed) {\n    return f(name, mixed);\n}\nexports.map = map;\n;\nfunction mapExpected(f, name, mixed) {\n    return f(name, mixed);\n}\nexports.mapExpected = mapExpected;\n;\nfunction mapMappable(f, name, mixed) {\n    return f(name, mixed);\n}\nexports.mapMappable = mapMappable;\n;\n/**\n    You can just call `f(name, mixed)` directly.\n    This is only provided for completeness.\n*/\nfunction mapHandled(f, name, mixed) {\n    return f(name, mixed);\n}\nexports.mapHandled = mapHandled;\n;\n//# sourceMappingURL=map.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar error_util_1 = require(\"../../error-util\");\nfunction tryMapImpl(f, name, mixed) {\n    try {\n        return {\n            success: true,\n            value: f(name, mixed),\n        };\n    }\n    catch (err) {\n        if (error_util_1.isMappingError(err)) {\n            return {\n                success: false,\n                err: err,\n                mappingError: err,\n            };\n        }\n        else {\n            return {\n                success: false,\n                err: err,\n                mappingError: error_util_1.makeMappingError({\n                    message: err.message,\n                    inputName: name,\n                    actualValue: mixed,\n                    expected: undefined,\n                    stack: err.stack,\n                }),\n            };\n        }\n    }\n}\n/**\n    Alias of `tryMapExpected<>()`\n*/\nfunction tryMap(f, name, mixed) {\n    return tryMapImpl(f, name, mixed);\n}\nexports.tryMap = tryMap;\n;\nfunction tryMapExpected(f, name, mixed) {\n    return tryMapImpl(f, name, mixed);\n}\nexports.tryMapExpected = tryMapExpected;\n;\nfunction tryMapMappable(f, name, mixed) {\n    return tryMapImpl(f, name, mixed);\n}\nexports.tryMapMappable = tryMapMappable;\n;\nfunction tryMapHandled(f, name, mixed) {\n    return tryMapImpl(f, name, mixed);\n}\nexports.tryMapHandled = tryMapHandled;\n;\n//# sourceMappingURL=try-map.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n    Lets you modify the `ExpectedInput<>` of a `Mapper<>`.\n\n    Returns the same `Mapper<>`, DOES NOT create a new function.\n\n    TODO Decide if it should return a wrapper.\n\n    -----\n\n    ### Use Case\n\n    Give a `Mapper<>` with the following properties,\n\n    + `MappableInput<> = string|number`\n    + `ExpectedInput<> = string`\n\n    If we wish to change the `ExpectedInput<>` to `number`,\n    we do the following,\n\n    ```ts\n    const otherMapper = withExpectedInput(mapper)<number>();\n    ```\n*/\nfunction withExpectedInput(f) {\n    return function () {\n        return f;\n    };\n}\nexports.withExpectedInput = withExpectedInput;\n;\n//# sourceMappingURL=with-expected-input.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar query_1 = require(\"../query\");\nvar with_name_1 = require(\"./with-name\");\nfunction withMapper(f, newMapper) {\n    return with_name_1.withName(newMapper, query_1.getNameOrEmptyString(f));\n}\nexports.withMapper = withMapper;\n//# sourceMappingURL=with-mapper.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_util_1 = require(\"../../type-util\");\nvar copy_run_time_modifier_1 = require(\"./copy-run-time-modifier\");\n/**\n    Lets you modify the `Name<>` of a `Mapper<>`.\n\n    Returns a new `Mapper<>`.\n*/\nfunction withName(f, name) {\n    var result = function (name, mixed) {\n        return f(name, mixed);\n    };\n    return copy_run_time_modifier_1.copyRunTimeRequired(f, copy_run_time_modifier_1.copyOptional(f, type_util_1.setFunctionName(result, name)));\n}\nexports.withName = withName;\n;\n//# sourceMappingURL=with-name.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isEmptyArrayMappable(f) {\n    try {\n        f(\"\", []);\n        return true;\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexports.isEmptyArrayMappable = isEmptyArrayMappable;\nfunction canOutputEmptyArray(f) {\n    try {\n        /*\n            Using idempotent property.\n\n            (f(blah) === []) implies (f([]) === [])\n        */\n        var output = f(\"\", []);\n        return ((output instanceof Array) &&\n            (output.length == 0));\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexports.canOutputEmptyArray = canOutputEmptyArray;\n//# sourceMappingURL=array.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./array\"));\n__export(require(\"./is-optional\"));\n__export(require(\"./missing-value\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar query_1 = require(\"../query\");\nvar missing_value_1 = require(\"./missing-value\");\n//TODO Consider renaming to `isMappableInputOptional()`\nfunction isOptional(f) {\n    if (typeof f != \"function\") {\n        return false;\n    }\n    if (!query_1.getOptionalFlagOrFalse(f)) {\n        return false;\n    }\n    if (!missing_value_1.isUndefinedMappable(f)) {\n        return false;\n    }\n    return true;\n}\nexports.isOptional = isOptional;\n//# sourceMappingURL=is-optional.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isUndefinedMappable(f) {\n    try {\n        f(\"\", undefined);\n        return true;\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexports.isUndefinedMappable = isUndefinedMappable;\nfunction isNullMappable(f) {\n    try {\n        f(\"\", null);\n        return true;\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexports.isNullMappable = isNullMappable;\nfunction isMaybeMappable(f) {\n    try {\n        f(\"\", null);\n        f(\"\", undefined);\n        return true;\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexports.isMaybeMappable = isMaybeMappable;\nfunction canOutputUndefined(f) {\n    try {\n        /*\n            Using idempotent property.\n\n            (f(blah) === undefined) implies (f(undefined) === undefined)\n        */\n        return (f(\"\", undefined) === undefined);\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexports.canOutputUndefined = canOutputUndefined;\nfunction canOutputNull(f) {\n    try {\n        /*\n            Using idempotent property.\n\n            (f(blah) === null) implies (f(null) === null)\n        */\n        return (f(\"\", null) === null);\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexports.canOutputNull = canOutputNull;\nfunction canOutputMaybe(f) {\n    try {\n        /*\n            Using idempotent property.\n\n            (f(blah) === null) implies (f(null) === null)\n            (f(blah) === undefined) implies (f(null) === undefined)\n        */\n        return ((f(\"\", null) === null) &&\n            (f(\"\", undefined) === undefined));\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexports.canOutputMaybe = canOutputMaybe;\n//# sourceMappingURL=missing-value.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./name-of\"));\n__export(require(\"./optional-flag-of\"));\n__export(require(\"./run-time-required-flag-of\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getNameOrEmptyString(f) {\n    if (typeof f != \"function\") {\n        return \"\";\n    }\n    var result = f.__name;\n    return ((typeof result == \"string\") ?\n        result :\n        \"\");\n}\nexports.getNameOrEmptyString = getNameOrEmptyString;\n//# sourceMappingURL=name-of.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getOptionalFlagOrFalse(f) {\n    var result = f.__optional;\n    return (result === true);\n}\nexports.getOptionalFlagOrFalse = getOptionalFlagOrFalse;\n//# sourceMappingURL=optional-flag-of.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getRunTimeRequiredFlagOrFalse(f) {\n    var result = f.__runTimeRequired;\n    return (result === true);\n}\nexports.getRunTimeRequiredFlagOrFalse = getRunTimeRequiredFlagOrFalse;\n//# sourceMappingURL=run-time-required-flag-of.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fluent_lib_1 = require(\"../../fluent-lib\");\nfunction bufferDelegate(dataTypeStr, maxLength) {\n    var result = function (a, b) {\n        if (a == undefined) {\n            return fluent_lib_1.bufferLength({\n                max: maxLength,\n            });\n        }\n        else if (b == undefined) {\n            a = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({\n                gtEq: 1,\n                ltEq: maxLength,\n            }))(dataTypeStr + \".desiredLengthMax\", a);\n            return fluent_lib_1.bufferLength({\n                max: a,\n            });\n        }\n        else {\n            a = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({\n                gtEq: 0,\n                ltEq: maxLength,\n            }))(dataTypeStr + \".desiredLengthMin\", a);\n            b = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({\n                gtEq: 1,\n                ltEq: maxLength,\n            }))(dataTypeStr + \".desiredLengthMax\", b);\n            if (a > b) {\n                throw new Error(dataTypeStr + \" minLength must be <= maxLength\");\n            }\n            return fluent_lib_1.bufferLength({\n                min: a,\n                max: b,\n            });\n        }\n    };\n    result.maxLength = maxLength;\n    return result;\n}\nexports.binary = bufferDelegate(\"BINARY\", 255);\nexports.varBinary = bufferDelegate(\"VARBINARY\", 65535);\nexports.tinyBlob = bufferDelegate(\"TINYBLOB\", 255);\nexports.blob = bufferDelegate(\"BLOB\", 65535);\nexports.mediumBlob = bufferDelegate(\"MEDIUMBLOB\", 16777215);\nexports.longBlob = bufferDelegate(\"LONGBLOB\", 4294967295);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fLib = require(\"../../fluent-lib\");\nvar TypeUtil = require(\"../../type-util\");\n/**\n    Converts some values to `boolean`.\n\n    The values `0|1|\"0\"|\"1\"` were chosen because\n    these values are most likely to show up from\n    a MySQL driver to represent a `boolean`\n\n    The values `\"false\"|\"true\"` were chosen because\n    these values will show up in query strings.\n*/\nfunction boolean() {\n    var BigInt = TypeUtil.getBigIntFactoryFunctionOrError();\n    return fLib.or(fLib.boolean(), fLib.literal(\"0\", \"1\", 0, 1, \"false\", \"true\", BigInt(0), BigInt(1)).pipe(function (name, v) {\n        switch (v) {\n            case \"0\": return false;\n            case \"1\": return true;\n            case 0: return false;\n            case 1: return true;\n            case \"false\": return false;\n            case \"true\": return true;\n            default: {\n                var str = String(v);\n                if (str == \"0\") {\n                    return false;\n                }\n                else if (str == \"1\") {\n                    return true;\n                }\n                //Shouldn't happen\n                throw new Error(\"Expected \" + name + \" to be one of '0'|'1'|0|1|'false'|'true'|'0n'|'1n'\");\n            }\n        }\n    })).withExpectedInput();\n}\nexports.boolean = boolean;\n/**\n    Converts some values to `true`.\n\n    The values `1|\"1\"` were chosen because\n    these values are most likely to show up from\n    a MySQL driver to represent a `boolean`\n\n    The values `\"true\"` was chosen because\n    it will show up in query strings.\n*/\nfunction toTrue() {\n    var BigInt = TypeUtil.getBigIntFactoryFunctionOrError();\n    return fLib.or(fLib.literal(true), fLib.literal(\"1\", 1, \"true\", BigInt(1)).pipe(function (name, v) {\n        switch (v) {\n            case \"1\": return true;\n            case 1: return true;\n            case \"true\": return true;\n            default: {\n                var str = String(v);\n                if (str == \"1\") {\n                    return true;\n                }\n                //Shouldn't happen\n                throw new Error(\"Expected \" + name + \" to be one of '1'|1|'true'\");\n            }\n        }\n    })).withExpectedInput();\n}\nexports.true = toTrue;\n/**\n    Converts some values to `false`.\n\n    The values `0|\"0\"` were chosen because\n    these values are most likely to show up from\n    a MySQL driver to represent a `boolean`\n\n    The values `\"false\"` was chosen because\n    it will show up in query strings.\n*/\nfunction toFalse() {\n    var BigInt = TypeUtil.getBigIntFactoryFunctionOrError();\n    return fLib.or(fLib.literal(false), fLib.literal(\"0\", 0, \"false\", BigInt(0)).pipe(function (name, v) {\n        switch (v) {\n            case \"0\": return false;\n            case 0: return false;\n            case \"false\": return false;\n            default: {\n                var str = String(v);\n                if (str == \"0\") {\n                    return false;\n                }\n                //Shouldn't happen\n                throw new Error(\"Expected \" + name + \" to be one of '0'|0|'false'\");\n            }\n        }\n    })).withExpectedInput();\n}\nexports.false = toFalse;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fluent_lib_1 = require(\"../../fluent-lib\");\nfunction stringDelegate(dataTypeStr, maxLength) {\n    var result = function (a, b) {\n        if (a == undefined) {\n            return fluent_lib_1.stringLength({\n                max: maxLength,\n            });\n        }\n        else if (b == undefined) {\n            a = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({\n                gtEq: 1,\n                ltEq: maxLength,\n            }))(dataTypeStr + \".desiredLengthMax\", a);\n            return fluent_lib_1.stringLength({\n                max: a,\n            });\n        }\n        else {\n            a = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({\n                gtEq: 0,\n                ltEq: maxLength,\n            }))(dataTypeStr + \".desiredLengthMin\", a);\n            b = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({\n                gtEq: 1,\n                ltEq: maxLength,\n            }))(dataTypeStr + \".desiredLengthMax\", b);\n            if (a > b) {\n                throw new Error(dataTypeStr + \" minLength must be <= maxLength\");\n            }\n            return fluent_lib_1.stringLength({\n                min: a,\n                max: b,\n            });\n        }\n    };\n    result.maxLength = maxLength;\n    return result;\n}\nexports.char = stringDelegate(\"CHAR\", 255);\nexports.varChar = stringDelegate(\"VARCHAR\", 65535);\nexports.tinyText = stringDelegate(\"TINYTEXT\", 255);\nexports.text = stringDelegate(\"TEXT\", 65535);\nexports.mediumText = stringDelegate(\"MEDIUMTEXT\", 16777215);\nexports.longText = stringDelegate(\"LONGTEXT\", 4294967295);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fluent_lib_1 = require(\"../../fluent-lib\");\nvar DateTimeUtil = require(\"./util\");\nexports.DateTimeUtil = DateTimeUtil;\nvar error_util_1 = require(\"../../error-util\");\nfunction dateTime(fractionalSecondPrecision) {\n    if (fractionalSecondPrecision === void 0) { fractionalSecondPrecision = 0; }\n    return fluent_lib_1.or(fluent_lib_1.string().pipe(function (name, str) {\n        try {\n            return DateTimeUtil.fromSqlUtc(str, fractionalSecondPrecision);\n        }\n        catch (err) {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be DATETIME(\" + fractionalSecondPrecision + \"); \" + err.message,\n                inputName: name,\n                actualValue: str,\n                expected: \"DATETIME(\" + fractionalSecondPrecision + \")\",\n            });\n        }\n    }), \n    //To work with JSON serialization\n    fluent_lib_1.or(\n    //Hopefully, it is a JSON date string\n    fluent_lib_1.string(), \n    /*\n        We turn the Date object into its JSON representation\n        because the Date object may have a millisecond part\n        when we do not allow it.\n\n        For example,\n        new Date().toJSON() //2019-01-01T00:00:00.123Z\n\n        The above is not assignable to DATETIME(0)\n        But is assignable to DATETIME(3)\n\n        -----\n\n        new Date().toJSON() //2019-01-01T00:00:00.120Z\n\n        The above is not assignable to DATETIME(0)\n        But is assignable to DATETIME(2) or DATETIME(3)\n    */\n    fluent_lib_1.instanceOfDate().pipe(function (_name, d) { return d.toJSON(); })).pipe(fluent_lib_1.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?Z$/, function (name) {\n        return {\n            message: name + \" must be in the format YYYY-MM-DDTHH:mm:ss.sssZ\",\n            expected: \"YYYY-MM-DDTHH:mm:ss.sssZ\",\n        };\n    }), function (name, str) {\n        try {\n            str = str.replace(\"T\", \" \").replace(\"Z\", \"\");\n            return DateTimeUtil.fromSqlUtc(str, fractionalSecondPrecision);\n        }\n        catch (err) {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be DATETIME(\" + fractionalSecondPrecision + \"); \" + err.message,\n                inputName: name,\n                actualValue: str,\n                expected: \"DATETIME(\" + fractionalSecondPrecision + \")\",\n            });\n        }\n    })).withExpectedInput();\n}\nexports.dateTime = dateTime;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar string_util_1 = require(\"../../string-util\");\n//Uses UTC\n//Truncates if fractionSecondPrecision is too small.\nfunction toSqlUtc(d, fractionalSecondPrecision /*|4|5|6*/) {\n    if (!isFinite(d.getTime())) {\n        throw new Error(\"Invalid date passed\");\n    }\n    var year = string_util_1.zeroPad(d.getUTCFullYear(), 4);\n    //getUTCMonth() returns [0, 11]\n    //We want [1, 12]\n    var month = string_util_1.zeroPad(d.getUTCMonth() + 1, 2);\n    var day = string_util_1.zeroPad(d.getUTCDate(), 2);\n    var hour = string_util_1.zeroPad(d.getUTCHours(), 2);\n    var minute = string_util_1.zeroPad(d.getUTCMinutes(), 2);\n    var second = string_util_1.zeroPad(d.getUTCSeconds(), 2);\n    if (fractionalSecondPrecision == 0) {\n        /*\n            https://dev.mysql.com/doc/refman/8.0/en/date-and-time-literals.html\n\n            The TIMESTAMP syntax produces a DATETIME value in MySQL\n            because DATETIME has a range that more closely corresponds\n            to the standard SQL TIMESTAMP type,\n            which has a year range from 0001 to 9999.\n\n            (The MySQL TIMESTAMP year range is 1970 to 2038.)\n        */\n        return [\n            \"(TIMESTAMP \",\n            year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second,\n            \")\"\n        ].join(\"\");\n    }\n    else {\n        var ms = string_util_1.zeroPad(d.getUTCMilliseconds(), fractionalSecondPrecision).substr(0, fractionalSecondPrecision);\n        /*\n            https://dev.mysql.com/doc/refman/8.0/en/date-and-time-literals.html\n\n            The TIMESTAMP syntax produces a DATETIME value in MySQL\n            because DATETIME has a range that more closely corresponds\n            to the standard SQL TIMESTAMP type,\n            which has a year range from 0001 to 9999.\n\n            (The MySQL TIMESTAMP year range is 1970 to 2038.)\n        */\n        return [\n            \"(TIMESTAMP \",\n            year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second + \".\" + ms,\n            \")\"\n        ].join(\"\");\n    }\n}\nexports.toSqlUtc = toSqlUtc;\n//Month is zero-based\n//Day is one-based\nfunction isValidDate(year, month, day) {\n    /**\n     * `year` might be [0, 99].\n     * This causes the year to be [1900, 1999]. Not what we want.\n     *\n     * So, we use `.setFullYear()` below, to set the proper year.\n     */\n    var d = new Date(year, month, day);\n    d.setFullYear(year);\n    if (d.getFullYear() === year && d.getMonth() === month && d.getDate() === day) {\n        return true;\n    }\n    return false;\n}\nvar mySqlDateTimeRegex = /^(\\d{4})-(\\d{2})-(\\d{2})( (\\d{2}):(\\d{2}):(\\d{2})(\\.(\\d{1,6}))?)?$/;\n//Assumes UTC\nfunction fromSqlUtc(sql, fractionalSecondPrecision /*|4|5|6*/) {\n    var match = mySqlDateTimeRegex.exec(sql);\n    if (match == undefined) {\n        throw new Error(\"Invalid MySQL DATETIME string\");\n    }\n    var year = parseInt(match[1]);\n    //1-based\n    var month = parseInt(match[2]);\n    //1-based\n    var dayOfMonth = parseInt(match[3]);\n    if (!isValidDate(year, month - 1, dayOfMonth)) {\n        throw new Error(\"Invalid MySQL DATETIME string; month or day does not exist for given year\");\n    }\n    var hour = (match[5] == undefined) ?\n        0 :\n        parseInt(match[5]);\n    if (hour > 23) {\n        throw new Error(\"Hour must be [0, 23]\");\n    }\n    var minute = (match[6] == undefined) ?\n        0 :\n        parseInt(match[6]);\n    if (minute > 59) {\n        throw new Error(\"Minute must be [0, 59]\");\n    }\n    var second = (match[7] == undefined) ?\n        0 :\n        parseInt(match[7]);\n    if (second > 59) {\n        throw new Error(\"Second must be [0, 59]\");\n    }\n    var microsecondPart = (match[9] == undefined) ?\n        0 :\n        parseInt(string_util_1.trailingZeroPad(match[9], 6));\n    if (microsecondPart > 999999) {\n        throw new Error(\"Microsecond must be [0, 999999]\");\n    }\n    var millisecond = Math.floor(microsecondPart / 1000);\n    var microsecond = microsecondPart % 1000;\n    /*\n        With DATETIME(0),\n        We have per-second precision.\n        microsecondPart can only be zero.\n\n        With DATETIME(1),\n        We have 100ms precision, 100,000microsecond precision.\n        6-1 = 5\n        10^5 = 100,000\n        By using %(modulo) 100,000, we ensure microsecondPart\n        is a multiple of the precision we support.\n\n        With DATETIME(2),\n        We have 10ms precision, 10,000microsecond precision.\n        6-2 = 4\n        10^4 = 10,000\n        By using %(modulo) 10,000, we ensure microsecondPart\n        is a multiple of the precision we support.\n\n        ...\n        With DATETIME(6),\n        We have 1microsecond precision.\n        6-6 = 0\n        10^0 = 1\n        Any integer modulo one is zero.\n    */\n    if (microsecondPart % Math.pow(10, 6 - fractionalSecondPrecision) != 0) {\n        throw new Error(\"Expected DATETIME(\" + fractionalSecondPrecision + \"), received DATETIME(\" + match[9].length + \")\");\n    }\n    /*if (\n        match[9] != undefined &&\n        match[9].length > fractionalSecondPrecision\n    ) {\n        throw new Error(`Expected DATETIME(${fractionalSecondPrecision}), received DATETIME(${match[9].length})`);\n    }*/\n    //TODO-FEATURE Microsecond support\n    //JS Date just doesn't support microseconds\n    //BEGIN TEMPORARY NON-SUPPORT FOR MICROSECOND\n    if (microsecond != 0) {\n        throw new Error(\"Microsecond support for DATETIME is not supported yet\");\n    }\n    //END TEMPORARY NON-SUPPORT FOR MICROSECOND\n    var utcMillisecondTimestamp = Date.UTC(year, \n    //Date.UTC() expects [0, 11]\n    month - 1, dayOfMonth, hour, minute, second, millisecond);\n    var result = new Date(utcMillisecondTimestamp);\n    /**\n     * `year` might be [0, 99].\n     * This causes the year to be [1900, 1999]. Not what we want.\n     *\n     * So, we use `.setUTCFullYear()` below, to set the proper year.\n     */\n    result.setUTCFullYear(year);\n    return result;\n}\nexports.fromSqlUtc = fromSqlUtc;\n//# sourceMappingURL=util.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar functional_lib_1 = require(\"../../functional-lib\");\nvar fluent_lib_1 = require(\"../../fluent-lib\");\nvar type_util_1 = require(\"../../type-util\");\nvar FixedPointUtil = require(\"../../fixed-point-util\");\nvar BigIntUtil = require(\"../../bigint-util\");\nvar error_util_1 = require(\"../../error-util\");\nvar error_code_1 = require(\"../../error-code\");\n/**\n *\n * For now, returns a string.\n * Converting to a number risks losing precision.\n *\n * @deprecated\n */\nfunction decimalDeprecated() {\n    return fluent_lib_1.pipe(functional_lib_1.or(functional_lib_1.string(), functional_lib_1.finiteNumber(), functional_lib_1.bigInt()), function (_name, mixed) {\n        return mixed.toString();\n    }, functional_lib_1.floatingPointFormatString());\n}\nexports.decimalDeprecated = decimalDeprecated;\nfunction assertValidDecimalPrecisionAndScale(\n/**\n * + Min precision is `1`, even though MySQL allows min precision `0`.\n *   Precision `0` is not very meaningful, anyway, right?\n */\nprecision, \n/**\n * + The min scale is `0`.\n * + `scale` must be <= `precision`.\n */\nscale) {\n    var BigInt = type_util_1.getBigIntFactoryFunctionOrError();\n    var precisionMapper = fluent_lib_1.pipe(functional_lib_1.toBigInt(), functional_lib_1.bigIntGtEq(BigInt(1)));\n    precision = precisionMapper(\"precision\", precision);\n    var scaleMapper = fluent_lib_1.pipe(functional_lib_1.toBigInt(), functional_lib_1.bigIntGtEq(BigInt(0)), functional_lib_1.bigIntLtEq(precision));\n    scale = scaleMapper(\"scale\", scale);\n    return {\n        precision: precision,\n        scale: scale,\n    };\n}\nfunction decimal(precision, scale) {\n    if (precision == undefined) {\n        return decimalDeprecated();\n    }\n    var _a = assertValidDecimalPrecisionAndScale(precision, scale), maxPrecision = _a.precision, maxScale = _a.scale;\n    var expected = \"DECIMAL(\" + maxPrecision + \", \" + maxScale + \")\";\n    return fluent_lib_1.pipe(functional_lib_1.or(functional_lib_1.string(), functional_lib_1.finiteNumber(), functional_lib_1.bigInt()), function (_name, mixed) {\n        return mixed.toString();\n    }, function (name, str) {\n        var parsed = FixedPointUtil.tryParse(str);\n        if (parsed == undefined) {\n            throw error_util_1.makeMappingError({\n                message: name + \" must be \" + expected,\n                inputName: name,\n                actualValue: str,\n                expected: expected,\n            });\n        }\n        var curScale = (parsed.getFixedPointFractionalPartString() == \"0\" ?\n            0 :\n            parsed.getFixedPointFractionalPartString().length);\n        var curPrecision = (curScale +\n            (parsed.getFixedPointIntegerPartString() == \"0\" ?\n                0 :\n                parsed.getFixedPointIntegerPartString().length));\n        if (BigIntUtil.greaterThan(curPrecision, maxPrecision)) {\n            throw error_util_1.makeMappingError({\n                message: name + \" must have precision less than, or equal to \" + maxPrecision,\n                inputName: name,\n                actualValue: parsed.getFixedPointString(),\n                expected: expected,\n                expectedMeta: {\n                    errorCode: error_code_1.ErrorCode.EXPECTED_DECIMAL_PRECISION_LESS_THAN_OR_EQUAL_TO,\n                    maxPrecision: maxPrecision,\n                    maxScale: maxScale,\n                    curPrecision: curPrecision,\n                    curScale: curScale,\n                },\n            });\n        }\n        if (BigIntUtil.greaterThan(curScale, maxScale)) {\n            throw error_util_1.makeMappingError({\n                message: name + \" must have scale less than, or equal to \" + maxScale,\n                inputName: name,\n                actualValue: parsed.getFixedPointString(),\n                expected: expected,\n                expectedMeta: {\n                    errorCode: error_code_1.ErrorCode.EXPECTED_DECIMAL_SCALE_LESS_THAN_OR_EQUAL_TO,\n                    maxPrecision: maxPrecision,\n                    maxScale: maxScale,\n                    curPrecision: curPrecision,\n                    curScale: curScale,\n                },\n            });\n        }\n        return parsed.getFixedPointString();\n    });\n}\nexports.decimal = decimal;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fluent_lib_1 = require(\"../../fluent-lib\");\n/**\n    TS `number` type is actually a `double` type\n*/\nfunction double() {\n    return fluent_lib_1.toFiniteNumber();\n}\nexports.double = double;\n/**\n    Alias for DOUBLE for now.\n    JS doesn't have `float` type.\n\n    This means that it is possible\n    to send a value to MySQL and\n    lose precision.\n*/\nfunction float() {\n    return double();\n}\nexports.float = float;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fluent_lib_1 = require(\"../../fluent-lib\");\n/**\n    TODO Handle case-insensitive enum collations\n\n    -----\n\n    https://dev.mysql.com/doc/refman/5.5/en/enum.html\n\n    When retrieved, values stored into an ENUM column are displayed using the lettercase\n    that was used in the column definition.\n\n    Note that ENUM columns can be assigned a character set and collation.\n\n    For binary or case-sensitive collations,\n    lettercase is taken into account when assigning values to the column.\n*/\nfunction unsafeCaseSensitiveEnum() {\n    var elements = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        elements[_i] = arguments[_i];\n    }\n    if (elements.length > 65535) {\n        throw new Error(\"ENUM type can only have up to 65,535 elements\");\n    }\n    return fluent_lib_1.unsafeLiteral.apply(void 0, elements);\n}\nexports.unsafeCaseSensitiveEnum = unsafeCaseSensitiveEnum;\n/**\n    TODO Handle case-insensitive enum collations\n\n    -----\n\n    https://dev.mysql.com/doc/refman/5.5/en/enum.html\n\n    When retrieved, values stored into an ENUM column are displayed using the lettercase\n    that was used in the column definition.\n\n    Note that ENUM columns can be assigned a character set and collation.\n\n    For binary or case-sensitive collations,\n    lettercase is taken into account when assigning values to the column.\n*/\nfunction caseSensitiveEnum(element0) {\n    var elements = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        elements[_i - 1] = arguments[_i];\n    }\n    return unsafeCaseSensitiveEnum.apply(void 0, [element0].concat(elements));\n}\nexports.caseSensitiveEnum = caseSensitiveEnum;\n//# sourceMappingURL=case-sensitive-enum.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fluent_lib_1 = require(\"../../fluent-lib\");\nvar error_util_1 = require(\"../../error-util\");\nvar type_util_1 = require(\"../../type-util\");\n/**\n    TODO Handle case-insensitive set collations\n\n    -----\n\n    https://dev.mysql.com/doc/refman/5.5/en/set.html\n\n    When retrieved, values stored in a SET column are displayed using the lettercase\n    that was used in the column definition.\n\n    Note that SET columns can be assigned a character set and collation.\n\n    For binary or case-sensitive collations,\n    lettercase is taken into account when assigning values to the column.\n*/\nfunction caseSenstiveSet() {\n    var elements = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        elements[_i] = arguments[_i];\n    }\n    if (elements.length > 64) {\n        throw new Error(\"SET type can only have up to 64 elements\");\n    }\n    fluent_lib_1.array(fluent_lib_1.notMatch(/\\,/, function (name) { return name + \" must not have comma\"; }))(\"elements\", elements);\n    var expected = \"SET(\" + elements.map(function (e) { return type_util_1.toLiteralOrTypeStr(e); }).join(\",\") + \")\";\n    return fluent_lib_1.string().pipe(function (name, raw) {\n        var arr = raw.split(\",\");\n        for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n            var e = arr_1[_i];\n            if (elements.indexOf(e) < 0) {\n                throw error_util_1.makeMappingError({\n                    message: name + \" has unknown set element; \" + e,\n                    inputName: name,\n                    actualValue: e,\n                    expected: expected,\n                });\n            }\n        }\n        return raw;\n    });\n}\nexports.caseSenstiveSet = caseSenstiveSet;\n//# sourceMappingURL=case-sensitive-set.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fluent_mapper_1 = require(\"../../fluent-mapper\");\nvar fLib = require(\"../../functional-lib\");\nfunction enumValue(e) {\n    var result = fLib.or(fLib.enumValue(e), fLib.pipe(fLib.stringToFiniteNumber(), fLib.enumValue(e)));\n    return fluent_mapper_1.fluentMapper(result);\n}\nexports.enumValue = enumValue;\n//# sourceMappingURL=enum-value.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./case-sensitive-enum\"));\n__export(require(\"./case-sensitive-set\"));\n__export(require(\"./enum-value\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./binary\"));\n__export(require(\"./boolean\"));\n__export(require(\"./char\"));\n__export(require(\"./date-time\"));\n__export(require(\"./decimal\"));\n__export(require(\"./double\"));\n__export(require(\"./enum\"));\n__export(require(\"./int\"));\n__export(require(\"./json\"));\n__export(require(\"./uint-8-array-binary\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_util_1 = require(\"../../type-util\");\nvar fLib = require(\"../../fluent-lib\");\n/**\n    Does not restrict the min and max value\n*/\nfunction unsafeBigInt() {\n    return fLib.toBigInt();\n}\nexports.unsafeBigInt = unsafeBigInt;\n/**\n    Only allows,\n    [-9,223,372,036,854,775,808, 9,223,372,036,854,775,807]\n*/\nfunction bigIntSigned() {\n    var bigIntFactory = type_util_1.getBigIntFactoryFunctionOrError();\n    return unsafeBigInt().pipe(fLib.bigIntRange({\n        gtEq: bigIntFactory(\"-9223372036854775808\"),\n        ltEq: bigIntFactory(\"9223372036854775807\"),\n    }));\n}\nexports.bigIntSigned = bigIntSigned;\n/**\n    Only allows,\n    [0, 18,446,744,073,709,551,615]\n*/\nfunction bigIntUnsigned() {\n    var bigIntFactory = type_util_1.getBigIntFactoryFunctionOrError();\n    return unsafeBigInt().pipe(fLib.bigIntRange({\n        gtEq: bigIntFactory(\"0\"),\n        ltEq: bigIntFactory(\"18446744073709551615\"),\n    }));\n}\nexports.bigIntUnsigned = bigIntUnsigned;\n//# sourceMappingURL=bigint.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./bigint\"));\n__export(require(\"./int\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fLib = require(\"../../fluent-lib\");\nvar functional_lib_1 = require(\"../../functional-lib\");\nvar type_util_1 = require(\"../../type-util\");\n/**\n    Uses `integerFormatString()` and `BigInt()` internally.\n*/\nfunction unsafeInt() {\n    return fLib.toBigInt();\n}\nexports.unsafeInt = unsafeInt;\nfunction intDelegate(min, max) {\n    var bigIntFactory = type_util_1.getBigIntFactoryFunctionOrError();\n    return unsafeInt().pipe(functional_lib_1.bigIntRange({\n        gtEq: bigIntFactory(min),\n        ltEq: bigIntFactory(max),\n    }));\n}\n/**\n    [-128, 127]\n*/\nfunction tinyIntSigned() {\n    return intDelegate(-128, 127);\n}\nexports.tinyIntSigned = tinyIntSigned;\n/**\n    [-32,768, 32,767]\n*/\nfunction smallIntSigned() {\n    return intDelegate(-32768, 32767);\n}\nexports.smallIntSigned = smallIntSigned;\n/**\n    [-8,388,608, 8,388,607]\n*/\nfunction mediumIntSigned() {\n    return intDelegate(-8388608, 8388607);\n}\nexports.mediumIntSigned = mediumIntSigned;\n/**\n    [-2,147,483,648, 2,147,483,647]\n*/\nfunction intSigned() {\n    return intDelegate(-2147483648, 2147483647);\n}\nexports.intSigned = intSigned;\n/**\n    [0, 255]\n*/\nfunction tinyIntUnsigned() {\n    return intDelegate(0, 255);\n}\nexports.tinyIntUnsigned = tinyIntUnsigned;\n/**\n    [0, 65535]\n*/\nfunction smallIntUnsigned() {\n    return intDelegate(0, 65535);\n}\nexports.smallIntUnsigned = smallIntUnsigned;\n/**\n    [0, 16777215]\n*/\nfunction mediumIntUnsigned() {\n    return intDelegate(0, 16777215);\n}\nexports.mediumIntUnsigned = mediumIntUnsigned;\n/**\n    [0, 4294967295]\n*/\nfunction intUnsigned() {\n    return intDelegate(0, 4294967295);\n}\nexports.intUnsigned = intUnsigned;\n//# sourceMappingURL=int.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fluent_lib_1 = require(\"../../fluent-lib\");\nvar functional_lib_1 = require(\"../../functional-lib\");\nfunction jsonDelegate(dataTypeStr, maxLength, defaultDesiredLengthMax) {\n    if (maxLength < defaultDesiredLengthMax) {\n        throw new Error(\"maxLength must be >= defaultDesiredLengthMax\");\n    }\n    var result = function (a, b) {\n        if (a == undefined) {\n            return fluent_lib_1.stringLength({\n                max: defaultDesiredLengthMax,\n            }).pipe(functional_lib_1.jsonObjectString());\n        }\n        else if (b == undefined) {\n            a = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({\n                gtEq: 1,\n                ltEq: maxLength,\n            }))(dataTypeStr + \".desiredLengthMax\", a);\n            return fluent_lib_1.stringLength({\n                max: a,\n            }).pipe(functional_lib_1.jsonObjectString());\n        }\n        else {\n            a = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({\n                gtEq: 0,\n                ltEq: maxLength,\n            }))(dataTypeStr + \".desiredLengthMin\", a);\n            b = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({\n                gtEq: 1,\n                ltEq: maxLength,\n            }))(dataTypeStr + \".desiredLengthMax\", b);\n            if (a > b) {\n                throw new Error(dataTypeStr + \" minLength must be <= maxLength\");\n            }\n            return fluent_lib_1.stringLength({\n                min: a,\n                max: b,\n            }).pipe(functional_lib_1.jsonObjectString());\n        }\n    };\n    result.maxLength = maxLength;\n    return result;\n}\n/**\n * The space required to store a `JSON` document is roughly\n * the same as for `LONGBLOB` or `LONGTEXT`.\n *\n * In addition, MySQL imposes a limit on the size of any `JSON`\n * document stored in a `JSON` column such that it cannot be any\n * larger than the value of `max_allowed_packet`.\n *\n * The default for `max_allowed_packet` is `4194304`, 4MB.\n *\n * The maximum is `1073741824`, 1GB.\n *\n * The value should be a multiple of `1024`;\n * nonmultiples are rounded down to the nearest multiple.\n *\n * -----\n *\n * I set the default to 1MB arbitrarily.\n*/\nexports.json = jsonDelegate(\"JSON\", 4294967295, 1048576);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fluent_lib_1 = require(\"../../fluent-lib\");\nfunction uint8ArrayDelegate(dataTypeStr, maxLength) {\n    var result = function (a, b) {\n        if (a == undefined) {\n            return fluent_lib_1.uint8ArrayLength({\n                max: maxLength,\n            });\n        }\n        else if (b == undefined) {\n            a = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({\n                gtEq: 1,\n                ltEq: maxLength,\n            }))(dataTypeStr + \".desiredLengthMax\", a);\n            return fluent_lib_1.uint8ArrayLength({\n                max: a,\n            });\n        }\n        else {\n            a = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({\n                gtEq: 0,\n                ltEq: maxLength,\n            }))(dataTypeStr + \".desiredLengthMin\", a);\n            b = fluent_lib_1.pipe(fluent_lib_1.integer(), fluent_lib_1.range({\n                gtEq: 1,\n                ltEq: maxLength,\n            }))(dataTypeStr + \".desiredLengthMax\", b);\n            if (a > b) {\n                throw new Error(dataTypeStr + \" minLength must be <= maxLength\");\n            }\n            return fluent_lib_1.uint8ArrayLength({\n                min: a,\n                max: b,\n            });\n        }\n    };\n    result.maxLength = maxLength;\n    return result;\n}\nexports.uint8ArrayBinary = uint8ArrayDelegate(\"BINARY\", 255);\nexports.uint8ArrayVarBinary = uint8ArrayDelegate(\"VARBINARY\", 65535);\nexports.uint8ArrayTinyBlob = uint8ArrayDelegate(\"TINYBLOB\", 255);\nexports.uint8ArrayBlob = uint8ArrayDelegate(\"BLOB\", 65535);\nexports.uint8ArrayMediumBlob = uint8ArrayDelegate(\"MEDIUMBLOB\", 16777215);\nexports.uint8ArrayLongBlob = uint8ArrayDelegate(\"LONGBLOB\", 4294967295);\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./string-ends-with\"));\n__export(require(\"./string-repeat\"));\n__export(require(\"./to-property-access\"));\n__export(require(\"./zero-pad\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction stringEndsWith(str, suffix) {\n    if (str.length < suffix.length) {\n        return false;\n    }\n    if (str.length == suffix.length) {\n        return (str == suffix);\n    }\n    for (var i = 0; i < suffix.length; ++i) {\n        var suffixChar = suffix[suffix.length - i - 1];\n        var strChar = str[str.length - i - 1];\n        if (suffixChar != strChar) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.stringEndsWith = stringEndsWith;\n//# sourceMappingURL=string-ends-with.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction stringRepeat(str, count) {\n    var result = \"\";\n    for (var i = 0; i < count; ++i) {\n        result += str;\n    }\n    return result;\n}\nexports.stringRepeat = stringRepeat;\n//# sourceMappingURL=string-repeat.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction toPropertyAccess(name) {\n    if (typeof name == \"number\") {\n        return \"[\" + name + \"]\";\n    }\n    if (/\\s|\\.|\\-/.test(name)) {\n        return \"[\" + JSON.stringify(name) + \"]\";\n    }\n    if (/^\\d+$/.test(name)) {\n        return \"[\" + name + \"]\";\n    }\n    if (/^\\d+/.test(name)) {\n        return \"[\" + JSON.stringify(name) + \"]\";\n    }\n    return \".\" + name;\n}\nexports.toPropertyAccess = toPropertyAccess;\n//# sourceMappingURL=to-property-access.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar string_repeat_1 = require(\"./string-repeat\");\n/*\n    zeroPad(1, 4)     === \"0001\"\n    zeroPad(34, 4)    === \"0034\"\n    zeroPad(678, 4)   === \"0678\"\n    zeroPad(1337, 4)  === \"1337\"\n    zeroPad(92678, 4) === \"92678\"\n*/\nfunction zeroPad(num, length) {\n    var str = num.toString();\n    if (str.length < length) {\n        return string_repeat_1.stringRepeat(\"0\", length - str.length) + str;\n    }\n    else {\n        return str;\n    }\n}\nexports.zeroPad = zeroPad;\nfunction trailingZeroPad(num, length) {\n    var str = num.toString();\n    if (str.length < length) {\n        return str + string_repeat_1.stringRepeat(\"0\", length - str.length);\n    }\n    else {\n        return str;\n    }\n}\nexports.trailingZeroPad = trailingZeroPad;\n//# sourceMappingURL=zero-pad.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction allowsInstanceOf(ctor) {\n    try {\n        ({} instanceof ctor);\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\nexports.allowsInstanceOf = allowsInstanceOf;\n//# sourceMappingURL=allows-instance-of.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction tryFindBufferCtor() {\n    try {\n        return Buffer;\n    }\n    catch (_err) {\n        return undefined;\n    }\n}\nvar cachedBufferCtor = \"uninitialized\";\nfunction tryGetBufferCtor() {\n    if (cachedBufferCtor == \"uninitialized\") {\n        cachedBufferCtor = tryFindBufferCtor();\n    }\n    return cachedBufferCtor;\n}\nexports.tryGetBufferCtor = tryGetBufferCtor;\nfunction isInstanceOfBuffer(mixed) {\n    var ctor = tryFindBufferCtor();\n    if (ctor == undefined) {\n        return false;\n    }\n    return (mixed instanceof ctor);\n}\nexports.isInstanceOfBuffer = isInstanceOfBuffer;\n//# sourceMappingURL=buffer-ctor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar to_type_str_1 = require(\"./to-type-str\");\nvar strict_equal_1 = require(\"./strict-equal\");\nvar is_primitive_1 = require(\"./is-primitive\");\nfunction deepMergeImpl(a, b) {\n    if (strict_equal_1.strictEqual(a, b)) {\n        return a;\n    }\n    if (is_primitive_1.isPrimitive(a) || is_primitive_1.isPrimitive(b)) {\n        throw new Error(\"Cannot merge \" + to_type_str_1.toTypeStr(a) + \" and \" + to_type_str_1.toTypeStr(b) + \"; they are not equal\");\n    }\n    //We should have object types now.\n    if ((typeof a == \"function\") || (typeof b == \"function\")) {\n        throw new Error(\"Cannot merge \" + to_type_str_1.toTypeStr(a) + \" and \" + to_type_str_1.toTypeStr(b) + \"; they are not equal\");\n    }\n    if ((a instanceof Date) || (b instanceof Date)) {\n        if (!(a instanceof Date)) {\n            throw new Error(\"Cannot merge \" + to_type_str_1.toTypeStr(a) + \" with Date\");\n        }\n        if (!(b instanceof Date)) {\n            throw new Error(\"Cannot merge Date with \" + to_type_str_1.toTypeStr(b));\n        }\n        if (a.getTime() === b.getTime()) {\n            return a;\n        }\n        else {\n            throw new Error(\"Cannot merge dates; they must have the same value\");\n        }\n    }\n    if ((a instanceof Array) || (b instanceof Array)) {\n        if (!(a instanceof Array)) {\n            throw new Error(\"Cannot merge \" + to_type_str_1.toTypeStr(a) + \" with array\");\n        }\n        if (!(b instanceof Array)) {\n            throw new Error(\"Cannot merge array with \" + to_type_str_1.toTypeStr(b));\n        }\n        if (a.length != b.length) {\n            throw new Error(\"Cannot merge arrays of different lengths\");\n        }\n        var newArray = [];\n        for (var i = 0; i < a.length; ++i) {\n            newArray.push(deepMergeImpl(a[i], b[i]));\n        }\n        return newArray;\n    }\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    var mergedKeys = {};\n    var result = {};\n    for (var _i = 0, aKeys_1 = aKeys; _i < aKeys_1.length; _i++) {\n        var key = aKeys_1[_i];\n        //We can skip a.hasOwnProperty() because Object.keys() ignores parent prototype\n        if (mergedKeys[key] === true) {\n            continue;\n        }\n        mergedKeys[key] = true;\n        //We do not call `b.hasOwnProperty()` directly\n        //because if `b = Object.create(null)`,\n        //an `Error` will be thrown\n        if (Object.prototype.hasOwnProperty.call(b, key)) {\n            result[key] = deepMergeImpl(a[key], b[key]);\n        }\n        else {\n            result[key] = a[key];\n        }\n    }\n    for (var _a = 0, bKeys_1 = bKeys; _a < bKeys_1.length; _a++) {\n        var key = bKeys_1[_a];\n        //We can skip b.hasOwnProperty() because Object.keys() ignores parent prototype\n        if (mergedKeys[key] === true) {\n            continue;\n        }\n        mergedKeys[key] = true;\n        //We do not call `a.hasOwnProperty()` directly\n        //because if `a = Object.create(null)`,\n        //an `Error` will be thrown\n        if (Object.prototype.hasOwnProperty.call(a, key)) {\n            result[key] = deepMergeImpl(a[key], b[key]);\n        }\n        else {\n            result[key] = b[key];\n        }\n    }\n    return result;\n}\nfunction deepMerge() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    if (args.length == 0) {\n        throw new Error(\"Cannot deep merge zero arguments\");\n    }\n    var result = args[0];\n    for (var i = 1; i < args.length; ++i) {\n        result = deepMergeImpl(result, args[i]);\n    }\n    return result;\n}\nexports.deepMerge = deepMerge;\n//# sourceMappingURL=deep-merge.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./allows-instance-of\"));\n__export(require(\"./buffer-ctor\"));\n__export(require(\"./deep-merge\"));\n__export(require(\"./is-instance-of\"));\n__export(require(\"./is-bigint\"));\n__export(require(\"./is-pojo\"));\n__export(require(\"./is-primitive\"));\n__export(require(\"./omit\"));\n__export(require(\"./pick\"));\n__export(require(\"./set-function-name\"));\n__export(require(\"./strict-equal\"));\n__export(require(\"./to-type-str\"));\n__export(require(\"./try-deep-merge\"));\n__export(require(\"./try-get-bigint-factory-function\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar try_get_bigint_factory_function_1 = require(\"./try-get-bigint-factory-function\");\nvar buffer_ctor_1 = require(\"./buffer-ctor\");\nfunction isBigIntNative(x) {\n    return (typeof x == \"bigint\");\n}\nfunction isBigIntPolyfill(x) {\n    if (typeof x == \"bigint\") {\n        return true;\n    }\n    if (!(x instanceof Object)) {\n        //It is a primitive type and not a bigint\n        return false;\n    }\n    if ((x instanceof Number) ||\n        (x instanceof String) ||\n        buffer_ctor_1.isInstanceOfBuffer(x)) {\n        //Sanity check.\n        //These objects are most likely to pass the\n        //numeric `.toString()` check below.\n        return false;\n    }\n    if ((x instanceof Array) ||\n        (x instanceof Date) ||\n        (x instanceof Function)) {\n        //Sanity check.\n        //These objects are commonly used.\n        return false;\n    }\n    var bigIntFactory = try_get_bigint_factory_function_1.tryGetBigIntFactoryFunction();\n    if (bigIntFactory == undefined) {\n        //No BigInt polyfill detected\n        return false;\n    }\n    if (!bigIntFactory.possiblyInstanceOfBigInt(x)) {\n        //Definitely not BigInt polyfilled object\n        return false;\n    }\n    /*\n        We now have,\n\n        + An object\n        + A BigInt factory\n        + The object was possibly created by the BigInt factory\n    */\n    var xStr = String(x);\n    if (!/^\\-?\\d+$/.test(xStr)) {\n        //This object's string representation is not valid.\n        return false;\n    }\n    //High confidence that this is a polyfilled BigInt object\n    return true;\n}\nfunction isBigInt(x) {\n    if (try_get_bigint_factory_function_1.isBigIntNativelySupported()) {\n        return isBigIntNative(x);\n    }\n    else {\n        return isBigIntPolyfill(x);\n    }\n}\nexports.isBigInt = isBigInt;\n//# sourceMappingURL=is-bigint.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar try_get_bigint_factory_function_1 = require(\"./try-get-bigint-factory-function\");\nvar is_bigint_1 = require(\"./is-bigint\");\n/**\n    Like using \"regular\" `instanceof` but\n    bigint polyfill objects will never be an `instanceof Object`,\n    or any other class.\n*/\nfunction isInstanceOf(mixed, ctor) {\n    return ((mixed instanceof ctor) &&\n        (try_get_bigint_factory_function_1.isBigIntNativelySupported() ||\n            !is_bigint_1.isBigInt(mixed)));\n}\nexports.isInstanceOf = isInstanceOf;\n//# sourceMappingURL=is-instance-of.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar is_instance_of_1 = require(\"./is-instance-of\");\n/**\n    Abbreviation for \"Plain old JavasScript object\".\n\n    Meaning, an Object that isn't,\n\n    + Date\n    + Array\n    + Function\n    + An instance of some other class\n\n    -----\n\n    Will never consider a BigInt polyfill object a Pojo\n*/\nfunction isPojo(mixed) {\n    if (!is_instance_of_1.isInstanceOf(mixed, Object)) {\n        return false;\n    }\n    if (Object.getPrototypeOf(mixed) !== Object.prototype) {\n        return false;\n    }\n    return true;\n}\nexports.isPojo = isPojo;\n//# sourceMappingURL=is-pojo.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar is_bigint_1 = require(\"./is-bigint\");\nfunction isPrimitive(x) {\n    if (x == undefined) {\n        return true;\n    }\n    var t = typeof x;\n    if (t != \"object\" && t != \"function\") {\n        return true;\n    }\n    return is_bigint_1.isBigInt(x);\n}\nexports.isPrimitive = isPrimitive;\nfunction isLiteral(x) {\n    if (x == undefined) {\n        return true;\n    }\n    var t = typeof x;\n    if (t != \"object\" && t != \"function\" && t != \"symbol\") {\n        return true;\n    }\n    return is_bigint_1.isBigInt(x);\n}\nexports.isLiteral = isLiteral;\n//# sourceMappingURL=is-primitive.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Performs `Omit<>` on an `object` during run-time\n *\n * @param obj - The object to omit key-value pairs from\n * @param keys - The keys to omit\n */\nfunction omit(obj) {\n    var keys = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        keys[_i - 1] = arguments[_i];\n    }\n    var result = __assign({}, obj);\n    for (var _a = 0, keys_1 = keys; _a < keys_1.length; _a++) {\n        var k = keys_1[_a];\n        delete result[k];\n    }\n    return result;\n}\nexports.omit = omit;\n//# sourceMappingURL=omit.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Performs `Pick<>` on an `object` during run-time\n *\n * @param obj - The object to pick key-value pairs from\n * @param keys - The keys to pick\n */\nfunction pick(obj) {\n    var keys = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        keys[_i - 1] = arguments[_i];\n    }\n    var result = {};\n    for (var _a = 0, keys_1 = keys; _a < keys_1.length; _a++) {\n        var k = keys_1[_a];\n        if (!Object.prototype.hasOwnProperty.call(obj, k)) {\n            continue;\n        }\n        result[k] = obj[k];\n    }\n    return result;\n}\nexports.pick = pick;\n//# sourceMappingURL=pick.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n    Modifies `f` directly.\n*/\nfunction setFunctionName(f, name) {\n    if (typeof name != \"string\") {\n        name = \"\";\n    }\n    f.__name = name;\n    return f;\n}\nexports.setFunctionName = setFunctionName;\n//# sourceMappingURL=set-function-name.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar is_bigint_1 = require(\"./is-bigint\");\nvar try_get_bigint_factory_function_1 = require(\"./try-get-bigint-factory-function\");\nfunction strictEqualNative(a, b) {\n    return (a === b);\n}\nfunction strictEqualPolyfill(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (is_bigint_1.isBigInt(a) && is_bigint_1.isBigInt(b)) {\n        return a.toString() === b.toString();\n    }\n    return false;\n}\n/**\n    This library supports `bigint`.\n    However, not all browsers support `bigint`.\n\n    Some developers may polyfill it with a `BigInt` class.\n\n    ```ts\n    //With polyfill, this may be false\n    BigInt(2) === BigInt(2)\n    ```\n\n    ```ts\n    //We want a special case for `BigInt`\n    //This must be true\n    strictEqual(BigInt(2), BigInt(2))\n    ```\n*/\nfunction strictEqual(a, b) {\n    if (try_get_bigint_factory_function_1.isBigIntNativelySupported()) {\n        return strictEqualNative(a, b);\n    }\n    else {\n        return strictEqualPolyfill(a, b);\n    }\n}\nexports.strictEqual = strictEqual;\n//# sourceMappingURL=strict-equal.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar is_bigint_1 = require(\"./is-bigint\");\nvar is_primitive_1 = require(\"./is-primitive\");\n/**\n    Intended to work better than `String(mixed)`.\n*/\nfunction toLiteralStr(mixed) {\n    //We do not mind === here.\n    if (mixed === null) {\n        return \"null\";\n        //We do not mind === here.\n    }\n    else if (mixed === undefined) {\n        return \"undefined\";\n    }\n    else if (is_bigint_1.isBigInt(typeof mixed)) {\n        return mixed.toString() + \"n\";\n    }\n    else if (typeof mixed == \"string\") {\n        return JSON.stringify(mixed);\n    }\n    else {\n        return String(mixed);\n    }\n}\nexports.toLiteralStr = toLiteralStr;\nfunction toLiteralUnionStr(arr) {\n    return arr\n        .map(toLiteralStr)\n        .join(\"|\");\n}\nexports.toLiteralUnionStr = toLiteralUnionStr;\nfunction getCtorName(ctor) {\n    if (!(ctor instanceof Object)) {\n        return \"[Not Ctor]\";\n    }\n    var name = ctor.name;\n    if (typeof name == \"string\") {\n        return name;\n    }\n    return \"[Unknown Name]\";\n}\nexports.getCtorName = getCtorName;\n/**\n    Intended to work better than `typeof mixed`.\n*/\nfunction toTypeStr(mixed) {\n    //We do not mind === here.\n    if (mixed === null) {\n        return \"null\";\n    }\n    //We do not mind === here.\n    if (mixed === undefined) {\n        return \"undefined\";\n    }\n    var str = (typeof mixed);\n    if (str !== \"object\") {\n        return str;\n    }\n    if (is_bigint_1.isBigInt(mixed)) {\n        return \"bigint\";\n    }\n    var prototype = Object.getPrototypeOf(mixed);\n    if (prototype == undefined) {\n        return \"[Unknown Type]\";\n    }\n    var constructor = prototype.constructor;\n    if (constructor == undefined) {\n        return \"[Unknown Prototype]\";\n    }\n    return getCtorName(constructor);\n}\nexports.toTypeStr = toTypeStr;\nfunction toLiteralOrTypeStr(mixed) {\n    if (is_primitive_1.isLiteral(mixed)) {\n        return toLiteralStr(mixed);\n    }\n    else {\n        return toTypeStr(mixed);\n    }\n}\nexports.toLiteralOrTypeStr = toLiteralOrTypeStr;\nfunction toLiteralOrTypeUnionStr(arr) {\n    return arr\n        .map(toLiteralOrTypeStr)\n        .join(\"|\");\n}\nexports.toLiteralOrTypeUnionStr = toLiteralOrTypeUnionStr;\n//# sourceMappingURL=to-type-str.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar to_type_str_1 = require(\"./to-type-str\");\nvar strict_equal_1 = require(\"./strict-equal\");\nvar is_primitive_1 = require(\"./is-primitive\");\nvar ArrayBufferUtil = require(\"../array-buffer-util\");\nvar buffer_ctor_1 = require(\"./buffer-ctor\");\nfunction tryDeepMergeImpl(path, a, b) {\n    if (strict_equal_1.strictEqual(a, b)) {\n        return {\n            success: true,\n            value: a,\n        };\n    }\n    if (is_primitive_1.isPrimitive(a) || is_primitive_1.isPrimitive(b)) {\n        return {\n            success: false,\n            path: path,\n            aValue: a,\n            bValue: b,\n            message: \"Cannot merge \" + to_type_str_1.toTypeStr(a) + \" and \" + to_type_str_1.toTypeStr(b) + \"; they are not equal\",\n            expected: to_type_str_1.toTypeStr(a),\n            actualValue: b,\n        };\n    }\n    //We should have object types now.\n    if ((typeof a == \"function\") || (typeof b == \"function\")) {\n        return {\n            success: false,\n            path: path,\n            aValue: a,\n            bValue: b,\n            message: \"Cannot merge \" + to_type_str_1.toTypeStr(a) + \" and \" + to_type_str_1.toTypeStr(b) + \"; they are not equal\",\n            expected: to_type_str_1.toTypeStr(a),\n            actualValue: b,\n        };\n    }\n    if ((a instanceof Date) || (b instanceof Date)) {\n        if (!(a instanceof Date)) {\n            return {\n                success: false,\n                path: path,\n                aValue: a,\n                bValue: b,\n                message: \"Cannot merge \" + to_type_str_1.toTypeStr(a) + \" with Date\",\n                expected: to_type_str_1.toTypeStr(a),\n                actualValue: b,\n            };\n        }\n        if (!(b instanceof Date)) {\n            return {\n                success: false,\n                path: path,\n                aValue: a,\n                bValue: b,\n                message: \"Cannot merge Date with \" + to_type_str_1.toTypeStr(b),\n                expected: to_type_str_1.toTypeStr(a),\n                actualValue: b,\n            };\n        }\n        if (a.getTime() === b.getTime()) {\n            return {\n                success: true,\n                value: a,\n            };\n        }\n        else {\n            return {\n                success: false,\n                path: path,\n                aValue: a,\n                bValue: b,\n                message: \"Cannot merge dates; they must have the same value\",\n                expected: to_type_str_1.toTypeStr(a),\n                actualValue: b,\n            };\n        }\n    }\n    if (buffer_ctor_1.isInstanceOfBuffer(a) || buffer_ctor_1.isInstanceOfBuffer(b)) {\n        if (!buffer_ctor_1.isInstanceOfBuffer(a)) {\n            return {\n                success: false,\n                path: path,\n                aValue: a,\n                bValue: b,\n                message: \"Cannot merge \" + to_type_str_1.toTypeStr(a) + \" with Buffer\",\n                expected: to_type_str_1.toTypeStr(a),\n                actualValue: b,\n            };\n        }\n        if (!buffer_ctor_1.isInstanceOfBuffer(b)) {\n            return {\n                success: false,\n                path: path,\n                aValue: a,\n                bValue: b,\n                message: \"Cannot merge Buffer with \" + to_type_str_1.toTypeStr(b),\n                expected: to_type_str_1.toTypeStr(a),\n                actualValue: b,\n            };\n        }\n        if (!ArrayBufferUtil.equals(a, b)) {\n            return {\n                success: false,\n                path: path,\n                aValue: a,\n                bValue: b,\n                message: \"Cannot merge Buffer; they are not equal\",\n                expected: to_type_str_1.toTypeStr(a),\n                actualValue: b,\n            };\n        }\n        return {\n            success: true,\n            value: a,\n        };\n    }\n    if ((a instanceof Uint8Array) || (b instanceof Uint8Array)) {\n        if (!(a instanceof Uint8Array)) {\n            return {\n                success: false,\n                path: path,\n                aValue: a,\n                bValue: b,\n                message: \"Cannot merge \" + to_type_str_1.toTypeStr(a) + \" with Uint8Array\",\n                expected: to_type_str_1.toTypeStr(a),\n                actualValue: b,\n            };\n        }\n        if (!(b instanceof Uint8Array)) {\n            return {\n                success: false,\n                path: path,\n                aValue: a,\n                bValue: b,\n                message: \"Cannot merge Uint8Array with \" + to_type_str_1.toTypeStr(b),\n                expected: to_type_str_1.toTypeStr(a),\n                actualValue: b,\n            };\n        }\n        if (!ArrayBufferUtil.equals(a, b)) {\n            return {\n                success: false,\n                path: path,\n                aValue: a,\n                bValue: b,\n                message: \"Cannot merge Uint8Array; they are not equal\",\n                expected: to_type_str_1.toTypeStr(a),\n                actualValue: b,\n            };\n        }\n        return {\n            success: true,\n            value: a,\n        };\n    }\n    if ((a instanceof Array) || (b instanceof Array)) {\n        if (!(a instanceof Array)) {\n            return {\n                success: false,\n                path: path,\n                aValue: a,\n                bValue: b,\n                message: \"Cannot merge \" + to_type_str_1.toTypeStr(a) + \" with array\",\n                expected: to_type_str_1.toTypeStr(a),\n                actualValue: b,\n            };\n        }\n        if (!(b instanceof Array)) {\n            return {\n                success: false,\n                path: path,\n                aValue: a,\n                bValue: b,\n                message: \"Cannot merge array with \" + to_type_str_1.toTypeStr(b),\n                expected: to_type_str_1.toTypeStr(a),\n                actualValue: b,\n            };\n        }\n        if (a.length != b.length) {\n            return {\n                success: false,\n                path: path,\n                aValue: a,\n                bValue: b,\n                message: \"Cannot merge arrays of different lengths\",\n                expected: to_type_str_1.toTypeStr(a),\n                actualValue: b,\n            };\n        }\n        var newArray = [];\n        for (var i = 0; i < a.length; ++i) {\n            var elementResult = tryDeepMergeImpl(path.concat([i.toString()]), a[i], b[i]);\n            if (elementResult.success) {\n                newArray.push(elementResult.value);\n            }\n            else {\n                return elementResult;\n            }\n        }\n        return {\n            success: true,\n            value: newArray\n        };\n    }\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    var mergedKeys = {};\n    var newObj = {};\n    for (var _i = 0, aKeys_1 = aKeys; _i < aKeys_1.length; _i++) {\n        var key = aKeys_1[_i];\n        //We can skip a.hasOwnProperty() because Object.keys() ignores parent prototype\n        if (mergedKeys[key] === true) {\n            continue;\n        }\n        mergedKeys[key] = true;\n        //We do not call `b.hasOwnProperty()` directly\n        //because if `b = Object.create(null)`,\n        //an `Error` will be thrown\n        if (Object.prototype.hasOwnProperty.call(b, key)) {\n            var valueResult = tryDeepMergeImpl(path.concat([key]), a[key], b[key]);\n            if (valueResult.success) {\n                newObj[key] = valueResult.value;\n            }\n            else {\n                return valueResult;\n            }\n        }\n        else {\n            newObj[key] = a[key];\n        }\n    }\n    for (var _a = 0, bKeys_1 = bKeys; _a < bKeys_1.length; _a++) {\n        var key = bKeys_1[_a];\n        //We can skip b.hasOwnProperty() because Object.keys() ignores parent prototype\n        if (mergedKeys[key] === true) {\n            continue;\n        }\n        mergedKeys[key] = true;\n        //We do not call `a.hasOwnProperty()` directly\n        //because if `a = Object.create(null)`,\n        //an `Error` will be thrown\n        if (Object.prototype.hasOwnProperty.call(a, key)) {\n            var valueResult = tryDeepMergeImpl(path.concat([key]), a[key], b[key]);\n            if (valueResult.success) {\n                newObj[key] = valueResult.value;\n            }\n            else {\n                return valueResult;\n            }\n        }\n        else {\n            newObj[key] = b[key];\n        }\n    }\n    return {\n        success: true,\n        value: newObj,\n    };\n}\nfunction tryDeepMerge() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    if (args.length == 0) {\n        throw new Error(\"Cannot deep merge zero arguments\");\n    }\n    var result = args[0];\n    for (var i = 1; i < args.length; ++i) {\n        var implResult = tryDeepMergeImpl([], result, args[i]);\n        if (implResult.success) {\n            result = implResult.value;\n        }\n        else {\n            return __assign({}, implResult, { aRoot: result, bRoot: args[i] });\n        }\n    }\n    return {\n        success: true,\n        value: result,\n    };\n}\nexports.tryDeepMerge = tryDeepMerge;\n//# sourceMappingURL=try-deep-merge.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction createPossiblyInstanceOfBigInt(x) {\n    if (x == undefined) {\n        return function () { return false; };\n    }\n    try {\n        var ctor_1 = Object.getPrototypeOf(x).constructor;\n        if (typeof ctor_1 != \"function\") {\n            return function () { return false; };\n        }\n        //Make sure `instanceof` checks don't throw\n        ({} instanceof ctor_1);\n        return function (x) {\n            return (x instanceof ctor_1);\n        };\n    }\n    catch (_err) {\n        return function () { return false; };\n    }\n}\nfunction tryFindBigIntFactoryFunction() {\n    try {\n        var unsafeFactory_1 = BigInt;\n        if (typeof unsafeFactory_1 != \"function\") {\n            return undefined;\n        }\n        try {\n            var bigInt = unsafeFactory_1(0);\n            var possiblyInstanceOfBigInt = createPossiblyInstanceOfBigInt(bigInt);\n            var wrapper = (function (x) {\n                return unsafeFactory_1(x);\n            });\n            wrapper.possiblyInstanceOfBigInt = possiblyInstanceOfBigInt;\n            wrapper.bigIntNative = (typeof bigInt == \"bigint\");\n            return wrapper;\n        }\n        catch (_err) {\n        }\n        try {\n            var possiblyInstanceOfBigInt = createPossiblyInstanceOfBigInt(new unsafeFactory_1(0));\n            var wrapper = (function (x) {\n                return new unsafeFactory_1(x);\n            });\n            wrapper.possiblyInstanceOfBigInt = possiblyInstanceOfBigInt;\n            //Had to use `new`; not supported\n            wrapper.bigIntNative = false;\n            return wrapper;\n        }\n        catch (_err) {\n        }\n        return undefined;\n    }\n    catch (_err) {\n        //No BigInt, no polyfill\n        return undefined;\n    }\n}\nvar cachedBigIntFactoryFunction = \"uninitialized\";\nfunction tryGetBigIntFactoryFunction() {\n    if (cachedBigIntFactoryFunction == \"uninitialized\") {\n        cachedBigIntFactoryFunction = tryFindBigIntFactoryFunction();\n    }\n    return cachedBigIntFactoryFunction;\n}\nexports.tryGetBigIntFactoryFunction = tryGetBigIntFactoryFunction;\nfunction getBigIntFactoryFunctionOrError() {\n    var result = tryGetBigIntFactoryFunction();\n    if (result == undefined) {\n        throw new Error(\"No native or polyfilled bigint implementation found; set the `BigInt` variable on the `globalThis`/`window`/`global` scope to a polyfilled implementation\");\n    }\n    return result;\n}\nexports.getBigIntFactoryFunctionOrError = getBigIntFactoryFunctionOrError;\nfunction isBigIntNativelySupported() {\n    var factory = tryGetBigIntFactoryFunction();\n    if (factory == undefined) {\n        return false;\n    }\n    return factory.bigIntNative;\n}\nexports.isBigIntNativelySupported = isBigIntNativelySupported;\n//# sourceMappingURL=try-get-bigint-factory-function.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./dist/fluent-lib\"));","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}